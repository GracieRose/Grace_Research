Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-26.101419484074114 74] 47.898580515925886]
Train Case:   1 | Input/Output: [[-38.073077072057785 -51] -89.07307707205779]
Train Case:   2 | Input/Output: [[-49.34099078259033 -42] -91.34099078259032]
Train Case:   3 | Input/Output: [[89.16116103603068 62] 151.16116103603068]
Train Case:   4 | Input/Output: [[63.00506113697722 -63] 0.005061136977218439]
Train Case:   5 | Input/Output: [[-56.27439844632356 59] 2.725601553676441]
Train Case:   6 | Input/Output: [[-11.06434695130747 20] 8.93565304869253]
Train Case:   7 | Input/Output: [[47.06422426234579 -83] -35.93577573765421]
Train Case:   8 | Input/Output: [[55.84624290427868 -47] 8.846242904278682]
Train Case:   9 | Input/Output: [[-98.37376770142068 -41] -139.37376770142066]
Train Case:  10 | Input/Output: [[27.908634065069222 -12] 15.908634065069222]
Train Case:  11 | Input/Output: [[79.27324078913455 54] 133.27324078913455]
Train Case:  12 | Input/Output: [[52.92482946795721 -56] -3.0751705320427902]
Train Case:  13 | Input/Output: [[93.53716834373338 -24] 69.53716834373338]
Train Case:  14 | Input/Output: [[13.036315797559311 48] 61.03631579755931]
Train Case:  15 | Input/Output: [[-28.93445881341519 -70] -98.93445881341519]
Train Case:  16 | Input/Output: [[-49.70318897905752 60] 10.296811020942478]
Train Case:  17 | Input/Output: [[91.05656381893704 30] 121.05656381893704]
Train Case:  18 | Input/Output: [[-53.159632219170796 35] -18.159632219170796]
Train Case:  19 | Input/Output: [[45.16922717136134 44] 89.16922717136134]
Train Case:  20 | Input/Output: [[-68.69282806639359 -64] -132.6928280663936]
Train Case:  21 | Input/Output: [[41.34753686580558 22] 63.34753686580558]
Train Case:  22 | Input/Output: [[89.22275877758887 -63] 26.222758777588865]
Train Case:  23 | Input/Output: [[-59.684113029406596 90] 30.315886970593404]
Train Case:  24 | Input/Output: [[59.80672247214571 -83] -23.193277527854292]
Test Case:   0 | Input/Output: [[88.9359824426661 -72] 16.935982442666102]
Test Case:   1 | Input/Output: [[-28.33287111616724 -29] -57.33287111616724]
Test Case:   2 | Input/Output: [[32.769837003280315 -92] -59.230162996719685]
Test Case:   3 | Input/Output: [[-50.199608719995226 -47] -97.19960871999523]
Test Case:   4 | Input/Output: [[14.369951916298973 78] 92.36995191629897]
Test Case:   5 | Input/Output: [[89.88672626329665 -33] 56.88672626329665]
Test Case:   6 | Input/Output: [[-91.30938884099864 60] -31.309388840998636]
Test Case:   7 | Input/Output: [[92.46076697974212 51] 143.46076697974212]
Test Case:   8 | Input/Output: [[8.446557719441643 -60] -51.55344228055836]
Test Case:   9 | Input/Output: [[12.65088759972825 -87] -74.34911240027175]
Test Case:  10 | Input/Output: [[-92.99109795352032 -73] -165.99109795352032]
Test Case:  11 | Input/Output: [[36.63294487069436 -53] -16.36705512930564]
Test Case:  12 | Input/Output: [[75.8527343384064 -81] -5.147265661593593]
Test Case:  13 | Input/Output: [[-36.687962822235164 72] 35.312037177764836]
Test Case:  14 | Input/Output: [[85.36396591485311 -47] 38.36396591485311]
Test Case:  15 | Input/Output: [[-96.51610904105183 71] -25.516109041051834]
Test Case:  16 | Input/Output: [[15.396147347864627 -100] -84.60385265213537]
Test Case:  17 | Input/Output: [[53.030685566984744 -92] -38.969314433015256]
Test Case:  18 | Input/Output: [[32.28883768816763 -44] -11.711162311832368]
Test Case:  19 | Input/Output: [[25.85466616670793 -75] -49.14533383329207]
Test Case:  20 | Input/Output: [[55.428586677269294 -47] 8.428586677269294]
Test Case:  21 | Input/Output: [[35.099745588225744 -76] -40.900254411774256]
Test Case:  22 | Input/Output: [[-10.48188205443563 -42] -52.48188205443563]
Test Case:  23 | Input/Output: [[-41.971893437186566 49] 7.028106562813434]
Test Case:  24 | Input/Output: [[-77.02538132468113 -43] -120.02538132468113]
Test Case:  25 | Input/Output: [[-12.418729029163899 -26] -38.4187290291639]
Test Case:  26 | Input/Output: [[46.96532341591717 -75] -28.03467658408283]
Test Case:  27 | Input/Output: [[-75.7469904513198 78] 2.253009548680197]
Test Case:  28 | Input/Output: [[77.56330250833139 -61] 16.56330250833139]
Test Case:  29 | Input/Output: [[-43.14689756811887 -93] -136.14689756811887]
Test Case:  30 | Input/Output: [[34.49090143337628 86] 120.49090143337628]
Test Case:  31 | Input/Output: [[-77.4548635680637 31] -46.4548635680637]
Test Case:  32 | Input/Output: [[56.494358173723725 20] 76.49435817372373]
Test Case:  33 | Input/Output: [[-73.03850882666872 59] -14.038508826668718]
Test Case:  34 | Input/Output: [[-64.34342229549566 -30] -94.34342229549566]
Test Case:  35 | Input/Output: [[69.50498145105851 -100] -30.495018548941488]
Test Case:  36 | Input/Output: [[-43.24407617487908 -69] -112.24407617487908]
Test Case:  37 | Input/Output: [[64.7046037772376 95] 159.7046037772376]
Test Case:  38 | Input/Output: [[40.29438017751653 -85] -44.70561982248347]
Test Case:  39 | Input/Output: [[-24.484665591376313 -54] -78.48466559137631]
Test Case:  40 | Input/Output: [[89.85327119901672 -64] 25.853271199016717]
Test Case:  41 | Input/Output: [[43.3909760361293 -41] 2.3909760361293024]
Test Case:  42 | Input/Output: [[-87.3855379749497 36] -51.3855379749497]
Test Case:  43 | Input/Output: [[-98.51240013992775 -75] -173.51240013992776]
Test Case:  44 | Input/Output: [[-48.18560715877511 0] -48.18560715877511]
Test Case:  45 | Input/Output: [[-56.78540881025172 51] -5.785408810251717]
Test Case:  46 | Input/Output: [[48.632721121043005 -13] 35.632721121043005]
Test Case:  47 | Input/Output: [[33.932516484354835 8] 41.932516484354835]
Test Case:  48 | Input/Output: [[-47.773701942396855 36] -11.773701942396855]
Test Case:  49 | Input/Output: [[-60.065719847970286 -82] -142.06571984797029]
Test Case:  50 | Input/Output: [[-35.67748841082357 -58] -93.67748841082357]
Test Case:  51 | Input/Output: [[-9.892964526727013 81] 71.10703547327299]
Test Case:  52 | Input/Output: [[49.81995371431336 3] 52.81995371431336]
Test Case:  53 | Input/Output: [[57.11319786618802 45] 102.11319786618802]
Test Case:  54 | Input/Output: [[64.91332278517999 87] 151.91332278518]
Test Case:  55 | Input/Output: [[-9.768404526243614 -33] -42.768404526243614]
Test Case:  56 | Input/Output: [[-27.76995292033608 -38] -65.76995292033608]
Test Case:  57 | Input/Output: [[95.48176135328478 -71] 24.48176135328478]
Test Case:  58 | Input/Output: [[52.344186751243626 -27] 25.344186751243626]
Test Case:  59 | Input/Output: [[12.894519117193482 -3] 9.894519117193482]
Test Case:  60 | Input/Output: [[-17.639177202634883 -30] -47.63917720263488]
Test Case:  61 | Input/Output: [[-39.22921828426868 -83] -122.22921828426868]
Test Case:  62 | Input/Output: [[-82.04256223759114 31] -51.04256223759114]
Test Case:  63 | Input/Output: [[34.453305346441994 -65] -30.546694653558006]
Test Case:  64 | Input/Output: [[31.60729465302518 37] 68.60729465302518]
Test Case:  65 | Input/Output: [[-36.659762325255805 -63] -99.6597623252558]
Test Case:  66 | Input/Output: [[-32.70070694442629 7] -25.700706944426287]
Test Case:  67 | Input/Output: [[-78.97160625719613 -48] -126.97160625719613]
Test Case:  68 | Input/Output: [[94.55328712020668 -41] 53.553287120206676]
Test Case:  69 | Input/Output: [[-6.888174901333244 -26] -32.888174901333244]
Test Case:  70 | Input/Output: [[74.87881040193781 91] 165.8788104019378]
Test Case:  71 | Input/Output: [[-51.151288591707676 -73] -124.15128859170767]
Test Case:  72 | Input/Output: [[-18.276381998623364 26] 7.723618001376636]
Test Case:  73 | Input/Output: [[-53.93772860510473 -9] -62.93772860510473]
Test Case:  74 | Input/Output: [[23.804437255449102 -63] -39.1955627445509]
Test Case:  75 | Input/Output: [[-30.450954445856368 -5] -35.45095444585637]
Test Case:  76 | Input/Output: [[63.38424561342782 29] 92.38424561342782]
Test Case:  77 | Input/Output: [[-83.27512385245004 -24] -107.27512385245004]
Test Case:  78 | Input/Output: [[12.189571029279776 20] 32.189571029279776]
Test Case:  79 | Input/Output: [[-63.25738602817446 1] -62.25738602817446]
Test Case:  80 | Input/Output: [[63.097580752032144 55] 118.09758075203214]
Test Case:  81 | Input/Output: [[84.1869897863638 65] 149.1869897863638]
Test Case:  82 | Input/Output: [[-9.011776023234646 5] -4.0117760232346455]
Test Case:  83 | Input/Output: [[15.060308142302063 87] 102.06030814230206]
Test Case:  84 | Input/Output: [[9.19009712427416 -100] -90.80990287572584]
Test Case:  85 | Input/Output: [[83.08531589102907 -59] 24.08531589102907]
Test Case:  86 | Input/Output: [[74.58392663478645 45] 119.58392663478645]
Test Case:  87 | Input/Output: [[67.57079605010324 -56] 11.57079605010324]
Test Case:  88 | Input/Output: [[91.13056556284539 98] 189.1305655628454]
Test Case:  89 | Input/Output: [[28.581405346728133 -33] -4.418594653271867]
Test Case:  90 | Input/Output: [[2.086168027250494 -91] -88.9138319727495]
Test Case:  91 | Input/Output: [[78.85288243092157 -37] 41.85288243092157]
Test Case:  92 | Input/Output: [[31.18350272357705 -1] 30.18350272357705]
Test Case:  93 | Input/Output: [[21.6801450911924 47] 68.6801450911924]
Test Case:  94 | Input/Output: [[51.271327351224386 43] 94.27132735122439]
Test Case:  95 | Input/Output: [[12.985578009793514 99] 111.98557800979351]
Test Case:  96 | Input/Output: [[-73.01788428391237 -76] -149.01788428391237]
Test Case:  97 | Input/Output: [[76.1193853616588 -23] 53.1193853616588]
Test Case:  98 | Input/Output: [[-78.7998478752817 100] 21.2001521247183]
Test Case:  99 | Input/Output: [[23.501283406382754 -13] 10.501283406382754]
Test Case: 100 | Input/Output: [[-10.248744148641094 35] 24.751255851358906]
Test Case: 101 | Input/Output: [[-8.676844020561859 36] 27.32315597943814]
Test Case: 102 | Input/Output: [[-90.84080020102138 51] -39.84080020102138]
Test Case: 103 | Input/Output: [[29.48904389976218 43] 72.48904389976218]
Test Case: 104 | Input/Output: [[-26.99177225932283 -39] -65.99177225932283]
Test Case: 105 | Input/Output: [[-79.88329739719167 -90] -169.88329739719165]
Test Case: 106 | Input/Output: [[88.89290220014587 96] 184.89290220014587]
Test Case: 107 | Input/Output: [[-13.389123183367403 -81] -94.3891231833674]
Test Case: 108 | Input/Output: [[81.89611411940919 -9] 72.89611411940919]
Test Case: 109 | Input/Output: [[35.1469181359553 -45] -9.853081864044697]
Test Case: 110 | Input/Output: [[-32.08842871812463 95] 62.91157128187537]
Test Case: 111 | Input/Output: [[39.237876511730036 89] 128.23787651173004]
Test Case: 112 | Input/Output: [[-13.964007502560676 -79] -92.96400750256068]
Test Case: 113 | Input/Output: [[-54.582555477925524 -19] -73.58255547792552]
Test Case: 114 | Input/Output: [[21.993820745334006 47] 68.993820745334]
Test Case: 115 | Input/Output: [[-70.43337658346081 57] -13.433376583460813]
Test Case: 116 | Input/Output: [[-6.640858262180245 90] 83.35914173781975]
Test Case: 117 | Input/Output: [[13.929413029867433 75] 88.92941302986743]
Test Case: 118 | Input/Output: [[-35.159177186765135 25] -10.159177186765135]
Test Case: 119 | Input/Output: [[34.16356644399471 -81] -46.83643355600529]
Test Case: 120 | Input/Output: [[-28.136173251452703 -50] -78.1361732514527]
Test Case: 121 | Input/Output: [[-3.2473314000101254 90] 86.75266859998987]
Test Case: 122 | Input/Output: [[-95.63692062184066 -3] -98.63692062184066]
Test Case: 123 | Input/Output: [[18.950863428553475 -58] -39.049136571446525]
Test Case: 124 | Input/Output: [[-35.75748290987575 -76] -111.75748290987575]
Test Case: 125 | Input/Output: [[-23.942427954774587 12] -11.942427954774587]
Test Case: 126 | Input/Output: [[4.899028964222978 80] 84.89902896422298]
Test Case: 127 | Input/Output: [[-20.76989182788192 -50] -70.76989182788192]
Test Case: 128 | Input/Output: [[21.860089060118753 -28] -6.139910939881247]
Test Case: 129 | Input/Output: [[-84.33503474114137 -61] -145.33503474114138]
Test Case: 130 | Input/Output: [[89.93583184913837 82] 171.93583184913837]
Test Case: 131 | Input/Output: [[95.48064135711712 75] 170.48064135711712]
Test Case: 132 | Input/Output: [[76.15624925765988 -73] 3.15624925765988]
Test Case: 133 | Input/Output: [[-7.763396793489761 36] 28.23660320651024]
Test Case: 134 | Input/Output: [[9.756595570948562 31] 40.75659557094856]
Test Case: 135 | Input/Output: [[24.33057085810404 -5] 19.33057085810404]
Test Case: 136 | Input/Output: [[-98.4150781933503 -36] -134.4150781933503]
Test Case: 137 | Input/Output: [[-27.03156738699313 5] -22.03156738699313]
Test Case: 138 | Input/Output: [[-70.102781921223 5] -65.102781921223]
Test Case: 139 | Input/Output: [[-56.457352290226595 -36] -92.4573522902266]
Test Case: 140 | Input/Output: [[67.52425528081451 -13] 54.524255280814515]
Test Case: 141 | Input/Output: [[-66.38172358721688 33] -33.38172358721688]
Test Case: 142 | Input/Output: [[67.3386736066858 -75] -7.661326393314198]
Test Case: 143 | Input/Output: [[-22.068491241106145 -54] -76.06849124110614]
Test Case: 144 | Input/Output: [[-60.758500785995736 -56] -116.75850078599574]
Test Case: 145 | Input/Output: [[-56.952283710557985 41] -15.952283710557985]
Test Case: 146 | Input/Output: [[-92.54498241723346 82] -10.544982417233456]
Test Case: 147 | Input/Output: [[78.03070142659169 -92] -13.96929857340831]
Test Case: 148 | Input/Output: [[9.811511701428884 72] 81.81151170142888]
Test Case: 149 | Input/Output: [[11.958941541850649 2] 13.958941541850649]
Test Case: 150 | Input/Output: [[68.31985445231493 -69] -0.680145547685072]
Test Case: 151 | Input/Output: [[-95.60095583360769 69] -26.600955833607685]
Test Case: 152 | Input/Output: [[-21.570613733154346 23] 1.429386266845654]
Test Case: 153 | Input/Output: [[20.235635895105176 80] 100.23563589510518]
Test Case: 154 | Input/Output: [[55.288093607209845 79] 134.28809360720985]
Test Case: 155 | Input/Output: [[8.60888744284452 79] 87.60888744284452]
Test Case: 156 | Input/Output: [[-59.03817615746576 66] 6.961823842534237]
Test Case: 157 | Input/Output: [[-2.1623673006736936 -54] -56.162367300673694]
Test Case: 158 | Input/Output: [[63.46483143569958 1] 64.46483143569958]
Test Case: 159 | Input/Output: [[-54.76879473881318 -42] -96.76879473881317]
Test Case: 160 | Input/Output: [[-6.558455184734726 10] 3.4415448152652743]
Test Case: 161 | Input/Output: [[-36.945300426395875 -29] -65.94530042639587]
Test Case: 162 | Input/Output: [[13.96281909125669 12] 25.96281909125669]
Test Case: 163 | Input/Output: [[22.235432515719822 -91] -68.76456748428018]
Test Case: 164 | Input/Output: [[-70.13942765801148 22] -48.139427658011485]
Test Case: 165 | Input/Output: [[92.21910058634657 73] 165.21910058634657]
Test Case: 166 | Input/Output: [[16.229670893003558 26] 42.22967089300356]
Test Case: 167 | Input/Output: [[-48.36475016619433 -94] -142.3647501661943]
Test Case: 168 | Input/Output: [[2.880744017554562 80] 82.88074401755456]
Test Case: 169 | Input/Output: [[35.41543836248019 75] 110.41543836248019]
Test Case: 170 | Input/Output: [[47.67679131069545 28] 75.67679131069545]
Test Case: 171 | Input/Output: [[20.910345703740177 -87] -66.08965429625982]
Test Case: 172 | Input/Output: [[-25.59087622437579 35] 9.40912377562421]
Test Case: 173 | Input/Output: [[39.75842469054308 -72] -32.24157530945692]
Test Case: 174 | Input/Output: [[46.73712916982626 24] 70.73712916982626]
Test Case: 175 | Input/Output: [[95.2526383011054 28] 123.2526383011054]
Test Case: 176 | Input/Output: [[-95.60859035743678 7] -88.60859035743678]
Test Case: 177 | Input/Output: [[99.2103516182355 -44] 55.21035161823551]
Test Case: 178 | Input/Output: [[-69.69268058000095 86] 16.307319419999047]
Test Case: 179 | Input/Output: [[-55.05092983268449 -48] -103.05092983268449]
Test Case: 180 | Input/Output: [[77.0193675059214 -68] 9.019367505921394]
Test Case: 181 | Input/Output: [[-2.908591686450407 16] 13.091408313549593]
Test Case: 182 | Input/Output: [[-20.798211472908662 -96] -116.79821147290866]
Test Case: 183 | Input/Output: [[-67.3293394426482 -16] -83.3293394426482]
Test Case: 184 | Input/Output: [[-42.108875355774366 62] 19.891124644225634]
Test Case: 185 | Input/Output: [[41.2385604749565 -5] 36.2385604749565]
Test Case: 186 | Input/Output: [[64.22441118051299 -10] 54.22441118051299]
Test Case: 187 | Input/Output: [[-42.80172372706366 75] 32.19827627293634]
Test Case: 188 | Input/Output: [[37.055943862124906 -83] -45.944056137875094]
Test Case: 189 | Input/Output: [[-34.9452880851391 33] -1.9452880851390972]
Test Case: 190 | Input/Output: [[-28.286041307517834 -68] -96.28604130751783]
Test Case: 191 | Input/Output: [[-53.78771007411834 -97] -150.78771007411834]
Test Case: 192 | Input/Output: [[-14.838028496149988 35] 20.161971503850012]
Test Case: 193 | Input/Output: [[-41.46682977208176 -91] -132.46682977208175]
Test Case: 194 | Input/Output: [[-64.1754688822744 -87] -151.1754688822744]
Test Case: 195 | Input/Output: [[-45.01296873519514 39] -6.0129687351951375]
Test Case: 196 | Input/Output: [[88.78909412758341 87] 175.7890941275834]
Test Case: 197 | Input/Output: [[23.576182442752952 -1] 22.576182442752952]
Test Case: 198 | Input/Output: [[54.04220989286327 47] 101.04220989286327]
Test Case: 199 | Input/Output: [[13.694027814755259 -11] 2.694027814755259]
Test Case: 200 | Input/Output: [[92.6756537150286 45] 137.6756537150286]
Test Case: 201 | Input/Output: [[66.9451558311693 -57] 9.945155831169302]
Test Case: 202 | Input/Output: [[-44.73592901723211 92] 47.26407098276789]
Test Case: 203 | Input/Output: [[6.54320646027162 -71] -64.45679353972838]
Test Case: 204 | Input/Output: [[50.81946139202864 22] 72.81946139202864]
Test Case: 205 | Input/Output: [[91.64115635030672 70] 161.64115635030672]
Test Case: 206 | Input/Output: [[61.23290785372336 47] 108.23290785372336]
Test Case: 207 | Input/Output: [[41.57340804528519 80] 121.57340804528519]
Test Case: 208 | Input/Output: [[54.96687828095369 41] 95.9668782809537]
Test Case: 209 | Input/Output: [[-15.942752257663813 -59] -74.94275225766381]
Test Case: 210 | Input/Output: [[71.63484130268685 52] 123.63484130268685]
Test Case: 211 | Input/Output: [[-41.767735505869766 52] 10.232264494130234]
Test Case: 212 | Input/Output: [[-23.10052698810911 -28] -51.10052698810911]
Test Case: 213 | Input/Output: [[-44.89104151371701 13] -31.891041513717013]
Test Case: 214 | Input/Output: [[-84.08594130538465 -27] -111.08594130538465]
Test Case: 215 | Input/Output: [[-47.691350565862756 75] 27.308649434137244]
Test Case: 216 | Input/Output: [[33.20727016100625 22] 55.20727016100625]
Test Case: 217 | Input/Output: [[-31.847391371513027 1] -30.847391371513027]
Test Case: 218 | Input/Output: [[-65.34650625802338 -100] -165.3465062580234]
Test Case: 219 | Input/Output: [[-27.198129537994802 4] -23.198129537994802]
Test Case: 220 | Input/Output: [[-30.28853876422093 -86] -116.28853876422093]
Test Case: 221 | Input/Output: [[-28.423761719920535 74] 45.576238280079465]
Test Case: 222 | Input/Output: [[64.80199033265086 -18] 46.80199033265086]
Test Case: 223 | Input/Output: [[99.0399033206588 31] 130.0399033206588]
Test Case: 224 | Input/Output: [[2.835578283464841 100] 102.83557828346484]
Test Case: 225 | Input/Output: [[-21.10242423671113 76] 54.89757576328887]
Test Case: 226 | Input/Output: [[44.42394480246432 69] 113.42394480246432]
Test Case: 227 | Input/Output: [[42.3839218912739 91] 133.3839218912739]
Test Case: 228 | Input/Output: [[-18.650013882639428 -57] -75.65001388263943]
Test Case: 229 | Input/Output: [[-12.347051657707311 34] 21.65294834229269]
Test Case: 230 | Input/Output: [[51.384844239549466 87] 138.38484423954947]
Test Case: 231 | Input/Output: [[-12.817542944234745 -82] -94.81754294423475]
Test Case: 232 | Input/Output: [[59.6837932399373 -15] 44.6837932399373]
Test Case: 233 | Input/Output: [[-27.883260737612275 49] 21.116739262387725]
Test Case: 234 | Input/Output: [[5.464332707054794 -58] -52.535667292945206]
Test Case: 235 | Input/Output: [[63.474129300632626 -49] 14.474129300632626]
Test Case: 236 | Input/Output: [[-53.92979259210864 -71] -124.92979259210864]
Test Case: 237 | Input/Output: [[-4.575394544500284 -55] -59.575394544500284]
Test Case: 238 | Input/Output: [[76.98939484443565 91] 167.98939484443565]
Test Case: 239 | Input/Output: [[4.683607442181767 -50] -45.31639255781823]
Test Case: 240 | Input/Output: [[6.339581570185416 90] 96.33958157018542]
Test Case: 241 | Input/Output: [[-83.61685141080841 -33] -116.61685141080841]
Test Case: 242 | Input/Output: [[-5.9918836176660335 -94] -99.99188361766603]
Test Case: 243 | Input/Output: [[46.9689042840854 -68] -21.031095715914603]
Test Case: 244 | Input/Output: [[-24.788728207474946 1] -23.788728207474946]
Test Case: 245 | Input/Output: [[-14.869900572594247 2] -12.869900572594247]
Test Case: 246 | Input/Output: [[21.12056168268512 -53] -31.87943831731488]
Test Case: 247 | Input/Output: [[87.85611691876488 -99] -11.143883081235117]
Test Case: 248 | Input/Output: [[-84.39811593424872 -68] -152.39811593424872]
Test Case: 249 | Input/Output: [[-75.47271525549301 74] -1.4727152554930143]
Test Case: 250 | Input/Output: [[36.008217494879744 -50] -13.991782505120256]
Test Case: 251 | Input/Output: [[38.961741539200574 -52] -13.038258460799426]
Test Case: 252 | Input/Output: [[16.053456563001006 -8] 8.053456563001006]
Test Case: 253 | Input/Output: [[72.1637620883811 -90] -17.836237911618895]
Test Case: 254 | Input/Output: [[80.01672639988789 -78] 2.0167263998878866]
Test Case: 255 | Input/Output: [[-96.83818708527721 59] -37.83818708527721]
Test Case: 256 | Input/Output: [[3.619470269376208 9] 12.619470269376208]
Test Case: 257 | Input/Output: [[68.60874100446372 45] 113.60874100446372]
Test Case: 258 | Input/Output: [[58.916226890230604 27] 85.9162268902306]
Test Case: 259 | Input/Output: [[4.202652320183802 94] 98.2026523201838]
Test Case: 260 | Input/Output: [[-69.29327581954247 19] -50.29327581954247]
Test Case: 261 | Input/Output: [[-97.5839187410491 -18] -115.5839187410491]
Test Case: 262 | Input/Output: [[-83.13285015890142 1] -82.13285015890142]
Test Case: 263 | Input/Output: [[84.16735090555662 5] 89.16735090555662]
Test Case: 264 | Input/Output: [[58.12797707086355 -62] -3.872022929136449]
Test Case: 265 | Input/Output: [[-59.64272584619932 -18] -77.64272584619931]
Test Case: 266 | Input/Output: [[-24.04372479509884 29] 4.956275204901161]
Test Case: 267 | Input/Output: [[77.71166323367896 -56] 21.711663233678962]
Test Case: 268 | Input/Output: [[53.416007776872306 -96] -42.583992223127694]
Test Case: 269 | Input/Output: [[78.58526933930324 84] 162.58526933930324]
Test Case: 270 | Input/Output: [[88.68518590323043 -94] -5.314814096769567]
Test Case: 271 | Input/Output: [[-76.27054386584823 -48] -124.27054386584823]
Test Case: 272 | Input/Output: [[-33.20565805047791 -3] -36.20565805047791]
Test Case: 273 | Input/Output: [[73.15218899008491 1] 74.15218899008491]
Test Case: 274 | Input/Output: [[79.27571256658737 90] 169.27571256658737]
Test Case: 275 | Input/Output: [[52.212708579476526 12] 64.21270857947653]
Test Case: 276 | Input/Output: [[-76.08717924031438 -95] -171.08717924031438]
Test Case: 277 | Input/Output: [[37.02819842050437 10] 47.02819842050437]
Test Case: 278 | Input/Output: [[-4.606536303593558 63] 58.39346369640644]
Test Case: 279 | Input/Output: [[-66.59085169030223 71] 4.40914830969777]
Test Case: 280 | Input/Output: [[-67.1691762684676 77] 9.830823731532405]
Test Case: 281 | Input/Output: [[47.98927067737188 72] 119.98927067737188]
Test Case: 282 | Input/Output: [[60.51066164490982 -37] 23.510661644909817]
Test Case: 283 | Input/Output: [[78.48312312233367 9] 87.48312312233367]
Test Case: 284 | Input/Output: [[54.922913132223925 27] 81.92291313222393]
Test Case: 285 | Input/Output: [[-82.84710705341442 99] 16.15289294658558]
Test Case: 286 | Input/Output: [[19.57940857215759 67] 86.57940857215759]
Test Case: 287 | Input/Output: [[3.5543895035519313 -8] -4.445610496448069]
Test Case: 288 | Input/Output: [[-97.66196157095031 -69] -166.66196157095033]
Test Case: 289 | Input/Output: [[-36.38817099167673 -66] -102.38817099167673]
Test Case: 290 | Input/Output: [[4.097196030105721 -30] -25.90280396989428]
Test Case: 291 | Input/Output: [[74.3557590987032 -72] 2.355759098703203]
Test Case: 292 | Input/Output: [[59.838767133462994 4] 63.838767133462994]
Test Case: 293 | Input/Output: [[5.2173598318933045 -35] -29.782640168106695]
Test Case: 294 | Input/Output: [[42.17346819247658 -85] -42.82653180752342]
Test Case: 295 | Input/Output: [[-50.08089470374759 52] 1.919105296252411]
Test Case: 296 | Input/Output: [[10.73255366329829 -46] -35.26744633670171]
Test Case: 297 | Input/Output: [[53.541718753074036 80] 133.54171875307404]
Test Case: 298 | Input/Output: [[76.11117016656854 -43] 33.11117016656854]
Test Case: 299 | Input/Output: [[97.71448849896166 -28] 69.71448849896166]
Test Case: 300 | Input/Output: [[-5.139468222540145 94] 88.86053177745985]
Test Case: 301 | Input/Output: [[45.30655654873439 99] 144.3065565487344]
Test Case: 302 | Input/Output: [[56.890968590841425 -16] 40.890968590841425]
Test Case: 303 | Input/Output: [[-55.143940339087514 -74] -129.14394033908752]
Test Case: 304 | Input/Output: [[-7.8733196681186115 53] 45.12668033188139]
Test Case: 305 | Input/Output: [[50.20099944668934 52] 102.20099944668934]
Test Case: 306 | Input/Output: [[62.832936676738115 -15] 47.832936676738115]
Test Case: 307 | Input/Output: [[-9.533908301283532 -17] -26.53390830128353]
Test Case: 308 | Input/Output: [[13.031827513117776 43] 56.031827513117776]
Test Case: 309 | Input/Output: [[31.279269876451878 99] 130.27926987645188]
Test Case: 310 | Input/Output: [[48.604826567950084 -22] 26.604826567950084]
Test Case: 311 | Input/Output: [[-80.12733015706841 -42] -122.12733015706841]
Test Case: 312 | Input/Output: [[-84.58180355421925 86] 1.418196445780751]
Test Case: 313 | Input/Output: [[84.46776662304111 -19] 65.46776662304111]
Test Case: 314 | Input/Output: [[5.140389891476232 -32] -26.859610108523768]
Test Case: 315 | Input/Output: [[-46.26407672373809 -16] -62.26407672373809]
Test Case: 316 | Input/Output: [[36.053570003489824 0] 36.053570003489824]
Test Case: 317 | Input/Output: [[-49.433734073643045 -14] -63.433734073643045]
Test Case: 318 | Input/Output: [[13.121419449177324 -37] -23.878580550822676]
Test Case: 319 | Input/Output: [[-50.53623437011354 -51] -101.53623437011353]
Test Case: 320 | Input/Output: [[-58.987279241835886 47] -11.987279241835886]
Test Case: 321 | Input/Output: [[-5.5750084416222165 -88] -93.57500844162222]
Test Case: 322 | Input/Output: [[41.67398443832849 -27] 14.673984438328489]
Test Case: 323 | Input/Output: [[-79.34102990056368 22] -57.34102990056368]
Test Case: 324 | Input/Output: [[-47.413119401312656 68] 20.586880598687344]
Test Case: 325 | Input/Output: [[47.07593647178709 40] 87.07593647178709]
Test Case: 326 | Input/Output: [[-72.64396243098683 68] -4.643962430986832]
Test Case: 327 | Input/Output: [[-41.96442274618215 -33] -74.96442274618215]
Test Case: 328 | Input/Output: [[-4.799992366829912 0] -4.799992366829912]
Test Case: 329 | Input/Output: [[88.4831717773466 14] 102.4831717773466]
Test Case: 330 | Input/Output: [[36.20560992374834 38] 74.20560992374834]
Test Case: 331 | Input/Output: [[-81.656726341932 60] -21.656726341932]
Test Case: 332 | Input/Output: [[-9.591404852493568 50] 40.40859514750643]
Test Case: 333 | Input/Output: [[20.409077645206736 -91] -70.59092235479326]
Test Case: 334 | Input/Output: [[-99.10729067127468 -29] -128.10729067127468]
Test Case: 335 | Input/Output: [[-96.35384388318234 -77] -173.35384388318232]
Test Case: 336 | Input/Output: [[-85.67468235282236 26] -59.67468235282236]
Test Case: 337 | Input/Output: [[-45.274645120680375 -59] -104.27464512068038]
Test Case: 338 | Input/Output: [[-97.60909582746619 -60] -157.6090958274662]
Test Case: 339 | Input/Output: [[-35.04857384793986 44] 8.951426152060137]
Test Case: 340 | Input/Output: [[73.73454182437862 58] 131.73454182437862]
Test Case: 341 | Input/Output: [[-72.92204545895409 57] -15.922045458954088]
Test Case: 342 | Input/Output: [[45.793128859269416 -66] -20.206871140730584]
Test Case: 343 | Input/Output: [[36.77441370648489 -10] 26.774413706484893]
Test Case: 344 | Input/Output: [[50.991004623229884 -57] -6.008995376770116]
Test Case: 345 | Input/Output: [[-18.2496616396338 -26] -44.2496616396338]
Test Case: 346 | Input/Output: [[96.74689653348418 -93] 3.7468965334841755]
Test Case: 347 | Input/Output: [[-55.302447339436696 -55] -110.3024473394367]
Test Case: 348 | Input/Output: [[-22.256578640027286 17] -5.256578640027286]
Test Case: 349 | Input/Output: [[-64.59088320071567 37] -27.590883200715666]
Test Case: 350 | Input/Output: [[95.437430833999 79] 174.437430833999]
Test Case: 351 | Input/Output: [[25.800647181114144 28] 53.800647181114144]
Test Case: 352 | Input/Output: [[58.90511159767772 29] 87.90511159767772]
Test Case: 353 | Input/Output: [[65.08003949839556 -82] -16.919960501604436]
Test Case: 354 | Input/Output: [[-86.80033284886484 -60] -146.80033284886485]
Test Case: 355 | Input/Output: [[-54.905055332902904 57] 2.0949446670970957]
Test Case: 356 | Input/Output: [[-71.6071451914267 -61] -132.6071451914267]
Test Case: 357 | Input/Output: [[-68.62364952401978 69] 0.3763504759802174]
Test Case: 358 | Input/Output: [[-40.16809441696074 23] -17.16809441696074]
Test Case: 359 | Input/Output: [[-3.5428042965373976 -53] -56.5428042965374]
Test Case: 360 | Input/Output: [[-42.529320118857925 -73] -115.52932011885792]
Test Case: 361 | Input/Output: [[0.16728955037143578 -40] -39.832710449628564]
Test Case: 362 | Input/Output: [[-9.534799207570572 -37] -46.53479920757057]
Test Case: 363 | Input/Output: [[36.120201157264944 92] 128.12020115726494]
Test Case: 364 | Input/Output: [[65.18723290335086 8] 73.18723290335086]
Test Case: 365 | Input/Output: [[-26.819076290107674 -40] -66.81907629010767]
Test Case: 366 | Input/Output: [[19.1297817416564 -73] -53.8702182583436]
Test Case: 367 | Input/Output: [[9.707639607425861 -3] 6.707639607425861]
Test Case: 368 | Input/Output: [[-33.22918692502097 77] 43.77081307497903]
Test Case: 369 | Input/Output: [[35.918895353763986 -66] -30.081104646236014]
Test Case: 370 | Input/Output: [[73.98268101314869 -38] 35.98268101314869]
Test Case: 371 | Input/Output: [[75.54323221805447 -23] 52.54323221805447]
Test Case: 372 | Input/Output: [[22.847518285610306 -48] -25.152481714389694]
Test Case: 373 | Input/Output: [[-34.87451498208489 60] 25.12548501791511]
Test Case: 374 | Input/Output: [[-90.90695797918738 4] -86.90695797918738]
Test Case: 375 | Input/Output: [[-25.03873840108841 -23] -48.03873840108841]
Test Case: 376 | Input/Output: [[-89.99980086343761 62] -27.999800863437613]
Test Case: 377 | Input/Output: [[-0.783625412998191 -49] -49.78362541299819]
Test Case: 378 | Input/Output: [[40.53511926877417 94] 134.53511926877417]
Test Case: 379 | Input/Output: [[-7.813855346866291 75] 67.18614465313371]
Test Case: 380 | Input/Output: [[11.662244797675726 41] 52.662244797675726]
Test Case: 381 | Input/Output: [[31.87715285031169 15] 46.87715285031169]
Test Case: 382 | Input/Output: [[-51.52512450865822 -94] -145.52512450865822]
Test Case: 383 | Input/Output: [[-83.92634183373082 95] 11.073658166269183]
Test Case: 384 | Input/Output: [[0.6310980257320011 4] 4.631098025732001]
Test Case: 385 | Input/Output: [[44.363278101925516 84] 128.36327810192552]
Test Case: 386 | Input/Output: [[-86.83481139673364 20] -66.83481139673364]
Test Case: 387 | Input/Output: [[37.33198570817075 -15] 22.33198570817075]
Test Case: 388 | Input/Output: [[43.40234190636028 -39] 4.402341906360277]
Test Case: 389 | Input/Output: [[98.09326319672437 0] 98.09326319672437]
Test Case: 390 | Input/Output: [[-98.20609883121062 -14] -112.20609883121062]
Test Case: 391 | Input/Output: [[63.172259955941456 -1] 62.172259955941456]
Test Case: 392 | Input/Output: [[91.46361663630458 9] 100.46361663630458]
Test Case: 393 | Input/Output: [[-67.43122439760864 -90] -157.43122439760864]
Test Case: 394 | Input/Output: [[70.69079349444698 -6] 64.69079349444698]
Test Case: 395 | Input/Output: [[7.2144858029814145 -13] -5.7855141970185855]
Test Case: 396 | Input/Output: [[98.55456239051105 100] 198.55456239051105]
Test Case: 397 | Input/Output: [[-50.20921027936105 45] -5.209210279361052]
Test Case: 398 | Input/Output: [[76.20849281607164 28] 104.20849281607164]
Test Case: 399 | Input/Output: [[-35.229559519151834 91] 55.770440480848166]
Test Case: 400 | Input/Output: [[41.370494109690384 -81] -39.629505890309616]
Test Case: 401 | Input/Output: [[-76.68032116653205 -54] -130.68032116653205]
Test Case: 402 | Input/Output: [[68.98576660844864 48] 116.98576660844864]
Test Case: 403 | Input/Output: [[43.09202775985099 16] 59.09202775985099]
Test Case: 404 | Input/Output: [[70.00265966648666 -21] 49.002659666486664]
Test Case: 405 | Input/Output: [[-59.87335690786097 28] -31.873356907860973]
Test Case: 406 | Input/Output: [[26.869985375259972 -88] -61.13001462474003]
Test Case: 407 | Input/Output: [[-2.238545159558768 91] 88.76145484044123]
Test Case: 408 | Input/Output: [[17.224319814094628 52] 69.22431981409463]
Test Case: 409 | Input/Output: [[-17.393376930278876 -1] -18.393376930278876]
Test Case: 410 | Input/Output: [[-80.94035466453586 95] 14.05964533546414]
Test Case: 411 | Input/Output: [[82.3938183978477 92] 174.3938183978477]
Test Case: 412 | Input/Output: [[-19.55571709839687 43] 23.44428290160313]
Test Case: 413 | Input/Output: [[33.77212383994507 97] 130.77212383994507]
Test Case: 414 | Input/Output: [[-92.51841308028246 -1] -93.51841308028246]
Test Case: 415 | Input/Output: [[-42.556702894130936 -49] -91.55670289413094]
Test Case: 416 | Input/Output: [[-40.989934679717834 -72] -112.98993467971783]
Test Case: 417 | Input/Output: [[-66.65098326621532 42] -24.65098326621532]
Test Case: 418 | Input/Output: [[32.149433209710566 50] 82.14943320971057]
Test Case: 419 | Input/Output: [[94.12447854805649 64] 158.1244785480565]
Test Case: 420 | Input/Output: [[59.62037774108671 -7] 52.62037774108671]
Test Case: 421 | Input/Output: [[-94.16884105729326 -89] -183.16884105729326]
Test Case: 422 | Input/Output: [[42.23662117434907 25] 67.23662117434907]
Test Case: 423 | Input/Output: [[58.60387012227915 -66] -7.396129877720853]
Test Case: 424 | Input/Output: [[78.02610783441867 -99] -20.973892165581333]
Test Case: 425 | Input/Output: [[3.6245004269273693 -97] -93.37549957307263]
Test Case: 426 | Input/Output: [[51.635752591747746 -14] 37.635752591747746]
Test Case: 427 | Input/Output: [[69.4953343201951 54] 123.4953343201951]
Test Case: 428 | Input/Output: [[29.669290684907736 -90] -60.330709315092264]
Test Case: 429 | Input/Output: [[75.21620719816559 -4] 71.21620719816559]
Test Case: 430 | Input/Output: [[-8.904546453176067 71] 62.09545354682393]
Test Case: 431 | Input/Output: [[41.926093149370445 86] 127.92609314937044]
Test Case: 432 | Input/Output: [[6.154606940568726 38] 44.154606940568726]
Test Case: 433 | Input/Output: [[27.690374221524408 54] 81.69037422152441]
Test Case: 434 | Input/Output: [[85.63587077134974 73] 158.63587077134974]
Test Case: 435 | Input/Output: [[69.59688950478272 92] 161.59688950478272]
Test Case: 436 | Input/Output: [[10.52732754811177 -3] 7.527327548111771]
Test Case: 437 | Input/Output: [[-22.736825067867784 -66] -88.73682506786778]
Test Case: 438 | Input/Output: [[-32.860730294881435 -18] -50.860730294881435]
Test Case: 439 | Input/Output: [[-75.69458498093931 -48] -123.69458498093931]
Test Case: 440 | Input/Output: [[48.56636340843653 79] 127.56636340843653]
Test Case: 441 | Input/Output: [[-31.18255616376362 -74] -105.18255616376362]
Test Case: 442 | Input/Output: [[-42.51924415038506 26] -16.519244150385063]
Test Case: 443 | Input/Output: [[4.6596792891029395 -50] -45.34032071089706]
Test Case: 444 | Input/Output: [[44.44475094172685 -97] -52.55524905827315]
Test Case: 445 | Input/Output: [[-73.51640856382977 -63] -136.51640856382977]
Test Case: 446 | Input/Output: [[-87.96389055307623 65] -22.963890553076226]
Test Case: 447 | Input/Output: [[57.57010815216316 -84] -26.429891847836842]
Test Case: 448 | Input/Output: [[-55.98693747940231 13] -42.98693747940231]
Test Case: 449 | Input/Output: [[11.840810109889759 0] 11.840810109889759]
Test Case: 450 | Input/Output: [[10.919118172318292 63] 73.91911817231829]
Test Case: 451 | Input/Output: [[80.69035096944853 23] 103.69035096944853]
Test Case: 452 | Input/Output: [[-40.77410062297338 -58] -98.77410062297338]
Test Case: 453 | Input/Output: [[-44.67484737594187 -91] -135.67484737594188]
Test Case: 454 | Input/Output: [[-34.139953726546636 85] 50.860046273453364]
Test Case: 455 | Input/Output: [[6.560504585537743 28] 34.56050458553774]
Test Case: 456 | Input/Output: [[-48.03657430666364 80] 31.96342569333636]
Test Case: 457 | Input/Output: [[24.0393001306046 -32] -7.960699869395398]
Test Case: 458 | Input/Output: [[-32.869065252234336 -78] -110.86906525223434]
Test Case: 459 | Input/Output: [[30.49012371115657 20] 50.49012371115657]
Test Case: 460 | Input/Output: [[84.45093829734239 9] 93.45093829734239]
Test Case: 461 | Input/Output: [[-28.587525316660177 41] 12.412474683339823]
Test Case: 462 | Input/Output: [[80.73915449092911 71] 151.7391544909291]
Test Case: 463 | Input/Output: [[-25.869266499812966 -3] -28.869266499812966]
Test Case: 464 | Input/Output: [[-96.84119745951779 -40] -136.8411974595178]
Test Case: 465 | Input/Output: [[46.20250618397324 35] 81.20250618397324]
Test Case: 466 | Input/Output: [[89.44114598997729 33] 122.44114598997729]
Test Case: 467 | Input/Output: [[17.25234374642224 -86] -68.74765625357776]
Test Case: 468 | Input/Output: [[77.3968517875229 -86] -8.603148212477095]
Test Case: 469 | Input/Output: [[31.013201853503745 -54] -22.986798146496255]
Test Case: 470 | Input/Output: [[-47.263073825933134 -89] -136.26307382593313]
Test Case: 471 | Input/Output: [[16.102148597665305 14] 30.102148597665305]
Test Case: 472 | Input/Output: [[28.313064894061824 -91] -62.686935105938176]
Test Case: 473 | Input/Output: [[-40.21915308557566 58] 17.780846914424338]
Test Case: 474 | Input/Output: [[-94.14042300278889 65] -29.140423002788893]
Test Case: 475 | Input/Output: [[-29.73706509388279 90] 60.26293490611721]
Test Case: 476 | Input/Output: [[-74.39902292438161 63] -11.399022924381612]
Test Case: 477 | Input/Output: [[-82.85979356005917 96] 13.140206439940826]
Test Case: 478 | Input/Output: [[67.66437491286325 78] 145.66437491286325]
Test Case: 479 | Input/Output: [[-63.08277927690751 -71] -134.0827792769075]
Test Case: 480 | Input/Output: [[-50.18361951745227 -48] -98.18361951745227]
Test Case: 481 | Input/Output: [[-31.556003332012892 32] 0.4439966679871077]
Test Case: 482 | Input/Output: [[18.738827256872753 78] 96.73882725687275]
Test Case: 483 | Input/Output: [[62.830456282059515 -80] -17.169543717940485]
Test Case: 484 | Input/Output: [[45.15028098783199 39] 84.15028098783199]
Test Case: 485 | Input/Output: [[-46.030172854868525 93] 46.969827145131475]
Test Case: 486 | Input/Output: [[7.558811079465144 15] 22.558811079465144]
Test Case: 487 | Input/Output: [[-54.89559367598369 -70] -124.89559367598369]
Test Case: 488 | Input/Output: [[-90.21846058139428 30] -60.21846058139428]
Test Case: 489 | Input/Output: [[-92.62809337472461 85] -7.628093374724614]
Test Case: 490 | Input/Output: [[76.88422430093317 19] 95.88422430093317]
Test Case: 491 | Input/Output: [[48.41410521607298 68] 116.41410521607298]
Test Case: 492 | Input/Output: [[29.301263391775933 -20] 9.301263391775933]
Test Case: 493 | Input/Output: [[21.925123378877217 64] 85.92512337887722]
Test Case: 494 | Input/Output: [[-55.86600249599789 -98] -153.8660024959979]
Test Case: 495 | Input/Output: [[-79.38504087055811 -72] -151.3850408705581]
Test Case: 496 | Input/Output: [[82.99652426447727 -43] 39.99652426447727]
Test Case: 497 | Input/Output: [[-63.589502612601144 40] -23.589502612601144]
Test Case: 498 | Input/Output: [[-31.853058771717755 -45] -76.85305877171776]
Test Case: 499 | Input/Output: [[8.524663054332223 87] 95.52466305433222]
Test Case: 500 | Input/Output: [[58.22169748208711 15] 73.22169748208711]
Test Case: 501 | Input/Output: [[91.94966709608303 9] 100.94966709608303]
Test Case: 502 | Input/Output: [[-80.50479636511274 63] -17.50479636511274]
Test Case: 503 | Input/Output: [[45.75834683910713 -57] -11.241653160892866]
Test Case: 504 | Input/Output: [[47.608432449550776 28] 75.60843244955078]
Test Case: 505 | Input/Output: [[51.450755518649004 -79] -27.549244481350996]
Test Case: 506 | Input/Output: [[-37.56968277762971 -98] -135.5696827776297]
Test Case: 507 | Input/Output: [[84.42343418159422 79] 163.42343418159422]
Test Case: 508 | Input/Output: [[-10.668877187663355 -14] -24.668877187663355]
Test Case: 509 | Input/Output: [[85.34826990859716 98] 183.34826990859716]
Test Case: 510 | Input/Output: [[-25.683204109729928 -14] -39.68320410972993]
Test Case: 511 | Input/Output: [[-48.2818327753884 -32] -80.28183277538841]
Test Case: 512 | Input/Output: [[-80.15072994842632 -83] -163.15072994842632]
Test Case: 513 | Input/Output: [[-45.16438593688075 77] 31.83561406311925]
Test Case: 514 | Input/Output: [[78.66459394354811 -36] 42.66459394354811]
Test Case: 515 | Input/Output: [[65.43315767257238 33] 98.43315767257238]
Test Case: 516 | Input/Output: [[-46.71062865583204 -36] -82.71062865583204]
Test Case: 517 | Input/Output: [[98.66639698642973 -16] 82.66639698642973]
Test Case: 518 | Input/Output: [[47.49474658228502 -43] 4.494746582285018]
Test Case: 519 | Input/Output: [[-78.90127421356716 -35] -113.90127421356716]
Test Case: 520 | Input/Output: [[-22.0518506364388 -17] -39.0518506364388]
Test Case: 521 | Input/Output: [[36.569786936333884 52] 88.56978693633388]
Test Case: 522 | Input/Output: [[-46.944693477441476 -89] -135.9446934774415]
Test Case: 523 | Input/Output: [[22.298120467794973 -40] -17.701879532205027]
Test Case: 524 | Input/Output: [[-51.69944401822051 20] -31.69944401822051]
Test Case: 525 | Input/Output: [[-3.787480319373614 -68] -71.78748031937361]
Test Case: 526 | Input/Output: [[79.36453929906213 -37] 42.36453929906213]
Test Case: 527 | Input/Output: [[-11.652211966493525 -4] -15.652211966493525]
Test Case: 528 | Input/Output: [[77.90845832936643 46] 123.90845832936643]
Test Case: 529 | Input/Output: [[90.58957167551694 39] 129.58957167551694]
Test Case: 530 | Input/Output: [[9.003472061214609 54] 63.00347206121461]
Test Case: 531 | Input/Output: [[-51.819033307888084 -66] -117.81903330788808]
Test Case: 532 | Input/Output: [[97.9343158942118 95] 192.9343158942118]
Test Case: 533 | Input/Output: [[75.95721772247691 -98] -22.042782277523088]
Test Case: 534 | Input/Output: [[82.74694298601236 74] 156.74694298601236]
Test Case: 535 | Input/Output: [[-38.709290432840284 -75] -113.70929043284028]
Test Case: 536 | Input/Output: [[72.49763836332735 -43] 29.497638363327354]
Test Case: 537 | Input/Output: [[34.35491510308398 52] 86.35491510308398]
Test Case: 538 | Input/Output: [[-25.201604040609055 95] 69.79839595939094]
Test Case: 539 | Input/Output: [[-3.128392874192926 -59] -62.128392874192926]
Test Case: 540 | Input/Output: [[-75.4812151620809 -60] -135.4812151620809]
Test Case: 541 | Input/Output: [[70.74034149955858 -51] 19.740341499558582]
Test Case: 542 | Input/Output: [[-82.84803108438044 92] 9.151968915619562]
Test Case: 543 | Input/Output: [[-77.71512431359142 -69] -146.71512431359142]
Test Case: 544 | Input/Output: [[-71.54501068355472 -54] -125.54501068355472]
Test Case: 545 | Input/Output: [[50.29961738351426 -72] -21.70038261648574]
Test Case: 546 | Input/Output: [[36.936405091571686 61] 97.93640509157169]
Test Case: 547 | Input/Output: [[77.81214475878951 -65] 12.812144758789515]
Test Case: 548 | Input/Output: [[9.042771749392259 -28] -18.95722825060774]
Test Case: 549 | Input/Output: [[-89.73947738685202 -46] -135.739477386852]
Test Case: 550 | Input/Output: [[-46.44078690915967 26] -20.44078690915967]
Test Case: 551 | Input/Output: [[-38.36437893571563 -23] -61.36437893571563]
Test Case: 552 | Input/Output: [[95.2180674121577 94] 189.2180674121577]
Test Case: 553 | Input/Output: [[35.154809625336014 -80] -44.845190374663986]
Test Case: 554 | Input/Output: [[-52.64785458108376 35] -17.647854581083763]
Test Case: 555 | Input/Output: [[-91.15017030823012 77] -14.150170308230116]
Test Case: 556 | Input/Output: [[-37.11892446629639 31] -6.1189244662963915]
Test Case: 557 | Input/Output: [[97.88952346465095 -90] 7.889523464650949]
Test Case: 558 | Input/Output: [[90.96584260507669 -55] 35.96584260507669]
Test Case: 559 | Input/Output: [[-11.669232660437686 100] 88.33076733956231]
Test Case: 560 | Input/Output: [[98.01592505431546 71] 169.01592505431546]
Test Case: 561 | Input/Output: [[90.90033510113238 -70] 20.900335101132384]
Test Case: 562 | Input/Output: [[-12.643653227030072 69] 56.35634677296993]
Test Case: 563 | Input/Output: [[33.77173642057389 26] 59.77173642057389]
Test Case: 564 | Input/Output: [[43.4993981624913 61] 104.4993981624913]
Test Case: 565 | Input/Output: [[-86.41017907711456 -50] -136.41017907711455]
Test Case: 566 | Input/Output: [[20.032316136139983 -85] -64.96768386386002]
Test Case: 567 | Input/Output: [[4.6243981327594526 -12] -7.3756018672405474]
Test Case: 568 | Input/Output: [[88.89388411737892 69] 157.89388411737892]
Test Case: 569 | Input/Output: [[59.8785894970693 34] 93.8785894970693]
Test Case: 570 | Input/Output: [[-72.97880232874112 -97] -169.97880232874112]
Test Case: 571 | Input/Output: [[-34.760128497312806 -87] -121.7601284973128]
Test Case: 572 | Input/Output: [[0.3674130694000297 24] 24.36741306940003]
Test Case: 573 | Input/Output: [[-2.083915876341308 -71] -73.08391587634131]
Test Case: 574 | Input/Output: [[86.33937102844618 70] 156.33937102844618]
Test Case: 575 | Input/Output: [[90.81007828712981 76] 166.8100782871298]
Test Case: 576 | Input/Output: [[52.439896586516056 20] 72.43989658651606]
Test Case: 577 | Input/Output: [[-85.21975312821704 -54] -139.21975312821704]
Test Case: 578 | Input/Output: [[-8.983724744355868 99] 90.01627525564413]
Test Case: 579 | Input/Output: [[-84.44317315429852 -43] -127.44317315429852]
Test Case: 580 | Input/Output: [[-19.547260288306717 -95] -114.54726028830672]
Test Case: 581 | Input/Output: [[57.667563007212635 97] 154.66756300721264]
Test Case: 582 | Input/Output: [[57.809579266571376 11] 68.80957926657138]
Test Case: 583 | Input/Output: [[-28.213969864630116 -81] -109.21396986463012]
Test Case: 584 | Input/Output: [[24.135863806024133 -70] -45.86413619397587]
Test Case: 585 | Input/Output: [[-5.728732151695098 100] 94.2712678483049]
Test Case: 586 | Input/Output: [[-46.59492619864096 -46] -92.59492619864096]
Test Case: 587 | Input/Output: [[26.72027531738621 98] 124.72027531738621]
Test Case: 588 | Input/Output: [[80.90067206677321 -22] 58.90067206677321]
Test Case: 589 | Input/Output: [[-48.94860554810254 37] -11.948605548102542]
Test Case: 590 | Input/Output: [[64.42087587529733 30] 94.42087587529733]
Test Case: 591 | Input/Output: [[90.77874810174006 -60] 30.778748101740064]
Test Case: 592 | Input/Output: [[-93.89822841698377 -67] -160.89822841698378]
Test Case: 593 | Input/Output: [[87.69107081939879 91] 178.6910708193988]
Test Case: 594 | Input/Output: [[56.69847129411755 -45] 11.698471294117553]
Test Case: 595 | Input/Output: [[24.017730023492007 71] 95.017730023492]
Test Case: 596 | Input/Output: [[11.628189865487684 -19] -7.371810134512316]
Test Case: 597 | Input/Output: [[-85.07139971872905 -24] -109.07139971872905]
Test Case: 598 | Input/Output: [[-93.11278884567156 38] -55.11278884567156]
Test Case: 599 | Input/Output: [[10.548093315407442 -58] -47.45190668459256]
Test Case: 600 | Input/Output: [[94.33010076388115 -95] -0.6698992361188516]
Test Case: 601 | Input/Output: [[76.38167897347961 -84] -7.618321026520391]
Test Case: 602 | Input/Output: [[-58.09048623393345 -53] -111.09048623393345]
Test Case: 603 | Input/Output: [[-73.48269686267888 -42] -115.48269686267888]
Test Case: 604 | Input/Output: [[80.9801176714067 -18] 62.9801176714067]
Test Case: 605 | Input/Output: [[-45.99891899211794 -43] -88.99891899211795]
Test Case: 606 | Input/Output: [[13.707694380207755 -65] -51.292305619792245]
Test Case: 607 | Input/Output: [[63.33423929686751 6] 69.33423929686751]
Test Case: 608 | Input/Output: [[81.85655216760864 18] 99.85655216760864]
Test Case: 609 | Input/Output: [[-46.32472446002336 23] -23.32472446002336]
Test Case: 610 | Input/Output: [[-40.97045348925599 -79] -119.97045348925599]
Test Case: 611 | Input/Output: [[53.564240666809525 17] 70.56424066680952]
Test Case: 612 | Input/Output: [[44.874058709859185 -57] -12.125941290140815]
Test Case: 613 | Input/Output: [[-16.470496655059392 15] -1.4704966550593923]
Test Case: 614 | Input/Output: [[-15.801556951772184 -6] -21.801556951772184]
Test Case: 615 | Input/Output: [[49.79807351877744 -29] 20.798073518777443]
Test Case: 616 | Input/Output: [[-66.8490009193925 -39] -105.8490009193925]
Test Case: 617 | Input/Output: [[-59.70194907517683 -25] -84.70194907517683]
Test Case: 618 | Input/Output: [[6.513053609017746 -81] -74.48694639098225]
Test Case: 619 | Input/Output: [[75.37381229565622 -73] 2.373812295656222]
Test Case: 620 | Input/Output: [[81.12683373646914 -75] 6.126833736469138]
Test Case: 621 | Input/Output: [[98.99738353539439 -25] 73.99738353539439]
Test Case: 622 | Input/Output: [[43.79119990090092 -53] -9.20880009909908]
Test Case: 623 | Input/Output: [[59.4273244758908 -8] 51.4273244758908]
Test Case: 624 | Input/Output: [[-64.38382203027362 9] -55.38382203027362]
Test Case: 625 | Input/Output: [[95.68419513008527 26] 121.68419513008527]
Test Case: 626 | Input/Output: [[-21.640694480740024 22] 0.35930551925997634]
Test Case: 627 | Input/Output: [[61.5854966435254 -96] -34.4145033564746]
Test Case: 628 | Input/Output: [[-58.969037919208446 -43] -101.96903791920845]
Test Case: 629 | Input/Output: [[17.721558395636578 90] 107.72155839563658]
Test Case: 630 | Input/Output: [[12.017606025279832 -40] -27.982393974720168]
Test Case: 631 | Input/Output: [[-24.83353632264263 -55] -79.83353632264263]
Test Case: 632 | Input/Output: [[7.61181925452226 53] 60.61181925452226]
Test Case: 633 | Input/Output: [[27.17917194822938 54] 81.17917194822938]
Test Case: 634 | Input/Output: [[61.75920807387601 7] 68.75920807387601]
Test Case: 635 | Input/Output: [[-25.95127744050542 -88] -113.95127744050542]
Test Case: 636 | Input/Output: [[-0.4057071139045121 -45] -45.40570711390451]
Test Case: 637 | Input/Output: [[-43.4550944254162 28] -15.455094425416199]
Test Case: 638 | Input/Output: [[88.56149375006964 -87] 1.5614937500696442]
Test Case: 639 | Input/Output: [[-85.85717178302605 51] -34.85717178302605]
Test Case: 640 | Input/Output: [[-56.3314173851787 72] 15.668582614821297]
Test Case: 641 | Input/Output: [[-66.14805105416724 42] -24.14805105416724]
Test Case: 642 | Input/Output: [[-1.0624839021240717 29] 27.93751609787593]
Test Case: 643 | Input/Output: [[41.280061319624565 -3] 38.280061319624565]
Test Case: 644 | Input/Output: [[-26.908631163361292 7] -19.908631163361292]
Test Case: 645 | Input/Output: [[-95.95843682458242 -2] -97.95843682458242]
Test Case: 646 | Input/Output: [[-98.91380507219361 55] -43.91380507219361]
Test Case: 647 | Input/Output: [[11.93509531596905 -80] -68.06490468403095]
Test Case: 648 | Input/Output: [[-77.24162995732246 49] -28.24162995732246]
Test Case: 649 | Input/Output: [[12.020568421330637 94] 106.02056842133064]
Test Case: 650 | Input/Output: [[37.675910499210204 -11] 26.675910499210204]
Test Case: 651 | Input/Output: [[-26.06653605750786 -4] -30.06653605750786]
Test Case: 652 | Input/Output: [[6.484836612594506 -89] -82.5151633874055]
Test Case: 653 | Input/Output: [[-40.63225419388421 22] -18.632254193884208]
Test Case: 654 | Input/Output: [[-52.98291909790169 -73] -125.98291909790169]
Test Case: 655 | Input/Output: [[-4.7149939628038595 28] 23.28500603719614]
Test Case: 656 | Input/Output: [[-61.00501956984423 -12] -73.00501956984422]
Test Case: 657 | Input/Output: [[-66.28231163168148 -64] -130.28231163168147]
Test Case: 658 | Input/Output: [[-38.066481967561195 -34] -72.0664819675612]
Test Case: 659 | Input/Output: [[-20.424214507286507 -99] -119.42421450728651]
Test Case: 660 | Input/Output: [[-27.683437217025514 -12] -39.683437217025514]
Test Case: 661 | Input/Output: [[71.12845908629936 -38] 33.12845908629936]
Test Case: 662 | Input/Output: [[16.552672674626095 10] 26.552672674626095]
Test Case: 663 | Input/Output: [[82.32967882113252 33] 115.32967882113252]
Test Case: 664 | Input/Output: [[11.04430646520558 35] 46.04430646520558]
Test Case: 665 | Input/Output: [[-24.01867862449633 26] 1.9813213755036685]
Test Case: 666 | Input/Output: [[-65.33281266305097 84] 18.667187336949027]
Test Case: 667 | Input/Output: [[-38.40736679379477 94] 55.59263320620523]
Test Case: 668 | Input/Output: [[-77.57398874575858 -42] -119.57398874575858]
Test Case: 669 | Input/Output: [[-83.75714019210771 10] -73.75714019210771]
Test Case: 670 | Input/Output: [[63.22700840130463 -64] -0.7729915986953699]
Test Case: 671 | Input/Output: [[44.658861160919315 53] 97.65886116091932]
Test Case: 672 | Input/Output: [[18.82496646219643 93] 111.82496646219643]
Test Case: 673 | Input/Output: [[52.27531883874988 -10] 42.27531883874988]
Test Case: 674 | Input/Output: [[-16.898662291208083 70] 53.10133770879192]
Test Case: 675 | Input/Output: [[73.20319741284459 -44] 29.203197412844588]
Test Case: 676 | Input/Output: [[-72.15600197439065 98] 25.843998025609352]
Test Case: 677 | Input/Output: [[98.40943948325156 -70] 28.40943948325156]
Test Case: 678 | Input/Output: [[-35.920206318393525 -15] -50.920206318393525]
Test Case: 679 | Input/Output: [[87.63809744505275 -43] 44.63809744505275]
Test Case: 680 | Input/Output: [[-47.3312805723626 90] 42.6687194276374]
Test Case: 681 | Input/Output: [[-40.947267598865736 -59] -99.94726759886574]
Test Case: 682 | Input/Output: [[38.552120018334705 68] 106.5521200183347]
Test Case: 683 | Input/Output: [[69.67260668275148 -28] 41.67260668275148]
Test Case: 684 | Input/Output: [[-26.7475844825137 -46] -72.7475844825137]
Test Case: 685 | Input/Output: [[67.99950029291966 38] 105.99950029291966]
Test Case: 686 | Input/Output: [[35.79261043228183 35] 70.79261043228183]
Test Case: 687 | Input/Output: [[85.94594870582424 -6] 79.94594870582424]
Test Case: 688 | Input/Output: [[-59.71504726130728 0] -59.71504726130728]
Test Case: 689 | Input/Output: [[-47.061438991196994 -59] -106.061438991197]
Test Case: 690 | Input/Output: [[-10.321553702390986 -97] -107.32155370239099]
Test Case: 691 | Input/Output: [[-56.013471432681364 71] 14.986528567318636]
Test Case: 692 | Input/Output: [[-43.8755612759566 39] -4.875561275956599]
Test Case: 693 | Input/Output: [[-8.33324481717574 -38] -46.33324481717574]
Test Case: 694 | Input/Output: [[77.31994736178316 -83] -5.680052638216836]
Test Case: 695 | Input/Output: [[-68.60358065575012 53] -15.603580655750122]
Test Case: 696 | Input/Output: [[-90.29078838927359 -4] -94.29078838927359]
Test Case: 697 | Input/Output: [[27.54406262029481 -16] 11.54406262029481]
Test Case: 698 | Input/Output: [[-11.786035121283177 -81] -92.78603512128318]
Test Case: 699 | Input/Output: [[-90.17329536619853 -26] -116.17329536619853]
Test Case: 700 | Input/Output: [[4.737194674930748 -39] -34.26280532506925]
Test Case: 701 | Input/Output: [[-99.6584971856932 85] -14.658497185693193]
Test Case: 702 | Input/Output: [[-46.20933710307531 -70] -116.20933710307531]
Test Case: 703 | Input/Output: [[-73.27987772775187 -54] -127.27987772775187]
Test Case: 704 | Input/Output: [[-44.72847796713633 -16] -60.72847796713633]
Test Case: 705 | Input/Output: [[-58.73104040143413 52] -6.731040401434129]
Test Case: 706 | Input/Output: [[22.65859016754439 86] 108.65859016754439]
Test Case: 707 | Input/Output: [[19.342514719223274 -38] -18.657485280776726]
Test Case: 708 | Input/Output: [[87.57886696324556 7] 94.57886696324556]
Test Case: 709 | Input/Output: [[-50.147615367646466 69] 18.852384632353534]
Test Case: 710 | Input/Output: [[-84.50029457061869 -57] -141.50029457061868]
Test Case: 711 | Input/Output: [[-43.8867742341531 -86] -129.8867742341531]
Test Case: 712 | Input/Output: [[-45.294764927574406 30] -15.294764927574406]
Test Case: 713 | Input/Output: [[-78.9942343101349 -15] -93.9942343101349]
Test Case: 714 | Input/Output: [[89.35026317384077 17] 106.35026317384077]
Test Case: 715 | Input/Output: [[-47.389731741117714 -92] -139.3897317411177]
Test Case: 716 | Input/Output: [[-62.41365430111365 -11] -73.41365430111365]
Test Case: 717 | Input/Output: [[14.701886967038519 85] 99.70188696703852]
Test Case: 718 | Input/Output: [[-59.171624256268586 59] -0.17162425626858635]
Test Case: 719 | Input/Output: [[-21.990421109908652 -60] -81.99042110990865]
Test Case: 720 | Input/Output: [[-10.880828083456336 90] 79.11917191654366]
Test Case: 721 | Input/Output: [[-30.74243985279803 -80] -110.74243985279803]
Test Case: 722 | Input/Output: [[-39.609747603827806 -41] -80.6097476038278]
Test Case: 723 | Input/Output: [[-52.174511844762584 -13] -65.17451184476258]
Test Case: 724 | Input/Output: [[-11.621747051881343 -82] -93.62174705188134]
Test Case: 725 | Input/Output: [[6.622861561652456 -48] -41.377138438347544]
Test Case: 726 | Input/Output: [[7.730637994690625 -84] -76.26936200530938]
Test Case: 727 | Input/Output: [[26.65674939356981 67] 93.65674939356981]
Test Case: 728 | Input/Output: [[-18.751158107425624 8] -10.751158107425624]
Test Case: 729 | Input/Output: [[-5.138254343181245 37] 31.861745656818755]
Test Case: 730 | Input/Output: [[69.7043654608045 56] 125.7043654608045]
Test Case: 731 | Input/Output: [[-90.022685045641 73] -17.022685045640998]
Test Case: 732 | Input/Output: [[60.40437150294329 -47] 13.404371502943292]
Test Case: 733 | Input/Output: [[-89.4825558624256 -44] -133.4825558624256]
Test Case: 734 | Input/Output: [[-95.16668342132819 8] -87.16668342132819]
Test Case: 735 | Input/Output: [[93.94866139370237 41] 134.94866139370237]
Test Case: 736 | Input/Output: [[-23.646276777321432 67] 43.35372322267857]
Test Case: 737 | Input/Output: [[91.3582266463431 -3] 88.3582266463431]
Test Case: 738 | Input/Output: [[73.32820136763237 -5] 68.32820136763237]
Test Case: 739 | Input/Output: [[1.4846110393424254 -39] -37.515388960657575]
Test Case: 740 | Input/Output: [[93.9054109701344 -23] 70.9054109701344]
Test Case: 741 | Input/Output: [[0.06118677400579031 -28] -27.93881322599421]
Test Case: 742 | Input/Output: [[21.900944677503787 -87] -65.09905532249621]
Test Case: 743 | Input/Output: [[-99.94461620680839 17] -82.94461620680839]
Test Case: 744 | Input/Output: [[14.325685859161098 -47] -32.6743141408389]
Test Case: 745 | Input/Output: [[71.45549111010928 41] 112.45549111010928]
Test Case: 746 | Input/Output: [[-39.42651764069262 -33] -72.42651764069262]
Test Case: 747 | Input/Output: [[-93.15911718009838 94] 0.8408828199016227]
Test Case: 748 | Input/Output: [[-3.6627070105543993 35] 31.3372929894456]
Test Case: 749 | Input/Output: [[-25.083121292270675 -8] -33.083121292270675]
Test Case: 750 | Input/Output: [[-96.21180147203674 -34] -130.21180147203674]
Test Case: 751 | Input/Output: [[37.9053489447349 18] 55.9053489447349]
Test Case: 752 | Input/Output: [[55.270276136823185 -3] 52.270276136823185]
Test Case: 753 | Input/Output: [[14.834738457248918 -14] 0.8347384572489176]
Test Case: 754 | Input/Output: [[-54.80582695077314 -78] -132.80582695077314]
Test Case: 755 | Input/Output: [[-37.483655248802236 -98] -135.48365524880222]
Test Case: 756 | Input/Output: [[38.318955698392955 -79] -40.681044301607045]
Test Case: 757 | Input/Output: [[-62.634978794487914 -73] -135.63497879448792]
Test Case: 758 | Input/Output: [[82.35776777540599 -23] 59.35776777540599]
Test Case: 759 | Input/Output: [[37.05792854182559 86] 123.05792854182559]
Test Case: 760 | Input/Output: [[80.6438198534623 -88] -7.356180146537696]
Test Case: 761 | Input/Output: [[-29.698770427169194 85] 55.301229572830806]
Test Case: 762 | Input/Output: [[-89.15449850894228 -32] -121.15449850894228]
Test Case: 763 | Input/Output: [[-54.63486456908959 -49] -103.63486456908959]
Test Case: 764 | Input/Output: [[-73.84441997927102 17] -56.844419979271024]
Test Case: 765 | Input/Output: [[83.15709741068048 -42] 41.15709741068048]
Test Case: 766 | Input/Output: [[-27.93028880219039 76] 48.06971119780961]
Test Case: 767 | Input/Output: [[70.18512910009215 74] 144.18512910009215]
Test Case: 768 | Input/Output: [[-25.25222424507649 57] 31.74777575492351]
Test Case: 769 | Input/Output: [[99.36840030382484 -16] 83.36840030382484]
Test Case: 770 | Input/Output: [[82.8332772041494 -56] 26.833277204149397]
Test Case: 771 | Input/Output: [[-3.215753108352075 -21] -24.215753108352075]
Test Case: 772 | Input/Output: [[49.65521388971729 -8] 41.65521388971729]
Test Case: 773 | Input/Output: [[26.51509386480933 -94] -67.48490613519067]
Test Case: 774 | Input/Output: [[3.514846552693612 22] 25.514846552693612]
Test Case: 775 | Input/Output: [[-80.3069263662418 5] -75.3069263662418]
Test Case: 776 | Input/Output: [[-4.128541884854343 -60] -64.12854188485434]
Test Case: 777 | Input/Output: [[-60.535443087925685 46] -14.535443087925685]
Test Case: 778 | Input/Output: [[41.65463882659617 -82] -40.34536117340383]
Test Case: 779 | Input/Output: [[-37.77792983903947 33] -4.777929839039473]
Test Case: 780 | Input/Output: [[70.61143886900626 2] 72.61143886900626]
Test Case: 781 | Input/Output: [[88.4481482585293 -92] -3.551851741470699]
Test Case: 782 | Input/Output: [[-37.04330278256383 72] 34.95669721743617]
Test Case: 783 | Input/Output: [[-52.63568344086838 -5] -57.63568344086838]
Test Case: 784 | Input/Output: [[-77.85924792352796 -28] -105.85924792352796]
Test Case: 785 | Input/Output: [[75.26054063087639 20] 95.26054063087639]
Test Case: 786 | Input/Output: [[36.02632671380729 -83] -46.97367328619271]
Test Case: 787 | Input/Output: [[-8.136528248761053 57] 48.86347175123895]
Test Case: 788 | Input/Output: [[95.45611371281845 -91] 4.45611371281845]
Test Case: 789 | Input/Output: [[80.32310154984623 75] 155.32310154984623]
Test Case: 790 | Input/Output: [[-66.00837406441049 -7] -73.00837406441049]
Test Case: 791 | Input/Output: [[-52.931041399853655 47] -5.931041399853655]
Test Case: 792 | Input/Output: [[39.08121885570196 79] 118.08121885570196]
Test Case: 793 | Input/Output: [[66.16322519521282 -26] 40.16322519521282]
Test Case: 794 | Input/Output: [[-39.223849667706375 -48] -87.22384966770638]
Test Case: 795 | Input/Output: [[33.01226154782094 -65] -31.98773845217906]
Test Case: 796 | Input/Output: [[-87.96808671754759 -18] -105.96808671754759]
Test Case: 797 | Input/Output: [[-87.16527737130224 -70] -157.16527737130224]
Test Case: 798 | Input/Output: [[-15.003881002680416 -50] -65.00388100268042]
Test Case: 799 | Input/Output: [[58.02277568312587 -40] 18.02277568312587]
Test Case: 800 | Input/Output: [[49.90238245658648 -8] 41.90238245658648]
Test Case: 801 | Input/Output: [[83.86257594683624 15] 98.86257594683624]
Test Case: 802 | Input/Output: [[-27.35165659310728 58] 30.64834340689272]
Test Case: 803 | Input/Output: [[-88.80576513220215 22] -66.80576513220215]
Test Case: 804 | Input/Output: [[26.94128192696445 -3] 23.94128192696445]
Test Case: 805 | Input/Output: [[-72.72492267129822 42] -30.724922671298216]
Test Case: 806 | Input/Output: [[60.982102110099305 56] 116.9821021100993]
Test Case: 807 | Input/Output: [[16.497171173819353 38] 54.49717117381935]
Test Case: 808 | Input/Output: [[99.14528987244105 81] 180.14528987244105]
Test Case: 809 | Input/Output: [[5.457666400706799 -46] -40.5423335992932]
Test Case: 810 | Input/Output: [[-49.8579101274689 -17] -66.8579101274689]
Test Case: 811 | Input/Output: [[71.19002984829586 -62] 9.190029848295865]
Test Case: 812 | Input/Output: [[-75.73026233033838 -37] -112.73026233033838]
Test Case: 813 | Input/Output: [[-93.59413969605667 89] -4.594139696056672]
Test Case: 814 | Input/Output: [[-1.0505936199224521 36] 34.94940638007755]
Test Case: 815 | Input/Output: [[-11.564258100225373 75] 63.43574189977463]
Test Case: 816 | Input/Output: [[-19.029515396059324 -63] -82.02951539605932]
Test Case: 817 | Input/Output: [[82.70963194988542 -73] 9.70963194988542]
Test Case: 818 | Input/Output: [[-74.28435254158103 -28] -102.28435254158103]
Test Case: 819 | Input/Output: [[99.73534283479856 14] 113.73534283479856]
Test Case: 820 | Input/Output: [[-54.97589742069555 -26] -80.97589742069556]
Test Case: 821 | Input/Output: [[19.975536440564937 32] 51.97553644056494]
Test Case: 822 | Input/Output: [[-46.382395577491465 -31] -77.38239557749147]
Test Case: 823 | Input/Output: [[-96.01048555513903 84] -12.010485555139027]
Test Case: 824 | Input/Output: [[-15.373452300433229 37] 21.62654769956677]
Test Case: 825 | Input/Output: [[63.93773123253382 84] 147.93773123253382]
Test Case: 826 | Input/Output: [[-76.7837714663959 72] -4.783771466395905]
Test Case: 827 | Input/Output: [[6.863433260052403 39] 45.8634332600524]
Test Case: 828 | Input/Output: [[70.06639215865187 48] 118.06639215865187]
Test Case: 829 | Input/Output: [[41.40046238014722 -74] -32.59953761985278]
Test Case: 830 | Input/Output: [[-87.45673121197603 60] -27.456731211976035]
Test Case: 831 | Input/Output: [[46.45514218237531 -58] -11.544857817624688]
Test Case: 832 | Input/Output: [[-16.518315520028295 -36] -52.518315520028295]
Test Case: 833 | Input/Output: [[27.41466005748228 76] 103.41466005748228]
Test Case: 834 | Input/Output: [[-27.45426080565538 -61] -88.45426080565538]
Test Case: 835 | Input/Output: [[-86.7956678290537 -13] -99.7956678290537]
Test Case: 836 | Input/Output: [[78.42076009389513 68] 146.42076009389513]
Test Case: 837 | Input/Output: [[-37.06837680117334 -42] -79.06837680117334]
Test Case: 838 | Input/Output: [[-15.174373697646786 -86] -101.17437369764679]
Test Case: 839 | Input/Output: [[-67.45336971865517 -53] -120.45336971865517]
Test Case: 840 | Input/Output: [[-18.111248278809413 72] 53.88875172119059]
Test Case: 841 | Input/Output: [[0.40264054059595367 -48] -47.597359459404046]
Test Case: 842 | Input/Output: [[45.67118170265948 -68] -22.32881829734052]
Test Case: 843 | Input/Output: [[-34.7880761978369 66] 31.2119238021631]
Test Case: 844 | Input/Output: [[94.8422645018081 42] 136.8422645018081]
Test Case: 845 | Input/Output: [[-87.56895302498981 -93] -180.5689530249898]
Test Case: 846 | Input/Output: [[-39.519171000071005 79] 39.480828999928995]
Test Case: 847 | Input/Output: [[-90.84733651038077 8] -82.84733651038077]
Test Case: 848 | Input/Output: [[92.34725548652344 21] 113.34725548652344]
Test Case: 849 | Input/Output: [[26.812772585429286 85] 111.81277258542929]
Test Case: 850 | Input/Output: [[38.26818530564802 -71] -32.73181469435198]
Test Case: 851 | Input/Output: [[-9.084063154568085 -55] -64.08406315456808]
Test Case: 852 | Input/Output: [[-12.281568222708401 28] 15.718431777291599]
Test Case: 853 | Input/Output: [[-78.76177050953362 -82] -160.76177050953362]
Test Case: 854 | Input/Output: [[-51.04161571287602 74] 22.958384287123977]
Test Case: 855 | Input/Output: [[92.8042000499006 -75] 17.8042000499006]
Test Case: 856 | Input/Output: [[-96.32323542451451 -87] -183.3232354245145]
Test Case: 857 | Input/Output: [[-42.124864236860304 89] 46.875135763139696]
Test Case: 858 | Input/Output: [[-86.24395758150419 80] -6.243957581504191]
Test Case: 859 | Input/Output: [[70.18359030980073 -81] -10.816409690199265]
Test Case: 860 | Input/Output: [[69.48042136459091 -7] 62.48042136459091]
Test Case: 861 | Input/Output: [[57.08516517655582 86] 143.08516517655582]
Test Case: 862 | Input/Output: [[-51.57733628450782 87] 35.42266371549218]
Test Case: 863 | Input/Output: [[-63.28564756490638 53] -10.285647564906377]
Test Case: 864 | Input/Output: [[29.110401847431945 63] 92.11040184743194]
Test Case: 865 | Input/Output: [[21.396397628967676 -59] -37.60360237103232]
Test Case: 866 | Input/Output: [[-95.54283892146051 66] -29.542838921460515]
Test Case: 867 | Input/Output: [[46.932861595646415 71] 117.93286159564641]
Test Case: 868 | Input/Output: [[-35.39016191170934 -33] -68.39016191170934]
Test Case: 869 | Input/Output: [[-84.89920299809361 6] -78.89920299809361]
Test Case: 870 | Input/Output: [[-54.73361919760102 -3] -57.73361919760102]
Test Case: 871 | Input/Output: [[20.24342047319425 -44] -23.75657952680575]
Test Case: 872 | Input/Output: [[-89.4044725467073 -92] -181.4044725467073]
Test Case: 873 | Input/Output: [[70.44495053686217 -53] 17.444950536862166]
Test Case: 874 | Input/Output: [[-34.06957730148655 3] -31.069577301486547]
Test Case: 875 | Input/Output: [[-28.52588050848881 36] 7.474119491511189]
Test Case: 876 | Input/Output: [[52.413019068461864 -21] 31.413019068461864]
Test Case: 877 | Input/Output: [[-57.846152334140434 97] 39.153847665859566]
Test Case: 878 | Input/Output: [[11.162713841056004 -38] -26.837286158943996]
Test Case: 879 | Input/Output: [[14.535954725795762 -40] -25.46404527420424]
Test Case: 880 | Input/Output: [[-56.01814985117783 -67] -123.01814985117784]
Test Case: 881 | Input/Output: [[-43.67646329680299 -90] -133.67646329680298]
Test Case: 882 | Input/Output: [[-4.088318379857995 -65] -69.088318379858]
Test Case: 883 | Input/Output: [[73.01351455929193 -11] 62.013514559291934]
Test Case: 884 | Input/Output: [[78.6776909963173 68] 146.6776909963173]
Test Case: 885 | Input/Output: [[-30.94380905777996 3] -27.94380905777996]
Test Case: 886 | Input/Output: [[16.313194495104625 63] 79.31319449510463]
Test Case: 887 | Input/Output: [[-67.6829910097567 -18] -85.6829910097567]
Test Case: 888 | Input/Output: [[1.3924431215659183 -63] -61.60755687843408]
Test Case: 889 | Input/Output: [[44.72875455273649 44] 88.72875455273649]
Test Case: 890 | Input/Output: [[83.12438507856271 -53] 30.12438507856271]
Test Case: 891 | Input/Output: [[-65.43164446185574 69] 3.56835553814426]
Test Case: 892 | Input/Output: [[95.5432248396279 -43] 52.5432248396279]
Test Case: 893 | Input/Output: [[82.1892456618271 -96] -13.810754338172899]
Test Case: 894 | Input/Output: [[99.3403463427561 -87] 12.340346342756106]
Test Case: 895 | Input/Output: [[-35.581426643934265 18] -17.581426643934265]
Test Case: 896 | Input/Output: [[37.43187383543801 29] 66.43187383543801]
Test Case: 897 | Input/Output: [[39.17342606207848 -78] -38.82657393792152]
Test Case: 898 | Input/Output: [[51.35570959076813 85] 136.35570959076813]
Test Case: 899 | Input/Output: [[-30.06085522585795 -67] -97.06085522585795]
Test Case: 900 | Input/Output: [[-67.0130488266349 -80] -147.0130488266349]
Test Case: 901 | Input/Output: [[-99.52898859531247 -95] -194.52898859531246]
Test Case: 902 | Input/Output: [[94.85316083787663 53] 147.85316083787663]
Test Case: 903 | Input/Output: [[-48.10753082799211 4] -44.10753082799211]
Test Case: 904 | Input/Output: [[9.053007256207763 44] 53.05300725620776]
Test Case: 905 | Input/Output: [[-73.28272133263873 13] -60.28272133263873]
Test Case: 906 | Input/Output: [[77.2555391097772 -90] -12.744460890222797]
Test Case: 907 | Input/Output: [[79.61403234707942 -37] 42.614032347079416]
Test Case: 908 | Input/Output: [[35.007357385718905 -34] 1.0073573857189047]
Test Case: 909 | Input/Output: [[-77.82174949013154 56] -21.821749490131538]
Test Case: 910 | Input/Output: [[-67.72232736605275 28] -39.72232736605275]
Test Case: 911 | Input/Output: [[-2.5457803574112603 8] 5.45421964258874]
Test Case: 912 | Input/Output: [[93.32544823197969 18] 111.32544823197969]
Test Case: 913 | Input/Output: [[-87.84658876952551 -69] -156.8465887695255]
Test Case: 914 | Input/Output: [[-26.344244927020227 -12] -38.34424492702023]
Test Case: 915 | Input/Output: [[90.0238110197246 -95] -4.976188980275396]
Test Case: 916 | Input/Output: [[61.16497629689147 97] 158.16497629689147]
Test Case: 917 | Input/Output: [[-75.45824683845996 0] -75.45824683845996]
Test Case: 918 | Input/Output: [[12.974290694198757 -79] -66.02570930580124]
Test Case: 919 | Input/Output: [[61.94007828374123 31] 92.94007828374123]
Test Case: 920 | Input/Output: [[49.174773882679716 -2] 47.174773882679716]
Test Case: 921 | Input/Output: [[12.031446261743952 40] 52.03144626174395]
Test Case: 922 | Input/Output: [[-92.69014906272632 -97] -189.69014906272633]
Test Case: 923 | Input/Output: [[88.77628852748012 7] 95.77628852748012]
Test Case: 924 | Input/Output: [[35.215139779642016 55] 90.21513977964202]
Test Case: 925 | Input/Output: [[-60.22752147865715 -92] -152.22752147865714]
Test Case: 926 | Input/Output: [[-22.688155336522357 27] 4.311844663477643]
Test Case: 927 | Input/Output: [[-70.756198476354 5] -65.756198476354]
Test Case: 928 | Input/Output: [[-99.29107534260326 -66] -165.29107534260328]
Test Case: 929 | Input/Output: [[-85.41028120776319 13] -72.41028120776319]
Test Case: 930 | Input/Output: [[-49.47516056027621 88] 38.52483943972379]
Test Case: 931 | Input/Output: [[-9.09608320283229 -92] -101.09608320283229]
Test Case: 932 | Input/Output: [[-18.388377680942014 -73] -91.38837768094201]
Test Case: 933 | Input/Output: [[77.90861069769761 -60] 17.90861069769761]
Test Case: 934 | Input/Output: [[-55.1999019109904 -70] -125.1999019109904]
Test Case: 935 | Input/Output: [[-28.96495389712264 -84] -112.96495389712264]
Test Case: 936 | Input/Output: [[18.77849784588807 64] 82.77849784588807]
Test Case: 937 | Input/Output: [[-76.95701107640215 -98] -174.95701107640215]
Test Case: 938 | Input/Output: [[34.51009398796597 -57] -22.489906012034027]
Test Case: 939 | Input/Output: [[65.53384288960527 15] 80.53384288960527]
Test Case: 940 | Input/Output: [[-37.39325683539523 -46] -83.39325683539522]
Test Case: 941 | Input/Output: [[-28.860721122642957 -58] -86.86072112264296]
Test Case: 942 | Input/Output: [[-26.958988790693667 42] 15.041011209306333]
Test Case: 943 | Input/Output: [[27.76931444137665 50] 77.76931444137665]
Test Case: 944 | Input/Output: [[77.98583842843007 54] 131.98583842843007]
Test Case: 945 | Input/Output: [[-57.606762527624866 -8] -65.60676252762487]
Test Case: 946 | Input/Output: [[17.044015417014833 65] 82.04401541701483]
Test Case: 947 | Input/Output: [[-58.39449777633035 -70] -128.39449777633035]
Test Case: 948 | Input/Output: [[-2.248871836255333 84] 81.75112816374467]
Test Case: 949 | Input/Output: [[41.92326575159183 -41] 0.9232657515918277]
Test Case: 950 | Input/Output: [[-54.279651732817456 89] 34.720348267182544]
Test Case: 951 | Input/Output: [[22.248515965971507 -53] -30.751484034028493]
Test Case: 952 | Input/Output: [[47.097793992335795 21] 68.0977939923358]
Test Case: 953 | Input/Output: [[-89.13448844704703 24] -65.13448844704703]
Test Case: 954 | Input/Output: [[86.0676482664029 92] 178.0676482664029]
Test Case: 955 | Input/Output: [[-60.96143752397205 -76] -136.96143752397205]
Test Case: 956 | Input/Output: [[-95.88221746121204 18] -77.88221746121204]
Test Case: 957 | Input/Output: [[21.129897034635817 98] 119.12989703463582]
Test Case: 958 | Input/Output: [[90.4801986606245 39] 129.4801986606245]
Test Case: 959 | Input/Output: [[-21.35595130946706 83] 61.64404869053294]
Test Case: 960 | Input/Output: [[-42.82155679225716 -90] -132.82155679225716]
Test Case: 961 | Input/Output: [[-45.54230645843678 63] 17.457693541563224]
Test Case: 962 | Input/Output: [[3.561409982923408 -17] -13.438590017076592]
Test Case: 963 | Input/Output: [[47.16412408047327 2] 49.16412408047327]
Test Case: 964 | Input/Output: [[74.62206577109103 11] 85.62206577109103]
Test Case: 965 | Input/Output: [[-4.975519190655774 39] 34.024480809344226]
Test Case: 966 | Input/Output: [[51.290723631043164 17] 68.29072363104316]
Test Case: 967 | Input/Output: [[94.52651771474444 76] 170.52651771474444]
Test Case: 968 | Input/Output: [[-54.88154654105222 52] -2.8815465410522165]
Test Case: 969 | Input/Output: [[-18.749570355767034 68] 49.250429644232966]
Test Case: 970 | Input/Output: [[-86.4660484339355 -89] -175.4660484339355]
Test Case: 971 | Input/Output: [[-61.3631524133444 20] -41.3631524133444]
Test Case: 972 | Input/Output: [[54.66990770167649 59] 113.6699077016765]
Test Case: 973 | Input/Output: [[36.67453587942731 -44] -7.32546412057269]
Test Case: 974 | Input/Output: [[68.68955302303482 -47] 21.68955302303482]
Test Case: 975 | Input/Output: [[-92.54350854425608 98] 5.456491455743915]
Test Case: 976 | Input/Output: [[29.073764023098363 83] 112.07376402309836]
Test Case: 977 | Input/Output: [[38.734900883422 71] 109.734900883422]
Test Case: 978 | Input/Output: [[38.471410492273094 16] 54.471410492273094]
Test Case: 979 | Input/Output: [[-97.10901325179269 39] -58.10901325179269]
Test Case: 980 | Input/Output: [[-20.989209219161495 92] 71.0107907808385]
Test Case: 981 | Input/Output: [[17.89891839888324 -55] -37.10108160111676]
Test Case: 982 | Input/Output: [[-36.660054000480024 -66] -102.66005400048002]
Test Case: 983 | Input/Output: [[11.045255003412066 -72] -60.954744996587934]
Test Case: 984 | Input/Output: [[-66.36073308545052 90] 23.63926691454948]
Test Case: 985 | Input/Output: [[13.661813988613318 25] 38.66181398861332]
Test Case: 986 | Input/Output: [[98.37848834688509 95] 193.3784883468851]
Test Case: 987 | Input/Output: [[-42.40011267764417 -29] -71.40011267764416]
Test Case: 988 | Input/Output: [[95.83762008809111 78] 173.83762008809111]
Test Case: 989 | Input/Output: [[27.843318863816464 27] 54.843318863816464]
Test Case: 990 | Input/Output: [[41.077182789585265 89] 130.07718278958527]
Test Case: 991 | Input/Output: [[55.48134493546942 -82] -26.518655064530577]
Test Case: 992 | Input/Output: [[17.39207733498425 38] 55.39207733498425]
Test Case: 993 | Input/Output: [[-76.03335324272686 -2] -78.03335324272686]
Test Case: 994 | Input/Output: [[78.30428737673333 96] 174.30428737673333]
Test Case: 995 | Input/Output: [[-10.059884504251542 -14] -24.059884504251542]
Test Case: 996 | Input/Output: [[-6.980348929028949 -37] -43.98034892902895]
Test Case: 997 | Input/Output: [[38.85326991901502 -74] -35.14673008098498]
Test Case: 998 | Input/Output: [[-9.830991347372532 -36] -45.83099134737253]
Test Case: 999 | Input/Output: [[-94.58906886463501 99] 4.41093113536499]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -128 85 118 2 109 -13 19 41 77 53 109 -81 -18 -14 -81 72
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 56023.0
Test mean error for best: 28.01150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -28.1014194841
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -51.3409907826
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: -58.2743984463
Correct output: 8.9356530487   | Program output: -13.0643469513
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -100.3737677014
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 11.0363157976 
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: -51.7031889791
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: -55.1596322192
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -70.6928280664
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: -61.6841130294
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_mod} {:instruction float_flush} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction integer_yankdup} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_stackdepth integer_min integer_mod float_flush integer_swap integer_yankdup float_mult float_mult float_sin integer_yankdup in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [76.0 13 49.0 2 40.0 1 64.0 3 61.0 2 61.0 12 22.0 12 81.0 12 45.0 2 39.0 2 10.0 1 56.0 3 54.0 11 22.0 2 50.0 1 68.0 2 62.0 12 32.0 3 37.0 2 46.0 2 62.0 3 24.0 2 61.0 2 92.0 13 81.0 12]
Total: 1427.0
Mean: 28.54
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 17866.7861299
Median total errors in population: 25331.0
Error averages by case: (698.6781669999997 13.269 713.6070626000001 13.132 712.1689258000013 13.053 714.4977744999968 12.383 695.3120396999991 10.703 690.8519843000004 12.342 686.2515569999996 12.376 702.0419569999989 14.102 697.3914381000027 11.573 725.8179354999982 14.0 692.3220922000005 12.32 708.5366274000015 13.162 694.4790707000002 12.125 705.9607567000018 12.356 690.6376094999998 12.322 716.5106340999972 13.172 692.5873215000004 13.038 705.8995879000013 13.051 691.4647086000011 13.169 698.7759498000005 12.472 724.1266004000003 13.974 690.4755909999994 12.513 699.4721244999989 12.533 698.4249054000001 13.041 700.4337087000001 13.879)
Error minima by case: (1.1014 9 0.9269 1 0.659 1 0.6933 3 0.0051 2 0.2744 7 1.0643 8 1.0642 9 0.1809 2 15.3738 2 0.0215 1 1.1809 3 0.0752 7 0.8907 2 3.0363 1 1.0655 1 0.2968 8 22.8191 2 0.1596 2 0.2917 2 4.6928 3 4.1071 2 1.2228 2 5.3159 8 0.1933 8)
Average genome size in population (length): 49.518
Average program size in population (points): 50.518
Average percent parens in population: 0.044
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.318
Error (vector) diversity:			 0.341
Behavioral diversity:				 0.359
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1242049
--- Timings ---
Current time: 1529615129715 milliseconds
Total Time:           3.1 seconds
Initialization:       0.1 seconds,  3.6%
Reproduction:         0.5 seconds, 17.4%
Fitness Testing:      2.5 seconds, 79.0%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 56023.0
Test mean error for best: 28.01150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -28.1014194841
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -51.3409907826
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: -58.2743984463
Correct output: 8.9356530487   | Program output: -13.0643469513
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -100.3737677014
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 11.0363157976 
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: -51.7031889791
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: -55.1596322192
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -70.6928280664
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: -61.6841130294
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_mod} {:instruction float_flush} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction integer_yankdup} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_stackdepth integer_min integer_mod float_flush integer_swap integer_yankdup float_mult float_mult float_sin integer_yankdup in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [76.0 13 49.0 2 40.0 1 64.0 3 61.0 2 61.0 12 22.0 12 81.0 12 45.0 2 39.0 2 10.0 1 56.0 3 54.0 11 22.0 2 50.0 1 68.0 2 62.0 12 32.0 3 37.0 2 46.0 2 62.0 3 24.0 2 61.0 2 92.0 13 81.0 12]
Total: 1427.0
Mean: 28.54
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 6159.326513400001
Median total errors in population: 1748.3957000000003
Error averages by case: (227.77486769999956 12.751 250.2068872000009 10.257 250.85593439999764 10.036 269.9376443000005 9.809 225.85100320000032 8.355 213.39872190000014 11.753 198.19696380000002 11.839 240.07822220000043 13.356 222.0752695000001 9.112 275.27467150000035 11.08 209.87464699999884 9.67 258.32272159999883 10.357 223.09107369999973 11.364 240.29703119999948 9.658 221.04891650000195 9.654 258.68175990000094 10.18 215.63548480000043 12.216 248.77489380000176 10.111 210.04926860000123 10.311 233.868626700001 9.902 275.22991829999876 11.018 216.27476000000118 9.98 237.58196839999906 9.98 231.38012309999965 12.235 237.75213410000072 12.829)
Error minima by case: (1.1014 9 0.9269 1 1.341 1 0.6933 2 0.0051 2 0.2744 7 1.0643 7 1.0642 9 1.1538 2 15.3738 2 0.0215 1 17.1947 3 0.0752 7 0.9448 2 3.0363 1 3.31 1 0.0861 8 24.7621 2 0.1596 2 0.1692 2 4.6928 3 5.3475 1 1.2228 2 5.3159 9 0.1933 8)
Average genome size in population (length): 60.603
Average program size in population (points): 61.603
Average percent parens in population: 0.020
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.511
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.786
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.786
Total error diversity:				 0.281
Error (vector) diversity:			 0.295
Behavioral diversity:				 0.321
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2762399
--- Timings ---
Current time: 1529615133419 milliseconds
Total Time:           7.0 seconds
Initialization:       0.1 seconds,  1.6%
Reproduction:         2.4 seconds, 33.8%
Fitness Testing:      4.1 seconds, 58.5%
Report:               0.4 seconds,  6.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 56023.0
Test mean error for best: 28.01150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -28.1014194841
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -51.3409907826
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: -58.2743984463
Correct output: 8.9356530487   | Program output: -13.0643469513
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -100.3737677014
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 11.0363157976 
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: -51.7031889791
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: -55.1596322192
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -70.6928280664
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: -61.6841130294
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_mod} {:instruction float_flush} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction integer_yankdup} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_stackdepth integer_min integer_mod float_flush integer_swap integer_yankdup float_mult float_mult float_sin integer_yankdup in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [76.0 13 49.0 2 40.0 1 64.0 3 61.0 2 61.0 12 22.0 12 81.0 12 45.0 2 39.0 2 10.0 1 56.0 3 54.0 11 22.0 2 50.0 1 68.0 2 62.0 12 32.0 3 37.0 2 46.0 2 62.0 3 24.0 2 61.0 2 92.0 13 81.0 12]
Total: 1427.0
Mean: 28.54
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 5163.6281569
Median total errors in population: 1454.0
Error averages by case: (211.81699780000037 13.858 198.54933880000044 5.594 192.7955063999994 5.534 210.28653050000025 5.829 206.22765000000018 4.878 201.67806649999983 12.824 168.5070435999999 12.875 221.45453319999987 13.871 193.78042159999998 5.17 199.31239560000012 6.492 164.46343209999984 5.328 202.98713339999983 6.085 200.3531351000002 12.101 180.43533219999983 5.098 190.98140420000047 5.164 213.48467640000018 5.029 202.04604299999983 13.032 185.38498280000042 5.423 185.1016596000003 5.735 191.84923510000016 5.432 212.18074099999947 6.537 174.31478280000024 5.45 208.28487869999972 5.337 226.59097730000025 13.403 221.85625919999976 12.826)
Error minima by case: (2.0442 9 9.7946 1 7.341 1 27.1612 2 0.0051 2 0.2744 8 1.1331 8 5.9358 9 3.8922 2 39.0 2 0.0215 1 25.2732 2 1.1892 9 12.5078 2 11.0935 1 27.9345 1 0.5492 8 28.0 1 13.023 2 1.1692 2 4.6928 3 13.4048 1 8.9661 2 8.3801 9 6.8067 9)
Average genome size in population (length): 57.171
Average program size in population (points): 58.171
Average percent parens in population: 0.021
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.991
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.137
Error (vector) diversity:			 0.147
Behavioral diversity:				 0.159
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4197999
--- Timings ---
Current time: 1529615137012 milliseconds
Total Time:          10.4 seconds
Initialization:       0.1 seconds,  1.1%
Reproduction:         3.8 seconds, 36.0%
Fitness Testing:      5.9 seconds, 56.2%
Report:               0.7 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 56023.0
Test mean error for best: 28.01150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -28.1014194841
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -51.3409907826
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: -58.2743984463
Correct output: 8.9356530487   | Program output: -13.0643469513
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -100.3737677014
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 11.0363157976 
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: -51.7031889791
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: -55.1596322192
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -70.6928280664
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: -61.6841130294
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_mod} {:instruction float_flush} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction integer_yankdup} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_stackdepth integer_min integer_mod float_flush integer_swap integer_yankdup float_mult float_mult float_sin integer_yankdup in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [76.0 13 49.0 2 40.0 1 64.0 3 61.0 2 61.0 12 22.0 12 81.0 12 45.0 2 39.0 2 10.0 1 56.0 3 54.0 11 22.0 2 50.0 1 68.0 2 62.0 12 32.0 3 37.0 2 46.0 2 62.0 3 24.0 2 61.0 2 92.0 13 81.0 12]
Total: 1427.0
Mean: 28.54
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 3154.395552199999
Median total errors in population: 1432.0
Error averages by case: (140.98452760000004 13.114 119.2224049 2.909 111.9395524 2.789 128.9883478 3.787 129.46854869999999 2.798 126.63090620000001 12.265 90.15188200000001 12.226 148.98171580000002 13.07 115.7534507 2.869 111.908221 3.639 83.61555149999998 2.68 121.63332700000001 3.87 123.9862364 11.311 95.0314371 2.879 115.3413211 2.636 136.8143533 2.459 127.65138349999998 12.193 100.4013729 3.283 104.83875409999999 3.022 111.87176050000001 2.923 132.5906053 4.0 91.50424070000003 2.914 129.8343123 2.905 155.3181635 13.085 148.0031759 12.304)
Error minima by case: (42.8986 10 48.1733 1 9.4119 1 37.0 2 0.0051 2 1.7256 8 3.9357 10 11.2123 11 3.8462 2 39.0 2 10.0 1 45.0 2 2.5517 8 22.0 2 46.0 1 68.0 1 5.2968 9 28.0 2 10.8404 2 31.4402 2 57.3871 3 20.0 1 21.2228 2 25.3159 8 23.0529 10)
Average genome size in population (length): 42.391
Average program size in population (points): 43.391
Average percent parens in population: 0.028
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.46775
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 154
Genome diversity (% unique Plush genomes):	 0.543
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 154
Syntactic diversity (% unique Push programs):	 0.543
Total error diversity:				 0.045
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5261174
--- Timings ---
Current time: 1529615140000 milliseconds
Total Time:          13.5 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.0 seconds, 37.1%
Fitness Testing:      7.3 seconds, 53.9%
Report:               1.1 seconds,  8.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 57832.64700000004
Test mean error for best: 28.91632
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 72.0          
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -44.0         
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: 57.0          
Correct output: 8.9356530487   | Program output: 18.0          
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -43.0         
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 46.0          
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: 58.0          
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: 33.0          
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -66.0         
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: 88.0          
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [24.1014 11 49.0 2 47.341 11 64.0 3 61.0 2 54.2744 10 9.0643 10 81.0 12 45.0 2 96.3738 11 10.0 1 56.0 3 54.0 11 22.0 2 15.0363 11 68.0 2 47.7032 11 32.0 3 51.1596 13 46.0 2 66.6928 12 24.0 2 61.0 2 57.6841 10 81.0 12]
Total: 1394.4309
Mean: 27.888618
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 2609.4338216999986
Median total errors in population: 1427.0
Error averages by case: (119.27055010000002 12.866 98.77132139999999 2.716 90.5986977 2.04 108.02600650000001 3.464 108.90299230000001 2.463 104.2697751 12.009 68.36690480000001 11.992 127.92880720000001 12.296 93.7930312 2.507 91.16247889999997 2.917 60.7027512 1.748 100.39158799999998 3.515 102.2881658 11.102 72.21712450000001 2.548 94.3769383 1.76 116.55093120000002 2.758 105.3811542 11.924 77.60316979999999 3.459 82.50359569999998 2.803 90.77610460000001 2.529 111.9843659 3.788 69.84597270000002 2.519 108.97562300000001 2.547 133.5771909 12.883 127.89058069999999 12.125)
Error minima by case: (24.1014 9 48.0 1 39.0 1 36.0 2 0.1673 1 1.7256 8 4.5821 8 34.876 11 7.8462 2 38.0 2 9.0 1 44.0 2 1.5517 10 21.0 2 14.0363 1 67.0 1 4.0583 9 30.0 2 15.7314 2 44.0 2 61.0 3 22.0 2 24.129 1 15.9607 9 22.3103 10)
Average genome size in population (length): 27.47
Average program size in population (points): 28.47
Average percent parens in population: 0.037
Minimum age in population: 4.0
Maximum age in population: 7.875
Average age in population: 5.8915
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 400
Genome diversity (% unique Plush genomes):	 0.411
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 400
Syntactic diversity (% unique Push programs):	 0.411
Total error diversity:				 0.026
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5948224
--- Timings ---
Current time: 1529615142728 milliseconds
Total Time:          16.4 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.2 seconds, 38.0%
Fitness Testing:      8.6 seconds, 52.9%
Report:               1.4 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 51674.45740000003
Test mean error for best: 25.83723
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -51.3409907826
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -100.3737677014
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 11.0363157976 
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -70.6928280664
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 49.0 2 40.0 1 64.0 3 61.0 2 4.0889 11 10.0227 10 81.0 12 45.0 2 39.0 2 10.0 1 56.0 3 54.0 11 22.0 2 50.0 1 68.0 2 12.6016 9 32.0 3 15.7314 10 46.0 2 62.0 3 24.0 2 61.0 2 31.4219 11 81.0 12]
Total: 1198.7502000000002
Mean: 23.975004
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2541.082658299999
Median total errors in population: 1427.0
Error averages by case: (117.7741179 12.936 94.66105910000002 2.774 86.54961570000002 2.014 107.2811372 3.472 104.19369729999998 2.454 103.47628899999997 12.012 67.40111879999996 11.974 123.26644839999999 12.181 88.9879067 2.504 87.764326 2.956 55.88890560000001 1.61 99.6385272 3.523 97.5301007 11.123 67.27399290000001 2.528 93.08883890000006 1.772 112.51430160000001 2.767 104.46518440000006 12.011 76.8256664 3.519 81.96071719999999 2.949 90.0131505 2.541 107.91718190000003 3.875 69.0607977 2.526 104.2713939 2.533 132.4006176 12.929 123.25356570000001 12.141)
Error minima by case: (23.1014 8 36.0731 1 39.0 1 36.0 2 0.02 1 1.9776 8 7.2697 10 33.9376 10 8.9775 2 38.0 2 9.0 1 44.0 2 1.1892 9 21.0 2 14.0363 1 26.9345 1 5.9085 9 30.0 2 9.1596 2 44.0 2 61.0 3 22.0 2 25.2559 1 14.1106 9 21.2001 9)
Average genome size in population (length): 24.892
Average program size in population (points): 25.892
Average percent parens in population: 0.039
Minimum age in population: 5.25
Maximum age in population: 9.125
Average age in population: 7.36375
Median age in population: 7.375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 374
Genome diversity (% unique Plush genomes):	 0.407
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 374
Syntactic diversity (% unique Push programs):	 0.407
Total error diversity:				 0.028
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6570599
--- Timings ---
Current time: 1529615145714 milliseconds
Total Time:          19.3 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         7.6 seconds, 39.7%
Fitness Testing:      9.9 seconds, 51.6%
Report:               1.6 seconds,  8.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 51674.45740000003
Test mean error for best: 25.83723
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -51.3409907826
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -100.3737677014
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 11.0363157976 
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -70.6928280664
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 49.0 2 40.0 1 64.0 3 61.0 2 4.0889 11 10.0227 10 81.0 12 45.0 2 39.0 2 10.0 1 56.0 3 54.0 11 22.0 2 50.0 1 68.0 2 12.6016 9 32.0 3 15.7314 10 46.0 2 62.0 3 24.0 2 61.0 2 31.4219 11 81.0 12]
Total: 1198.7502000000002
Mean: 23.975004
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2662.312456199999
Median total errors in population: 1427.0
Error averages by case: (117.73630909999996 12.706 99.2489102 2.78 91.74812250000002 2.897 111.8264067 3.541 109.82693459999999 2.501 107.61219869999987 11.772 71.20773759999985 11.752 128.74576799999997 12.136 94.70808089999998 2.554 96.97846380000009 3.776 61.6167577 1.685 104.22880029999999 3.592 103.20416869999998 11.065 73.07147099999999 2.599 94.66392650000023 2.722 117.04378450000003 2.783 107.92235100000028 11.87 81.59546699999999 3.59 88.11443369999988 4.01 94.648613 2.603 112.65006680000013 4.69 73.89683310000002 2.597 109.877736 2.601 133.83749199999994 12.622 128.7456228 12.112)
Error minima by case: (17.5103 9 35.0731 1 39.0 1 37.0 2 0.6722 1 1.9776 8 8.059 10 35.4466 9 8.9775 2 38.0 2 9.0 1 40.016 2 2.9867 8 21.0 2 14.0363 1 25.9345 1 9.3911 9 27.7993 2 15.7314 2 4.088 2 61.0 3 22.0 2 25.2559 1 0.0724 7 22.5589 9)
Average genome size in population (length): 24.104
Average program size in population (points): 25.104
Average percent parens in population: 0.041
Minimum age in population: 6.75
Maximum age in population: 10.53125
Average age in population: 8.889375
Median age in population: 8.9375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 260
Genome diversity (% unique Plush genomes):	 0.466
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 260
Syntactic diversity (% unique Push programs):	 0.466
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7173249
--- Timings ---
Current time: 1529615148463 milliseconds
Total Time:          22.0 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         8.8 seconds, 40.2%
Fitness Testing:     11.2 seconds, 50.9%
Report:               1.8 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 51674.45740000003
Test mean error for best: 25.83723
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -51.3409907826
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -100.3737677014
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 11.0363157976 
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -70.6928280664
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 49.0 2 40.0 1 64.0 3 61.0 2 4.0889 11 10.0227 10 81.0 12 45.0 2 39.0 2 10.0 1 56.0 3 54.0 11 22.0 2 50.0 1 68.0 2 12.6016 9 32.0 3 15.7314 10 46.0 2 62.0 3 24.0 2 61.0 2 31.4219 11 81.0 12]
Total: 1198.7502000000002
Mean: 23.975004
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2680.9435281000015
Median total errors in population: 1394.4309
Error averages by case: (99.62682769999986 11.841 100.31897689999997 2.779 95.6154761000002 6.506 112.22680960000002 3.633 111.71791429999996 2.609 105.58185279999927 11.025 68.63870689999938 10.947 130.07702259999996 12.169 96.7490315 2.654 119.13047610000046 7.07 63.79308860000001 1.786 104.66031389999998 3.705 105.05533569999997 11.09 76.04578470000003 2.722 81.34544310000055 6.507 117.80754800000004 2.8 103.29376350000108 11.379 82.65991259999998 3.692 95.52992399999971 8.49 94.82894920000001 2.742 115.21639910000061 7.948 74.41539290000003 2.728 112.16283600000003 2.71 121.05975799999948 11.44 130.26798430000002 12.146)
Error minima by case: (23.1014 10 36.0731 1 40.0 1 36.0 2 0.8327 2 3.4548 8 8.0643 10 34.9954 10 10.4923 2 39.0 2 10.0 1 44.0 2 2.5389 9 22.0 2 12.0363 1 26.9345 2 10.7637 7 31.0 2 15.4676 2 44.1692 2 62.0 3 23.0 2 26.2712 2 31.322 10 22.0771 11)
Average genome size in population (length): 20.598
Average program size in population (points): 21.598
Average percent parens in population: 0.049
Minimum age in population: 8.0625
Maximum age in population: 12.25
Average age in population: 10.4275625
Median age in population: 10.46875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 122
Genome diversity (% unique Plush genomes):	 0.395
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 122
Syntactic diversity (% unique Push programs):	 0.395
Total error diversity:				 0.027
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 7688249
--- Timings ---
Current time: 1529615151234 milliseconds
Total Time:          24.8 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.2 seconds, 41.2%
Fitness Testing:     12.3 seconds, 49.8%
Report:               2.1 seconds,  8.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 51438.32540000002
Test mean error for best: 25.71916
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -3.9851462605 
Correct output: -89.0730770721 | Program output: -41.0730770721
Correct output: -91.3409907826 | Program output: -52.3409907826
Correct output: 151.161161036  | Program output: 86.161161036  
Correct output: 0.005061137    | Program output: 60.005061137  
Correct output: 2.7256015537   | Program output: -2.3632619929 
Correct output: 8.9356530487   | Program output: -2.0870547493 
Correct output: -35.9357757377 | Program output: 44.0642242623 
Correct output: 8.8462429043   | Program output: 52.8462429043 
Correct output: -139.3737677014 | Program output: -101.3737677014
Correct output: 15.9086340651  | Program output: 24.9086340651 
Correct output: 133.2732407891 | Program output: 76.2732407891 
Correct output: -3.075170532   | Program output: 49.924829468  
Correct output: 69.5371683437  | Program output: 90.5371683437 
Correct output: 61.0363157976  | Program output: 10.0363157976 
Correct output: -98.9344588134 | Program output: -31.9344588134
Correct output: 10.2968110209  | Program output: -3.3048106211 
Correct output: 121.0565638189 | Program output: 88.0565638189 
Correct output: -18.1596322192 | Program output: -3.4281826695 
Correct output: 89.1692271714  | Program output: 42.1692271714 
Correct output: -132.6928280664 | Program output: -71.6928280664
Correct output: 63.3475368658  | Program output: 38.3475368658 
Correct output: 26.2227587776  | Program output: 86.2227587776 
Correct output: 30.3158869706  | Program output: -2.1060033364 
Correct output: -23.1932775279 | Program output: 56.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_shove} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult integer_shove float_sin float_dup_times in1 float_max float_dec float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [51.8837 10 48.0 2 39.0 2 65.0 3 60.0 1 5.0889 10 11.0227 10 80.0 13 44.0 2 38.0 2 9.0 2 57.0 3 53.0 11 21.0 2 51.0 2 67.0 2 13.6016 9 33.0 3 14.7314 10 47.0 2 61.0 3 25.0 2 60.0 1 32.4219 11 80.0 12]
Total: 1196.7502000000002
Mean: 23.935003
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2827.6483175000144
Median total errors in population: 1394.4309
Error averages by case: (94.31313809999997 10.903 108.6967734 2.997 104.6848283000002 7.71 122.67334050000002 3.741 119.29998249999998 2.668 97.61122439999984 10.521 70.58409089999945 10.365 137.69123099999996 12.181 104.3991137 2.745 133.49007580000054 8.247 71.70717110000001 1.895 115.1782145 3.832 112.66454149999996 11.086 83.5045408 2.791 88.08443830000067 7.757 126.03470420000004 3.008 96.34703000000121 10.583 92.9048032 3.815 98.64835219999965 11.641 105.3568199 2.863 124.20753170000083 9.015 84.31263060000002 2.866 119.56428340000004 2.789 108.97226009999957 10.735 137.8071974 12.156)
Error minima by case: (8.6242 9 35.0731 1 39.0 1 62.0 2 59.0 1 1.7256 7 7.0643 9 48.0642 11 43.0 2 38.0 2 8.0 1 48.1744 3 3.5967 9 20.0 1 4.5135 1 25.9345 1 9.2968 9 30.0 2 14.7314 2 4.0704 2 61.0 3 6.8247 2 59.0 1 26.2069 9 60.8067 11)
Average genome size in population (length): 18.29
Average program size in population (points): 19.29
Average percent parens in population: 0.054
Minimum age in population: 9.5625
Maximum age in population: 13.7109375
Average age in population: 12.0492109375
Median age in population: 12.07421875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 213
Genome diversity (% unique Plush genomes):	 0.296
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 213
Syntactic diversity (% unique Push programs):	 0.296
Total error diversity:				 0.048
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 8145574
--- Timings ---
Current time: 1529615153840 milliseconds
Total Time:          27.4 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.4 seconds, 41.8%
Fitness Testing:     13.4 seconds, 48.9%
Report:               2.4 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 51668.43660000002
Test mean error for best: 25.83422
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -1.8169471195 
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -51.3409907826
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: -0.7447018508 
Correct output: 8.9356530487   | Program output: -0.3104180856 
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -100.3737677014
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 11.0363157976 
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: -1.0283160216 
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: -1.0784225735 
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -70.6928280664
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: -0.3447534249 
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times float_frominteger integer_min float_mult float_mult float_sin float_inc in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [49.7155 10 49.0 2 40.0 1 64.0 3 61.0 2 3.4703 8 9.2461 11 81.0 12 45.0 2 39.0 2 10.0 1 56.0 3 54.0 11 22.0 2 50.0 1 68.0 2 11.3251 9 32.0 3 17.0812 10 46.0 2 62.0 3 24.0 2 61.0 2 30.6606 10 81.0 12]
Total: 1192.4988
Mean: 23.849976
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2179.0117771000064
Median total errors in population: 1198.7502000000002
Error averages by case: (83.3569038000001 10.349 89.54169329999996 2.843 81.92032850000007 2.583 100.30469449999997 3.541 99.13032539999999 2.466 46.3805856000002 10.965 46.020585500000514 10.277 118.2696903 12.123 84.0024825 2.52 86.36110880000001 3.511 50.7818206 1.631 92.39547269999998 3.593 92.46681729999997 11.055 62.74331529999999 2.552 81.79410600000007 2.541 107.29240750000005 2.859 52.92616710000101 9.499 69.6807831 3.596 55.119716899999354 10.134 82.00329890000002 2.617 103.55905540000009 4.38 60.7034209 2.628 99.3960683 2.544 70.64303120000064 11.098 118.21889770000001 12.094)
Error minima by case: (22.1014 9 36.0731 1 38.0 1 62.0 2 0.7408 1 2.0889 8 7.0643 9 32.1722 9 9.8376 2 37.0 2 8.0 1 51.8922 3 0.0171 8 20.0 1 14.0363 1 26.9345 1 10.6016 8 30.0 2 13.7314 2 7.7882 2 60.0 2 18.0335 2 25.9675 1 29.4219 8 19.8055 8)
Average genome size in population (length): 19.147
Average program size in population (points): 20.147
Average percent parens in population: 0.050
Minimum age in population: 11.21875
Maximum age in population: 15.41015625
Average age in population: 13.6557109375
Median age in population: 13.669921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 522
Genome diversity (% unique Plush genomes):	 0.292
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 522
Syntactic diversity (% unique Push programs):	 0.292
Total error diversity:				 0.064
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 8624274
--- Timings ---
Current time: 1529615156704 milliseconds
Total Time:          30.3 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.7 seconds, 41.9%
Fitness Testing:     14.7 seconds, 48.7%
Report:               2.7 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 51668.43660000002
Test mean error for best: 25.83422
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -1.8169471195 
Correct output: -89.0730770721 | Program output: -40.0730770721
Correct output: -91.3409907826 | Program output: -51.3409907826
Correct output: 151.161161036  | Program output: 87.161161036  
Correct output: 0.005061137    | Program output: 61.005061137  
Correct output: 2.7256015537   | Program output: -0.7447018508 
Correct output: 8.9356530487   | Program output: -0.3104180856 
Correct output: -35.9357757377 | Program output: 45.0642242623 
Correct output: 8.8462429043   | Program output: 53.8462429043 
Correct output: -139.3737677014 | Program output: -100.3737677014
Correct output: 15.9086340651  | Program output: 25.9086340651 
Correct output: 133.2732407891 | Program output: 77.2732407891 
Correct output: -3.075170532   | Program output: 50.924829468  
Correct output: 69.5371683437  | Program output: 91.5371683437 
Correct output: 61.0363157976  | Program output: 11.0363157976 
Correct output: -98.9344588134 | Program output: -30.9344588134
Correct output: 10.2968110209  | Program output: -1.0283160216 
Correct output: 121.0565638189 | Program output: 89.0565638189 
Correct output: -18.1596322192 | Program output: -1.0784225735 
Correct output: 89.1692271714  | Program output: 43.1692271714 
Correct output: -132.6928280664 | Program output: -70.6928280664
Correct output: 63.3475368658  | Program output: 39.3475368658 
Correct output: 26.2227587776  | Program output: 87.2227587776 
Correct output: 30.3158869706  | Program output: -0.3447534249 
Correct output: -23.1932775279 | Program output: 57.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times float_frominteger integer_min float_mult float_mult float_sin float_inc in1 float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [49.7155 10 49.0 2 40.0 1 64.0 3 61.0 2 3.4703 8 9.2461 11 81.0 12 45.0 2 39.0 2 10.0 1 56.0 3 54.0 11 22.0 2 50.0 1 68.0 2 11.3251 9 32.0 3 17.0812 10 46.0 2 62.0 3 24.0 2 61.0 2 30.6606 10 81.0 12]
Total: 1192.4988
Mean: 23.849976
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 1939.4806637000065
Median total errors in population: 1198.7502000000002
Error averages by case: (77.9088757000002 10.257 79.8060236 2.688 71.63894710000001 1.85 91.45027549999999 3.396 89.9579111 2.301 34.69065349999994 10.903 38.21678930000041 10.247 109.2402014 12.104 74.5473937 2.352 72.8310925 2.756 40.770271799999996 1.469 83.5371953 3.431 83.19072220000001 11.037 52.68928629999999 2.383 76.2934 1.622 97.78814000000004 2.699 42.42661680000086 9.312 60.5077724 3.438 44.577503099999305 9.926 73.27206290000001 2.446 93.59871509999998 3.668 51.91342320000001 2.452 90.0850898 2.362 61.01727990000072 11.113 109.2530215 12.06)
Error minima by case: (6.5737 9 36.0731 1 38.0 1 63.0 2 0.7408 1 2.0889 7 8.0227 8 34.876 11 9.8376 2 37.0 2 8.0 1 55.0 3 1.5517 9 20.0 1 13.0363 1 26.9345 2 10.2039 7 31.0 3 13.7314 2 45.0 2 60.0 2 22.0227 2 15.1021 1 11.0089 7 22.3103 10)
Average genome size in population (length): 19.29
Average program size in population (points): 20.29
Average percent parens in population: 0.050
Minimum age in population: 12.21875
Maximum age in population: 16.84765625
Average age in population: 15.14598046875
Median age in population: 15.193359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 523
Genome diversity (% unique Plush genomes):	 0.263
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 523
Syntactic diversity (% unique Push programs):	 0.263
Total error diversity:				 0.06
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.061
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 9106599
--- Timings ---
Current time: 1529615159401 milliseconds
Total Time:          32.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.8 seconds, 42.0%
Fitness Testing:     16.0 seconds, 48.6%
Report:               3.0 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 51208.118300000024
Test mean error for best: 25.60406
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -42.0730770721
Correct output: -91.3409907826 | Program output: -53.3409907826
Correct output: 151.161161036  | Program output: 85.161161036  
Correct output: 0.005061137    | Program output: 59.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 43.0642242623 
Correct output: 8.8462429043   | Program output: 51.8462429043 
Correct output: -139.3737677014 | Program output: -102.3737677014
Correct output: 15.9086340651  | Program output: 23.9086340651 
Correct output: 133.2732407891 | Program output: 75.2732407891 
Correct output: -3.075170532   | Program output: 48.924829468  
Correct output: 69.5371683437  | Program output: 89.5371683437 
Correct output: 61.0363157976  | Program output: 9.0363157976  
Correct output: -98.9344588134 | Program output: -32.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 87.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 41.1692271714 
Correct output: -132.6928280664 | Program output: -72.6928280664
Correct output: 63.3475368658  | Program output: 37.3475368658 
Correct output: 26.2227587776  | Program output: 85.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 55.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 47.0 2 38.0 2 66.0 2 59.0 2 4.0889 11 10.0227 10 79.0 12 43.0 2 37.0 2 8.0 2 58.0 3 52.0 11 20.0 1 52.0 2 66.0 2 12.6016 9 34.0 3 15.7314 10 48.0 2 60.0 2 26.0 2 59.0 2 31.4219 11 79.0 12]
Total: 1184.7502000000002
Mean: 23.695004
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2426.9641269000044
Median total errors in population: 1198.7502000000002
Error averages by case: (98.5974234000011 10.314 97.78216429999999 2.937 89.79088250000002 2.221 112.45532279999999 3.62 107.40368799999999 2.393 55.73578970000061 10.433 59.31727810000035 10.488 126.37312589999999 12.249 92.376979 2.567 90.99567749999996 3.006 58.5380106 1.854 104.71117699999999 3.703 100.79014749999997 11.055 70.73996729999999 2.576 97.54892530000006 2.029 115.39894680000005 2.934 63.332083800000966 9.414 81.89572700000001 3.703 65.72641389999927 10.307 94.61540790000002 2.721 111.39030780000006 3.855 73.10433370000001 2.73 107.63573750000002 2.495 81.5106336000008 11.158 126.334976 12.101)
Error minima by case: (23.1014 9 36.0731 1 37.0 1 62.0 2 0.1724 1 2.0889 7 3.5821 9 33.1119 11 8.9698 2 36.0 2 7.0 1 54.0 3 0.5517 8 19.0 1 13.0363 1 26.9345 1 10.3251 8 30.0 2 12.7314 2 44.0 2 59.0 2 22.0 2 25.129 1 29.4219 8 20.3694 9)
Average genome size in population (length): 20.746
Average program size in population (points): 21.746
Average percent parens in population: 0.047
Minimum age in population: 14.1171875
Maximum age in population: 18.4638671875
Average age in population: 16.6690537109375
Median age in population: 16.71337890625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 305
Genome diversity (% unique Plush genomes):	 0.321
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 305
Syntactic diversity (% unique Push programs):	 0.321
Total error diversity:				 0.078
Error (vector) diversity:			 0.081
Behavioral diversity:				 0.082
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 9625274
--- Timings ---
Current time: 1529615162158 milliseconds
Total Time:          35.7 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.0 seconds, 42.0%
Fitness Testing:     17.3 seconds, 48.4%
Report:               3.3 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 51208.118300000024
Test mean error for best: 25.60406
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -42.0730770721
Correct output: -91.3409907826 | Program output: -53.3409907826
Correct output: 151.161161036  | Program output: 85.161161036  
Correct output: 0.005061137    | Program output: 59.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 43.0642242623 
Correct output: 8.8462429043   | Program output: 51.8462429043 
Correct output: -139.3737677014 | Program output: -102.3737677014
Correct output: 15.9086340651  | Program output: 23.9086340651 
Correct output: 133.2732407891 | Program output: 75.2732407891 
Correct output: -3.075170532   | Program output: 48.924829468  
Correct output: 69.5371683437  | Program output: 89.5371683437 
Correct output: 61.0363157976  | Program output: 9.0363157976  
Correct output: -98.9344588134 | Program output: -32.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 87.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 41.1692271714 
Correct output: -132.6928280664 | Program output: -72.6928280664
Correct output: 63.3475368658  | Program output: 37.3475368658 
Correct output: 26.2227587776  | Program output: 85.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 55.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 47.0 2 38.0 2 66.0 2 59.0 2 4.0889 11 10.0227 10 79.0 12 43.0 2 37.0 2 8.0 2 58.0 3 52.0 11 20.0 1 52.0 2 66.0 2 12.6016 9 34.0 3 15.7314 10 48.0 2 60.0 2 26.0 2 59.0 2 31.4219 11 79.0 12]
Total: 1184.7502000000002
Mean: 23.695004
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2143.629260699996
Median total errors in population: 1193.7502000000002
Error averages by case: (84.58318610000057 10.266 89.04289700000002 2.928 81.1274409 2.63 98.67625479999998 3.273 98.58319279999999 2.117 41.36599480000046 9.992 45.41566820000011 10.534 117.6871228 12.457 83.3409705 2.478 83.01052409999994 3.053 49.921021 2.1 90.8319198 3.53 91.87850669999999 11.081 61.7150643 2.294 83.71448980000002 2.236 106.7360971 2.903 48.9680152000008 9.349 67.92386769999999 3.543 50.87772029999956 10.157 80.78171880000004 2.548 103.09070770000001 3.712 59.4737869 2.555 98.7397198 2.193 67.47142660000101 10.943 117.686947 12.113)
Error minima by case: (22.1014 8 34.0731 1 36.0 1 63.0 2 1.1724 1 1.8336 7 7.0643 8 31.9674 10 9.9698 2 35.0 2 6.0 1 55.0 2 0.5389 9 18.0 1 14.0363 1 24.9345 2 10.3251 8 31.0 3 11.7314 2 44.9823 1 58.0 2 23.0 2 27.3901 1 28.7666 8 19.2249 10)
Average genome size in population (length): 21.995
Average program size in population (points): 22.995
Average percent parens in population: 0.044
Minimum age in population: 16.12890625
Maximum age in population: 19.9716796875
Average age in population: 18.12961181640625
Median age in population: 18.217529296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 137
Genome diversity (% unique Plush genomes):	 0.304
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 137
Syntactic diversity (% unique Push programs):	 0.304
Total error diversity:				 0.086
Error (vector) diversity:			 0.09
Behavioral diversity:				 0.091
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 10175261
--- Timings ---
Current time: 1529615164958 milliseconds
Total Time:          38.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.3 seconds, 42.2%
Fitness Testing:     18.5 seconds, 48.2%
Report:               3.6 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 50264.61010000002
Test mean error for best: 25.13231
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -46.0730770721
Correct output: -91.3409907826 | Program output: -57.3409907826
Correct output: 151.161161036  | Program output: 81.161161036  
Correct output: 0.005061137    | Program output: 55.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 39.0642242623 
Correct output: 8.8462429043   | Program output: 47.8462429043 
Correct output: -139.3737677014 | Program output: -106.3737677014
Correct output: 15.9086340651  | Program output: 19.9086340651 
Correct output: 133.2732407891 | Program output: 71.2732407891 
Correct output: -3.075170532   | Program output: 44.924829468  
Correct output: 69.5371683437  | Program output: 85.5371683437 
Correct output: 61.0363157976  | Program output: 5.0363157976  
Correct output: -98.9344588134 | Program output: -36.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 83.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 37.1692271714 
Correct output: -132.6928280664 | Program output: -76.6928280664
Correct output: 63.3475368658  | Program output: 33.3475368658 
Correct output: 26.2227587776  | Program output: 81.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 51.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 43.0 2 34.0 2 70.0 2 55.0 2 4.0889 11 10.0227 10 75.0 12 39.0 2 33.0 2 4.0 1 62.0 3 48.0 11 16.0 2 56.0 2 62.0 2 12.6016 9 38.0 3 15.7314 10 52.0 2 56.0 3 30.0 1 55.0 2 31.4219 11 75.0 12]
Total: 1156.7502000000002
Mean: 23.135004
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2244.592898999993
Median total errors in population: 1192.4988
Error averages by case: (85.12197620000055 10.261 96.25176199999997 3.086 88.48520440000006 2.533 100.63673399999998 3.342 105.24820089999999 2.463 41.50921550000054 9.462 45.35643589999967 10.751 124.1663774 12.158 90.18269470000001 2.548 90.66098309999998 3.193 56.251483099999994 1.949 92.66928080000001 3.609 98.61602099999998 11.049 68.4115934 2.344 84.97339660000003 2.043 113.74027079999999 3.078 49.051994000000505 9.33 69.6854139 3.636 52.27030039999989 10.035 82.12130320000001 2.628 110.50804940000008 3.811 60.2720523 2.649 105.45716190000002 2.56 67.70722500000115 10.481 124.1527691 12.086)
Error minima by case: (22.1014 9 22.5122 1 24.7801 1 62.0 2 0.1724 1 1.4703 7 7.0643 9 6.7893 11 8.9698 2 33.0 2 4.0 1 54.0 2 0.4033 9 16.0 1 14.0363 1 25.9345 1 9.3251 8 30.0 2 10.9869 2 44.0 1 56.0 2 22.0 1 26.3901 1 28.6606 8 5.9532 10)
Average genome size in population (length): 23.539
Average program size in population (points): 24.539
Average percent parens in population: 0.041
Minimum age in population: 17.4599609375
Maximum age in population: 21.44384765625
Average age in population: 19.5258291015625
Median age in population: 19.5313720703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 397
Genome diversity (% unique Plush genomes):	 0.311
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 397
Syntactic diversity (% unique Push programs):	 0.311
Total error diversity:				 0.095
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 10763748
--- Timings ---
Current time: 1529615167684 milliseconds
Total Time:          41.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.4 seconds, 42.3%
Fitness Testing:     19.8 seconds, 48.0%
Report:               3.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 50264.61010000002
Test mean error for best: 25.13231
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -46.0730770721
Correct output: -91.3409907826 | Program output: -57.3409907826
Correct output: 151.161161036  | Program output: 81.161161036  
Correct output: 0.005061137    | Program output: 55.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 39.0642242623 
Correct output: 8.8462429043   | Program output: 47.8462429043 
Correct output: -139.3737677014 | Program output: -106.3737677014
Correct output: 15.9086340651  | Program output: 19.9086340651 
Correct output: 133.2732407891 | Program output: 71.2732407891 
Correct output: -3.075170532   | Program output: 44.924829468  
Correct output: 69.5371683437  | Program output: 85.5371683437 
Correct output: 61.0363157976  | Program output: 5.0363157976  
Correct output: -98.9344588134 | Program output: -36.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 83.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 37.1692271714 
Correct output: -132.6928280664 | Program output: -76.6928280664
Correct output: 63.3475368658  | Program output: 33.3475368658 
Correct output: 26.2227587776  | Program output: 81.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 51.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 43.0 2 34.0 2 70.0 2 55.0 2 4.0889 11 10.0227 10 75.0 12 39.0 2 33.0 2 4.0 1 62.0 3 48.0 11 16.0 2 56.0 2 62.0 2 12.6016 9 38.0 3 15.7314 10 52.0 2 56.0 3 30.0 1 55.0 2 31.4219 11 75.0 12]
Total: 1156.7502000000002
Mean: 23.135004
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2147.08781169998
Median total errors in population: 1192.4988
Error averages by case: (85.78068630000031 10.314 87.42715989999996 2.957 79.54209910000003 2.424 101.41236919999999 3.309 96.8294326 2.393 42.77329190000037 9.495 46.78692999999993 10.812 115.8293628 12.141 81.546741 2.446 81.67399759999995 3.081 48.030590000000004 1.852 93.4718028 3.563 90.09957659999999 11.035 59.9135567 2.232 85.88630750000004 2.057 105.0855652 2.947 50.154059500000216 9.381 70.78126599999999 3.597 53.779979300000065 10.038 83.98257679999999 2.609 101.70243359999999 3.701 62.79912090000002 2.624 97.01132249999999 2.477 68.82765380000089 10.547 115.89293010000002 12.035)
Error minima by case: (22.1014 8 28.5105 1 30.7784 1 62.0 2 0.6722 1 1.4703 7 2.0416 8 13.0968 10 8.9775 1 33.0 2 4.0 1 54.0 2 2.9867 9 16.0 1 14.0363 1 24.9345 1 1.5322 8 30.0 2 11.7314 2 44.0 1 56.0 2 22.0 1 25.2559 1 5.7972 8 22.5589 11)
Average genome size in population (length): 24.153
Average program size in population (points): 25.153
Average percent parens in population: 0.040
Minimum age in population: 18.73046875
Maximum age in population: 22.8565673828125
Average age in population: 20.93236376953125
Median age in population: 20.978759765625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 346
Genome diversity (% unique Plush genomes):	 0.314
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 346
Syntactic diversity (% unique Push programs):	 0.314
Total error diversity:				 0.103
Error (vector) diversity:			 0.109
Behavioral diversity:				 0.109
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 11367598
--- Timings ---
Current time: 1529615170391 milliseconds
Total Time:          43.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.5 seconds, 42.2%
Fitness Testing:     21.1 seconds, 48.0%
Report:               4.2 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 50264.61010000002
Test mean error for best: 25.13231
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -46.0730770721
Correct output: -91.3409907826 | Program output: -57.3409907826
Correct output: 151.161161036  | Program output: 81.161161036  
Correct output: 0.005061137    | Program output: 55.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 39.0642242623 
Correct output: 8.8462429043   | Program output: 47.8462429043 
Correct output: -139.3737677014 | Program output: -106.3737677014
Correct output: 15.9086340651  | Program output: 19.9086340651 
Correct output: 133.2732407891 | Program output: 71.2732407891 
Correct output: -3.075170532   | Program output: 44.924829468  
Correct output: 69.5371683437  | Program output: 85.5371683437 
Correct output: 61.0363157976  | Program output: 5.0363157976  
Correct output: -98.9344588134 | Program output: -36.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 83.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 37.1692271714 
Correct output: -132.6928280664 | Program output: -76.6928280664
Correct output: 63.3475368658  | Program output: 33.3475368658 
Correct output: 26.2227587776  | Program output: 81.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 51.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec print_float)
Errors: [50.8837 10 43.0 2 34.0 2 70.0 2 55.0 2 4.0889 11 10.0227 10 75.0 12 39.0 2 33.0 2 4.0 1 62.0 3 48.0 11 16.0 2 56.0 2 62.0 2 12.6016 9 38.0 3 15.7314 10 52.0 2 56.0 3 30.0 1 55.0 2 31.4219 11 75.0 12]
Total: 1156.7502000000002
Mean: 23.135004
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 1997.6093355000012
Median total errors in population: 1184.7502000000002
Error averages by case: (81.96174859999996 10.249 79.86136589999998 2.734 71.68999280000004 2.676 98.42729569999997 2.778 89.4027336 2.346 37.75753990000004 10.851 41.754936600000505 10.333 108.83045969999999 12.176 74.13584599999999 2.403 72.86697129999996 2.778 40.651315999999994 2.266 90.38887280000002 3.514 82.6838885 11.041 52.544464399999995 1.74 82.74396180000002 2.501 97.86010520000004 2.727 45.68539520000097 9.305 67.32356910000003 3.59 47.71227819999976 9.986 79.77352390000001 2.549 93.69975260000002 3.037 57.76418359999998 2.54 89.6015974 2.402 64.18293020000088 11.054 108.7156065 12.013)
Error minima by case: (19.745 8 43.0 1 34.0 1 63.0 2 0.6722 1 1.758 7 7.0643 8 29.9674 10 8.9775 1 33.0 2 4.0 1 55.0 2 0.4033 7 16.0 1 6.6072 1 62.0 2 9.2972 7 31.0 3 11.4629 2 21.5257 1 56.0 2 4.296 1 25.2559 1 29.523 8 17.2249 9)
Average genome size in population (length): 23.202
Average program size in population (points): 24.202
Average percent parens in population: 0.042
Minimum age in population: 19.73046875
Maximum age in population: 24.37396240234375
Average age in population: 22.37675769042969
Median age in population: 22.39437866210938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 444
Genome diversity (% unique Plush genomes):	 0.288
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 444
Syntactic diversity (% unique Push programs):	 0.288
Total error diversity:				 0.081
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 11947660
--- Timings ---
Current time: 1529615173195 milliseconds
Total Time:          46.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.8 seconds, 42.3%
Fitness Testing:     22.4 seconds, 47.9%
Report:               4.4 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 49382.33350000003
Test mean error for best: 24.69117
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -4.9851462605 
Correct output: -89.0730770721 | Program output: -52.0730770721
Correct output: -91.3409907826 | Program output: -63.3409907826
Correct output: 151.161161036  | Program output: 75.161161036  
Correct output: 0.005061137    | Program output: 49.005061137  
Correct output: 2.7256015537   | Program output: -3.3632619929 
Correct output: 8.9356530487   | Program output: -3.0870547493 
Correct output: -35.9357757377 | Program output: 33.0642242623 
Correct output: 8.8462429043   | Program output: 41.8462429043 
Correct output: -139.3737677014 | Program output: -112.3737677014
Correct output: 15.9086340651  | Program output: 13.9086340651 
Correct output: 133.2732407891 | Program output: 65.2732407891 
Correct output: -3.075170532   | Program output: 38.924829468  
Correct output: 69.5371683437  | Program output: 79.5371683437 
Correct output: 61.0363157976  | Program output: -0.9636842024 
Correct output: -98.9344588134 | Program output: -42.9344588134
Correct output: 10.2968110209  | Program output: -4.3048106211 
Correct output: 121.0565638189 | Program output: 77.0565638189 
Correct output: -18.1596322192 | Program output: -4.4281826695 
Correct output: 89.1692271714  | Program output: 31.1692271714 
Correct output: -132.6928280664 | Program output: -82.6928280664
Correct output: 63.3475368658  | Program output: 27.3475368658 
Correct output: 26.2227587776  | Program output: 75.2227587776 
Correct output: 30.3158869706  | Program output: -3.1060033364 
Correct output: -23.1932775279 | Program output: 45.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_max float_dec float_dec float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [52.8837 10 37.0 2 28.0 2 76.0 2 49.0 2 6.0889 11 12.0227 10 69.0 12 33.0 2 27.0 2 2.0 1 68.0 3 42.0 11 10.0 1 62.0 11 56.0 2 14.6016 9 44.0 3 13.7314 10 58.0 2 50.0 2 36.0 2 49.0 2 33.4219 11 69.0 12]
Total: 1134.7502
Mean: 22.695004
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2385.7453006000055
Median total errors in population: 1184.7502000000002
Error averages by case: (93.445509800001 10.281 97.73407839999999 3.038 89.93660890000005 3.111 111.29406049999996 2.884 107.0149878 2.489 50.5690611000007 11.067 54.517602600000686 10.241 125.9019098 12.241 91.95542590000001 2.498 91.81885899999989 3.148 58.9519486 2.233 103.34963109999997 3.691 100.3890262 11.047 70.54585039999999 2.177 95.26758180000006 2.801 115.20246510000007 3.031 58.27329530000099 9.351 80.8505036 3.74 59.48973969999891 10.039 92.78720530000002 2.783 111.68982380000006 3.598 71.66465729999999 2.411 107.14500530000002 2.592 76.42340310000073 11.129 125.88906019999999 12.017)
Error minima by case: (18.1014 8 35.0731 1 28.0 1 62.0 2 3.8327 1 2.0889 8 2.9584 9 30.8186 9 12.9698 1 27.0 1 1.0 1 54.0 2 0.4033 9 10.0 1 15.0363 1 25.9345 1 9.8991 8 30.0 2 7.7314 2 44.0 1 50.0 2 22.0 1 29.2712 1 24.2622 8 18.1448 11)
Average genome size in population (length): 25.079
Average program size in population (points): 26.079
Average percent parens in population: 0.039
Minimum age in population: 21.585205078125
Maximum age in population: 25.70260620117188
Average age in population: 23.96148132324219
Median age in population: 23.99830627441406
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 246
Genome diversity (% unique Plush genomes):	 0.352
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 246
Syntactic diversity (% unique Push programs):	 0.352
Total error diversity:				 0.102
Error (vector) diversity:			 0.109
Behavioral diversity:				 0.109
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 12574635
--- Timings ---
Current time: 1529615176005 milliseconds
Total Time:          49.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.9 seconds, 42.3%
Fitness Testing:     23.7 seconds, 47.9%
Report:               4.7 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 49571.473100000025
Test mean error for best: 24.78574
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -50.0730770721
Correct output: -91.3409907826 | Program output: -61.3409907826
Correct output: 151.161161036  | Program output: 77.161161036  
Correct output: 0.005061137    | Program output: 51.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 35.0642242623 
Correct output: 8.8462429043   | Program output: 43.8462429043 
Correct output: -139.3737677014 | Program output: -110.3737677014
Correct output: 15.9086340651  | Program output: 15.9086340651 
Correct output: 133.2732407891 | Program output: 67.2732407891 
Correct output: -3.075170532   | Program output: 40.924829468  
Correct output: 69.5371683437  | Program output: 81.5371683437 
Correct output: 61.0363157976  | Program output: 1.0363157976  
Correct output: -98.9344588134 | Program output: -40.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 79.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 33.1692271714 
Correct output: -132.6928280664 | Program output: -80.6928280664
Correct output: 63.3475368658  | Program output: 29.3475368658 
Correct output: 26.2227587776  | Program output: 77.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 47.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 39.0 2 30.0 1 74.0 3 51.0 2 4.0889 11 10.0227 10 71.0 11 35.0 2 29.0 2 0.0 0 66.0 3 44.0 11 12.0 2 60.0 1 58.0 2 12.6016 9 42.0 3 15.7314 10 56.0 2 52.0 3 34.0 2 51.0 2 31.4219 11 71.0 12]
Total: 1126.7502
Mean: 22.535004
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2203.0602344000054
Median total errors in population: 1156.7502000000002
Error averages by case: (88.74594860000065 10.265 87.6193257 2.834 79.55008710000003 2.886 108.10858699999996 2.842 97.532991 2.43 45.44071500000037 11.053 49.19446680000069 10.237 116.60434809999998 12.183 82.32938759999999 2.404 80.64074869999995 2.922 48.18294030000001 1.688 100.20075529999994 3.664 90.86662929999999 11.024 60.1201021 2.494 91.28750930000005 2.762 105.36212640000002 2.819 53.22824680000109 9.32 77.2714832 3.649 54.48165099999916 10.066 89.77926120000006 2.747 101.24201330000004 3.816 67.96456719999999 1.965 97.5696351 2.526 71.44171250000073 11.117 116.5919958 11.99)
Error minima by case: (18.1014 8 30.0731 1 28.0 1 64.0 2 0.5141 1 2.0889 8 3.0643 9 34.1631 9 10.2919 1 27.0 1 0.0 0 56.0 2 0.8734 7 0.5795 1 7.9214 1 20.9345 1 10.5589 7 32.0 2 6.7314 1 15.0615 1 50.0 2 5.6102 1 5.7273 1 29.4219 8 21.6157 11)
Average genome size in population (length): 28.282
Average program size in population (points): 29.282
Average percent parens in population: 0.034
Minimum age in population: 23.43292236328125
Maximum age in population: 27.37078857421875
Average age in population: 25.48665742492676
Median age in population: 25.51187133789062
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 260
Genome diversity (% unique Plush genomes):	 0.38
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 260
Syntactic diversity (% unique Push programs):	 0.38
Total error diversity:				 0.097
Error (vector) diversity:			 0.108
Behavioral diversity:				 0.108
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 13281760
--- Timings ---
Current time: 1529615178840 milliseconds
Total Time:          52.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.1 seconds, 42.3%
Fitness Testing:     25.0 seconds, 47.8%
Report:               5.1 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 48725.603100000015
Test mean error for best: 24.36280
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -56.0730770721
Correct output: -91.3409907826 | Program output: -67.3409907826
Correct output: 151.161161036  | Program output: 71.161161036  
Correct output: 0.005061137    | Program output: 45.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 29.0642242623 
Correct output: 8.8462429043   | Program output: 37.8462429043 
Correct output: -139.3737677014 | Program output: -116.3737677014
Correct output: 15.9086340651  | Program output: 9.9086340651  
Correct output: 133.2732407891 | Program output: 61.2732407891 
Correct output: -3.075170532   | Program output: 34.924829468  
Correct output: 69.5371683437  | Program output: 75.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -46.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 73.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 27.1692271714 
Correct output: -132.6928280664 | Program output: -86.6928280664
Correct output: 63.3475368658  | Program output: 23.3475368658 
Correct output: 26.2227587776  | Program output: 71.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 41.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 33.0 2 24.0 2 80.0 2 45.0 2 4.0889 11 10.0227 10 65.0 13 29.0 2 23.0 2 6.0 2 72.0 3 38.0 11 6.0 2 63.8046 11 52.0 2 12.6016 9 48.0 3 15.7314 10 62.0 2 46.0 3 40.0 1 45.0 2 31.4219 11 65.0 12]
Total: 1107.5548000000001
Mean: 22.151096
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2169.234224100007
Median total errors in population: 1156.7502000000002
Error averages by case: (88.60475390000038 10.267 84.06086689999997 2.855 76.16718100000003 2.961 109.80659909999999 3.085 93.47280569999997 2.531 46.00697720000014 11.08 48.99571880000067 10.253 112.32114379999994 12.11 78.5152882 2.537 78.00234549999996 2.965 44.93434880000001 1.714 101.80161029999996 3.735 86.80268869999999 10.963 57.368086399999996 2.584 92.7320638000001 3.269 101.64187490000002 2.825 53.63197820000106 9.367 79.12507699999999 3.613 55.199974899999454 9.993 91.02538060000005 2.816 98.20913490000004 3.866 69.30297490000002 2.253 93.94664040000002 2.617 71.83698700000075 11.151 112.2917232 12.02)
Error minima by case: (11.1014 8 23.0731 1 24.0 1 63.0 2 2.1845 1 2.0889 7 0.0416 9 2.7333 9 11.8562 1 23.0 1 0.0 0 53.2038 2 0.3033 8 6.0 1 15.0363 1 13.9345 1 10.2968 7 31.0 2 3.2657 2 9.0998 1 46.0 2 16.7219 1 30.129 1 16.2622 9 10.0092 8)
Average genome size in population (length): 29.459
Average program size in population (points): 30.459
Average percent parens in population: 0.033
Minimum age in population: 24.48614501953125
Maximum age in population: 29.20359039306641
Average age in population: 27.00056105804443
Median age in population: 27.03004837036133
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 253
Genome diversity (% unique Plush genomes):	 0.406
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 253
Syntactic diversity (% unique Push programs):	 0.406
Total error diversity:				 0.123
Error (vector) diversity:			 0.131
Behavioral diversity:				 0.131
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 14018310
--- Timings ---
Current time: 1529615181688 milliseconds
Total Time:          55.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.3 seconds, 42.3%
Fitness Testing:     26.3 seconds, 47.7%
Report:               5.4 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 47993.4081
Test mean error for best: 23.99670
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -62.0730770721
Correct output: -91.3409907826 | Program output: -73.3409907826
Correct output: 151.161161036  | Program output: 65.161161036  
Correct output: 0.005061137    | Program output: 39.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 23.0642242623 
Correct output: 8.8462429043   | Program output: 31.8462429043 
Correct output: -139.3737677014 | Program output: -122.3737677014
Correct output: 15.9086340651  | Program output: 3.9086340651  
Correct output: 133.2732407891 | Program output: 55.2732407891 
Correct output: -3.075170532   | Program output: 28.924829468  
Correct output: 69.5371683437  | Program output: 69.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -52.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 67.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 21.1692271714 
Correct output: -132.6928280664 | Program output: -92.6928280664
Correct output: 63.3475368658  | Program output: 17.3475368658 
Correct output: 26.2227587776  | Program output: 65.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 35.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 27.0 2 18.0 2 86.0 2 39.0 2 4.0889 11 10.0227 10 59.0 12 23.0 2 17.0 2 12.0 2 78.0 3 32.0 11 0.0 0 63.8046 11 46.0 2 12.6016 9 54.0 3 15.7314 10 68.0 2 40.0 2 46.0 2 39.0 2 31.4219 11 59.0 12]
Total: 1068.5548000000001
Mean: 21.371096
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2333.3103271000077
Median total errors in population: 1135.7502
Error averages by case: (93.54771210000068 10.272 91.03458370000003 2.981 83.40788700000003 3.066 116.94078829999992 3.511 99.86007169999998 2.531 50.582027800000226 11.112 54.84241340000086 10.294 118.57392879999998 12.006 85.0774678 2.65 85.8829963999999 3.038 52.47102530000001 1.704 108.92434009999995 3.845 93.24225249999999 10.962 64.4106319 2.507 99.6781823000001 4.724 108.27146730000003 3.008 58.307583000001216 9.348 86.74258739999999 3.657 59.24109329999899 10.057 97.98182160000007 2.891 105.3570864000001 3.884 76.98789509999996 2.839 100.28267910000001 2.627 76.37008140000086 11.159 118.5487234 12.07)
Error minima by case: (14.1014 8 26.0731 1 18.0 1 63.0 2 0.1492 1 2.4521 8 0.0643 8 22.9674 10 9.6953 1 17.0 1 0.0 0 55.0 2 0.5967 9 0.0 0 10.8212 1 16.9345 1 7.1468 7 31.0 2 3.7314 1 17.3117 1 40.0 2 8.51 1 26.3657 1 8.3501 8 10.2249 11)
Average genome size in population (length): 32.711
Average program size in population (points): 33.711
Average percent parens in population: 0.030
Minimum age in population: 26.14093017578125
Maximum age in population: 30.29520416259766
Average age in population: 28.46999167251587
Median age in population: 28.51049041748047
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 108
Genome diversity (% unique Plush genomes):	 0.461
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 108
Syntactic diversity (% unique Push programs):	 0.461
Total error diversity:				 0.128
Error (vector) diversity:			 0.144
Behavioral diversity:				 0.144
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 14836097
--- Timings ---
Current time: 1529615184551 milliseconds
Total Time:          58.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.5 seconds, 42.2%
Fitness Testing:     27.7 seconds, 47.7%
Report:               5.7 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 47546.926499999994
Test mean error for best: 23.77346
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -67.0730770721
Correct output: -91.3409907826 | Program output: -78.3409907826
Correct output: 151.161161036  | Program output: 60.161161036  
Correct output: 0.005061137    | Program output: 34.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 18.0642242623 
Correct output: 8.8462429043   | Program output: 26.8462429043 
Correct output: -139.3737677014 | Program output: -127.3737677014
Correct output: 15.9086340651  | Program output: -1.0913659349 
Correct output: 133.2732407891 | Program output: 50.2732407891 
Correct output: -3.075170532   | Program output: 23.924829468  
Correct output: 69.5371683437  | Program output: 64.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -57.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 62.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 16.1692271714 
Correct output: -132.6928280664 | Program output: -97.6928280664
Correct output: 63.3475368658  | Program output: 12.3475368658 
Correct output: 26.2227587776  | Program output: 60.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 30.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_dec float_dec float_dec float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 22.0 2 13.0 2 91.0 3 34.0 2 4.0889 11 10.0227 10 54.0 13 18.0 2 12.0 2 17.0 11 83.0 3 27.0 10 5.0 1 63.8046 11 41.0 2 12.6016 9 59.0 2 15.7314 10 73.0 2 35.0 3 51.0 2 34.0 2 31.4219 11 54.0 12]
Total: 1059.5548000000001
Mean: 21.191095
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2220.828957100007
Median total errors in population: 1126.7502
Error averages by case: (92.81685290000097 10.337 82.41010860000002 2.963 74.5868511 2.859 117.3214927999999 3.45 91.4698847 2.26 49.841453000000634 11.127 53.36041430000067 10.342 110.46460269999999 11.937 76.3873997 2.505 76.72507889999994 3.011 46.024813699999996 1.516 109.35221049999993 3.771 84.8139515 11.02 55.20471930000001 2.309 100.90573930000015 5.961 99.94338670000006 3.002 57.56077030000114 9.386 86.68744169999995 3.769 58.42713579999891 10.009 98.6701734000001 2.833 96.62895350000004 3.648 76.95494300000001 2.818 91.73180900000001 2.347 75.72445090000083 11.19 110.42231980000001 12.022)
Error minima by case: (11.1014 8 22.0 1 13.0 1 64.0 2 0.1515 1 1.7256 7 0.0643 9 21.9674 10 7.2697 1 12.0 1 0.0 0 56.0 2 0.6629 8 0.0 0 14.052 1 15.9345 1 9.1468 7 32.0 2 0.1597 1 14.0809 1 35.0 2 11.7408 1 26.3635 1 7.6288 9 9.2249 9)
Average genome size in population (length): 35.882
Average program size in population (points): 36.882
Average percent parens in population: 0.027
Minimum age in population: 27.74993896484375
Maximum age in population: 32.12546539306641
Average age in population: 30.11447676277161
Median age in population: 30.14029979705811
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 52
Genome diversity (% unique Plush genomes):	 0.507
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 52
Syntactic diversity (% unique Push programs):	 0.507
Total error diversity:				 0.15
Error (vector) diversity:			 0.169
Behavioral diversity:				 0.17
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 15733247
--- Timings ---
Current time: 1529615187623 milliseconds
Total Time:          61.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.6 seconds, 42.0%
Fitness Testing:     29.2 seconds, 47.8%
Report:               6.1 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 47446.32459999999
Test mean error for best: 23.72316
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -70.0730770721
Correct output: -91.3409907826 | Program output: -81.3409907826
Correct output: 151.161161036  | Program output: 57.161161036  
Correct output: 0.005061137    | Program output: 31.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 15.0642242623 
Correct output: 8.8462429043   | Program output: 23.8462429043 
Correct output: -139.3737677014 | Program output: -130.3737677014
Correct output: 15.9086340651  | Program output: -4.0913659349 
Correct output: 133.2732407891 | Program output: 47.2732407891 
Correct output: -3.075170532   | Program output: 20.924829468  
Correct output: 69.5371683437  | Program output: 61.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -60.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 59.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 13.1692271714 
Correct output: -132.6928280664 | Program output: -100.6928280664
Correct output: 63.3475368658  | Program output: 9.3475368658  
Correct output: 26.2227587776  | Program output: 57.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 27.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_max float_dec float_stackdepth float_dec float_dec float_dec float_dec integer_stackdepth float_max float_dec float_dec float_dec float_dec float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 19.0 2 10.0 1 94.0 2 31.0 2 4.0889 11 10.0227 10 51.0 12 15.0 2 9.0 1 20.0 11 86.0 3 24.0 11 8.0 1 63.8046 11 38.0 2 12.6016 9 62.0 3 15.7314 10 76.0 2 32.0 2 54.0 2 31.0 2 31.4219 11 51.0 11]
Total: 1043.5548
Mean: 20.871096
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2519.4533925000064
Median total errors in population: 1123.7502
Error averages by case: (99.23128960000093 10.347 97.78307939999999 3.173 90.06359950000005 3.147 126.47573809999987 3.714 106.57141139999999 2.373 56.0355919000005 11.115 59.766176900000744 10.377 125.29499770000001 12.218 91.9505586 2.597 92.04592429999992 3.27 65.43602030000001 2.034 118.4197129999999 3.909 100.05855420000002 11.009 72.0104503 2.681 108.04449370000061 7.073 115.05403610000008 3.111 63.80215700000121 9.395 96.20521079999992 3.905 65.19179169999903 10.044 107.32262340000014 2.962 111.62343910000004 3.985 86.2748016 2.928 106.8772072 2.497 81.83825520000083 11.149 125.1222715 11.941)
Error minima by case: (9.1014 9 19.0 1 10.0 1 62.0 2 0.1699 1 2.0889 8 0.9357 9 19.6365 10 8.6754 1 9.0 1 0.0 0 54.0 2 0.0349 8 0.0 0 15.0363 1 13.9345 1 9.6667 7 30.0 2 0.2657 2 44.0 1 32.0 2 22.0 1 4.4322 1 0.339 9 6.7582 9)
Average genome size in population (length): 38.584
Average program size in population (points): 39.584
Average percent parens in population: 0.026
Minimum age in population: 28.85948944091797
Maximum age in population: 33.36949157714844
Average age in population: 31.60100347518921
Median age in population: 31.64700317382812
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.564
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.564
Total error diversity:				 0.179
Error (vector) diversity:			 0.203
Behavioral diversity:				 0.203
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 16697897
--- Timings ---
Current time: 1529615190626 milliseconds
Total Time:          64.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.8 seconds, 41.9%
Fitness Testing:     30.5 seconds, 47.7%
Report:               6.6 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 46941.675400000015
Test mean error for best: 23.47084
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -63.0730770721
Correct output: -91.3409907826 | Program output: -74.3409907826
Correct output: 151.161161036  | Program output: 69.161161036  
Correct output: 0.005061137    | Program output: 38.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 22.0642242623 
Correct output: 8.8462429043   | Program output: 30.8462429043 
Correct output: -139.3737677014 | Program output: -123.3737677014
Correct output: 15.9086340651  | Program output: 2.9086340651  
Correct output: 133.2732407891 | Program output: 59.2732407891 
Correct output: -3.075170532   | Program output: 27.924829468  
Correct output: 69.5371683437  | Program output: 68.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -53.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 71.0565638189 
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 25.1692271714 
Correct output: -132.6928280664 | Program output: -93.6928280664
Correct output: 63.3475368658  | Program output: 21.3475368658 
Correct output: 26.2227587776  | Program output: 64.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 34.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction in2} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger in2 float_mult float_mult float_sin float_dup_times in1 float_yank float_dec float_dec float_dec float_dec float_dec float_max integer_mod float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318)
Errors: [50.8837 10 26.0 2 17.0 2 82.0 3 38.0 2 4.0889 11 10.0227 10 58.0 13 22.0 2 16.0 2 13.0 2 74.0 3 31.0 11 1.0 1 63.8046 11 45.0 2 12.6016 9 50.0 2 15.7314 10 64.0 2 39.0 2 42.0 2 38.0 2 31.4219 11 58.0 12]
Total: 1041.5548000000001
Mean: 20.831097
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2536.7531793000085
Median total errors in population: 1107.5548000000001
Error averages by case: (107.15743120000137 10.429 90.11018569999999 3.132 82.37732730000003 3.127 136.2054127999999 3.691 98.8706939 2.602 65.3394177000009 11.139 67.8359511000007 10.459 117.4137913 12.511 84.22851490000001 2.64 84.50648069999994 3.241 61.880803 2.67 128.3102514999999 3.984 92.30712640000003 10.947 64.19118169999997 2.628 116.88157200000128 9.405 107.4081019 3.093 72.8141291000006 9.521 105.85539249999992 3.881 73.78324559999936 10.077 117.31571840000016 3.107 104.20242730000005 3.973 95.40316300000002 2.938 99.38915240000001 2.707 90.7398679000007 11.193 117.26884000000001 11.862)
Error minima by case: (6.1014 9 19.0 1 10.0 1 64.0 2 1.6413 1 1.0889 8 1.0643 7 10.9674 9 10.8462 1 9.0 1 0.0 0 53.4188 2 0.1825 7 0.0 0 14.0363 1 9.9345 1 9.6016 8 32.0 2 0.0597 2 9.3148 1 32.0 2 16.5069 1 26.8376 1 8.6828 9 1.7751 8)
Average genome size in population (length): 43.749
Average program size in population (points): 44.749
Average percent parens in population: 0.023
Minimum age in population: 29.85948944091797
Maximum age in population: 35.14622592926025
Average age in population: 33.09301836967468
Median age in population: 33.14719843864441
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 63
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 63
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.238
Error (vector) diversity:			 0.265
Behavioral diversity:				 0.265
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 17791722
--- Timings ---
Current time: 1529615193640 milliseconds
Total Time:          67.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.0 seconds, 41.7%
Fitness Testing:     32.0 seconds, 47.7%
Report:               7.0 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 47164.41889999999
Test mean error for best: 23.58221
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -1.9851462605 
Correct output: -89.0730770721 | Program output: -74.0730770721
Correct output: -91.3409907826 | Program output: -85.3409907826
Correct output: 151.161161036  | Program output: 53.161161036  
Correct output: 0.005061137    | Program output: 27.005061137  
Correct output: 2.7256015537   | Program output: -0.3632619929 
Correct output: 8.9356530487   | Program output: -0.0870547493 
Correct output: -35.9357757377 | Program output: 11.0642242623 
Correct output: 8.8462429043   | Program output: 19.8462429043 
Correct output: -139.3737677014 | Program output: -134.3737677014
Correct output: 15.9086340651  | Program output: -8.0913659349 
Correct output: 133.2732407891 | Program output: 43.2732407891 
Correct output: -3.075170532   | Program output: 16.924829468  
Correct output: 69.5371683437  | Program output: 57.5371683437 
Correct output: 61.0363157976  | Program output: -1.7682546613 
Correct output: -98.9344588134 | Program output: -64.9344588134
Correct output: 10.2968110209  | Program output: -1.3048106211 
Correct output: 121.0565638189 | Program output: 55.0565638189 
Correct output: -18.1596322192 | Program output: -1.4281826695 
Correct output: 89.1692271714  | Program output: 9.1692271714  
Correct output: -132.6928280664 | Program output: -104.6928280664
Correct output: 63.3475368658  | Program output: 5.3475368658  
Correct output: 26.2227587776  | Program output: 53.2227587776 
Correct output: 30.3158869706  | Program output: -0.1060033364 
Correct output: -23.1932775279 | Program output: 23.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_yank} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_yank print_float float_stackdepth tagged_318 integer_flush)
Errors: [49.8837 10 15.0 2 6.0 2 98.0 2 27.0 2 3.0889 11 9.0227 10 47.0 13 11.0 2 5.0 1 24.0 11 90.0 2 20.0 11 12.0 2 62.8046 10 34.0 2 11.6016 9 66.0 3 16.7314 9 80.0 1 28.0 2 58.0 2 27.0 2 30.4219 10 47.0 10]
Total: 1019.5548
Mean: 20.391096
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2813.5772077000083
Median total errors in population: 1083.2694999999999
Error averages by case: (116.5158013000012 10.476 101.1870469 3.224 93.53022510000004 3.193 148.1677528 3.783 108.5315139 2.688 74.98779040000072 11.167 78.92024920000065 10.455 126.73125439999998 12.665 93.98699430000002 2.801 95.27938069999992 3.323 80.55282759999999 4.05 140.37861799999993 4.091 102.04816740000001 10.956 76.2162406 2.333 125.86629120000136 10.207 118.22072350000003 3.202 82.38639740000006 9.579 118.62826019999991 3.98 83.79804659999982 10.186 129.5059501000001 3.195 114.70916250000005 3.98 109.00624590000005 3.19 108.95252830000003 2.815 100.13053790000066 11.24 126.68420150000001 11.876)
Error minima by case: (0.8986 8 11.0731 1 6.0 1 64.0 2 0.5626 1 2.0889 7 0.0643 8 6.9413 9 7.7686 1 5.0 1 1.0 1 56.0 2 0.9042 5 0.0 0 13.0363 1 1.9345 1 0.1385 8 32.0 2 1.2686 2 45.1692 1 28.0 2 20.0711 1 25.2228 1 12.9605 9 0.7751 8)
Average genome size in population (length): 50.132
Average program size in population (points): 51.132
Average percent parens in population: 0.020
Minimum age in population: 31.95835876464844
Maximum age in population: 36.66982507705688
Average age in population: 34.5706930077076
Median age in population: 34.61292731761932
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 70
Genome diversity (% unique Plush genomes):	 0.644
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 70
Syntactic diversity (% unique Push programs):	 0.644
Total error diversity:				 0.24
Error (vector) diversity:			 0.262
Behavioral diversity:				 0.263
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 19045172
--- Timings ---
Current time: 1529615196764 milliseconds
Total Time:          70.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.1 seconds, 41.5%
Fitness Testing:     33.6 seconds, 47.9%
Report:               7.3 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 42227.7903
Test mean error for best: 21.11390
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -60.0730770721
Correct output: -91.3409907826 | Program output: -71.3409907826
Correct output: 151.161161036  | Program output: 145.3223220721
Correct output: 0.005061137    | Program output: 41.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 25.0642242623 
Correct output: 8.8462429043   | Program output: 33.8462429043 
Correct output: -139.3737677014 | Program output: -120.3737677014
Correct output: 15.9086340651  | Program output: 5.9086340651  
Correct output: 133.2732407891 | Program output: 125.5464815783
Correct output: -3.075170532   | Program output: 30.924829468  
Correct output: 69.5371683437  | Program output: 71.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -50.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 149.1131276379
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 57.3384543427 
Correct output: -132.6928280664 | Program output: -90.6928280664
Correct output: 63.3475368658  | Program output: 49.6950737316 
Correct output: 26.2227587776  | Program output: 67.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 37.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 29.0 2 20.0 1 5.8388 11 41.0 2 4.0889 11 10.0227 10 61.0 12 25.0 2 19.0 2 10.0 1 7.7268 11 34.0 11 2.0 2 63.8046 11 48.0 2 12.6016 9 28.0566 11 15.7314 10 31.8308 12 42.0 3 13.6525 12 41.0 2 31.4219 11 61.0 12]
Total: 891.6603000000001
Mean: 17.833206
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2557.317469500009
Median total errors in population: 1060.5548000000001
Error averages by case: (104.942860600001 10.426 87.6729248 3.24 80.10661050000003 3.185 144.3962766999999 3.859 95.46209259999999 2.756 62.7511770000006 11.157 67.02208890000074 10.425 113.67309339999998 12.735 81.01213270000002 2.759 82.49878999999997 3.156 77.1792146 6.586 136.1479433999998 4.258 88.9545725 10.955 68.44789000000002 2.054 116.1675454000017 11.03 104.71595690000001 3.259 70.32308290000077 9.51 114.65781349999989 4.223 71.92268639999935 10.153 124.19962360000022 3.337 101.8060655 3.906 103.35165610000003 3.424 96.13816630000001 2.889 88.20644740000071 11.213 113.52475780000002 11.541)
Error minima by case: (0.1014 9 6.0731 1 2.0 1 5.8388 2 0.2567 1 1.7909 7 3.9357 9 0.9324 8 7.0 1 1.0 1 2.0 1 7.7268 2 0.5699 6 0.0 0 14.0363 1 0.0655 1 10.034 8 28.0566 2 1.247 1 2.4642 1 24.0 1 13.6525 1 23.0 1 27.6841 7 0.7751 8)
Average genome size in population (length): 57.427
Average program size in population (points): 58.427
Average percent parens in population: 0.017
Minimum age in population: 33.07674026489258
Maximum age in population: 38.03794527053833
Average age in population: 36.0087102419138
Median age in population: 36.01145565509796
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.707
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.707
Total error diversity:				 0.237
Error (vector) diversity:			 0.272
Behavioral diversity:				 0.272
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 20480947
--- Timings ---
Current time: 1529615200099 milliseconds
Total Time:          73.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.3 seconds, 41.3%
Fitness Testing:     35.3 seconds, 48.0%
Report:               7.8 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 42227.7903
Test mean error for best: 21.11390
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -60.0730770721
Correct output: -91.3409907826 | Program output: -71.3409907826
Correct output: 151.161161036  | Program output: 145.3223220721
Correct output: 0.005061137    | Program output: 41.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 25.0642242623 
Correct output: 8.8462429043   | Program output: 33.8462429043 
Correct output: -139.3737677014 | Program output: -120.3737677014
Correct output: 15.9086340651  | Program output: 5.9086340651  
Correct output: 133.2732407891 | Program output: 125.5464815783
Correct output: -3.075170532   | Program output: 30.924829468  
Correct output: 69.5371683437  | Program output: 71.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -50.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 149.1131276379
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 57.3384543427 
Correct output: -132.6928280664 | Program output: -90.6928280664
Correct output: 63.3475368658  | Program output: 49.6950737316 
Correct output: 26.2227587776  | Program output: 67.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 37.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 29.0 2 20.0 1 5.8388 11 41.0 2 4.0889 11 10.0227 10 61.0 12 25.0 2 19.0 2 10.0 1 7.7268 11 34.0 11 2.0 2 63.8046 11 48.0 2 12.6016 9 28.0566 11 15.7314 10 31.8308 12 42.0 3 13.6525 12 41.0 2 31.4219 11 61.0 12]
Total: 891.6603000000001
Mean: 17.833206
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2947.396054200008
Median total errors in population: 1043.5548
Error averages by case: (125.30532880000169 10.532 96.21588499999999 3.25 88.69558790000002 3.173 164.86893930000002 3.994 105.48574189999997 2.86 85.17648320000097 11.232 87.89524430000078 10.5 123.30817149999997 12.74 91.1602422 2.961 90.47816199999997 2.976 92.66952649999998 8.607 156.9939638999998 4.553 99.04565029999998 10.974 82.99275360000004 2.345 136.36903510000184 11.14 113.1205873 3.306 92.12270389999927 9.645 136.23714699999982 4.412 94.1534908000004 10.302 145.59550750000025 3.658 109.6799802 3.744 124.59533570000009 3.723 106.12844030000002 3.03 109.3866716000007 11.304 123.3194744 11.435)
Error minima by case: (0.1014 9 3.0731 1 0.0 0 3.8388 1 1.0051 1 1.7399 7 7.9357 8 4.8186 2 3.0 1 0.0 0 2.0 1 2.1088 2 0.9492 1 0.0 0 4.8247 1 0.9345 1 10.0233 7 26.1088 2 1.4091 1 4.9679 1 9.0 1 7.136 1 8.0 1 6.2622 9 0.1602 8)
Average genome size in population (length): 61.472
Average program size in population (points): 62.472
Average percent parens in population: 0.016
Minimum age in population: 35.23831295967102
Maximum age in population: 39.53561353683472
Average age in population: 37.50792899286747
Median age in population: 37.52530202269554
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.72
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.72
Total error diversity:				 0.247
Error (vector) diversity:			 0.29
Behavioral diversity:				 0.29
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 22017847
--- Timings ---
Current time: 1529615203385 milliseconds
Total Time:          76.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        31.5 seconds, 41.0%
Fitness Testing:     36.9 seconds, 48.1%
Report:               8.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 41854.2811
Test mean error for best: 20.92714
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -69.0730770721
Correct output: -91.3409907826 | Program output: -80.3409907826
Correct output: 151.161161036  | Program output: 127.3223220721
Correct output: 0.005061137    | Program output: 32.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 16.0642242623 
Correct output: 8.8462429043   | Program output: 24.8462429043 
Correct output: -139.3737677014 | Program output: -129.3737677014
Correct output: 15.9086340651  | Program output: -3.0913659349 
Correct output: 133.2732407891 | Program output: 107.5464815783
Correct output: -3.075170532   | Program output: 21.924829468  
Correct output: 69.5371683437  | Program output: 62.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -59.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 131.1131276379
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 39.3384543427 
Correct output: -132.6928280664 | Program output: -99.6928280664
Correct output: 63.3475368658  | Program output: 31.6950737316 
Correct output: 26.2227587776  | Program output: 58.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 28.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_max float_dec float_dec float_max float_dec float_stackdepth float_dec float_dec float_dec float_dec integer_stackdepth float_max float_dec float_dec float_dec float_dec float_dec float_max float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_yank float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 20.0 1 11.0 2 23.8388 11 32.0 2 4.0889 11 10.0227 10 52.0 13 16.0 2 10.0 1 19.0 11 25.7268 11 25.0 11 7.0 1 63.8046 11 39.0 2 12.6016 9 10.0566 10 15.7314 10 49.8308 11 33.0 3 31.6525 12 32.0 2 31.4219 11 52.0 11]
Total: 866.6603
Mean: 17.333206
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2902.0361406000075
Median total errors in population: 1033.5548
Error averages by case: (126.77164070000164 10.546 92.67377320000001 3.318 85.29030840000003 3.297 164.32536159999984 4.159 99.19935410000001 2.893 85.7752459000009 11.237 91.10766520000085 10.534 117.06963839999997 12.729 85.16211139999999 2.968 87.98099689999997 2.983 91.23805419999997 8.982 156.56241859999983 4.65 92.82996299999998 10.932 81.06119239999998 2.6 137.74477500000174 11.045 109.62117660000004 3.351 93.08701779999971 9.633 136.6275239999998 4.614 94.90872510000013 10.286 145.84228010000024 3.819 106.91921070000001 3.682 124.8418813 4.043 100.10002130000002 3.036 110.46004790000077 11.278 116.8397568 11.381)
Error minima by case: (0.8986 9 1.0 1 0.0 0 3.8388 1 0.9949 1 2.0889 7 0.9584 9 1.0326 2 0.0 0 0.0 0 1.0 1 5.7268 1 0.4696 1 0.0 0 6.0216 1 0.9345 1 10.0632 7 10.0566 1 1.2686 1 4.1692 1 9.0 1 8.3328 1 8.0 1 1.2421 9 1.1958 8)
Average genome size in population (length): 64.567
Average program size in population (points): 65.567
Average percent parens in population: 0.016
Minimum age in population: 36.23831295967102
Maximum age in population: 40.9922368824482
Average age in population: 38.96727488785982
Median age in population: 39.03110840916634
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.733
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.733
Total error diversity:				 0.289
Error (vector) diversity:			 0.36
Behavioral diversity:				 0.362
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 23632172
--- Timings ---
Current time: 1529615206744 milliseconds
Total Time:          80.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.7 seconds, 40.8%
Fitness Testing:     38.7 seconds, 48.3%
Report:               8.6 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 40490.06999999996
Test mean error for best: 20.24503
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.6767719569 
Correct output: -89.0730770721 | Program output: -69.0730770721
Correct output: -91.3409907826 | Program output: -80.3409907826
Correct output: 151.161161036  | Program output: 136.3223220721
Correct output: 0.005061137    | Program output: 32.005061137  
Correct output: 2.7256015537   | Program output: -1.0071273519 
Correct output: 8.9356530487   | Program output: -1.8501227903 
Correct output: -35.9357757377 | Program output: 16.0642242623 
Correct output: 8.8462429043   | Program output: 24.8462429043 
Correct output: -139.3737677014 | Program output: -129.3737677014
Correct output: 15.9086340651  | Program output: -3.0913659349 
Correct output: 133.2732407891 | Program output: 116.5464815783
Correct output: -3.075170532   | Program output: 21.924829468  
Correct output: 69.5371683437  | Program output: 62.5371683437 
Correct output: 61.0363157976  | Program output: -1.8764268773 
Correct output: -98.9344588134 | Program output: -59.9344588134
Correct output: 10.2968110209  | Program output: -1.3632619929 
Correct output: 121.0565638189 | Program output: 140.1131276379
Correct output: -18.1596322192 | Program output: -1.4709173139 
Correct output: 89.1692271714  | Program output: 48.3384543427 
Correct output: -132.6928280664 | Program output: -99.6928280664
Correct output: 63.3475368658  | Program output: 40.6950737316 
Correct output: 26.2227587776  | Program output: 58.2227587776 
Correct output: 30.3158869706  | Program output: -1.1399305942 
Correct output: -23.1932775279 | Program output: 28.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_dec} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_dec float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_max float_dec float_dec print_float float_stackdepth tagged_318)
Errors: [50.5754 11 20.0 1 11.0 2 14.8388 11 32.0 2 3.7327 11 10.7858 12 52.0 13 16.0 2 10.0 1 19.0 11 16.7268 11 25.0 11 7.0 1 62.9127 9 39.0 2 11.6601 10 19.0566 11 16.6887 10 40.8308 12 33.0 3 22.6525 12 32.0 2 31.4558 11 52.0 11]
Total: 842.9166999999999
Mean: 16.858334
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3594.489238000006
Median total errors in population: 1019.5069
Error averages by case: (140.9452182000019 10.521 134.2540878 3.679 127.1933011 3.649 173.0656494000001 5.283 139.5523226 3.18 100.73782630000127 11.217 104.59996100000076 10.501 156.33306090000002 12.799 125.96552589999999 3.28 129.34421179999998 3.458 131.57886529999993 8.85 166.1065829999999 5.708 133.42032749999996 11.008 122.64446120000001 3.123 151.4823872000017 11.059 150.5002433 3.734 107.90580129999894 9.674 149.8971480999999 5.607 109.20300590000066 10.328 156.88253220000027 5.062 147.4354869 4.227 135.7236681999999 5.386 140.2250112 3.41 125.10949220000072 11.291 156.7500595 11.599)
Error minima by case: (1.8986 8 2.0 1 0.0 0 1.8388 1 0.0051 1 2.0889 7 1.0643 9 2.5954 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0508 1 0.0 0 7.9637 1 0.9345 1 4.919 8 10.0566 2 0.375 1 4.1692 1 11.0 1 1.6525 1 10.0 1 2.6924 7 6.8459 8)
Average genome size in population (length): 65.893
Average program size in population (points): 66.893
Average percent parens in population: 0.015
Minimum age in population: 37.95842635631561
Maximum age in population: 42.31018313765526
Average age in population: 40.51585720877349
Median age in population: 40.55536106228828
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.763
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.763
Total error diversity:				 0.345
Error (vector) diversity:			 0.433
Behavioral diversity:				 0.434
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 25279672
--- Timings ---
Current time: 1529615210241 milliseconds
Total Time:          83.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.0 seconds, 40.6%
Fitness Testing:     40.5 seconds, 48.4%
Report:               9.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 40015.6656
Test mean error for best: 20.00783
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -70.0730770721
Correct output: -91.3409907826 | Program output: -81.3409907826
Correct output: 151.161161036  | Program output: 141.3223220721
Correct output: 0.005061137    | Program output: 31.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 15.0642242623 
Correct output: 8.8462429043   | Program output: 23.8462429043 
Correct output: -139.3737677014 | Program output: -130.3737677014
Correct output: 15.9086340651  | Program output: -4.0913659349 
Correct output: 133.2732407891 | Program output: 121.5464815783
Correct output: -3.075170532   | Program output: 20.924829468  
Correct output: 69.5371683437  | Program output: 61.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -60.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 145.1131276379
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 53.3384543427 
Correct output: -132.6928280664 | Program output: -100.6928280664
Correct output: 63.3475368658  | Program output: 45.6950737316 
Correct output: 26.2227587776  | Program output: 57.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 27.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction in2} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger in2 float_mult float_mult float_sin float_dup_times in1 float_yank float_dec float_dec float_dec float_dec float_stackdepth float_dec float_dec float_dec float_dec integer_stackdepth float_max float_dec float_dec float_dec float_dec float_dec float_max float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_yank float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 19.0 2 10.0 1 9.8388 10 31.0 2 4.0889 11 10.0227 10 51.0 12 15.0 2 9.0 1 20.0 11 11.7268 11 24.0 11 8.0 1 63.8046 11 38.0 2 12.6016 9 24.0566 11 15.7314 10 35.8308 12 32.0 2 17.6525 12 31.0 2 31.4219 11 51.0 11]
Total: 814.6603000000001
Mean: 16.293205
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3347.4620555000024
Median total errors in population: 989.0548
Error averages by case: (136.92477870000198 10.554 123.55846849999998 3.423 116.37042220000002 3.295 143.62158619999943 7.383 132.81078369999997 3.03 96.86336630000109 11.271 98.03398480000088 10.527 150.34086739999995 12.672 118.84931660000001 3.116 118.04368889999996 3.316 116.84700819999998 6.971 139.34885100000025 7.713 126.55020069999999 10.999 110.87125480000003 3.088 145.83582810000158 10.862 140.091062 3.538 103.99122509999916 9.702 134.89616369999965 7.601 105.22473970000055 10.207 140.46972559999978 7.469 136.5595888 4.149 121.18320409999916 7.71 133.3348085 3.247 121.59830840000078 11.331 150.3038235 11.765)
Error minima by case: (0.1014 9 0.0731 1 0.0 0 0.1612 1 0.0051 1 2.0889 8 1.0643 9 4.1118 1 0.0 0 0.0 0 0.0 0 0.2732 2 1.2955 1 0.0 0 0.0363 1 0.9345 1 9.7032 7 8.0566 2 2.0597 1 1.6615 1 5.0 1 0.3475 1 4.0 1 19.6841 8 0.4411 8)
Average genome size in population (length): 63.495
Average program size in population (points): 64.495
Average percent parens in population: 0.016
Minimum age in population: 39.84173285961151
Maximum age in population: 43.87676825374365
Average age in population: 41.9891746602878
Median age in population: 42.02983261272311
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 89
Genome diversity (% unique Plush genomes):	 0.733
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 89
Syntactic diversity (% unique Push programs):	 0.733
Total error diversity:				 0.36
Error (vector) diversity:			 0.448
Behavioral diversity:				 0.448
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 26867472
--- Timings ---
Current time: 1529615213625 milliseconds
Total Time:          87.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.1 seconds, 40.4%
Fitness Testing:     42.2 seconds, 48.5%
Report:               9.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 37530.68119999999
Test mean error for best: 18.76534
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -79.0730770721
Correct output: -91.3409907826 | Program output: -90.3409907826
Correct output: 151.161161036  | Program output: 145.3223220721
Correct output: 0.005061137    | Program output: 22.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 6.0642242623  
Correct output: 8.8462429043   | Program output: 14.8462429043 
Correct output: -139.3737677014 | Program output: -139.3737677014
Correct output: 15.9086340651  | Program output: -13.0913659349
Correct output: 133.2732407891 | Program output: 125.5464815783
Correct output: -3.075170532   | Program output: 11.924829468  
Correct output: 69.5371683437  | Program output: 52.5371683437 
Correct output: 61.0363157976  | Program output: -2.7682546613 
Correct output: -98.9344588134 | Program output: -69.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 149.1131276379
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 57.3384543427 
Correct output: -132.6928280664 | Program output: -109.6928280664
Correct output: 63.3475368658  | Program output: 49.6950737316 
Correct output: 26.2227587776  | Program output: 48.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 18.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 10.0 1 1.0 1 5.8388 11 22.0 2 4.0889 11 10.0227 10 42.0 13 6.0 2 0.0 0 29.0 11 7.7268 11 15.0 11 17.0 2 63.8046 11 29.0 2 12.6016 9 28.0566 11 15.7314 10 31.8308 12 23.0 2 13.6525 12 22.0 2 31.4219 11 42.0 12]
Total: 723.6603000000001
Mean: 14.473206
Genome size: 80
Size: 81
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3201.7476439999987
Median total errors in population: 891.6603000000001
Error averages by case: (121.80165640000142 10.458 135.25362950000002 3.644 128.10489630000004 3.425 101.89195159999922 10.112 140.88324810000003 3.121 81.12956260000101 11.08 83.84758400000074 10.474 158.17864769999997 12.625 127.12386690000002 3.238 130.31787859999994 3.686 116.54199590000002 4.467 100.73540159999999 10.219 134.65518469999995 11.032 112.58869580000002 3.154 130.89096440000125 10.489 151.4682443 3.73 88.30438659999973 9.566 108.48217389999975 10.147 89.47634330000012 10.226 112.67151589999986 10.619 148.62601210000003 4.576 95.39606199999852 10.789 141.52948510000002 3.335 106.21178490000075 11.199 158.2644718 11.961)
Error minima by case: (3.4256 9 2.0 1 0.0 0 0.1612 1 1.2663 1 1.7256 7 1.0227 8 7.9147 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0787 1 0.0 0 0.0363 1 4.9345 1 9.2968 6 0.0566 2 0.2686 2 0.6615 1 11.0 1 0.3475 1 10.0 1 11.1562 8 1.2001 8)
Average genome size in population (length): 58.826
Average program size in population (points): 59.826
Average percent parens in population: 0.017
Minimum age in population: 41.14845091104507
Maximum age in population: 45.43762603029609
Average age in population: 43.47301659087464
Median age in population: 43.49566728435457
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 121
Genome diversity (% unique Plush genomes):	 0.654
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 121
Syntactic diversity (% unique Push programs):	 0.654
Total error diversity:				 0.368
Error (vector) diversity:			 0.39
Behavioral diversity:				 0.391
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 28338247
--- Timings ---
Current time: 1529615216920 milliseconds
Total Time:          90.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.3 seconds, 40.2%
Fitness Testing:     43.9 seconds, 48.6%
Report:              10.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 36924.768599999996
Test mean error for best: 18.46238
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -80.0730770721
Correct output: -91.3409907826 | Program output: -91.3409907826
Correct output: 151.161161036  | Program output: 149.3223220721
Correct output: 0.005061137    | Program output: 21.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: 5.0642242623  
Correct output: 8.8462429043   | Program output: 13.8462429043 
Correct output: -139.3737677014 | Program output: -140.3737677014
Correct output: 15.9086340651  | Program output: -14.0913659349
Correct output: 133.2732407891 | Program output: 129.5464815783
Correct output: -3.075170532   | Program output: 10.924829468  
Correct output: 69.5371683437  | Program output: 51.5371683437 
Correct output: 61.0363157976  | Program output: -1.9636842024 
Correct output: -98.9344588134 | Program output: -70.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 153.1131276379
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 61.3384543427 
Correct output: -132.6928280664 | Program output: -110.6928280664
Correct output: 63.3475368658  | Program output: 53.6950737316 
Correct output: 26.2227587776  | Program output: 47.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 17.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_swap float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 9.0 1 0.0 0 1.8388 11 21.0 2 4.0889 11 10.0227 10 41.0 12 5.0 2 1.0 2 30.0 11 3.7268 11 14.0 11 18.0 2 63.0 10 28.0 2 12.6016 9 32.0566 11 15.7314 10 27.8308 12 22.0 2 9.6525 11 21.0 2 31.4219 11 41.0 12]
Total: 701.8557000000001
Mean: 14.037114
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3030.4967674000013
Median total errors in population: 876.04665
Error averages by case: (126.97457350000168 10.504 116.81448539999991 3.452 109.61602470000001 3.473 109.72658259999909 10.164 120.81451669999997 2.965 85.57729410000083 11.118 88.93530740000062 10.576 138.5774888 12.829 106.63951940000001 3.042 111.94878079999998 3.423 104.78919349999997 6.67 108.61234260000008 10.302 114.43982609999995 10.989 95.55991060000005 2.68 136.17740730000116 10.114 133.33089920000003 3.528 93.26297169999958 9.656 110.71970329999964 10.15 94.61259140000011 10.275 120.79654749999973 10.636 130.54763610000003 4.292 103.65994369999859 10.749 121.46538440000003 3.15 110.74913680000063 11.24 138.52669980000002 11.645)
Error minima by case: (0.1014 8 3.0 1 0.0 0 0.1612 1 2.1515 1 1.7399 7 0.0643 8 10.5431 2 0.0 0 0.0 0 0.0 0 0.2732 2 0.0177 6 0.0 0 2.9637 1 2.9345 1 7.9435 6 0.0566 2 0.2686 1 1.6615 1 16.0 1 0.3475 1 15.0 1 12.0756 8 0.7141 8)
Average genome size in population (length): 63.767
Average program size in population (points): 64.767
Average percent parens in population: 0.016
Minimum age in population: 42.14845091104507
Maximum age in population: 46.95447164960206
Average age in population: 45.07165659485385
Median age in population: 45.06088155787438
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.715
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.715
Total error diversity:				 0.419
Error (vector) diversity:			 0.454
Behavioral diversity:				 0.454
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 29932509
--- Timings ---
Current time: 1529615220284 milliseconds
Total Time:          93.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.4 seconds, 40.0%
Fitness Testing:     45.7 seconds, 48.8%
Report:              10.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 36868.65689999997
Test mean error for best: 18.43433
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -79.0730770721
Correct output: -91.3409907826 | Program output: -90.3409907826
Correct output: 151.161161036  | Program output: 150.3223220721
Correct output: 0.005061137    | Program output: 22.005061137  
Correct output: 2.7256015537   | Program output: -0.7265239857 
Correct output: 8.9356530487   | Program output: -0.1741094985 
Correct output: -35.9357757377 | Program output: 6.0642242623  
Correct output: 8.8462429043   | Program output: 14.8462429043 
Correct output: -139.3737677014 | Program output: -139.3737677014
Correct output: 15.9086340651  | Program output: -13.0913659349
Correct output: 133.2732407891 | Program output: 130.5464815783
Correct output: -3.075170532   | Program output: 11.924829468  
Correct output: 69.5371683437  | Program output: 52.5371683437 
Correct output: 61.0363157976  | Program output: -1.9273684049 
Correct output: -98.9344588134 | Program output: -69.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 154.1131276379
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 62.3384543427 
Correct output: -132.6928280664 | Program output: -109.6928280664
Correct output: 63.3475368658  | Program output: 54.6950737316 
Correct output: 26.2227587776  | Program output: 48.2227587776 
Correct output: 30.3158869706  | Program output: -0.2120066728 
Correct output: -23.1932775279 | Program output: 18.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_swap float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max integer_dup_items float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 10.0 1 1.0 1 0.8388 10 22.0 2 3.4521 8 9.1098 11 42.0 13 6.0 2 0.0 0 29.0 11 2.7268 10 15.0 11 17.0 2 62.9637 10 29.0 2 12.6016 9 33.0566 11 15.7314 10 26.8308 12 23.0 2 8.6525 12 22.0 2 30.5279 8 42.0 12]
Total: 697.3757000000002
Mean: 13.947514
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2791.786324000001
Median total errors in population: 854.4010500000002
Error averages by case: (103.94194560000128 10.461 117.30740089999996 3.392 110.03577580000004 3.482 86.43456459999913 10.272 124.49551559999999 3.033 61.427079800000726 11.06 65.29409410000045 10.565 141.9945802 12.85 110.54420369999998 3.1 111.77566099999993 3.276 113.46198330000001 8.923 85.36543310000013 10.464 118.17581599999998 10.979 104.34133960000003 2.619 113.63807680000113 10.249 133.922943 3.478 68.9842913000005 9.554 87.2223978999996 10.259 70.48768809999959 10.101 98.04860079999996 10.861 130.49344640000004 4.149 80.13803909999878 10.998 125.0102939 3.231 87.3149653000005 11.145 141.94318809999996 11.486)
Error minima by case: (0.8986 9 1.0 1 0.0 0 0.1612 2 3.7039 1 1.7256 8 0.0643 6 2.9535 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.5824 1 0.0 0 0.0363 1 1.9345 1 9.2968 7 0.0566 2 2.3113 1 0.6615 1 11.0 1 0.3049 1 10.0 1 23.6841 8 2.3681 8)
Average genome size in population (length): 67.305
Average program size in population (points): 68.305
Average percent parens in population: 0.015
Minimum age in population: 44.65024423971772
Maximum age in population: 48.51151354145259
Average age in population: 46.51778039397206
Median age in population: 46.55125913769007
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.731
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.731
Total error diversity:				 0.457
Error (vector) diversity:			 0.507
Behavioral diversity:				 0.507
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 31615347
--- Timings ---
Current time: 1529615223910 milliseconds
Total Time:          97.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.6 seconds, 39.8%
Fitness Testing:     47.5 seconds, 48.9%
Report:              10.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 35568.65659999999
Test mean error for best: 17.78433
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.1977183103 
Correct output: -89.0730770721 | Program output: -86.0730770721
Correct output: -91.3409907826 | Program output: -97.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 15.005061137  
Correct output: 2.7256015537   | Program output: -1.2658062098 
Correct output: 8.9356530487   | Program output: -2.2015963207 
Correct output: -35.9357757377 | Program output: -0.9357757377 
Correct output: 8.8462429043   | Program output: 7.8462429043  
Correct output: -139.3737677014 | Program output: -146.3737677014
Correct output: 15.9086340651  | Program output: -20.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: 4.924829468   
Correct output: 69.5371683437  | Program output: 45.5371683437 
Correct output: 61.0363157976  | Program output: 5.0726315951  
Correct output: -98.9344588134 | Program output: -76.9344588134
Correct output: 10.2968110209  | Program output: -1.0044608418 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -1.6839812957 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -116.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 41.2227587776 
Correct output: 30.3158869706  | Program output: -1.4541142463 
Correct output: -23.1932775279 | Program output: 11.8067224721 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction integer_min} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 integer_min integer_flush in2 integer_dec integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec integer_yankdup float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.0963 10 3.0 1 6.0 1 6.1612 10 15.0 2 3.9914 10 11.1372 10 35.0 2 1.0 1 7.0 2 36.0 12 4.2732 10 8.0 11 24.0 2 55.9637 7 22.0 2 11.3013 11 40.0566 10 16.4757 10 19.8308 11 16.0 2 1.6525 11 15.0 2 31.77 11 35.0 12]
Total: 648.7099000000002
Mean: 12.974198
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3447.2846360999997
Median total errors in population: 828.6603000000001
Error averages by case: (133.15535410000166 10.548 140.05745359999997 3.582 133.26981940000002 3.631 114.38129929999918 10.561 145.99495409999997 3.155 92.82210140000072 11.136 95.31392530000062 10.603 163.30409210000002 12.726 132.35520110000002 3.271 134.91819789999997 3.413 140.87231580000002 10.347 113.43531380000022 10.762 139.89662529999998 11.006 130.7464241 2.93 141.52296600000093 10.544 156.30083820000002 3.693 99.97481309999927 9.694 117.36871309999938 10.615 101.51467550000032 10.275 126.03540229999962 11.188 152.7539235 4.178 108.75967929999862 11.276 146.35196489999998 3.372 117.69421180000063 11.244 163.2103711 11.524)
Error minima by case: (0.5775 8 0.0 0 0.0 0 0.1612 1 2.1334 1 2.0889 7 0.0906 8 4.0326 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0785 1 0.0 0 1.9637 1 7.0655 1 1.2706 7 0.0566 2 0.2686 1 1.1379 1 9.0 1 0.3475 1 8.0 1 7.3927 8 1.2745 8)
Average genome size in population (length): 72.154
Average program size in population (points): 73.154
Average percent parens in population: 0.014
Minimum age in population: 45.65024423971772
Maximum age in population: 49.54061386641115
Average age in population: 47.84793240333488
Median age in population: 47.89667192241177
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.491
Error (vector) diversity:			 0.545
Behavioral diversity:				 0.545
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 33419722
--- Timings ---
Current time: 1529615227561 milliseconds
Total Time:         100.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.8 seconds, 39.5%
Fitness Testing:     49.4 seconds, 49.0%
Report:              11.5 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 36073.477999999996
Test mean error for best: 18.03674
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -3.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: -2.3632619929 
Correct output: 8.9356530487   | Program output: -2.0870547493 
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 1.0726315951  
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -3.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -3.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: -2.1060033364 
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_dec float_rot float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_swap float_dec float_dec float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec integer_yankdup float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [51.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 5.0889 10 11.0227 10 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 59.9637 6 17.0 2 13.6016 9 36.0566 11 14.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 32.4219 11 30.0 11]
Total: 628.6882000000002
Mean: 12.573764
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3137.5634254
Median total errors in population: 790.1603
Error averages by case: (116.17930030000167 10.483 129.62242649999996 3.484 124.03828390000002 3.5 97.94153659999922 10.594 135.9550902 3.211 74.70619970000078 11.093 78.46018970000064 10.517 152.77505859999997 12.275 122.56809779999999 3.271 126.54484679999996 3.455 140.1449894 11.045 97.14907150000018 10.752 129.76457770000002 10.93 129.62062000000003 3.274 125.73872000000095 10.601 145.80809439999996 3.736 82.07928819999967 9.64 104.64186189999945 10.621 83.73219670000007 10.222 110.60049759999958 11.303 142.74893419999998 3.983 91.34568859999844 11.455 136.55228359999998 3.453 100.02933650000061 11.184 153.051235 11.683)
Error minima by case: (0.8986 9 0.0 0 0.0 0 0.1612 1 0.1724 1 1.7256 7 3.9357 9 4.0179 1 0.0 0 0.0 0 1.339 1 0.2732 2 0.2767 1 0.0 0 0.0363 1 1.9345 1 6.3729 8 0.0566 2 1.7314 1 0.3385 1 7.0 1 0.3475 1 4.1245 1 13.0682 8 0.2745 7)
Average genome size in population (length): 79.784
Average program size in population (points): 80.784
Average percent parens in population: 0.013
Minimum age in population: 46.92203813605011
Maximum age in population: 50.98798431479372
Average age in population: 49.15636006894312
Median age in population: 49.20268948865123
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.808
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.808
Total error diversity:				 0.512
Error (vector) diversity:			 0.557
Behavioral diversity:				 0.557
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 35414685
--- Timings ---
Current time: 1529615231481 milliseconds
Total Time:         104.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.1 seconds, 39.2%
Fitness Testing:     51.4 seconds, 49.1%
Report:              12.1 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 35628.32599999998
Test mean error for best: 17.81416
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.1977183103 
Correct output: -89.0730770721 | Program output: -90.0730770721
Correct output: -91.3409907826 | Program output: -101.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 11.005061137  
Correct output: 2.7256015537   | Program output: -1.2658062098 
Correct output: 8.9356530487   | Program output: -2.2015963207 
Correct output: -35.9357757377 | Program output: -4.9357757377 
Correct output: 8.8462429043   | Program output: 3.8462429043  
Correct output: -139.3737677014 | Program output: -150.3737677014
Correct output: 15.9086340651  | Program output: -24.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: 0.924829468   
Correct output: 69.5371683437  | Program output: 41.5371683437 
Correct output: 61.0363157976  | Program output: 5.0726315951  
Correct output: -98.9344588134 | Program output: -80.9344588134
Correct output: 10.2968110209  | Program output: -1.0044608418 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -1.6839812957 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -120.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 37.2227587776 
Correct output: 30.3158869706  | Program output: -1.4541142463 
Correct output: -23.1932775279 | Program output: 7.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction integer_min} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 integer_min integer_flush in2 integer_dec integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec integer_yankdup float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 float_stackdepth tagged_318 integer_flush)
Errors: [50.0963 10 1.0 2 10.0 2 6.1612 10 11.0 2 3.9914 10 11.1372 10 31.0 2 5.0 1 11.0 2 40.0 12 4.2732 10 4.0 11 28.0 2 55.9637 7 18.0 2 11.3013 11 40.0566 10 16.4757 10 19.8308 11 12.0 2 1.6525 11 11.0 2 31.77 11 31.0 11]
Total: 639.7099000000002
Mean: 12.794198
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2827.3744501999995
Median total errors in population: 721.6603000000001
Error averages by case: (107.87836150000115 10.454 116.93624679999994 3.265 112.59088090000003 3.25 84.51538829999949 10.494 117.8877283 3.154 66.14938130000075 10.949 70.61021510000064 10.546 137.54039879999996 11.639 104.55131260000002 3.151 116.28892129999994 3.562 131.91951959999997 11.114 83.64916929999985 10.554 111.32192649999996 10.914 117.29094229999998 3.276 117.01562230000054 10.24 133.126461 3.717 73.51610920000029 9.652 99.52479239999995 10.602 75.05147909999971 10.159 93.07924280000015 11.245 130.56418660000003 3.835 77.36556539999846 11.424 118.67848190000001 3.352 91.74737570000075 11.1 135.10074120000004 11.826)
Error minima by case: (2.8837 8 0.0 0 0.0 0 0.1612 1 0.739 1 1.7327 7 2.0643 9 1.6019 1 0.0 0 0.0 0 2.0 1 0.1557 2 0.0 0 2.0 1 5.9637 1 8.9345 1 1.046 7 0.0566 2 0.2686 1 0.3385 1 7.0 1 0.3475 1 6.0 1 0.1131 8 0.3181 8)
Average genome size in population (length): 85.211
Average program size in population (points): 86.211
Average percent parens in population: 0.012
Minimum age in population: 47.92203813605011
Maximum age in population: 52.37512737151701
Average age in population: 50.48578000162425
Median age in population: 50.52373478707159
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.844
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.844
Total error diversity:				 0.506
Error (vector) diversity:			 0.539
Behavioral diversity:				 0.539
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 37545072
--- Timings ---
Current time: 1529615235519 milliseconds
Total Time:         108.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.3 seconds, 38.9%
Fitness Testing:     53.5 seconds, 49.2%
Report:              12.7 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 36150.9759
Test mean error for best: 18.07549
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -89.0730770721
Correct output: -91.3409907826 | Program output: -100.3409907826
Correct output: 151.161161036  | Program output: 151.3223220721
Correct output: 0.005061137    | Program output: 12.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -3.9357757377 
Correct output: 8.8462429043   | Program output: 4.8462429043  
Correct output: -139.3737677014 | Program output: -149.3737677014
Correct output: 15.9086340651  | Program output: -23.0913659349
Correct output: 133.2732407891 | Program output: 131.5464815783
Correct output: -3.075170532   | Program output: 1.924829468   
Correct output: 69.5371683437  | Program output: 42.5371683437 
Correct output: 61.0363157976  | Program output: 0.0363157976  
Correct output: -98.9344588134 | Program output: -79.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 155.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 63.3384543427 
Correct output: -132.6928280664 | Program output: -119.6928280664
Correct output: 63.3475368658  | Program output: 55.6950737316 
Correct output: 26.2227587776  | Program output: 38.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 8.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_flush} {:instruction in2} {:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_add} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_max integer_flush in2 float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max integer_add float_dec float_rot float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_max float_dec float_swap float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 0.0 0 9.0 3 0.1612 9 12.0 2 2.0889 10 8.0227 9 32.0 1 4.0 1 10.0 1 39.0 12 1.7268 10 5.0 11 27.0 2 61.0 2 19.0 2 10.6016 8 34.0566 11 17.7314 10 25.8308 12 13.0 2 7.6525 12 12.0 2 29.4219 9 32.0 11]
Total: 623.1781000000001
Mean: 12.463562
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3528.7247360000015
Median total errors in population: 701.8557000000001
Error averages by case: (117.04163700000151 10.522 157.27021149999996 3.689 155.74758240000003 3.811 96.60957449999962 10.38 162.83115919999995 3.472 76.2015714000007 10.817 78.62964850000064 10.513 180.25535499999998 10.151 152.55088080000002 3.567 159.60874919999995 4.293 176.04495889999995 11.395 95.25872150000004 10.461 157.9810277 10.571 166.59250430000006 3.779 124.62998889999967 9.757 172.4427267 4.271 83.15931790000005 9.721 113.53794469999933 10.626 84.2342842999998 10.267 107.60079349999965 11.288 169.99776060000008 4.463 89.47804249999835 11.383 163.50457440000002 3.803 102.37375590000069 11.072 179.15296469999996 11.917)
Error minima by case: (9.8986 8 0.0 0 0.0 0 0.1612 1 1.0901 1 1.7327 7 0.0643 7 3.0045 1 0.0 0 0.0 0 5.0 1 0.1557 1 0.0 0 2.0 1 0.0363 1 10.0 1 5.7032 7 1.9434 2 0.2686 1 1.6615 1 4.0 1 0.2662 1 3.0 1 10.2338 8 0.9526 2)
Average genome size in population (length): 89.232
Average program size in population (points): 90.232
Average percent parens in population: 0.011
Minimum age in population: 49.55710191960679
Maximum age in population: 54.12595901172608
Average age in population: 51.89880749735748
Median age in population: 51.92399301522528
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.851
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.851
Total error diversity:				 0.534
Error (vector) diversity:			 0.572
Behavioral diversity:				 0.573
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 39776047
--- Timings ---
Current time: 1529615239762 milliseconds
Total Time:         112.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.6 seconds, 38.6%
Fitness Testing:     55.8 seconds, 49.4%
Report:              13.4 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 36099.450000000004
Test mean error for best: 18.04973
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 151.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -153.3737677014
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 131.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 0.0363157976  
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 155.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 63.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 55.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_mult} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max integer_mult float_dec float_max integer_dup float_dec float_max float_dec float_dec float_max float_dec float_max float_max float_dec float_swap float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 4.0 2 13.0 3 0.1612 9 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 14.0 2 43.0 12 1.7268 10 1.0 1 31.0 2 61.0 2 15.0 2 10.6016 8 34.0566 11 17.7314 10 25.8308 12 9.0 2 7.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 612.1781000000001
Mean: 12.243562
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3443.6052676999993
Median total errors in population: 675.8496500000001
Error averages by case: (122.05176530000114 10.62 148.96106169999993 3.535 151.34640220000003 3.895 95.28798019999998 10.317 151.9253724 3.331 80.8254645000007 10.834 84.8063248000007 10.528 169.9669094 7.387 143.33562719999998 3.577 154.75107029999992 4.203 171.923782 11.582 93.84534969999983 10.395 145.5222422 9.491 160.8032581 3.712 130.6140141999994 9.14 163.31432160000003 4.047 88.02148240000001 9.858 113.73938489999964 10.62 89.5782038999998 10.357 106.07375069999993 11.36 160.35985869999996 4.262 88.57269529999856 11.438 152.5444976 3.693 106.07209370000065 11.127 168.4143547 11.639)
Error minima by case: (3.8986 9 0.0 0 0.0 0 0.1612 1 0.0 0 0.3973 7 0.0643 8 2.5092 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0 0 2.0 1 0.0363 1 7.0 1 8.7032 7 1.9434 2 1.6887 1 0.6615 1 1.0 1 0.3475 1 0.0 0 8.8359 8 2.2242 1)
Average genome size in population (length): 95.191
Average program size in population (points): 96.191
Average percent parens in population: 0.010
Minimum age in population: 50.74473307607695
Maximum age in population: 55.31641280671465
Average age in population: 53.28101801106468
Median age in population: 53.30534070667636
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.541
Error (vector) diversity:			 0.582
Behavioral diversity:				 0.582
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 42155959
--- Timings ---
Current time: 1529615243869 milliseconds
Total Time:         117.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.9 seconds, 38.3%
Fitness Testing:     58.1 seconds, 49.6%
Report:              14.1 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 35647.81010000001
Test mean error for best: 17.82391
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 5.0726315951  
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 2.0 2 11.0 3 6.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 4.2732 10 3.0 1 29.0 2 55.9637 7 17.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 11.0 2 1.6525 11 10.0 1 29.4219 9 30.0 11]
Total: 611.6882
Mean: 12.233764
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3519.9638311000026
Median total errors in population: 657.6603000000001
Error averages by case: (127.4742340000013 10.564 145.9204186999999 3.643 150.8617038000001 4.209 112.7621028000003 10.261 142.6346099 3.21 86.73979780000089 10.802 92.9172701000008 10.499 164.9162903 5.244 141.9869315 4.151 154.68574629999995 4.198 172.25040959999998 11.743 111.1433123999996 10.38 141.8968324 7.809 156.74268380000004 3.693 135.7673912999985 8.829 158.75207380000003 4.043 94.05260970000016 9.727 132.18719649999917 10.741 96.10725179999984 10.295 123.4472305999995 11.559 156.13433090000012 4.22 106.64397019999842 11.577 143.81201949999996 3.624 111.71101930000066 10.997 161.15439410000002 11.244)
Error minima by case: (6.2105 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.7256 7 0.0643 8 0.9378 1 0.0 0 0.0 0 0.9086 1 0.2732 1 0.0 0 1.0 1 1.0363 1 3.0 1 0.2968 6 1.0566 2 3.1596 1 0.6615 1 1.0 1 0.3475 2 0.0 0 0.5781 8 0.3947 1)
Average genome size in population (length): 99.779
Average program size in population (points): 100.779
Average percent parens in population: 0.010
Minimum age in population: 52.7353214987088
Maximum age in population: 56.75533269478183
Average age in population: 54.78415509705355
Median age in population: 54.81421754562325
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.89
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.89
Total error diversity:				 0.551
Error (vector) diversity:			 0.609
Behavioral diversity:				 0.61
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 44650659
--- Timings ---
Current time: 1529615247914 milliseconds
Total Time:         121.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.1 seconds, 38.0%
Fitness Testing:     60.4 seconds, 49.8%
Report:              14.6 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 36052.450000000004
Test mean error for best: 18.02623
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 151.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 131.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 0.0363157976  
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 155.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 63.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 55.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_mult} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max integer_mult float_dec float_max integer_dup float_dec float_max float_dec float_dec float_max float_dec float_max float_max float_dec float_swap float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec integer_pop float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 3.0 2 12.0 3 0.1612 9 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 1.7268 10 2.0 1 30.0 1 61.0 2 16.0 2 10.6016 8 34.0566 11 17.7314 10 25.8308 12 10.0 1 7.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 611.1781000000001
Mean: 12.223562
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3236.7513181
Median total errors in population: 643.4242
Error averages by case: (122.57546140000164 10.418 134.33181549999995 3.701 140.40509350000005 4.317 97.64564300000066 9.956 129.74920029999998 3.166 80.28267800000087 10.833 83.50586030000078 10.402 153.13711760000004 4.415 129.1011372 4.945 144.60830559999988 4.103 162.4890753 11.85 95.34177529999971 10.048 128.1326485 6.453 149.0019307 3.64 128.80194469999824 8.145 145.65465990000004 3.918 88.12536589999968 9.429 118.37207939999924 10.618 90.79509850000032 10.1 104.7106723 11.479 143.33630420000003 4.094 89.18010549999882 11.343 131.83995570000005 3.581 105.81059100000076 10.737 147.3037988 10.822)
Error minima by case: (1.1014 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.7909 8 2.7136 8 0.0614 1 0.0 0 0.0 0 1.0 1 0.1557 2 0.0 0 5.0 1 9.9637 1 0.0 0 1.3524 7 0.0566 2 3.1596 1 0.6615 1 0.0 0 0.3475 2 0.0 0 7.1206 8 2.2602 1)
Average genome size in population (length): 101.957
Average program size in population (points): 102.957
Average percent parens in population: 0.010
Minimum age in population: 53.92656581017945
Maximum age in population: 58.22479719858529
Average age in population: 56.23387146936718
Median age in population: 56.26084681307475
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.891
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.891
Total error diversity:				 0.526
Error (vector) diversity:			 0.6
Behavioral diversity:				 0.6
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 47199746
--- Timings ---
Current time: 1529615252387 milliseconds
Total Time:         125.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.3 seconds, 37.7%
Fitness Testing:     62.9 seconds, 50.1%
Report:              15.2 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 36381.72260000001
Test mean error for best: 18.19086
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -2.9851462605 
Correct output: -89.0730770721 | Program output: -89.0730770721
Correct output: -91.3409907826 | Program output: -100.3409907826
Correct output: 151.161161036  | Program output: 155.3223220721
Correct output: 0.005061137    | Program output: 12.005061137  
Correct output: 2.7256015537   | Program output: -1.3632619929 
Correct output: 8.9356530487   | Program output: -1.0870547493 
Correct output: -35.9357757377 | Program output: -3.9357757377 
Correct output: 8.8462429043   | Program output: 4.8462429043  
Correct output: -139.3737677014 | Program output: -149.3737677014
Correct output: 15.9086340651  | Program output: -23.0913659349
Correct output: 133.2732407891 | Program output: 135.5464815783
Correct output: -3.075170532   | Program output: 1.924829468   
Correct output: 69.5371683437  | Program output: 42.5371683437 
Correct output: 61.0363157976  | Program output: 69.6449930571 
Correct output: -98.9344588134 | Program output: -79.9344588134
Correct output: 10.2968110209  | Program output: -2.3048106211 
Correct output: 121.0565638189 | Program output: 159.1131276379
Correct output: -18.1596322192 | Program output: -2.4281826695 
Correct output: 89.1692271714  | Program output: 67.3384543427 
Correct output: -132.6928280664 | Program output: -119.6928280664
Correct output: 63.3475368658  | Program output: 59.6950737316 
Correct output: 26.2227587776  | Program output: 38.2227587776 
Correct output: 30.3158869706  | Program output: -1.1060033364 
Correct output: -23.1932775279 | Program output: 8.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max float_dec float_dec print_float float_stackdepth tagged_318 integer_flush)
Errors: [50.8837 10 0.0 0 9.0 3 4.1612 10 12.0 2 4.0889 11 10.0227 10 32.0 1 4.0 1 10.0 1 39.0 12 2.2732 10 5.0 11 27.0 2 8.6087 10 19.0 2 12.6016 9 38.0566 11 15.7314 10 21.8308 12 13.0 2 3.6525 12 12.0 2 31.4219 11 32.0 11]
Total: 593.3332
Mean: 11.866664
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3313.777913699999
Median total errors in population: 634.6882000000002
Error averages by case: (117.87156070000167 10.438 142.34316439999998 3.893 148.8226947 4.588 96.20628180000075 10.118 140.4013397 3.097 75.69469400000091 10.65 79.00757690000081 10.156 160.47383080000006 4.237 139.27169790000002 5.088 152.98535989999993 4.268 169.6673395 11.836 93.85047449999962 10.231 137.8877053 5.627 159.79579399999997 3.686 123.8531295999983 7.985 152.82179590000004 4.063 83.43097129999956 9.233 117.78751069999919 10.769 86.80707390000026 10.04 104.2880671999999 11.629 150.73860840000003 4.199 87.06180609999868 11.339 142.18054720000003 3.594 101.63608410000084 10.338 157.1418052 10.649)
Error minima by case: (3.1014 9 0.0 0 0.0 0 0.1612 2 0.0 0 0.2744 7 1.9357 8 2.4312 1 0.0 0 0.0 0 1.0 1 0.1557 2 0.0 0 3.0 1 1.0363 1 0.0 0 0.3984 7 0.9434 2 1.7464 1 1.6615 1 0.0 0 0.3298 2 0.0 0 3.664 8 0.873 1)
Average genome size in population (length): 103.23
Average program size in population (points): 104.23
Average percent parens in population: 0.010
Minimum age in population: 55.28451057810162
Maximum age in population: 59.89248051136019
Average age in population: 57.54609827621623
Median age in population: 57.58562974609595
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.884
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.884
Total error diversity:				 0.501
Error (vector) diversity:			 0.571
Behavioral diversity:				 0.571
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 49780646
--- Timings ---
Current time: 1529615256600 milliseconds
Total Time:         129.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.5 seconds, 37.4%
Fitness Testing:     65.2 seconds, 50.2%
Report:              16.0 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 36061.85850000001
Test mean error for best: 18.03093
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -88.0730770721
Correct output: -91.3409907826 | Program output: -99.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 13.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -2.9357757377 
Correct output: 8.8462429043   | Program output: 5.8462429043  
Correct output: -139.3737677014 | Program output: -148.3737677014
Correct output: 15.9086340651  | Program output: -22.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: 2.924829468   
Correct output: 69.5371683437  | Program output: 43.5371683437 
Correct output: 61.0363157976  | Program output: 70.6449930571 
Correct output: -98.9344588134 | Program output: -78.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -118.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 39.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 9.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 1.0 1 8.0 1 6.1612 10 13.0 2 2.0889 10 8.0227 9 33.0 2 3.0 1 9.0 2 38.0 12 4.2732 10 6.0 11 26.0 2 9.6087 11 20.0 1 10.6016 8 40.0566 10 17.7314 10 19.8308 11 14.0 2 1.6525 11 13.0 2 29.4219 9 33.0 11]
Total: 584.3332
Mean: 11.686664
Genome size: 98
Size: 99
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3261.969998999999
Median total errors in population: 628.3832000000001
Error averages by case: (117.14592530000186 10.424 138.7338887 3.957 145.1806177000001 4.64 97.81021960000072 10.058 136.65550269999994 3.024 74.81260800000096 10.475 78.03732870000074 9.937 155.14747789999996 4.28 135.76419430000004 4.949 149.23646869999996 4.269 166.80704359999996 11.831 95.51137719999974 10.186 132.607441 5.148 155.25509219999998 3.635 121.70197749999804 7.847 148.951389 4.072 83.48806879999974 9.046 119.62964329999905 10.655 87.04193210000008 10.073 104.82075870000004 11.58 146.5706954000001 4.173 89.40863199999879 11.213 137.65205250000005 3.542 101.10975490000071 9.966 153.31990919999996 10.59)
Error minima by case: (0.8986 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.4161 7 4.1488 1 0.0 0 0.0 0 1.0 1 0.1557 1 0.0 0 1.0 1 1.9637 1 0.0 0 1.1628 7 2.0566 2 3.1596 1 0.3385 1 0.0 0 0.3298 1 0.0 0 6.7049 8 1.1613 1)
Average genome size in population (length): 104.362
Average program size in population (points): 105.362
Average percent parens in population: 0.010
Minimum age in population: 56.77821310199215
Maximum age in population: 60.68263980950178
Average age in population: 58.86129739103518
Median age in population: 58.90940671053158
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.882
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.882
Total error diversity:				 0.479
Error (vector) diversity:			 0.533
Behavioral diversity:				 0.534
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 52389820
--- Timings ---
Current time: 1529615260809 milliseconds
Total Time:         134.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.8 seconds, 37.1%
Fitness Testing:     67.6 seconds, 50.5%
Report:              16.5 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 36061.85850000001
Test mean error for best: 18.03093
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -88.0730770721
Correct output: -91.3409907826 | Program output: -99.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 13.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -2.9357757377 
Correct output: 8.8462429043   | Program output: 5.8462429043  
Correct output: -139.3737677014 | Program output: -148.3737677014
Correct output: 15.9086340651  | Program output: -22.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: 2.924829468   
Correct output: 69.5371683437  | Program output: 43.5371683437 
Correct output: 61.0363157976  | Program output: 70.6449930571 
Correct output: -98.9344588134 | Program output: -78.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -118.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 39.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 9.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 1.0 1 8.0 1 6.1612 10 13.0 2 2.0889 10 8.0227 9 33.0 2 3.0 1 9.0 2 38.0 12 4.2732 10 6.0 11 26.0 2 9.6087 11 20.0 1 10.6016 8 40.0566 10 17.7314 10 19.8308 11 14.0 2 1.6525 11 13.0 2 29.4219 9 33.0 11]
Total: 584.3332
Mean: 11.686664
Genome size: 98
Size: 99
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3374.021154599999
Median total errors in population: 626.6882000000002
Error averages by case: (134.1153856000017 10.528 130.0107716 3.899 136.39186950000007 4.574 115.82263190000062 10.148 130.3653685 3.113 92.24213690000082 10.431 96.2718304000009 9.812 148.32264179999996 4.429 127.6411836 4.72 140.7726801000001 4.208 157.96480649999998 11.72 113.2103726999998 10.305 125.15530239999998 5.186 149.0934031 3.652 140.3405704999987 7.849 140.7611767 4.0 101.01120969999947 8.911 136.22515629999978 10.689 106.35069720000054 10.335 122.70047129999998 11.437 138.4518346 4.102 105.732831799999 11.126 131.5596467 3.596 117.90866850000076 9.832 146.28250670000008 10.714)
Error minima by case: (0.9096 9 0.0 0 0.341 1 0.1612 2 0.0 0 0.0889 8 1.9357 7 0.0422 1 0.0 0 0.0 0 0.0 0 0.1557 2 0.0 0 2.0 1 0.0363 1 0.0 0 0.7032 7 0.9434 2 0.7314 1 0.1692 2 0.0 0 0.3298 2 0.0 0 4.3999 8 0.8755 1)
Average genome size in population (length): 104.705
Average program size in population (points): 105.705
Average percent parens in population: 0.009
Minimum age in population: 58.32483938464429
Maximum age in population: 62.07573305787901
Average age in population: 60.25015286597279
Median age in population: 60.32047743465046
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.472
Error (vector) diversity:			 0.515
Behavioral diversity:				 0.516
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 55007745
--- Timings ---
Current time: 1529615265015 milliseconds
Total Time:         138.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.1 seconds, 36.9%
Fitness Testing:     70.0 seconds, 50.6%
Report:              17.1 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 36350.08840000001
Test mean error for best: 18.17504
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -94.0730770721
Correct output: -91.3409907826 | Program output: -105.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 7.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -8.9357757377 
Correct output: 8.8462429043   | Program output: -0.1537570957 
Correct output: -139.3737677014 | Program output: -154.3737677014
Correct output: 15.9086340651  | Program output: -28.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -3.075170532  
Correct output: 69.5371683437  | Program output: 37.5371683437 
Correct output: 61.0363157976  | Program output: 64.6449930571 
Correct output: -98.9344588134 | Program output: -84.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -124.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 33.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 3.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 5.0 2 14.0 3 6.1612 10 7.0 1 2.0889 10 8.0227 9 27.0 2 9.0 12 15.0 2 44.0 12 4.2732 10 0.0 0 32.0 2 3.6087 10 14.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 8.0 2 1.6525 11 7.0 2 29.4219 9 27.0 11]
Total: 572.3332
Mean: 11.446664
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3429.047184500001
Median total errors in population: 625.6882000000002
Error averages by case: (120.55283910000183 10.439 147.06495729999997 4.016 153.20632229999998 4.676 103.31081020000059 10.008 147.71695229999997 3.074 78.59984310000131 10.391 80.51839590000095 9.673 167.51259749999994 4.354 143.70183970000002 4.234 157.4724115 4.366 175.03838759999996 11.726 100.70462899999984 10.213 141.46003279999996 5.335 164.0462078 3.578 124.59025809999851 7.821 158.18487820000004 4.123 86.8040591999998 8.784 123.89556909999881 10.571 91.12333640000016 10.203 110.07160010000021 11.446 155.74852820000004 4.205 92.14296389999859 11.228 148.34075410000003 3.566 104.51992910000087 9.727 163.85208199999997 11.11)
Error minima by case: (4.1163 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.1786 8 0.0643 8 0.1912 1 0.0 0 0.0 0 0.819 1 0.0381 2 0.0 0 0.2966 1 3.2879 1 0.0 0 0.6145 8 1.9434 2 0.7314 1 2.1692 2 0.0 0 0.0996 1 0.0 0 2.9771 8 0.1245 1)
Average genome size in population (length): 104.343
Average program size in population (points): 105.343
Average percent parens in population: 0.010
Minimum age in population: 59.41897028203311
Maximum age in population: 63.49851472045293
Average age in population: 61.62819014677332
Median age in population: 61.63738390703656
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.875
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.875
Total error diversity:				 0.435
Error (vector) diversity:			 0.486
Behavioral diversity:				 0.487
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 57616694
--- Timings ---
Current time: 1529615269171 milliseconds
Total Time:         142.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.2 seconds, 36.7%
Fitness Testing:     72.4 seconds, 50.9%
Report:              17.6 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 36867.40839999999
Test mean error for best: 18.43370
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -98.0730770721
Correct output: -91.3409907826 | Program output: -109.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 3.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -12.9357757377
Correct output: 8.8462429043   | Program output: -4.1537570957 
Correct output: -139.3737677014 | Program output: -158.3737677014
Correct output: 15.9086340651  | Program output: -32.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -7.075170532  
Correct output: 69.5371683437  | Program output: 33.5371683437 
Correct output: 61.0363157976  | Program output: 60.6449930571 
Correct output: -98.9344588134 | Program output: -88.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -128.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 29.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -0.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction tag_integer_285} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec integer_div float_max float_dec float_dec float_max float_dup_times float_dec tag_integer_285 float_dec float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 9.0 2 18.0 3 6.1612 10 3.0 1 2.0889 10 8.0227 9 23.0 2 13.0 12 19.0 2 48.0 12 4.2732 10 4.0 1 36.0 2 0.3913 10 10.0 1 10.6016 8 40.0566 10 17.7314 10 19.8308 11 4.0 2 1.6525 11 3.0 1 29.4219 9 23.0 2]
Total: 563.1158
Mean: 11.262316
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3500.3518517
Median total errors in population: 626.1781000000001
Error averages by case: (119.08732750000186 10.403 154.22489210000003 4.16 160.40014949999997 4.853 101.54584920000032 10.016 154.27266260000002 3.235 76.13775550000103 10.316 79.37055540000081 9.691 171.3709089 4.522 150.962485 4.401 165.0375493 4.566 180.62959419999999 11.864 99.14878550000003 10.226 148.80438509999996 5.859 171.7207318 3.806 120.51081429999896 8.097 165.5167982 4.31 85.58330799999969 8.806 122.38831229999873 10.579 90.15833430000025 10.181 108.3866451000003 11.411 163.64426610000004 4.456 91.63252339999858 11.165 155.9203799 3.776 101.85575640000083 9.762 170.43808210000003 11.142)
Error minima by case: (1.1014 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.0948 7 0.9357 6 0.2255 1 0.0 0 0.0 0 0.2549 2 0.0381 2 0.0 0 0.0 0 0.0363 1 0.9345 1 1.5022 5 0.9898 2 1.7314 1 0.1692 2 0.0 0 0.3298 2 0.0 0 4.6841 8 1.1549 1)
Average genome size in population (length): 104.825
Average program size in population (points): 105.825
Average percent parens in population: 0.009
Minimum age in population: 60.72761984176759
Maximum age in population: 64.77866203314602
Average age in population: 63.01555258319997
Median age in population: 63.05904731045246
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.891
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.891
Total error diversity:				 0.48
Error (vector) diversity:			 0.525
Behavioral diversity:				 0.525
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 60237720
--- Timings ---
Current time: 1529615273497 milliseconds
Total Time:         146.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.6 seconds, 36.5%
Fitness Testing:     74.8 seconds, 51.0%
Report:              18.2 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 36875.40839999999
Test mean error for best: 18.43770
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -98.0730770721
Correct output: -91.3409907826 | Program output: -109.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 3.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -12.9357757377
Correct output: 8.8462429043   | Program output: -4.1537570957 
Correct output: -139.3737677014 | Program output: -158.3737677014
Correct output: 15.9086340651  | Program output: -32.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -7.075170532  
Correct output: 69.5371683437  | Program output: 33.5371683437 
Correct output: 61.0363157976  | Program output: 60.6449930571 
Correct output: -98.9344588134 | Program output: -88.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -128.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 29.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -0.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush in2 in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 9.0 2 18.0 3 6.1612 10 3.0 1 2.0889 10 8.0227 9 23.0 2 13.0 12 19.0 2 48.0 12 4.2732 10 4.0 1 36.0 2 0.3913 10 10.0 1 10.6016 8 40.0566 10 17.7314 10 19.8308 11 4.0 2 1.6525 11 3.0 1 29.4219 9 23.0 2]
Total: 563.1158
Mean: 11.262316
Genome size: 113
Size: 114
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3397.196693099999
Median total errors in population: 623.6882000000002
Error averages by case: (123.58953220000139 10.473 143.2465369 3.944 148.84690140000004 4.584 103.72472270000046 10.195 144.0596484 3.191 81.34037470000074 10.467 84.88001970000079 9.917 162.22475839999998 4.885 139.5729409 4.372 154.5586794 4.428 168.21310630000008 11.74 100.65758410000008 10.307 141.4096484 6.786 159.39770590000003 3.704 117.31761639999891 9.088 155.99738509999995 4.248 89.57703289999995 9.038 124.98368549999907 10.689 93.26860490000003 10.191 108.10047980000019 11.405 153.38078860000005 4.395 92.01127139999879 11.132 144.9043163 3.674 107.21383900000083 10.037 160.68951380000001 11.14)
Error minima by case: (0.8986 9 0.0 0 0.0 0 0.1612 2 0.0 0 0.7888 8 2.4119 7 0.0642 1 0.0 0 0.0 0 0.0 0 0.0381 1 0.0 0 0.2515 1 0.3913 1 2.0 1 0.1671 5 1.9195 2 3.1596 1 0.1692 1 0.0 0 0.3298 1 0.0 0 0.8132 8 6.1505 1)
Average genome size in population (length): 103.641
Average program size in population (points): 104.641
Average percent parens in population: 0.010
Minimum age in population: 61.72761984176759
Maximum age in population: 66.30876344738351
Average age in population: 64.32242012372939
Median age in population: 64.35931059097766
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.868
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.868
Total error diversity:				 0.502
Error (vector) diversity:			 0.561
Behavioral diversity:				 0.562
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 62829071
--- Timings ---
Current time: 1529615277654 milliseconds
Total Time:         150.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.8 seconds, 36.3%
Fitness Testing:     77.2 seconds, 51.2%
Report:              18.8 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 36640.6755
Test mean error for best: 18.32034
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -153.3737677014
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 65.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_pop} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max integer_pop float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec integer_inc float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 14.0 2 43.0 12 0.2732 9 1.0 1 31.0 2 4.6087 10 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 562.3332
Mean: 11.246664
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3241.757967299998
Median total errors in population: 615.84545
Error averages by case: (115.31048790000155 10.439 140.34459099999992 3.668 146.05805690000008 4.251 93.08672870000062 10.126 142.28914939999996 3.232 73.11277020000092 10.508 76.08658030000085 9.952 160.4651918 4.783 139.50803420000003 4.883 149.51696289999998 4.142 168.9189361 11.848 89.80203449999989 10.184 138.28032669999996 6.902 158.64603919999996 3.652 96.73289339999899 9.824 151.86015270000001 3.912 81.04700059999973 9.081 115.08159719999914 10.539 84.66511190000038 10.05 96.87573530000002 11.299 148.93345480000005 4.123 81.4332787999987 11.119 143.14273290000003 3.605 98.8375464000009 10.107 158.6605735 10.833)
Error minima by case: (6.8986 9 0.0 0 0.0 0 0.1612 2 0.0 0 1.1786 8 1.0643 8 0.1254 1 0.0 0 0.0 0 0.0 0 0.1557 1 0.0 0 0.0 0 0.3913 1 0.0 0 9.301 8 5.9434 2 3.7314 1 0.1692 2 0.0 0 0.0305 2 0.0 0 9.7694 6 1.4955 1)
Average genome size in population (length): 103.489
Average program size in population (points): 104.489
Average percent parens in population: 0.010
Minimum age in population: 62.72761984176759
Maximum age in population: 67.53387776379446
Average age in population: 65.71487207382881
Median age in population: 65.76925086320145
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.88
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.88
Total error diversity:				 0.523
Error (vector) diversity:			 0.623
Behavioral diversity:				 0.624
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 65416533
--- Timings ---
Current time: 1529615282001 milliseconds
Total Time:         155.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.0 seconds, 36.1%
Fitness Testing:     79.7 seconds, 51.3%
Report:              19.4 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 36086.53620000001
Test mean error for best: 18.04327
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 60.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.3913 10 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 559.1158
Mean: 11.182316
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3349.721417599999
Median total errors in population: 601.5787
Error averages by case: (125.84977390000162 10.448 141.05379789999995 3.996 147.29870010000005 4.632 102.21075130000057 10.1 140.43381509999995 3.195 83.11984500000057 10.357 86.58240840000077 9.835 157.85033130000002 4.449 137.3573274 5.399 152.17491329999993 4.408 167.5084528 11.882 99.15412849999964 10.187 135.58933750000003 5.804 159.15361539999995 3.789 103.47771879999918 9.974 151.51434550000008 4.13 91.34656959999992 8.958 125.29204619999915 10.459 95.40078560000023 10.206 106.40115139999968 11.299 149.55660009999997 4.34 91.00337179999897 11.175 141.77447139999998 3.729 108.83430750000079 10.001 156.30585179999997 10.725)
Error minima by case: (3.8986 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.2744 8 2.2873 8 2.0403 1 0.0 0 0.0 0 0.0 1 0.2732 2 0.0 0 2.0 1 0.3913 1 2.0 1 0.2916 5 11.0566 2 0.5594 1 1.1692 2 0.0 0 0.3298 2 0.0 0 1.5013 6 0.3317 1)
Average genome size in population (length): 105.15
Average program size in population (points): 106.15
Average percent parens in population: 0.009
Minimum age in population: 64.57134994090836
Maximum age in population: 69.11407933268913
Average age in population: 67.1439861524635
Median age in population: 67.13645483831317
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.885
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.885
Total error diversity:				 0.476
Error (vector) diversity:			 0.581
Behavioral diversity:				 0.582
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 68045358
--- Timings ---
Current time: 1529615286287 milliseconds
Total Time:         159.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.2 seconds, 35.9%
Fitness Testing:     82.1 seconds, 51.5%
Report:              20.0 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 36167.6642
Test mean error for best: 18.08383
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_rot} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush float_cos in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_yankdup float_dup_times float_dec float_dec float_dec float_max float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_rot print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 105
Size: 106
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3288.766521499999
Median total errors in population: 595.4027000000001
Error averages by case: (119.70405620000135 10.453 141.51961509999998 4.058 148.3192776 4.729 100.43222050000084 10.257 139.0316365 3.131 77.19942720000091 10.338 83.2988074000008 9.685 156.2161349 4.114 138.7896632 5.503 152.40453169999998 4.295 167.5939754 11.829 97.10291809999987 10.326 134.75463889999997 4.503 158.8968386999999 3.631 96.70030279999918 9.819 150.9128067 4.035 85.51717780000017 8.799 123.10829219999945 10.526 90.34164199999992 10.247 102.11851400000013 11.316 148.47488479999998 4.143 87.84163079999885 11.199 139.91208329999998 3.567 102.99584080000085 9.758 154.80760489999997 10.511)
Error minima by case: (5.1014 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.0643 8 1.4087 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 3.0 1 0.3913 1 1.0 1 1.0033 8 13.0566 2 2.0447 2 1.3385 2 0.0 0 0.3475 2 0.0 0 11.1173 8 0.2602 1)
Average genome size in population (length): 106.829
Average program size in population (points): 107.829
Average percent parens in population: 0.009
Minimum age in population: 66.57667560644262
Maximum age in population: 70.30883397428235
Average age in population: 68.5387916902131
Median age in population: 68.55353410754932
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.865
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.865
Total error diversity:				 0.437
Error (vector) diversity:			 0.521
Behavioral diversity:				 0.522
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 70716370
--- Timings ---
Current time: 1529615290586 milliseconds
Total Time:         163.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.5 seconds, 35.7%
Fitness Testing:     84.6 seconds, 51.6%
Report:              20.6 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 36167.6642
Test mean error for best: 18.08383
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_flush} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_rot} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod integer_flush float_cos in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_yankdup float_dup_times float_dec float_dec float_dec float_max float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_rot print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 105
Size: 106
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3198.2699228999963
Median total errors in population: 579.3332
Error averages by case: (119.83140820000119 10.488 133.49183059999996 3.864 140.17320010000006 4.635 98.34953270000067 10.2 134.22558809999992 2.853 78.60678800000096 10.354 82.21026840000076 9.632 149.98277050000002 4.037 132.06386239999998 4.56 144.03923790000002 4.192 161.36184839999999 11.812 95.29928879999986 10.26 128.53424009999998 4.598 153.18593200000004 3.452 95.38589699999912 9.913 144.12469250000004 3.927 85.90683140000003 8.798 121.87014719999948 10.431 90.65368210000008 10.27 103.09770080000011 11.32 141.29403939999995 4.007 86.57706459999882 11.199 134.85138930000002 3.435 103.73795270000078 9.735 150.61872969999996 10.824)
Error minima by case: (5.8986 9 0.0 0 0.341 1 0.1612 2 0.0 0 0.4521 7 0.9357 8 1.4087 1 0.0 0 0.0 0 1.7663 1 0.2732 2 0.0 0 0.0 0 0.3913 2 1.0 1 0.7032 7 12.0566 2 0.1596 1 0.1692 2 0.0 0 0.3298 2 0.0 0 0.1185 8 2.127 1)
Average genome size in population (length): 106.324
Average program size in population (points): 107.324
Average percent parens in population: 0.009
Minimum age in population: 67.57667560644262
Maximum age in population: 71.79140451978311
Average age in population: 69.84187795332699
Median age in population: 69.88478423729855
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.386
Error (vector) diversity:			 0.463
Behavioral diversity:				 0.464
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 73374745
--- Timings ---
Current time: 1529615294875 milliseconds
Total Time:         168.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.8 seconds, 35.6%
Fitness Testing:     87.0 seconds, 51.8%
Report:              21.2 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 36429.1107
Test mean error for best: 18.21456
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 154.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 134.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 158.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 66.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 58.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 3.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 1.2732 10 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 37.0566 11 17.7314 10 22.8308 12 11.0 2 4.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3355.520602099998
Median total errors in population: 579.3332
Error averages by case: (122.5095087000018 10.44 140.73228009999997 4.1 147.33126450000006 4.815 107.86655660000095 10.168 141.49834429999996 3.049 80.34460030000108 10.329 85.22270310000086 9.593 156.88986259999993 4.258 138.77681029999997 4.667 152.0364529999999 4.395 167.8981684 11.776 104.50811849999974 10.218 135.90042619999994 4.808 160.3764414 3.678 99.21787439999912 9.889 151.34644410000007 4.214 88.55947399999978 8.739 130.23524199999906 10.433 93.26935770000023 10.271 109.95324009999985 11.25 149.37871420000008 4.246 94.89127979999864 11.188 142.75989830000003 3.667 106.07397020000077 9.658 157.2045693 10.89)
Error minima by case: (5.8986 10 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 8 0.9357 8 0.1443 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0 0 1.0 1 0.355 1 1.0 1 4.7032 8 7.9434 2 1.2686 1 0.1692 2 0.0 0 0.3298 1 0.0 0 10.4388 8 0.1179 1)
Average genome size in population (length): 106.965
Average program size in population (points): 107.965
Average percent parens in population: 0.009
Minimum age in population: 69.19470485025866
Maximum age in population: 73.31238319833174
Average age in population: 71.27288249836192
Median age in population: 71.34126697829014
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.892
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.892
Total error diversity:				 0.392
Error (vector) diversity:			 0.464
Behavioral diversity:				 0.465
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 76049182
--- Timings ---
Current time: 1529615299149 milliseconds
Total Time:         172.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.0 seconds, 35.4%
Fitness Testing:     89.5 seconds, 51.9%
Report:              21.8 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 36063.12540000001
Test mean error for best: 18.03156
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times integer_dup_times float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_frominteger float_dec float_yank float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec integer_rot float_dec float_dec float_max float_dec float_dec float_max float_dec float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3468.9349212999987
Median total errors in population: 601.4027000000001
Error averages by case: (136.27430870000245 10.535 138.17222879999986 4.139 144.6688108 4.844 117.80186160000088 10.228 137.76415799999992 3.129 93.9885434000013 10.373 97.87360600000092 9.669 155.860514 4.288 136.2989356 4.557 149.9184063 4.46 165.95249669999995 11.739 114.5574968999989 10.325 134.44278239999994 4.907 157.6708379 3.689 111.03618279999905 9.798 148.83232450000006 4.212 102.9008940999987 8.809 140.10074539999917 10.551 107.9672867000012 10.369 119.43954529999931 11.281 147.3538837000001 4.316 105.1687356999987 11.211 139.52785110000002 3.669 119.9453693000008 9.763 153.60311560000002 10.953)
Error minima by case: (5.4154 8 0.0 0 0.0 0 0.1612 1 0.0 0 0.0889 8 0.0643 8 0.0642 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 1.0 1 0.3913 1 2.0 1 0.2968 8 5.9434 2 2.1596 1 0.2992 2 0.0 0 0.3298 1 0.0 0 8.6841 8 1.1933 1)
Average genome size in population (length): 107.619
Average program size in population (points): 108.619
Average percent parens in population: 0.009
Minimum age in population: 70.52208779313231
Maximum age in population: 74.82796935555245
Average age in population: 72.60527989750811
Median age in population: 72.61375455065888
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.9
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.9
Total error diversity:				 0.428
Error (vector) diversity:			 0.505
Behavioral diversity:				 0.505
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 78739869
--- Timings ---
Current time: 1529615303453 milliseconds
Total Time:         176.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.2 seconds, 35.2%
Fitness Testing:     91.9 seconds, 52.0%
Report:              22.4 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 36855.7512
Test mean error for best: 18.42788
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_mod} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction tag_integer_285} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_rot} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_mod float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_mod float_dec float_max float_dec integer_max float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec integer_div float_max float_dec float_dec float_dec integer_pop float_max float_dec float_dec float_max float_dup_times float_dec tag_integer_285 float_dec float_dec float_dec float_dup_items float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_rot print_float float_stackdepth tagged_318)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 110
Size: 111
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2841.3557629999964
Median total errors in population: 586.3332
Error averages by case: (109.4192080000014 10.427 116.51896389999999 3.776 123.05802990000004 4.455 87.81988270000092 10.052 115.98452779999997 2.741 66.55702600000083 10.332 70.24804750000084 9.611 135.22144289999997 4.017 111.7733401 4.016 127.90991769999997 4.086 144.08530089999994 11.689 84.68973789999993 10.109 111.46611889999997 4.998 134.87349840000005 3.295 85.8193298999995 9.703 128.14827010000005 3.843 75.20298260000021 8.701 111.36513629999955 10.356 79.9370707999997 10.181 90.68607529999994 11.241 125.86883720000009 3.891 75.2748200999988 11.12 117.4418167 3.313 92.95768890000085 9.685 132.2946925 11.096)
Error minima by case: (1.1014 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.9357 7 0.1283 1 0.0 0 0.0 0 1.0 1 0.1557 2 0.0 0 0.0 0 0.355 1 1.0 1 1.9971 7 11.9434 2 1.9133 1 0.1692 2 0.0 1 0.3475 1 0.0 0 1.4134 9 0.1549 1)
Average genome size in population (length): 107.074
Average program size in population (points): 108.074
Average percent parens in population: 0.009
Minimum age in population: 71.52208779313231
Maximum age in population: 75.8924760319151
Average age in population: 73.89982033371406
Median age in population: 73.94734433255506
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.884
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.884
Total error diversity:				 0.414
Error (vector) diversity:			 0.511
Behavioral diversity:				 0.512
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 81416894
--- Timings ---
Current time: 1529615307757 milliseconds
Total Time:         181.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.5 seconds, 35.1%
Fitness Testing:     94.4 seconds, 52.2%
Report:              23.0 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 36360.8458
Test mean error for best: 18.18042
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec float_mod integer_flush in2 in2 integer_dec integer_inc float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max integer_add float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 113
Size: 114
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3334.669233599997
Median total errors in population: 583.2245
Error averages by case: (122.18825760000198 10.461 141.81036229999998 4.084 148.28172380000007 4.783 99.20513230000086 10.031 143.81988059999995 3.081 80.82917260000103 10.355 82.71945500000099 9.628 160.55943260000004 4.275 140.6221882 4.238 152.93563439999997 4.423 170.46089739999994 11.807 95.98879689999985 10.107 138.25093339999995 5.212 161.86232809999998 3.658 95.79658859999962 9.681 153.18918090000005 4.194 88.58091919999974 8.773 121.95677499999903 10.301 92.73356420000005 10.247 103.51984289999986 11.195 151.37612200000012 4.261 86.92682169999867 11.138 144.84842870000006 3.633 106.39944280000088 9.738 159.35735239999994 11.146)
Error minima by case: (0.1014 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.4521 7 0.9357 7 0.2775 1 0.0 0 0.0 0 1.0 1 0.2732 1 0.0 0 0.0 0 0.355 1 1.0 1 4.7032 7 11.9434 2 1.8404 1 0.1692 2 0.0 0 0.3298 1 0.0 0 14.6841 8 0.194 1)
Average genome size in population (length): 106.326
Average program size in population (points): 107.326
Average percent parens in population: 0.009
Minimum age in population: 72.71760328914533
Maximum age in population: 77.31170920007963
Average age in population: 75.2572729427759
Median age in population: 75.24905567673972
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.867
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.867
Total error diversity:				 0.398
Error (vector) diversity:			 0.472
Behavioral diversity:				 0.474
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 84075207
--- Timings ---
Current time: 1529615311984 milliseconds
Total Time:         185.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.7 seconds, 34.9%
Fitness Testing:     96.8 seconds, 52.3%
Report:              23.6 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 36325.8458
Test mean error for best: 18.16292
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec float_mod integer_flush in2 in2 integer_dec integer_inc float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max integer_add float_dec float_dec print_integer float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 2.0 2 11.0 3 6.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 4.2732 10 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 11.0 2 1.6525 11 10.0 1 29.4219 9 30.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 113
Size: 114
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3154.160175299998
Median total errors in population: 600.5114000000001
Error averages by case: (121.45841970000188 10.532 127.60654749999996 3.919 133.80608909999998 4.607 103.21323500000088 10.043 129.0080061 2.897 79.83367640000118 10.42 81.59599760000083 9.667 147.31539669999998 4.244 126.49392259999998 3.98 138.63922889999992 4.267 155.26224349999998 11.589 99.78701329999964 10.127 124.28935969999998 5.285 145.54053010000007 3.452 96.44590109999923 9.627 139.41648029999996 4.032 87.93904379999962 8.817 124.66880809999894 10.352 92.20126440000016 10.286 104.66471599999987 11.231 137.31072280000004 4.092 87.57390849999872 11.146 129.8815394 3.452 105.72954390000076 9.752 145.46358080000002 11.199)
Error minima by case: (2.41 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 0.9357 7 0.9578 1 0.0 0 1.0 1 0.0 0 0.2732 2 0.0 0 0.0 1 0.355 1 1.0 1 3.7032 5 7.9403 2 7.1596 1 0.1692 1 0.0 0 0.0597 2 0.0 0 2.6378 8 3.7398 1)
Average genome size in population (length): 105.726
Average program size in population (points): 106.726
Average percent parens in population: 0.009
Minimum age in population: 73.71760328914533
Maximum age in population: 78.77104972453385
Average age in population: 76.55387401271567
Median age in population: 76.5714122066539
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.865
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.865
Total error diversity:				 0.405
Error (vector) diversity:			 0.474
Behavioral diversity:				 0.474
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 86718682
--- Timings ---
Current time: 1529615316183 milliseconds
Total Time:         189.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.9 seconds, 34.8%
Fitness Testing:     99.2 seconds, 52.4%
Report:              24.2 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 36101.25130000001
Test mean error for best: 18.05063
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_rot} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_min float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_yankdup float_dup_times float_dec float_dec float_dec float_max float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_rot print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2785.0745434999967
Median total errors in population: 588.5114000000001
Error averages by case: (111.10117370000161 10.428 109.52251309999994 3.658 116.04979330000006 4.399 93.18985050000082 10.159 108.13326789999992 2.691 67.329402500001 10.361 73.27035460000091 9.574 129.0308301 3.888 104.61652160000001 3.964 120.80354419999995 3.994 138.11213870000003 11.647 89.99463110000018 10.208 105.15011669999998 5.18 125.15758830000003 3.259 86.7171682999993 9.467 121.51032590000007 3.817 76.54248820000053 8.669 116.23945259999947 10.413 81.3917583999997 10.279 96.29217190000006 11.263 119.36899680000006 3.858 81.14782609999868 11.177 109.12797670000005 3.214 93.8195491000008 9.626 125.1761032 11.086)
Error minima by case: (7.8986 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 0.0643 7 0.9578 1 0.0 0 0.0 0 3.1218 1 0.2732 2 0.0 0 0.0 0 0.355 1 3.0 1 1.0033 5 1.9434 2 1.9372 1 1.8308 1 0.0 0 0.3298 1 0.0 0 0.542 7 0.1771 1)
Average genome size in population (length): 106.106
Average program size in population (points): 107.106
Average percent parens in population: 0.009
Minimum age in population: 74.71760328914533
Maximum age in population: 79.81382184899103
Average age in population: 77.83667977131942
Median age in population: 77.87608014315641
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.866
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.866
Total error diversity:				 0.408
Error (vector) diversity:			 0.472
Behavioral diversity:				 0.474
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 89371582
--- Timings ---
Current time: 1529615320596 milliseconds
Total Time:         193.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.2 seconds, 34.7%
Fitness Testing:    101.6 seconds, 52.5%
Report:              24.8 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 35842.291900000004
Test mean error for best: 17.92115
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec integer_mult float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_yankdup float_dup_times float_dec float_dec integer_max float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 103
Size: 104
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3191.7451658999976
Median total errors in population: 579.2245
Error averages by case: (125.16515870000192 10.462 126.79215959999992 3.837 133.25496850000002 4.505 106.90975660000092 10.185 128.37237199999998 2.995 81.38474780000094 10.377 85.65075390000094 9.589 145.9594934 4.094 125.86462350000001 4.048 137.79887139999997 4.197 154.7588893 11.691 103.81820109999968 10.262 124.30652909999999 5.618 145.87079920000002 3.532 96.96479459999912 9.542 138.69495999999995 3.987 91.22662149999975 8.738 130.2423894999991 10.475 96.16901540000028 10.281 110.49989399999994 11.213 136.27493120000005 4.068 94.60127889999865 11.144 129.42698649999997 3.44 107.10627360000085 9.651 145.59669660000003 11.103)
Error minima by case: (6.8986 9 0.0 0 0.0 0 0.1612 2 0.0 0 1.2848 7 3.0227 8 3.4908 1 0.0 0 1.0 1 0.0 0 0.2732 1 0.0 0 1.0 1 0.3913 1 3.0 1 2.7032 6 16.0566 2 0.4076 1 0.1692 2 1.0 1 0.3298 2 0.0 0 12.6841 8 0.7026 1)
Average genome size in population (length): 106.024
Average program size in population (points): 107.024
Average percent parens in population: 0.009
Minimum age in population: 76.8549576823037
Maximum age in population: 81.36984256391851
Average age in population: 79.11773821130926
Median age in population: 79.16333705485064
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.878
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.878
Total error diversity:				 0.375
Error (vector) diversity:			 0.443
Behavioral diversity:				 0.444
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 92022282
--- Timings ---
Current time: 1529615324875 milliseconds
Total Time:         198.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.5 seconds, 34.6%
Fitness Testing:    104.0 seconds, 52.5%
Report:              25.5 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 40045.10480000003
Test mean error for best: 20.02255
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dec float_mult float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max integer_mod float_dec integer_dup_items float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_max float_dec integer_dup_times float_max float_dec float_dec float_dec float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 6.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 4.2732 10 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 11.0 2 1.6525 11 10.0 1 29.4219 9 30.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 103
Size: 104
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2939.541670599997
Median total errors in population: 576.1158
Error averages by case: (112.59934360000203 10.36 121.11684859999991 3.981 127.48504390000006 4.658 93.66639450000102 9.99 120.65277909999995 2.881 67.99384410000128 10.279 71.60877700000088 9.548 139.22101980000002 4.086 116.84862830000002 3.774 133.13900719999987 4.311 148.77809520000002 11.627 90.5309679999996 10.043 115.73645459999997 5.513 138.40698510000007 3.479 85.68209379999902 9.378 133.38745490000002 4.116 77.86382940000031 8.635 116.7072444999989 10.226 82.54541389999956 10.259 94.23628109999987 11.25 132.05107950000004 4.17 77.71906729999846 11.161 122.18077910000002 3.372 94.44913120000083 9.625 137.04310690000003 11.17)
Error minima by case: (1.59 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.2744 8 0.9357 7 2.2846 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0 0 0.0 0 0.355 2 3.0 1 7.2968 6 10.0566 2 3.7314 1 2.1692 1 0.0 0 0.3475 2 0.0 0 17.6841 8 0.4636 1)
Average genome size in population (length): 106.082
Average program size in population (points): 107.082
Average percent parens in population: 0.009
Minimum age in population: 77.94557714273846
Maximum age in population: 82.51403233605534
Average age in population: 80.39785782188694
Median age in population: 80.42719129578511
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.867
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.867
Total error diversity:				 0.371
Error (vector) diversity:			 0.422
Behavioral diversity:				 0.423
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 94674606
--- Timings ---
Current time: 1529615329096 milliseconds
Total Time:         202.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.7 seconds, 34.4%
Fitness Testing:    106.4 seconds, 52.6%
Report:              26.1 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 36360.8458
Test mean error for best: 18.18042
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_flush} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (integer_mult integer_flush in2 integer_dec integer_yank integer_flush in2 in2 integer_dec integer_inc float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max integer_add float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3008.3675283999974
Median total errors in population: 592.4027000000001
Error averages by case: (112.34142830000127 10.4 126.80743099999994 3.958 133.16799100000006 4.615 93.18514750000091 10.076 125.57207289999998 2.952 69.493620800001 10.367 75.1148466000009 9.595 143.97028780000002 4.215 122.65266410000002 4.011 138.32000919999996 4.31 151.840924 11.705 89.67192550000004 10.119 121.55813019999995 5.599 142.38362849999996 3.498 86.0139194999992 9.444 138.8055246 4.081 77.85004820000023 8.65 115.04129579999943 10.379 82.66861279999965 10.235 93.30125290000024 11.242 137.0374959000001 4.19 78.98897629999868 11.225 126.47368380000005 3.425 95.41574870000085 9.601 141.70386249999999 11.095)
Error minima by case: (3.5603 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 3.0643 7 2.5092 1 0.0 0 1.0 1 2.0 1 0.2732 2 0.0 0 1.0 1 0.3913 1 3.0 1 1.2968 5 19.9434 2 0.1596 1 0.1692 2 0.0 0 0.3298 2 0.0 0 5.9481 8 0.1933 1)
Average genome size in population (length): 106.077
Average program size in population (points): 107.077
Average percent parens in population: 0.009
Minimum age in population: 78.94557714273846
Maximum age in population: 83.69834726048278
Average age in population: 81.7027255390012
Median age in population: 81.70027268993428
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.896
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.896
Total error diversity:				 0.388
Error (vector) diversity:			 0.462
Behavioral diversity:				 0.463
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 97326744
--- Timings ---
Current time: 1529615333369 milliseconds
Total Time:         206.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.9 seconds, 34.3%
Fitness Testing:    108.9 seconds, 52.7%
Report:              26.7 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 36141.50300000001
Test mean error for best: 18.07075
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_sub float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_swap float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 105
Size: 106
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2925.503829499998
Median total errors in population: 578.3332
Error averages by case: (114.98206510000166 10.423 118.59345209999995 3.714 125.16639730000003 4.445 92.3961000000011 10.041 119.75017549999998 2.832 71.87417280000096 10.354 73.80764360000086 9.592 138.25309200000004 3.985 116.27748480000004 3.948 129.44932519999995 4.021 146.49292869999996 11.624 88.68520480000025 10.09 113.93252919999995 5.323 137.21347770000003 3.456 87.73862749999907 9.448 130.74761810000004 3.871 80.63408680000029 8.697 113.75342029999943 10.34 84.30090979999977 10.195 93.97777380000002 11.168 128.23006850000007 3.948 77.15114859999876 11.136 120.6912709 3.297 98.39572520000087 9.668 136.26813119999997 11.125)
Error minima by case: (16.666 9 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 2.0643 7 1.0672 1 0.0 0 0.0 0 0.6002 1 0.2732 1 0.0 0 0.0 0 0.3913 2 2.472 1 2.4105 7 19.9434 2 3.5567 1 0.1692 2 0.0 0 0.3298 1 0.0 0 15.6841 8 0.188 1)
Average genome size in population (length): 106.366
Average program size in population (points): 107.366
Average percent parens in population: 0.009
Minimum age in population: 81.00997149250036
Maximum age in population: 85.1309555840323
Average age in population: 83.01308283421814
Median age in population: 83.06431289803646
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.902
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.902
Total error diversity:				 0.372
Error (vector) diversity:			 0.437
Behavioral diversity:				 0.437
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 99986043
--- Timings ---
Current time: 1529615337550 milliseconds
Total Time:         210.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.1 seconds, 34.2%
Fitness Testing:    111.3 seconds, 52.8%
Report:              27.3 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 36280.550500000005
Test mean error for best: 18.14028
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_mod} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult integer_mod float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3060.439099299998
Median total errors in population: 582.3332
Error averages by case: (112.93085490000144 10.401 130.02418469999992 3.964 136.4332331 4.656 91.76667440000082 10.034 128.86486019999995 2.966 71.0788439000008 10.332 75.48494150000083 9.597 148.5178081 4.201 124.45342650000002 3.866 141.35936660000002 4.321 157.55373539999997 11.679 88.34970759999997 10.102 125.31781079999995 5.537 146.53689490000005 3.612 85.96145899999922 9.533 142.14067030000015 4.118 79.19431370000035 8.697 114.2000947999995 10.307 83.53544029999995 10.185 94.73383470000007 11.218 140.16497550000003 4.223 80.71842869999875 11.215 129.95338180000005 3.459 97.6956027000008 9.649 144.37755520000002 11.219)
Error minima by case: (6.8986 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 8 0.0189 7 2.9358 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0 0 1.0 1 0.3913 2 5.0 1 1.7032 5 11.9434 2 3.9134 1 0.6615 1 0.0 0 0.3298 1 0.0 0 11.6841 8 0.2582 1)
Average genome size in population (length): 105.85
Average program size in population (points): 106.85
Average percent parens in population: 0.009
Minimum age in population: 82.06911064412583
Maximum age in population: 86.43606157047029
Average age in population: 84.41093359916167
Median age in population: 84.4703952832796
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.905
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.905
Total error diversity:				 0.381
Error (vector) diversity:			 0.438
Behavioral diversity:				 0.44
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 102632668
--- Timings ---
Current time: 1529615341731 milliseconds
Total Time:         215.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.3 seconds, 34.1%
Fitness Testing:    113.8 seconds, 52.9%
Report:              27.8 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 35938.51270000001
Test mean error for best: 17.96926
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_rot} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_min float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_yankdup float_dup_times float_dec float_dec float_dec float_max float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_rot print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 2.0 2 11.0 3 6.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 4.2732 10 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 11.0 2 1.6525 11 10.0 1 29.4219 9 30.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3025.6781162999982
Median total errors in population: 579.2245
Error averages by case: (117.90812550000165 10.459 120.81326889999993 3.719 127.25331110000002 4.388 100.94526670000103 10.074 120.92016649999997 2.831 75.31620950000111 10.405 80.44071310000083 9.603 140.47155349999994 4.038 117.11334 3.69 131.58686179999995 4.045 149.43133610000004 11.612 97.90180879999993 10.124 115.92481009999996 5.634 138.07263860000003 3.438 91.72357689999914 9.35 133.2151365 3.851 83.97053669999993 8.74 124.35861139999916 10.356 88.72408489999977 10.26 103.26094909999996 11.19 130.72876690000004 3.956 87.57787429999854 11.15 121.92600020000002 3.293 101.4004830000007 9.671 137.60268620000002 11.213)
Error minima by case: (2.8986 9 0.0 0 0.341 1 0.1612 2 0.0 0 0.0889 8 1.9357 7 0.0642 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0 0 2.0 1 0.355 1 5.0 1 3.2968 7 9.3867 2 0.1596 1 0.1692 1 1.0 1 0.3475 1 0.0 0 6.6841 8 0.1179 1)
Average genome size in population (length): 105.747
Average program size in population (points): 106.747
Average percent parens in population: 0.009
Minimum age in population: 83.52352244609666
Maximum age in population: 88.18798768886421
Average age in population: 85.7097660306792
Median age in population: 85.7089094535778
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.887
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.887
Total error diversity:				 0.392
Error (vector) diversity:			 0.444
Behavioral diversity:				 0.445
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 105276468
--- Timings ---
Current time: 1529615345938 milliseconds
Total Time:         219.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.5 seconds, 34.0%
Fitness Testing:    116.2 seconds, 53.0%
Report:              28.4 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 36238.550500000005
Test mean error for best: 18.11928
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max integer_dup_times float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 2.0 2 11.0 3 6.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 4.2732 10 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 11.0 2 1.6525 11 10.0 1 29.4219 9 30.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2943.0433165999984
Median total errors in population: 578.3332
Error averages by case: (114.40627170000141 10.41 120.89147649999994 3.799 126.42945330000005 4.493 89.4397150000008 10.001 121.55374179999998 2.95 72.86390470000083 10.343 74.79728780000083 9.555 140.21376290000003 4.001 117.65676640000005 3.986 132.10268769999996 4.107 147.69180610000004 11.643 86.28451940000016 10.066 115.421601 5.655 137.98096589999997 3.505 86.47052639999914 9.363 132.14408079999998 3.929 80.1593404000005 8.668 112.82261999999962 10.304 86.15137689999985 10.205 93.89318870000002 11.172 130.10394570000005 4.02 78.2060234999988 11.132 122.3537519 3.367 97.7120131000008 9.624 137.834489 11.16)
Error minima by case: (5.8986 9 0.0 0 0.0 0 0.1612 2 0.0 0 1.2848 8 3.9357 9 0.0403 1 0.0 0 1.0 1 2.9835 1 0.2732 1 0.0 0 1.0 1 0.3832 1 2.0 1 1.0033 8 4.606 2 4.7314 1 0.3385 1 0.0 0 0.3298 1 0.0 0 8.5828 8 0.0137 1)
Average genome size in population (length): 105.873
Average program size in population (points): 106.873
Average percent parens in population: 0.009
Minimum age in population: 84.52352244609666
Maximum age in population: 89.10028330502124
Average age in population: 87.07312784805006
Median age in population: 87.10989628089877
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.896
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.896
Total error diversity:				 0.372
Error (vector) diversity:			 0.432
Behavioral diversity:				 0.432
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 107923431
--- Timings ---
Current time: 1529615350239 milliseconds
Total Time:         223.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.7 seconds, 33.9%
Fitness Testing:    118.7 seconds, 53.1%
Report:              28.9 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 36113.5455
Test mean error for best: 18.05677
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times integer_min float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_yankdup float_dec float_dec float_yankdup float_dup_times float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_add float_max integer_add print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 2.0 2 11.0 3 6.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 4.2732 10 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 11.0 2 1.6525 11 10.0 1 29.4219 9 30.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 103
Size: 104
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3053.2590374999977
Median total errors in population: 583.3332
Error averages by case: (118.57440800000164 10.471 122.9204085 3.875 129.03762470000004 4.538 97.48014360000103 10.177 125.02527549999999 3.064 75.03455250000106 10.388 80.84618470000098 9.616 141.76623370000002 4.361 122.18508519999997 3.929 133.92150739999997 4.235 149.3912177 11.598 94.42794239999975 10.225 120.06809889999998 5.863 142.59748739999998 3.574 91.4802431999989 9.425 135.27940859999998 4.057 84.31794300000007 8.736 121.13372309999923 10.436 89.1109403000002 10.324 100.8100746999998 11.284 133.4273373 4.181 86.23956909999865 11.217 126.18936709999996 3.436 100.83464610000088 9.681 141.3236148 11.145)
Error minima by case: (2.8837 9 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.0189 8 0.3067 1 0.0 0 0.0 0 0.4285 1 0.2732 1 0.0 0 0.4628 1 0.355 2 1.0 1 2.2968 8 9.9434 2 1.1596 1 0.1692 1 0.0 0 0.3298 1 0.0 0 2.5503 8 0.2847 1)
Average genome size in population (length): 105.541
Average program size in population (points): 106.541
Average percent parens in population: 0.009
Minimum age in population: 85.82512124028914
Maximum age in population: 90.3160069846712
Average age in population: 88.30266498704728
Median age in population: 88.3374629755618
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.394
Error (vector) diversity:			 0.456
Behavioral diversity:				 0.457
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 110562144
--- Timings ---
Current time: 1529615354403 milliseconds
Total Time:         227.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        76.9 seconds, 33.8%
Fitness Testing:    121.2 seconds, 53.2%
Report:              29.5 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 36101.25130000001
Test mean error for best: 18.05063
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 157.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 137.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 161.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 69.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 61.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_div} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_rot} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318} {:instruction integer_flush})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult integer_div float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_min float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_yankdup float_dup_times float_dec float_dec float_dec float_max float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_add float_max integer_rot print_float float_stackdepth tagged_318 integer_flush)
Errors: [48.8837 10 3.0 2 12.0 3 6.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 4.2732 10 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 40.0566 10 17.7314 10 19.8308 11 10.0 1 1.6525 11 9.0 2 29.4219 9 29.0 11]
Total: 558.3332
Mean: 11.166664
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2861.443473299998
Median total errors in population: 577.3332
Error averages by case: (108.53560780000143 10.377 118.90527589999998 3.762 125.42654450000005 4.429 83.75836100000087 10.053 120.78440369999998 2.879 65.57289990000089 10.304 71.39455000000083 9.529 138.1075809 4.057 116.55040129999999 3.785 130.00365699999995 4.091 147.95360439999996 11.681 80.70552570000046 10.106 114.5567896 5.645 138.0892441 3.49 80.84035539999917 9.416 131.21254510000006 3.907 73.97441300000042 8.625 108.18051719999946 10.331 78.88208709999945 10.143 88.0863147000004 11.23 129.03538920000003 4.001 73.13110699999875 11.149 121.86359900000004 3.329 91.73533540000078 9.58 137.05536440000003 11.203)
Error minima by case: (1.1014 8 0.0 0 0.0 0 0.1612 1 0.0 0 0.8154 8 4.0643 8 0.5688 1 0.0 0 0.0 0 5.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 4.0 1 6.7032 5 19.9434 2 2.6079 1 0.1692 2 0.0 0 0.3475 2 0.0 0 0.6841 7 0.7762 1)
Average genome size in population (length): 105.896
Average program size in population (points): 106.896
Average percent parens in population: 0.009
Minimum age in population: 87.2022642695882
Maximum age in population: 91.58024495238843
Average age in population: 89.6040742973046
Median age in population: 89.66670397089457
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.906
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.906
Total error diversity:				 0.38
Error (vector) diversity:			 0.454
Behavioral diversity:				 0.455
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 113209731
--- Timings ---
Current time: 1529615358590 milliseconds
Total Time:         231.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        78.1 seconds, 33.7%
Fitness Testing:    123.6 seconds, 53.3%
Report:              30.0 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 36947.3562
Test mean error for best: 18.47368
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 60.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_mod} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult integer_mod float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_sub float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.3913 10 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 557.1158
Mean: 11.142316
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3022.6198606999974
Median total errors in population: 578.7245
Error averages by case: (117.95064170000181 10.418 122.50630459999995 3.847 128.94963960000013 4.544 98.11674700000093 9.994 121.72999890000001 2.818 74.6037607000011 10.373 78.71441030000095 9.609 139.12796930000005 4.137 117.9839368 3.731 133.97281519999993 4.188 150.64999229999998 11.641 95.03719159999991 10.062 115.85718080000005 5.497 138.88362769999995 3.416 91.38233009999912 9.469 134.59697760000006 4.023 83.70942140000011 8.704 120.73794449999914 10.302 87.88473249999986 10.232 100.89903709999972 11.248 132.77834390000004 4.071 86.89726709999854 11.276 122.49920780000001 3.284 101.20880360000083 9.673 138.31157860000002 11.073)
Error minima by case: (0.4383 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 7 0.9357 7 0.1254 1 0.0 0 1.0 1 3.0 1 0.2732 1 0.0 0 0.0 0 0.355 2 5.0 1 1.0033 5 15.9434 2 2.1596 1 1.3385 1 0.0 0 0.3298 1 0.0 0 8.6841 8 0.6629 1)
Average genome size in population (length): 105.986
Average program size in population (points): 106.986
Average percent parens in population: 0.009
Minimum age in population: 88.82721149796149
Maximum age in population: 93.02196387292913
Average age in population: 90.88048810219124
Median age in population: 90.8801761447009
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.901
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.901
Total error diversity:				 0.373
Error (vector) diversity:			 0.435
Behavioral diversity:				 0.435
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 115859656
--- Timings ---
Current time: 1529615362880 milliseconds
Total Time:         236.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        79.3 seconds, 33.6%
Fitness Testing:    126.0 seconds, 53.4%
Report:              30.6 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 36403.24850000001
Test mean error for best: 18.20162
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_pop} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_max integer_pop float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_max float_dup_times float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2970.9843929999975
Median total errors in population: 595.4027000000001
Error averages by case: (116.73635260000157 10.453 116.59826669999998 3.835 123.03595630000004 4.487 100.98517780000073 10.062 118.23557960000001 2.976 74.6040774000009 10.426 77.27551450000084 9.621 134.90416380000002 4.041 115.18535100000003 3.937 128.36339249999992 4.148 145.3704703 11.674 97.43215209999988 10.116 112.01880500000001 5.636 136.42088350000003 3.587 91.84965359999937 9.403 128.7709207 4.016 83.08153990000037 8.748 122.33517649999938 10.439 87.80378469999974 10.261 102.30773170000013 11.377 127.25479210000002 4.08 87.17491379999893 11.303 119.61676250000002 3.417 100.69526420000079 9.7 134.0857102 11.099)
Error minima by case: (3.544 3 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 7 2.0643 3 0.3067 1 0.0 0 0.0 0 4.0 1 0.2732 1 0.0 0 0.0 0 0.3913 1 5.0 1 3.7032 8 0.0566 2 1.8404 2 0.1692 2 1.0 1 0.3298 2 0.0 0 4.6841 8 0.356 1)
Average genome size in population (length): 106.304
Average program size in population (points): 107.304
Average percent parens in population: 0.009
Minimum age in population: 89.88392044751535
Maximum age in population: 94.12079632627444
Average age in population: 92.19474113056395
Median age in population: 92.24183973726723
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.902
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.902
Total error diversity:				 0.403
Error (vector) diversity:			 0.464
Behavioral diversity:				 0.467
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 118517568
--- Timings ---
Current time: 1529615367139 milliseconds
Total Time:         240.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        80.6 seconds, 33.5%
Fitness Testing:    128.4 seconds, 53.4%
Report:              31.3 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 36411.90550000001
Test mean error for best: 18.20595
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_swap in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dup_times float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3240.6816095999984
Median total errors in population: 599.8332
Error averages by case: (121.13490310000209 10.461 135.667293 3.872 140.95822460000008 4.537 101.92301100000083 10.061 136.05844479999996 2.998 79.64440110000108 10.373 83.71356950000086 9.618 153.68473400000002 4.334 131.4529226 3.895 146.28089319999992 4.219 163.2383214 11.69 98.29635979999969 10.103 129.63079119999998 5.932 151.8166506 3.586 96.06122129999909 9.462 146.86688370000002 4.034 86.99545039999983 8.735 122.85783739999889 10.457 92.2922170000001 10.163 105.47480779999978 11.337 144.72139490000004 4.143 88.67203559999876 11.305 137.0745242 3.483 104.55448780000073 9.698 151.9282296 11.186)
Error minima by case: (0.41 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.3973 7 0.0643 9 0.0642 1 0.0 0 0.0 0 3.0 1 0.2732 1 0.0 0 4.0 1 0.355 1 5.0 1 0.2405 8 9.9434 2 0.1596 1 1.8308 2 0.0 0 0.3298 2 0.0 0 6.6841 7 0.6211 1)
Average genome size in population (length): 106.059
Average program size in population (points): 107.059
Average percent parens in population: 0.009
Minimum age in population: 91.302503787305
Maximum age in population: 95.33827776083788
Average age in population: 93.4336160843246
Median age in population: 93.40888775905353
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.922
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.922
Total error diversity:				 0.416
Error (vector) diversity:			 0.498
Behavioral diversity:				 0.499
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 121169219
--- Timings ---
Current time: 1529615371530 milliseconds
Total Time:         244.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        81.8 seconds, 33.4%
Fitness Testing:    130.9 seconds, 53.5%
Report:              31.8 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 36411.90550000001
Test mean error for best: 18.20595
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_swap in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dup_times float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3277.7048739999973
Median total errors in population: 582.3332
Error averages by case: (124.6917157000017 10.43 133.76407319999998 3.945 140.04038040000006 4.693 103.97259230000105 10.051 136.23409690000003 2.968 83.72766880000111 10.331 86.26870730000093 9.602 152.6348695 4.247 132.9027813 3.994 144.9733642999999 4.345 159.81527659999998 11.704 101.33487789999954 10.063 130.684781 5.618 152.8360884 3.589 98.98351969999898 9.463 145.73708360000003 4.101 91.24184689999964 8.756 126.22657499999933 10.431 95.81483050000021 10.269 110.40646459999964 11.362 143.63590000000002 4.229 93.15736679999846 11.303 137.17915160000004 3.461 108.98362530000078 9.671 152.61023640000002 11.221)
Error minima by case: (1.1014 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 2.0643 8 0.1254 1 0.0 0 0.0 0 0.0 0 0.1557 2 0.0 0 1.0 1 0.3913 1 1.0 1 1.2968 7 10.0566 2 0.7314 1 0.3385 1 0.0 0 0.3475 1 0.0 0 1.0818 7 0.7396 1)
Average genome size in population (length): 106.285
Average program size in population (points): 107.285
Average percent parens in population: 0.009
Minimum age in population: 92.66517391147555
Maximum age in population: 97.0209056531356
Average age in population: 94.73738540926256
Median age in population: 94.79930718745167
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.899
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.899
Total error diversity:				 0.382
Error (vector) diversity:			 0.448
Behavioral diversity:				 0.448
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 123826494
--- Timings ---
Current time: 1529615375802 milliseconds
Total Time:         249.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        83.1 seconds, 33.4%
Fitness Testing:    133.3 seconds, 53.5%
Report:              32.5 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 36411.90550000001
Test mean error for best: 18.20595
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_swap in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dup_times float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3225.043326299998
Median total errors in population: 583.3332
Error averages by case: (123.32587610000186 10.5 132.50096009999996 4.006 138.97360660000007 4.68 101.77540060000085 10.082 132.68100650000005 3.091 81.20139580000095 10.431 84.71819890000083 9.639 150.9808441 4.28 130.11201779999996 4.084 143.85867879999995 4.385 158.11457599999997 11.699 98.66369799999977 10.017 128.08297189999996 5.74 149.34121660000002 3.664 97.57627529999924 9.33 144.1856926 4.177 89.43732129999995 8.791 123.78841019999918 10.528 93.91867690000015 10.264 106.43752979999965 11.381 142.82187670000005 4.283 90.88952459999862 11.308 133.90723490000002 3.572 107.02225610000075 9.735 149.8840801 11.177)
Error minima by case: (1.59 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.0889 8 4.0227 8 0.0614 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0 0 1.0 1 0.355 1 4.0 1 0.7032 8 9.0566 2 1.7314 2 0.1692 1 1.0 1 0.3298 1 0.0 0 5.8567 8 0.2604 1)
Average genome size in population (length): 106.423
Average program size in population (points): 107.423
Average percent parens in population: 0.009
Minimum age in population: 93.90968416249336
Maximum age in population: 98.10041733207409
Average age in population: 96.00145790339423
Median age in population: 96.06049212663527
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.883
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.883
Total error diversity:				 0.422
Error (vector) diversity:			 0.506
Behavioral diversity:				 0.507
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 126487282
--- Timings ---
Current time: 1529615379990 milliseconds
Total Time:         253.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        84.3 seconds, 33.3%
Fitness Testing:    135.7 seconds, 53.6%
Report:              33.1 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 36891.3562
Test mean error for best: 18.44568
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_mod} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction integer_max} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult integer_mod float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_sub float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dup_items float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float integer_max tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3115.366961999999
Median total errors in population: 589.9027000000001
Error averages by case: (115.39116470000164 10.391 131.9542709 3.829 138.38752920000002 4.565 93.02616570000086 10.175 131.17453899999998 3.024 71.21215480000095 10.322 76.89428120000086 9.545 150.52561249999997 4.185 129.1835304 4.208 142.74051519999998 4.183 160.09000939999999 11.709 89.85756309999972 10.069 127.5669636 5.468 149.1559912 3.614 90.66880309999952 9.237 143.6824391 4.02 81.19487659999963 8.637 116.43875809999922 10.783 86.4332680000002 10.3 96.5200198 11.492 141.3839844 4.093 83.53756299999856 11.483 132.7835847 3.524 98.17184680000081 9.57 147.85552749999997 11.11)
Error minima by case: (13.1014 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 8 0.0643 8 0.1991 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 0.0 0 0.355 1 1.0 1 0.2968 8 9.9434 2 0.5514 1 0.3385 2 0.0 0 0.3298 2 0.0 0 9.6841 8 0.1925 1)
Average genome size in population (length): 106.648
Average program size in population (points): 107.648
Average percent parens in population: 0.009
Minimum age in population: 94.97235846187581
Maximum age in population: 99.18356017062106
Average age in population: 97.35099902603909
Median age in population: 97.39216380041898
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.89
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.89
Total error diversity:				 0.42
Error (vector) diversity:			 0.519
Behavioral diversity:				 0.519
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 129153682
--- Timings ---
Current time: 1529615384241 milliseconds
Total Time:         257.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        85.5 seconds, 33.2%
Fitness Testing:    138.1 seconds, 53.7%
Report:              33.7 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 37004.367999999995
Test mean error for best: 18.50218
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_mod} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult integer_mod float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec integer_swap float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_sub float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_yank float_dec float_dec float_dec integer_dup float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2882.1015154000015
Median total errors in population: 577.1158
Error averages by case: (108.79783000000165 10.396 119.48283449999992 3.772 125.9303354 4.502 88.92632920000088 10.12 120.65043399999996 2.874 65.2142511000012 10.35 68.71849730000085 9.534 138.37348820000003 4.055 115.11583869999997 3.785 130.63586139999998 4.127 145.91251219999998 11.598 85.72217780000001 9.761 113.3965396 5.266 137.77630930000007 3.469 82.30093059999972 9.089 131.64911020000005 3.913 74.03267470000023 8.624 110.7473004999994 10.84 78.59318729999964 10.22 93.88656799999987 11.628 129.49814410000008 4.023 78.51607939999843 11.641 122.13356800000004 3.339 91.4146061000008 9.577 136.97910780000004 11.194)
Error minima by case: (8.8986 8 0.0 0 0.341 1 0.1612 2 0.0 0 1.0889 8 2.9357 7 1.2712 1 0.0 0 1.0 1 1.0 1 0.2732 2 0.0 0 1.0 1 0.355 1 2.0 1 0.7032 7 13.9434 2 1.7983 2 2.1692 1 0.0 0 0.3475 2 0.0 0 8.6841 8 0.0052 1)
Average genome size in population (length): 107.425
Average program size in population (points): 108.425
Average percent parens in population: 0.009
Minimum age in population: 96.56090135517915
Maximum age in population: 100.6215243823384
Average age in population: 98.71187202225519
Median age in population: 98.76222153263731
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.85
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.85
Total error diversity:				 0.413
Error (vector) diversity:			 0.491
Behavioral diversity:				 0.491
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 131839533
--- Timings ---
Current time: 1529615388553 milliseconds
Total Time:         261.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        86.8 seconds, 33.1%
Fitness Testing:    140.7 seconds, 53.7%
Report:              34.3 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 36507.4536
Test mean error for best: 18.25373
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_swap} {:instruction in2} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult float_swap in2 float_rot float_cos in2 in2 integer_dec integer_inc float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_sub float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 113
Size: 114
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2990.9435041000015
Median total errors in population: 580.3332
Error averages by case: (113.69712110000158 10.396 124.51607229999993 3.847 130.9602323000001 4.539 88.29693080000084 9.989 124.77623419999999 2.898 70.12216350000105 10.358 74.8201877000007 9.555 144.1373308 3.974 121.32136770000002 3.893 135.5526416999999 4.18 152.80862569999994 11.643 85.27960250000015 9.528 120.9439202 5.453 142.44576230000004 3.537 86.79367009999973 8.955 136.84543349999998 3.977 78.93829150000005 8.639 110.96552209999945 10.825 82.55911999999985 10.256 96.78228130000022 11.708 134.67888720000005 4.103 81.9789024999986 11.668 126.15387490000002 3.379 96.61776350000073 9.582 140.79556469999994 11.274)
Error minima by case: (21.8986 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 8 0.9357 7 0.1531 1 0.0 0 1.0 1 3.0 1 0.2732 2 0.0 0 0.0 0 0.3913 1 0.3546 1 0.0725 7 13.0566 2 1.1596 1 1.8308 1 0.0 0 0.3475 1 0.0 0 7.6841 8 0.7093 1)
Average genome size in population (length): 108.375
Average program size in population (points): 109.375
Average percent parens in population: 0.009
Minimum age in population: 97.89759103938312
Maximum age in population: 102.4158407137989
Average age in population: 100.1271295650821
Median age in population: 100.1716958408078
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.883
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.883
Total error diversity:				 0.395
Error (vector) diversity:			 0.459
Behavioral diversity:				 0.459
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 134549133
--- Timings ---
Current time: 1529615392767 milliseconds
Total Time:         266.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        87.9 seconds, 33.1%
Fitness Testing:    143.1 seconds, 53.8%
Report:              34.8 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 36771.1888
Test mean error for best: 18.38559
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_211})
Best program: (float_mod integer_swap integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_sub float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec integer_dup_times float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_211)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3654.8813028
Median total errors in population: 606.7245
Error averages by case: (130.94321240000198 10.459 158.38139090000007 4.202 164.56428910000002 4.827 108.43028890000092 10.102 157.94776990000003 3.233 88.35673220000106 10.395 92.55157170000098 9.638 177.5197669 4.391 154.86727160000004 4.138 169.0752264999999 4.595 186.39089610000002 11.762 105.37325899999973 9.673 154.51263819999997 6.141 174.90374859999994 3.873 106.23796489999943 8.833 170.21925120000006 4.375 97.4787160999996 8.779 130.74327199999914 10.994 101.54058750000036 10.331 114.8108142999998 11.808 168.2946646000001 4.53 100.85648219999845 11.805 159.25901950000002 3.703 114.68786140000086 9.711 173.33160709999999 11.305)
Error minima by case: (11.5306 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.9357 7 1.2319 1 0.0 0 1.0 1 0.0 0 0.2732 2 0.0 0 2.0 1 0.355 1 2.0 1 0.2968 7 19.9434 2 3.1596 1 0.1692 1 0.0 0 0.3475 1 0.0 0 4.28 8 1.8067 1)
Average genome size in population (length): 108.328
Average program size in population (points): 109.328
Average percent parens in population: 0.009
Minimum age in population: 98.89759103938312
Maximum age in population: 103.8028360076293
Average age in population: 101.4123574080107
Median age in population: 101.4125071477312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.885
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.885
Total error diversity:				 0.394
Error (vector) diversity:			 0.464
Behavioral diversity:				 0.465
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 137257458
--- Timings ---
Current time: 1529615396937 milliseconds
Total Time:         270.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        89.1 seconds, 33.0%
Fitness Testing:    145.5 seconds, 53.9%
Report:              35.4 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 36507.4536
Test mean error for best: 18.25373
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction float_mod} {:instruction integer_flush} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec float_mod integer_flush in2 in2 integer_dec integer_inc float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_sub float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2953.2819729000003
Median total errors in population: 596.2245
Error averages by case: (110.75264770000143 10.38 121.35176740000001 3.756 127.72812810000003 4.454 90.68177880000091 9.973 123.6526164 2.98 68.53083090000081 10.345 71.29046790000078 9.57 141.25668109999995 4.177 118.26496329999999 3.973 132.48042939999993 4.13 149.5986327 11.661 87.54752559999969 9.441 118.93358749999994 5.866 141.12896840000002 3.623 85.1004398999995 8.772 133.59599120000001 3.961 76.75205710000021 8.675 112.63153239999929 10.878 81.34613159999992 10.208 98.98019659999976 11.711 131.56634730000002 4.112 82.84335819999858 11.641 124.64444520000006 3.388 94.50702420000071 9.625 139.68642399999993 11.129)
Error minima by case: (6.0514 8 0.0 0 0.0 0 0.1612 1 0.0 0 1.0889 8 1.9357 7 0.3067 1 0.0 0 0.0 0 4.0 1 0.2129 1 0.0 0 0.0 0 0.355 1 1.0 1 4.7032 7 17.9434 2 2.5101 1 3.3385 2 0.0 0 0.3475 1 0.0 0 13.0593 8 0.8067 1)
Average genome size in population (length): 108.389
Average program size in population (points): 109.389
Average percent parens in population: 0.009
Minimum age in population: 99.89759103938312
Maximum age in population: 104.8814549287088
Average age in population: 102.7566045780601
Median age in population: 102.8015089130933
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.885
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.885
Total error diversity:				 0.417
Error (vector) diversity:			 0.479
Behavioral diversity:				 0.479
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 139967408
--- Timings ---
Current time: 1529615401412 milliseconds
Total Time:         274.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        90.4 seconds, 32.9%
Fitness Testing:    148.1 seconds, 53.9%
Report:              36.0 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 36927.87270000001
Test mean error for best: 18.46394
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_swap in2 integer_dec in2 float_frominteger float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_sub float_max float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_dec float_max float_dec float_dup_items float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3342.6418047
Median total errors in population: 585.3332
Error averages by case: (120.1658656000019 10.411 145.3186569 4.007 151.67006609999999 4.668 98.21967790000075 10.148 145.49829509999998 3.101 76.47225220000111 10.33 80.6897439000008 9.569 162.26909190000006 4.21 139.72502399999996 3.934 156.1537458 4.361 171.806608 11.683 94.83822329999946 9.654 138.09138380000005 6.052 162.24770060000003 3.763 94.50936699999941 8.789 157.52748320000003 4.199 86.30356909999952 8.681 120.10011359999908 11.078 91.06553650000038 10.31 103.85919049999978 11.796 155.2027344 4.34 89.69572379999867 11.745 146.44094550000003 3.526 102.82732490000069 9.622 160.6704811000001 11.296)
Error minima by case: (11.8986 9 0.0 0 0.0 0 0.1612 2 0.0 0 0.5192 8 0.9357 7 1.5495 1 0.0 0 1.0 1 2.0 1 0.1557 1 0.0 0 1.0 1 0.355 1 4.0 1 0.2968 7 10.0566 2 0.8404 2 0.6615 1 0.0 0 0.3475 1 0.0 0 5.6841 7 0.681 1)
Average genome size in population (length): 108.385
Average program size in population (points): 109.385
Average percent parens in population: 0.009
Minimum age in population: 101.9175912070773
Maximum age in population: 106.348781002718
Average age in population: 104.1605759550778
Median age in population: 104.1985209849739
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.897
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.897
Total error diversity:				 0.39
Error (vector) diversity:			 0.449
Behavioral diversity:				 0.449
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 142677433
--- Timings ---
Current time: 1529615405687 milliseconds
Total Time:         278.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        91.6 seconds, 32.8%
Fitness Testing:    150.6 seconds, 54.0%
Report:              36.6 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 36338.12980000001
Test mean error for best: 18.16906
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_swap integer_flush in2 in2 integer_dec integer_mult integer_flush integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_max float_rot float_max float_dec float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 113
Size: 114
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3183.5456547000017
Median total errors in population: 581.2245
Error averages by case: (117.22695780000167 10.396 134.24964220000004 4.007 140.49292380000009 4.65 93.99340450000066 9.989 135.400726 3.081 75.15667590000095 10.363 79.73103830000078 9.566 153.2018275 4.28 131.5977842 3.926 145.51986649999995 4.338 161.14792669999997 11.617 90.78459660000009 9.476 131.24261199999998 6.139 152.6086063999999 3.684 92.47370369999946 8.859 146.41932920000005 4.164 83.33017749999988 8.69 116.2145539999994 10.889 87.83963979999993 10.216 102.82425190000008 11.771 144.59791049999995 4.345 87.71462769999866 11.76 136.88409 3.461 100.91091700000084 9.631 151.47286499999998 11.211)
Error minima by case: (1.1034 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.0189 7 0.0642 1 0.0 0 0.0 0 1.0 1 0.2732 1 0.0 0 2.0 1 0.158 1 0.0655 1 0.5973 7 14.9434 2 2.7314 1 0.3385 1 0.0 0 0.3475 1 0.0 0 12.6841 8 0.1638 1)
Average genome size in population (length): 108.59
Average program size in population (points): 109.59
Average percent parens in population: 0.009
Minimum age in population: 102.959664017985
Maximum age in population: 107.5376771664273
Average age in population: 105.4894995160894
Median age in population: 105.507796334299
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.907
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.907
Total error diversity:				 0.407
Error (vector) diversity:			 0.456
Behavioral diversity:				 0.457
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 145392420
--- Timings ---
Current time: 1529615410000 milliseconds
Total Time:         283.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        92.8 seconds, 32.8%
Fitness Testing:    153.1 seconds, 54.1%
Report:              37.2 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 36242.81570000001
Test mean error for best: 18.12141
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_swap in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dup_times float_dec float_max float_dec float_dec float_dec float_dec float_dec integer_shove float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_max float_dec float_dec float_frominteger float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2906.4543861000016
Median total errors in population: 585.3332
Error averages by case: (104.47404400000111 10.377 127.20988659999993 3.961 133.44295360000007 4.58 76.37821790000069 10.03 127.99114679999995 3.061 62.20343730000087 10.36 67.42849400000087 9.526 145.52838850000003 4.346 123.95880190000004 4.173 138.3942859 4.284 153.49521690000003 11.564 72.74275290000071 9.468 122.54795149999995 5.857 145.23277500000006 3.752 78.34155909999949 8.537 139.17830870000012 4.128 70.41833490000091 8.653 100.15939369999978 10.923 75.17331409999919 10.14 83.8567486000005 11.722 137.36382140000003 4.284 69.49027629999861 11.727 129.79862420000003 3.493 88.3794338000008 9.591 143.55521850000002 11.174)
Error minima by case: (0.8986 8 0.0 0 0.0 0 0.1612 1 0.0 0 1.4521 8 2.0643 7 1.8584 1 0.0 0 0.0 0 0.9033 1 0.2732 2 0.0 0 0.8481 1 0.3913 1 1.0 1 0.7032 5 15.9434 2 0.1596 1 1.6615 2 0.0 0 0.3475 1 0.0 0 6.6841 8 0.0254 1)
Average genome size in population (length): 108.518
Average program size in population (points): 109.518
Average percent parens in population: 0.009
Minimum age in population: 104.3435890396263
Maximum age in population: 108.7894576550279
Average age in population: 106.7745059442917
Median age in population: 106.8226040051513
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.899
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.899
Total error diversity:				 0.401
Error (vector) diversity:			 0.446
Behavioral diversity:				 0.447
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 148105533
--- Timings ---
Current time: 1529615414268 milliseconds
Total Time:         287.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        94.0 seconds, 32.7%
Fitness Testing:    155.6 seconds, 54.1%
Report:              37.8 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 36322.12980000001
Test mean error for best: 18.16106
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_swap in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dup_times float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dup_items float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3379.7498729999993
Median total errors in population: 580.3332
Error averages by case: (122.73870350000156 10.427 145.72060979999998 4.023 151.92567550000007 4.705 96.34954220000067 10.115 147.45675649999995 3.074 80.83837030000096 10.347 84.29717030000079 9.587 165.09482539999996 4.328 142.79989880000002 4.086 156.19039909999995 4.444 172.5124843 11.645 93.24215439999963 9.635 141.96331560000002 5.988 163.33203610000004 3.768 96.25839869999936 8.876 157.88121760000004 4.186 89.91163229999968 8.732 118.76192259999935 11.03 94.60105850000036 10.268 103.7826019999997 11.775 155.5000812 4.415 88.65898239999869 11.755 148.13724090000002 3.533 106.5850782000008 9.643 163.5317168 11.293)
Error minima by case: (2.9127 8 0.0 0 0.0 1 0.1612 2 0.0 0 1.4521 8 3.5129 7 0.9448 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 0.0 0 0.355 1 5.0 1 0.2968 7 14.9434 2 0.1062 2 1.1692 1 1.0 1 0.3475 1 0.0 0 9.6841 8 0.4258 1)
Average genome size in population (length): 108.688
Average program size in population (points): 109.688
Average percent parens in population: 0.009
Minimum age in population: 105.3773131346445
Maximum age in population: 110.005295243189
Average age in population: 107.9775181162229
Median age in population: 108.039605366528
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.895
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.895
Total error diversity:				 0.386
Error (vector) diversity:			 0.435
Behavioral diversity:				 0.435
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 150822970
--- Timings ---
Current time: 1529615418613 milliseconds
Total Time:         291.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        95.2 seconds, 32.6%
Fitness Testing:    158.1 seconds, 54.2%
Report:              38.4 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 36865.3562
Test mean error for best: 18.43268
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_mod} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_min} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult integer_mod float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_min float_dec float_sub float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max integer_max float_dec integer_shove float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3317.8084738
Median total errors in population: 594.5315
Error averages by case: (127.28413510000202 10.458 135.5401066 4.068 141.9526376000001 4.72 107.05145830000077 10.033 133.93298249999995 3.156 84.35400840000113 10.394 89.37955490000077 9.63 153.43301719999997 4.249 131.38820509999996 4.202 147.16433889999996 4.412 163.02343479999996 11.663 103.97510469999953 9.572 130.66125350000002 5.844 151.25458460000004 3.777 102.75957639999933 8.808 147.38718090000006 4.215 93.69634979999958 8.762 128.92230379999884 10.94 98.40334060000035 10.36 112.61438559999941 11.731 145.87710160000006 4.371 100.28872039999855 11.724 135.43570630000002 3.561 110.70423310000075 9.687 149.81675309999997 11.171)
Error minima by case: (1.3275 8 0.0 0 0.341 1 0.1612 2 0.0 0 1.4521 8 0.9357 7 1.5396 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 5.0 1 0.355 1 1.0 1 1.2968 7 20.0566 2 0.8404 1 3.3385 2 0.0 0 0.3475 1 0.0 0 5.6841 8 0.1875 1)
Average genome size in population (length): 108.705
Average program size in population (points): 109.705
Average percent parens in population: 0.009
Minimum age in population: 106.530363549917
Maximum age in population: 111.1395586993088
Average age in population: 109.2636908045428
Median age in population: 109.3228783643482
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.909
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.909
Total error diversity:				 0.409
Error (vector) diversity:			 0.455
Behavioral diversity:				 0.456
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 153540856
--- Timings ---
Current time: 1529615422843 milliseconds
Total Time:         296.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        96.4 seconds, 32.6%
Fitness Testing:    160.5 seconds, 54.2%
Report:              39.0 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 36411.90550000001
Test mean error for best: 18.20595
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_mult integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_yank float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3300.1439694000005
Median total errors in population: 586.8332
Error averages by case: (123.96835930000188 10.469 138.19451809999998 3.997 144.43722560000003 4.656 100.05261190000076 10.087 138.6873071 3.126 81.93610730000103 10.4 84.38613740000096 9.654 156.60304379999997 4.359 134.2197319 4.108 149.06784969999995 4.367 165.83542 11.621 97.00332429999949 9.587 132.46117900000002 6.086 155.51599470000005 3.764 97.78270849999915 9.021 150.50587930000003 4.167 89.80474789999919 8.772 121.97846619999943 10.967 94.19728020000062 10.302 108.4609821999998 11.784 148.64624970000014 4.355 92.59347109999847 11.682 139.772548 3.559 107.7294710000009 9.694 154.4593552 11.26)
Error minima by case: (4.5305 9 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.9002 6 0.7409 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 0.0 0 0.355 1 1.0 1 1.7032 7 19.9434 2 5.1596 1 0.1692 2 0.0 0 0.3475 1 0.0 0 11.6841 8 0.041 1)
Average genome size in population (length): 108.728
Average program size in population (points): 109.728
Average percent parens in population: 0.009
Minimum age in population: 107.6255291840074
Maximum age in population: 112.6111131869904
Average age in population: 110.502822697892
Median age in population: 110.5546058208574
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.897
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.897
Total error diversity:				 0.414
Error (vector) diversity:			 0.463
Behavioral diversity:				 0.463
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 156259156
--- Timings ---
Current time: 1529615427151 milliseconds
Total Time:         300.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        97.7 seconds, 32.5%
Fitness Testing:    163.0 seconds, 54.3%
Report:              39.6 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 37101.69249999999
Test mean error for best: 18.55085
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_max} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction integer_mod} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_max integer_flush in2 integer_dec in2 float_frominteger integer_min float_mult integer_mod float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_max float_dec float_dec float_dec integer_swap float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_sub float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max integer_max float_dec integer_shove float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 110
Size: 111
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3238.0115452000005
Median total errors in population: 597.3332
Error averages by case: (116.07120350000193 10.382 140.72519109999996 4.064 146.76874690000002 4.737 90.23961920000069 10.039 142.17780809999996 3.224 73.315859800001 10.315 76.50534470000089 9.505 159.7636494 4.585 138.00070289999996 4.126 151.76883799999996 4.454 167.83908399999999 11.635 87.2679637999997 9.537 137.0823087 5.957 158.97302449999998 3.854 90.83158799999934 8.677 152.8297367 4.29 81.9525677000002 8.652 113.25453349999911 10.94 86.58977600000027 10.231 99.54723459999958 11.754 151.228816 4.421 83.36365599999853 11.693 143.4206131 3.65 99.34810320000078 9.58 157.57257579999992 11.271)
Error minima by case: (3.8986 9 0.0 0 0.0 0 0.1612 2 0.0 0 0.158 8 1.8698 7 2.5495 1 0.0 0 0.0 0 1.0 1 0.1557 1 0.0 0 3.0 1 0.355 1 1.0 1 0.7091 5 9.9434 2 1.7212 1 1.3385 2 0.0 0 0.3475 1 0.0 0 0.2296 8 0.4258 1)
Average genome size in population (length): 108.658
Average program size in population (points): 109.658
Average percent parens in population: 0.009
Minimum age in population: 109.3066048377189
Maximum age in population: 113.9601767387168
Average age in population: 111.7945078263846
Median age in population: 111.8344471484465
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.899
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.899
Total error diversity:				 0.408
Error (vector) diversity:			 0.446
Behavioral diversity:				 0.447
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 158975869
--- Timings ---
Current time: 1529615431474 milliseconds
Total Time:         304.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        98.9 seconds, 32.5%
Fitness Testing:    165.4 seconds, 54.3%
Report:              40.2 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 36711.8834
Test mean error for best: 18.35594
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: -0.9851462605 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_mult} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod integer_mult in2 integer_dec in2 float_frominteger integer_min float_mult float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_frominteger float_max float_dec float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec integer_dup float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [48.8837 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 556.3332
Mean: 11.126664
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3177.8235891000004
Median total errors in population: 576.1158
Error averages by case: (110.74103560000138 10.449 141.478907 4.108 147.7114297 4.769 83.77814760000052 10.017 142.65506309999998 3.132 68.89395850000062 10.387 71.8706717000009 9.608 159.88907709999995 4.36 138.82431339999997 3.932 152.44716689999996 4.471 168.67384889999997 11.614 80.80399299999996 9.49 137.05372049999994 5.807 159.2281643 3.825 83.03576439999947 8.827 153.64670860000004 4.324 76.69196780000026 8.726 106.93382809999981 10.908 81.0926015000001 10.228 94.4319478000002 11.749 151.73609489999996 4.425 77.88347469999883 11.725 143.61427270000004 3.587 94.49188770000075 9.653 158.84354360000003 11.251)
Error minima by case: (0.2727 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 7 1.9357 7 0.5396 1 0.0 0 0.0 0 0.0 0 0.1557 1 0.0 0 1.6557 1 0.3476 1 5.0 1 0.2968 5 0.0566 2 0.8831 2 0.2818 2 0.0 0 0.3475 2 0.0 0 5.0638 8 0.7061 1)
Average genome size in population (length): 108.942
Average program size in population (points): 109.942
Average percent parens in population: 0.009
Minimum age in population: 110.8976024198321
Maximum age in population: 115.3117154686709
Average age in population: 113.0907532314394
Median age in population: 113.1033087485176
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.906
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.906
Total error diversity:				 0.404
Error (vector) diversity:			 0.449
Behavioral diversity:				 0.45
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 161699506
--- Timings ---
Current time: 1529615435797 milliseconds
Total Time:         309.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       100.1 seconds, 32.4%
Fitness Testing:    167.9 seconds, 54.3%
Report:              40.8 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 40991.06350000001
Test mean error for best: 20.49553
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 42.3379677515 
Correct output: -89.0730770721 | Program output: -90.0730770721
Correct output: -91.3409907826 | Program output: -101.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 11.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -4.9357757377 
Correct output: 8.8462429043   | Program output: 3.8462429043  
Correct output: -139.3737677014 | Program output: -150.3737677014
Correct output: 15.9086340651  | Program output: -24.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: 0.924829468   
Correct output: 69.5371683437  | Program output: 41.5371683437 
Correct output: 61.0363157976  | Program output: 63.6449930571 
Correct output: -98.9344588134 | Program output: -80.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -120.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 37.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 7.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [5.5606 9 1.0 2 10.0 2 2.1612 10 11.0 2 2.0889 10 8.0227 9 31.0 2 5.0 1 11.0 2 40.0 12 0.2732 9 4.0 11 28.0 2 2.6087 10 18.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 12.0 2 5.6525 12 11.0 2 29.4219 9 31.0 11]
Total: 529.0101
Mean: 10.580202
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3114.1548461000007
Median total errors in population: 600.5114000000001
Error averages by case: (121.02467670000176 10.452 124.08551639999996 3.863 130.3832158000001 4.552 101.44394880000073 10.07 125.70148799999997 2.932 79.58932430000102 10.404 80.60555610000088 9.661 143.42482760000001 4.157 122.4490248 4.004 135.30426449999996 4.264 151.19971079999996 11.575 98.28414049999992 9.569 120.45956539999997 5.797 142.74405200000004 3.608 97.07753329999927 8.748 136.35308400000002 4.022 87.69857109999994 8.764 122.93522029999919 10.969 92.01673729999982 10.243 110.41285039999993 11.789 134.34126860000003 4.233 92.37878679999837 11.674 127.1247311 3.385 105.56554660000083 9.703 141.9642049 11.149)
Error minima by case: (5.5606 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 0.1491 7 0.2846 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 0.0 0 0.3913 1 2.0655 1 0.7032 8 3.9434 2 0.7108 1 0.6615 2 1.0 1 0.3475 1 0.0 0 10.6841 8 0.228 1)
Average genome size in population (length): 109.342
Average program size in population (points): 110.342
Average percent parens in population: 0.009
Minimum age in population: 111.8976024198321
Maximum age in population: 116.6016234337008
Average age in population: 114.4149439246587
Median age in population: 114.4835941632838
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.911
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.911
Total error diversity:				 0.421
Error (vector) diversity:			 0.478
Behavioral diversity:				 0.478
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 164433231
--- Timings ---
Current time: 1529615440120 milliseconds
Total Time:         313.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       101.4 seconds, 32.4%
Fitness Testing:    170.4 seconds, 54.4%
Report:              41.5 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 40991.06350000001
Test mean error for best: 20.49553
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 42.3379677515 
Correct output: -89.0730770721 | Program output: -90.0730770721
Correct output: -91.3409907826 | Program output: -101.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 11.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -4.9357757377 
Correct output: 8.8462429043   | Program output: 3.8462429043  
Correct output: -139.3737677014 | Program output: -150.3737677014
Correct output: 15.9086340651  | Program output: -24.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: 0.924829468   
Correct output: 69.5371683437  | Program output: 41.5371683437 
Correct output: 61.0363157976  | Program output: 63.6449930571 
Correct output: -98.9344588134 | Program output: -80.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -120.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 37.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 7.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec integer_yank float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [5.5606 9 1.0 2 10.0 2 2.1612 10 11.0 2 2.0889 10 8.0227 9 31.0 2 5.0 1 11.0 2 40.0 12 0.2732 9 4.0 11 28.0 2 2.6087 10 18.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 12.0 2 5.6525 12 11.0 2 29.4219 9 31.0 11]
Total: 529.0101
Mean: 10.580202
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3193.9706745
Median total errors in population: 580.41995
Error averages by case: (118.67657720000189 10.454 134.8060234 3.915 141.1810725 4.533 94.5811216000006 10.132 135.72486979999994 3.081 76.31259890000115 10.387 78.71634870000088 9.589 152.93313000000003 4.335 130.2346738 4.22 146.11416750000004 4.239 160.25638749999996 11.631 91.8387014999997 9.631 128.34136299999994 5.884 152.78150189999997 3.759 93.44459779999949 8.957 146.7546676 4.071 84.94429369999965 8.738 117.74340129999914 11.026 89.30836260000049 10.24 104.53443629999965 11.757 144.91579770000004 4.231 88.24995769999849 11.696 136.96608100000006 3.527 102.44215680000087 9.67 151.32438470000002 11.141)
Error minima by case: (5.5606 9 0.0 0 0.0 0 0.1612 2 0.0 0 1.2116 8 1.9357 8 0.5396 1 0.0 0 1.0 1 1.0 1 0.2732 2 0.0 0 1.0952 1 0.3913 1 5.0 1 9.1884 8 7.9434 2 4.8404 2 1.3916 2 0.0 0 0.3475 1 0.0 0 1.4541 8 0.1933 1)
Average genome size in population (length): 109.553
Average program size in population (points): 110.553
Average percent parens in population: 0.009
Minimum age in population: 113.3710259264104
Maximum age in population: 118.1957830926367
Average age in population: 115.7159277009498
Median age in population: 115.74345728577
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.915
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.416
Error (vector) diversity:			 0.467
Behavioral diversity:				 0.468
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 167172242
--- Timings ---
Current time: 1529615444464 milliseconds
Total Time:         317.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       102.6 seconds, 32.3%
Fitness Testing:    172.9 seconds, 54.4%
Report:              42.0 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 40975.063500000004
Test mean error for best: 20.48753
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 43.3379677515 
Correct output: -89.0730770721 | Program output: -89.0730770721
Correct output: -91.3409907826 | Program output: -100.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 12.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -3.9357757377 
Correct output: 8.8462429043   | Program output: 4.8462429043  
Correct output: -139.3737677014 | Program output: -149.3737677014
Correct output: 15.9086340651  | Program output: -23.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: 1.924829468   
Correct output: 69.5371683437  | Program output: 42.5371683437 
Correct output: 61.0363157976  | Program output: 64.6449930571 
Correct output: -98.9344588134 | Program output: -79.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -119.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 38.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 8.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec integer_shove float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec integer_yank float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [4.5606 9 0.0 0 9.0 3 2.1612 10 12.0 2 2.0889 10 8.0227 9 32.0 1 4.0 1 10.0 1 39.0 12 0.2732 9 5.0 11 27.0 2 3.6087 10 19.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 13.0 2 5.6525 12 12.0 2 29.4219 9 32.0 11]
Total: 527.0101
Mean: 10.540202
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3211.5614215
Median total errors in population: 580.8332
Error averages by case: (119.66190900000154 10.394 135.58933149999993 3.955 141.91832530000008 4.638 97.1514537000008 10.004 134.09388449999997 3.065 76.56238960000118 10.368 81.91192710000082 9.566 152.8792281 4.135 128.3450812 3.971 146.96276589999997 4.331 163.46785559999998 11.657 94.10316289999963 9.473 129.5386054 5.799 151.44143460000004 3.742 94.18396659999935 8.716 147.5857647 4.149 86.16967809999984 8.672 119.3877502999994 10.905 90.55161630000028 10.242 105.83601379999965 11.812 145.63362469999996 4.316 90.5029190999985 11.766 135.37897640000006 3.481 102.90970500000084 9.611 149.8300521 11.196)
Error minima by case: (4.5606 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.9357 7 0.0403 1 0.0 0 0.0 0 2.0 1 0.2732 1 0.0 0 1.0 1 0.0363 1 4.0 1 0.3871 7 11.9434 2 0.1596 1 3.8308 2 1.0 1 0.3475 1 0.0 0 6.6841 8 0.6476 1)
Average genome size in population (length): 109.695
Average program size in population (points): 110.695
Average percent parens in population: 0.009
Minimum age in population: 114.6898601564166
Maximum age in population: 119.2368942118273
Average age in population: 117.0524087783677
Median age in population: 117.086826517401
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.888
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.888
Total error diversity:				 0.392
Error (vector) diversity:			 0.447
Behavioral diversity:				 0.447
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 169914867
--- Timings ---
Current time: 1529615448775 milliseconds
Total Time:         322.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       103.8 seconds, 32.2%
Fitness Testing:    175.4 seconds, 54.5%
Report:              42.7 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 40960.508
Test mean error for best: 20.48025
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 39.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 60.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction float_dup_times})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max integer_div float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec print_integer float_dec float_dec float_max float_dec float_dec float_yankdup float_dup_times float_dec float_dec float_dec float_max float_dec integer_dup float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add integer_add print_float float_dup_times)
Errors: [8.5606 10 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.3913 10 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 516.7927
Mean: 10.335854
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3456.7699279
Median total errors in population: 593.4005
Error averages by case: (115.44784120000162 10.381 155.74410220000001 4.19 161.86850400000006 4.854 94.77088960000084 10.044 157.780241 3.246 74.75684000000105 10.333 77.66918300000094 9.622 174.3224661 4.435 153.50377879999996 4.157 166.4569080999999 4.583 182.1329075 11.677 91.65155329999956 9.513 152.18187650000002 6.189 174.54383880000003 3.936 91.60051579999914 8.799 167.84442590000003 4.395 82.90794809999967 8.701 115.62156239999932 10.946 87.09713130000038 10.202 101.80780279999958 11.739 165.94631660000002 4.565 84.67127349999845 11.67 159.17214820000004 3.689 100.7535484000009 9.622 173.7273248 11.301)
Error minima by case: (1.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 8 3.9357 7 0.14 1 0.0 0 0.0 0 1.0 1 0.2732 1 0.0 0 2.0 1 0.3913 1 6.0 1 2.7032 5 6.0566 2 6.1596 1 1.3385 1 0.0 0 0.3475 1 0.0 0 3.7597 8 0.6918 1)
Average genome size in population (length): 109.445
Average program size in population (points): 110.445
Average percent parens in population: 0.009
Minimum age in population: 115.919486382802
Maximum age in population: 120.2712954960159
Average age in population: 118.3341280132489
Median age in population: 118.3682273689112
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.89
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.89
Total error diversity:				 0.414
Error (vector) diversity:			 0.463
Behavioral diversity:				 0.464
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 172651292
--- Timings ---
Current time: 1529615453122 milliseconds
Total Time:         326.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       105.0 seconds, 32.2%
Fitness Testing:    178.0 seconds, 54.5%
Report:              43.2 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 40593.65179999999
Test mean error for best: 20.29683
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 42.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 63.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_div integer_flush in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec integer_yank float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [5.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 2.6087 10 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 515.0101
Mean: 10.300202
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2984.9976283000015
Median total errors in population: 583.8988
Error averages by case: (103.10163010000117 10.343 129.5197384 3.928 135.50163820000006 4.556 83.22732700000071 10.016 129.9669327 3.035 64.6503647000011 10.387 68.31583080000085 9.615 149.41918169999997 4.396 125.672151 3.788 140.60988409999993 4.334 156.92305089999996 11.633 79.96276980000003 9.484 124.53065190000001 6.536 146.7666097 3.65 82.02984749999938 8.802 142.11722250000005 4.145 72.95526620000065 8.683 104.84429679999961 10.871 76.84760699999939 10.172 91.61349650000002 11.78 140.5552396 4.347 76.62595779999849 11.804 131.47968400000002 3.455 90.96393370000082 9.636 146.09931570000003 11.302)
Error minima by case: (0.4394 7 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.0227 8 1.8746 1 0.0 0 1.0 1 1.0 1 0.2732 1 0.0 0 1.0 1 0.355 1 0.3657 1 9.1884 5 10.0566 2 0.2698 1 3.6615 1 1.0 1 0.3475 1 0.0 0 4.2957 8 0.1933 1)
Average genome size in population (length): 109.01
Average program size in population (points): 110.01
Average percent parens in population: 0.009
Minimum age in population: 117.108239811853
Maximum age in population: 121.7153615952229
Average age in population: 119.6382356688195
Median age in population: 119.6544959197263
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.885
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.885
Total error diversity:				 0.421
Error (vector) diversity:			 0.483
Behavioral diversity:				 0.484
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 175376892
--- Timings ---
Current time: 1529615457444 milliseconds
Total Time:         330.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       106.3 seconds, 32.1%
Fitness Testing:    180.5 seconds, 54.6%
Report:              43.8 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 41107.403000000006
Test mean error for best: 20.55370
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3377.928553
Median total errors in population: 580.2245
Error averages by case: (115.81706970000113 10.241 144.10123279999996 4.084 150.0163269 4.711 101.33003930000082 10.031 142.7856378 3.314 82.87834030000137 10.356 85.91347230000093 9.561 161.10338719999993 4.685 138.04287649999998 4.187 155.41100689999993 4.531 169.29861699999995 11.682 98.46502849999952 9.532 138.78156129999996 6.909 159.66288690000002 3.937 99.87520429999924 8.849 156.50311480000002 4.334 92.756993199999 8.712 123.28350349999901 10.919 97.21894390000067 10.261 109.37503949999962 11.757 154.9803755 4.544 94.94789559999823 11.746 144.57787599999992 3.779 109.09323340000076 9.612 158.12988989999997 11.305)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.0643 7 0.4908 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0 0 0.0 0 0.3913 1 2.9345 1 3.2968 7 8.5812 2 0.1596 1 3.3385 1 1.0 1 0.3475 1 0.0 0 0.1804 9 0.1933 1)
Average genome size in population (length): 108.588
Average program size in population (points): 109.588
Average percent parens in population: 0.009
Minimum age in population: 118.108239811853
Maximum age in population: 122.8540892355201
Average age in population: 120.9698321195964
Median age in population: 120.9928638120168
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.892
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.892
Total error diversity:				 0.442
Error (vector) diversity:			 0.521
Behavioral diversity:				 0.521
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 178091892
--- Timings ---
Current time: 1529615461669 milliseconds
Total Time:         334.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       107.5 seconds, 32.1%
Fitness Testing:    182.9 seconds, 54.6%
Report:              44.4 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 41029.5595
Test mean error for best: 20.51478
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3181.6922285
Median total errors in population: 577.3673
Error averages by case: (108.18751420000031 10.161 132.19284639999992 3.871 137.6668061000001 4.524 101.09439920000096 10.018 130.84951189999995 3.316 79.47187780000122 10.423 83.0610849000009 9.606 146.93057079999997 4.968 124.84897760000003 4.16 143.4135886999999 4.375 156.25437509999995 11.703 97.99355119999966 9.559 124.98076079999997 7.458 146.77281690000007 3.831 98.60120749999945 9.068 144.89990740000005 4.184 90.14347459999918 8.753 122.25271509999901 10.875 93.6854108000004 10.305 104.87084969999975 11.786 143.49928640000005 4.389 90.5218275999983 11.807 132.3135258000001 3.729 106.90291110000082 9.636 146.51143089999997 11.266)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 1 0.0 0 1.2744 8 0.0643 8 0.2671 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 1.0 1 0.355 1 0.0 0 0.7032 8 4.0566 2 4.1596 1 0.3385 2 1.0 1 0.3475 1 0.0 0 5.6094 8 0.3723 1)
Average genome size in population (length): 108.079
Average program size in population (points): 109.079
Average percent parens in population: 0.009
Minimum age in population: 120.3157466452609
Maximum age in population: 124.1806181923602
Average age in population: 122.3645928096146
Median age in population: 122.4036740186857
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.897
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.897
Total error diversity:				 0.504
Error (vector) diversity:			 0.578
Behavioral diversity:				 0.579
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 180794167
--- Timings ---
Current time: 1529615465982 milliseconds
Total Time:         339.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.7 seconds, 32.0%
Fitness Testing:    185.4 seconds, 54.7%
Report:              45.0 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 41057.434700000005
Test mean error for best: 20.52872
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction print_integer} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div print_integer float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec integer_shove float_max float_dec float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3471.3835659000024
Median total errors in population: 571.2245
Error averages by case: (103.33171589999986 9.956 151.92405169999998 3.844 157.69297660000007 4.583 106.3958926000006 10.076 148.6016306 3.332 81.21708630000101 10.328 85.53751430000088 9.485 172.70978949999997 4.809 142.23146139999997 4.341 161.92383919999997 4.368 179.82302799999994 11.788 103.23474039999917 9.636 145.1125608 7.343 164.12501419999998 3.875 100.91686739999955 9.253 164.19128140000004 4.201 93.25426379999915 8.613 125.59342909999899 10.935 97.83674300000091 10.312 109.71359899999952 11.675 161.99968069999997 4.404 98.00902049999857 11.713 149.83716940000005 3.784 109.31115050000082 9.516 163.43005960000005 11.259)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 4.0227 8 0.3882 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 6.0 1 0.355 1 3.0 1 2.7032 8 10.0566 2 0.2686 1 2.6615 1 1.0 1 0.3475 2 0.0 0 3.6395 9 1.8067 1)
Average genome size in population (length): 108.82
Average program size in population (points): 109.82
Average percent parens in population: 0.009
Minimum age in population: 121.4646977008283
Maximum age in population: 125.6790573545648
Average age in population: 123.6983013858722
Median age in population: 123.7129391209417
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.885
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.885
Total error diversity:				 0.485
Error (vector) diversity:			 0.57
Behavioral diversity:				 0.571
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 183514867
--- Timings ---
Current time: 1529615470399 milliseconds
Total Time:         343.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.9 seconds, 32.0%
Fitness Testing:    187.9 seconds, 54.7%
Report:              45.6 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 41107.403000000006
Test mean error for best: 20.55370
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_dec float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3193.0096369000016
Median total errors in population: 572.92345
Error averages by case: (100.25010059999956 9.964 134.2547143999999 3.957 140.27515300000005 4.692 99.55482840000091 10.09 130.38473889999995 3.196 80.96692170000111 10.358 82.25209090000095 9.543 150.4399719 4.626 125.83373060000001 4.188 145.78362419999993 4.406 158.69134249999996 11.728 96.7627726999993 9.686 125.18108309999997 6.551 147.13386060000005 3.752 99.47377779999943 8.944 146.30241880000008 4.233 91.53893089999907 8.672 120.91041469999917 10.938 96.37716250000098 10.261 107.58852669999953 11.883 144.79775870000003 4.379 90.95519159999837 11.854 131.74917489999996 3.678 107.04586750000084 9.577 146.21047930000003 11.139)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 1 0.0 0 1.8841 8 1.4785 8 3.5092 1 0.0 0 0.0 0 0.0561 1 0.1557 2 0.0 0 0.0 0 0.0363 1 1.9345 1 0.2323 8 1.0505 2 6.1596 2 2.6615 2 0.0 0 0.3475 1 0.0 0 10.724 9 0.2939 1)
Average genome size in population (length): 109.996
Average program size in population (points): 110.996
Average percent parens in population: 0.009
Minimum age in population: 122.6493024145221
Maximum age in population: 127.3555828970788
Average age in population: 124.9861369859594
Median age in population: 125.0304061490748
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.907
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.907
Total error diversity:				 0.481
Error (vector) diversity:			 0.573
Behavioral diversity:				 0.574
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 186264879
--- Timings ---
Current time: 1529615474799 milliseconds
Total Time:         348.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       111.2 seconds, 32.0%
Fitness Testing:    190.4 seconds, 54.7%
Report:              46.3 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 41039.91930000001
Test mean error for best: 20.51996
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_rot float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec integer_min float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3268.7010024000024
Median total errors in population: 575.5002
Error averages by case: (108.66858939999956 10.023 129.7872508999998 4.03 136.0606972000001 4.718 114.25939820000067 10.143 127.08175249999995 3.143 87.55069690000106 10.374 94.63920000000088 9.583 147.08572169999997 4.334 123.77647080000001 4.295 141.8179813 4.404 156.46052029999993 11.674 110.77319649999926 9.707 122.9568795 5.825 145.0141451000001 3.72 109.39707209999936 8.962 141.34530410000013 4.202 98.60673469999888 8.724 133.28672329999898 10.987 103.07123730000077 10.366 116.50701139999964 11.736 140.22600330000006 4.318 103.0968673999984 11.772 128.84145579999998 3.609 114.06058800000089 9.631 142.92850470000008 11.121)
Error minima by case: (0.1014 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 5.3977 8 0.2319 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 0.5372 1 0.3913 1 1.0 1 1.7032 8 7.9434 2 4.7314 2 1.1872 1 0.0 0 0.3475 1 0.0 0 6.1509 9 0.319 1)
Average genome size in population (length): 111.418
Average program size in population (points): 112.418
Average percent parens in population: 0.009
Minimum age in population: 124.0603116725316
Maximum age in population: 128.1874959010627
Average age in population: 126.2863428361853
Median age in population: 126.3507160588845
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.908
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.908
Total error diversity:				 0.486
Error (vector) diversity:			 0.568
Behavioral diversity:				 0.569
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 189050579
--- Timings ---
Current time: 1529615479187 milliseconds
Total Time:         352.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.5 seconds, 31.9%
Fitness Testing:    193.0 seconds, 54.8%
Report:              46.8 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 48150.45219999999
Test mean error for best: 24.07523
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction integer_dec} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot integer_dec in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_mod float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max float_dec integer_max float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_rot float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3280.966892400002
Median total errors in population: 577.1282
Error averages by case: (96.4267272999996 9.993 144.85250089999994 4.177 151.06443660000014 4.83 99.87753670000092 9.985 139.30143669999998 3.173 75.09507750000122 10.417 81.16602110000085 9.622 160.53233729999997 4.429 135.60694709999996 4.203 156.7018220999999 4.567 169.09547569999992 11.69 96.4158056999996 9.504 135.35821389999995 5.901 156.25042200000001 3.741 93.35675779999924 8.98 156.2803480000001 4.331 86.0393662999993 8.726 118.63205949999922 10.795 89.90661430000031 10.204 104.40975949999977 11.694 154.97870540000008 4.432 91.14687769999844 11.662 140.43338409999998 3.645 101.50350700000077 9.676 155.0537521999999 11.104)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.6377 7 0.9357 8 0.1254 1 0.0 0 0.0 0 2.0 1 0.2732 1 0.0 0 0.0 0 0.3913 1 1.0 1 0.7032 5 7.0505 2 3.6967 1 2.6615 1 0.0 0 0.3475 1 0.0 0 9.9501 7 0.4478 1)
Average genome size in population (length): 112.012
Average program size in population (points): 113.012
Average percent parens in population: 0.009
Minimum age in population: 125.3012797919916
Maximum age in population: 129.35145255501
Average age in population: 127.5366596945825
Median age in population: 127.5770860856582
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.897
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.897
Total error diversity:				 0.482
Error (vector) diversity:			 0.569
Behavioral diversity:				 0.57
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 191851204
--- Timings ---
Current time: 1529615483767 milliseconds
Total Time:         356.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.8 seconds, 31.9%
Fitness Testing:    195.5 seconds, 54.8%
Report:              47.5 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 41107.403000000006
Test mean error for best: 20.55370
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_dec float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2758.895080500002
Median total errors in population: 567.0618000000001
Error averages by case: (87.4717913999993 9.898 109.45141089999987 3.716 116.00690250000011 4.402 91.9221914000009 10.089 108.73662449999999 2.773 66.91187150000097 10.377 72.22943740000098 9.53 126.56905119999996 3.949 106.76752130000003 3.913 120.85793359999992 4.0 137.48153269999997 11.683 88.82474209999991 9.566 104.20852329999998 5.393 127.29169860000006 3.347 85.69642949999927 8.808 121.61136210000005 3.878 77.6107811 8.635 113.46719429999946 10.904 82.35926759999995 10.199 97.0949476999999 11.771 119.67652350000013 3.899 82.10330619999833 11.743 109.96605490000002 3.273 93.46733800000084 9.57 124.6566432 11.138)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0051 1 0.4973 8 1.9357 8 1.0642 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 1.0 1 0.355 1 2.0 1 0.1913 7 5.9434 2 6.8656 1 0.6615 2 0.0 0 0.3475 1 1.0 1 16.3969 8 0.1549 1)
Average genome size in population (length): 112.587
Average program size in population (points): 113.587
Average percent parens in population: 0.009
Minimum age in population: 126.5708782924169
Maximum age in population: 130.8753939649447
Average age in population: 128.869902171105
Median age in population: 128.9435317195544
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.884
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.884
Total error diversity:				 0.451
Error (vector) diversity:			 0.524
Behavioral diversity:				 0.524
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 194666079
--- Timings ---
Current time: 1529615488095 milliseconds
Total Time:         361.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       115.0 seconds, 31.8%
Fitness Testing:    198.0 seconds, 54.8%
Report:              48.1 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 41107.403000000006
Test mean error for best: 20.55370
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_dec float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3408.4796464000033
Median total errors in population: 568.3332
Error averages by case: (103.29387959999958 9.968 149.82962349999997 4.197 156.05527140000004 4.88 102.18965520000079 10.113 142.31122129999994 3.142 81.53672900000129 10.393 90.10278070000092 9.576 163.74485819999998 4.438 138.82623600000002 4.206 161.07150719999987 4.542 175.7345423 11.69 99.05110959999959 9.602 139.40691829999997 5.456 159.86627810000002 3.71 102.95983639999933 8.76 161.3011432 4.342 92.9832974999993 8.69 123.59980949999905 10.965 99.44898450000055 10.305 106.07854069999951 11.755 159.68213670000003 4.387 96.80913769999822 11.733 143.4765235 3.712 109.44484000000085 9.611 158.22978629999997 11.272)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 1.9811 7 1.7225 1 0.0 0 0.0 0 1.7876 1 0.2732 2 0.0 0 0.0 0 0.3913 1 2.0 1 0.7032 7 9.4159 2 0.6887 1 0.3385 1 1.0 1 0.3475 1 0.0 0 3.2534 8 0.1549 1)
Average genome size in population (length): 112.739
Average program size in population (points): 113.739
Average percent parens in population: 0.009
Minimum age in population: 127.6499332527106
Maximum age in population: 131.9987237086774
Average age in population: 130.104439060294
Median age in population: 130.1645029083782
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.88
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.88
Total error diversity:				 0.456
Error (vector) diversity:			 0.516
Behavioral diversity:				 0.516
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 197484666
--- Timings ---
Current time: 1529615492544 milliseconds
Total Time:         365.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.2 seconds, 31.8%
Fitness Testing:    200.7 seconds, 54.9%
Report:              48.7 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 41073.403000000006
Test mean error for best: 20.53670
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_rot float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3042.532899700002
Median total errors in population: 568.4014
Error averages by case: (93.79627279999944 9.887 130.49409269999992 3.817 137.0644413 4.585 89.35244640000066 10.139 125.10729909999998 2.933 74.30963020000098 10.351 79.17114530000089 9.488 145.0215303 4.131 121.44208019999996 4.146 141.5050917 4.199 155.94043999999997 11.744 86.36285630000002 9.602 119.80517109999998 5.369 142.9282051 3.512 91.79698419999937 8.672 142.26159499999997 4.008 84.16861619999989 8.637 112.65288869999944 11.017 89.3180027000004 10.263 97.4239614999999 11.723 139.91757840000005 4.058 85.43383339999863 11.751 126.40605670000002 3.478 101.18824970000077 9.557 141.43843069999997 11.159)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 7 0.869 8 1.1416 1 0.0 0 0.8463 1 1.0 1 0.1557 1 0.0 0 0.4628 1 0.355 1 4.0 1 1.2428 8 15.9434 2 1.7314 2 1.3385 2 0.0 0 0.3475 1 0.0 0 2.6841 8 0.7691 1)
Average genome size in population (length): 112.692
Average program size in population (points): 113.692
Average percent parens in population: 0.009
Minimum age in population: 128.6499332527106
Maximum age in population: 133.4814494991141
Average age in population: 131.3779079236666
Median age in population: 131.4148337286472
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.888
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.888
Total error diversity:				 0.43
Error (vector) diversity:			 0.501
Behavioral diversity:				 0.501
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 200302041
--- Timings ---
Current time: 1529615496904 milliseconds
Total Time:         370.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.5 seconds, 31.7%
Fitness Testing:    203.2 seconds, 54.9%
Report:              49.3 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 41051.434700000005
Test mean error for best: 20.52572
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction print_integer} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_mult} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div print_integer float_dup float_dec float_max float_dec float_dec integer_mult integer_mult float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_max float_rot float_max float_dec float_dec float_max float_dec float_dec float_rot float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 113
Size: 114
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3251.382931300002
Median total errors in population: 561.50235
Error averages by case: (98.69060149999932 9.992 137.0314492999999 3.952 142.5378769 4.664 102.03252970000067 10.139 136.47522549999994 3.054 80.27309140000105 10.378 84.3740027000009 9.547 156.5522609 4.224 134.22627910000003 4.166 147.8947247 4.348 164.14316220000003 11.757 98.75178749999965 9.625 131.79514019999996 5.469 153.0341701 3.69 97.17308049999939 8.974 147.75585900000004 4.125 88.38173699999997 8.68 122.68322229999914 10.985 94.27264410000002 10.273 108.45203189999962 11.753 145.51860570000002 4.173 92.95899839999859 11.703 137.89859160000003 3.646 105.57664920000076 9.621 152.70020990000006 11.261)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.2744 8 2.9002 7 1.0642 1 0.0 0 1.0 1 2.0 1 0.2732 2 0.0 0 3.0 1 0.3913 1 6.0 1 1.7032 5 13.9434 2 0.8404 1 3.8308 1 0.0 0 0.3475 1 0.0 0 5.3454 9 0.7796 1)
Average genome size in population (length): 112.483
Average program size in population (points): 113.483
Average percent parens in population: 0.009
Minimum age in population: 129.7908831783779
Maximum age in population: 134.6996805836281
Average age in population: 132.7632987256861
Median age in population: 132.791213142146
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.896
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.896
Total error diversity:				 0.42
Error (vector) diversity:			 0.483
Behavioral diversity:				 0.485
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 203114291
--- Timings ---
Current time: 1529615501268 milliseconds
Total Time:         374.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.7 seconds, 31.7%
Fitness Testing:    205.8 seconds, 54.9%
Report:              49.9 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 41041.70810000001
Test mean error for best: 20.52085
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction integer_shove} {:instruction tagged_318})
Best program: (float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dup_times float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec float_dec float_max integer_mult float_dec float_dec float_max float_dec float_dec float_dec float_max integer_add float_dec float_max float_dup_times float_dec integer_yank float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float integer_shove tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 110
Size: 111
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3355.750536300002
Median total errors in population: 566.855
Error averages by case: (105.63446609999944 9.937 139.86674719999988 4.079 146.18458970000006 4.752 104.48986790000085 10.05 139.55179189999998 3.091 86.76180770000126 10.382 88.47449590000099 9.545 158.3642128 4.365 134.9937446 4.207 151.21295619999995 4.436 167.18088969999988 11.721 101.5860001999994 9.531 135.6157284 5.409 157.3742325000001 3.733 103.29439239999917 8.941 151.42193540000014 4.224 96.1589863999991 8.707 126.10065559999913 10.889 100.55863010000071 10.234 112.70672919999953 11.809 149.70389430000003 4.257 97.83348309999833 11.741 141.38299230000004 3.732 113.22704140000084 9.617 155.43026530000006 11.251)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 8 2.0643 7 2.624 1 0.0 0 0.0 0 2.0 1 0.2732 1 0.0 0 0.0 0 0.3913 1 3.0 1 9.6016 5 15.9434 2 3.1596 2 0.5491 1 0.0 0 0.3475 1 0.0 0 20.6841 8 0.1179 1)
Average genome size in population (length): 112.864
Average program size in population (points): 113.864
Average percent parens in population: 0.009
Minimum age in population: 132.0440807332596
Maximum age in population: 136.4267474475868
Average age in population: 134.101971820909
Median age in population: 134.1243278820394
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.874
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.874
Total error diversity:				 0.426
Error (vector) diversity:			 0.484
Behavioral diversity:				 0.484
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 205936142
--- Timings ---
Current time: 1529615505745 milliseconds
Total Time:         378.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.9 seconds, 31.6%
Fitness Testing:    208.4 seconds, 55.0%
Report:              50.5 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 41073.91930000001
Test mean error for best: 20.53696
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 112
Size: 113
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2990.1934128000003
Median total errors in population: 570.3332
Error averages by case: (91.42092119999928 9.918 124.7675599 3.774 131.28074360000005 4.507 90.48824240000091 10.173 124.4102631 2.878 71.96546050000121 10.34 75.18344300000088 9.516 143.8216637 4.036 120.7324427 4.174 135.68507069999993 4.12 153.69261219999999 11.701 87.5529196000001 9.635 120.06688819999995 5.308 142.69851950000003 3.493 90.63660939999924 8.515 136.63122020000006 3.923 81.41918880000017 8.634 112.67281189999939 11.023 86.32184439999982 10.243 99.48400539999976 11.783 134.10103080000005 3.993 83.87171349999826 11.751 125.63682800000002 3.441 97.66903380000078 9.547 140.3783763 11.178)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 7 6.0643 8 0.055 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 0.0 0 0.3913 1 4.0 1 3.2968 8 10.0566 2 0.1596 1 2.3385 1 1.0 1 0.3475 1 0.0 0 4.296 8 1.3947 1)
Average genome size in population (length): 112.749
Average program size in population (points): 113.749
Average percent parens in population: 0.009
Minimum age in population: 133.0440807332596
Maximum age in population: 137.5328475142354
Average age in population: 135.4135578402088
Median age in population: 135.4580214691557
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.897
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.897
Total error diversity:				 0.437
Error (vector) diversity:			 0.499
Behavioral diversity:				 0.501
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 208755179
--- Timings ---
Current time: 1529615510173 milliseconds
Total Time:         383.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.1 seconds, 31.6%
Fitness Testing:    211.0 seconds, 55.0%
Report:              51.2 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 40743.161599999985
Test mean error for best: 20.37158
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_flush} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_div integer_flush in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_max float_dec float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3300.9627097000016
Median total errors in population: 562.06295
Error averages by case: (108.13248569999935 10.037 130.76416959999995 3.919 137.16750570000008 4.564 108.48778180000095 10.232 132.79291449999997 3.011 90.8145789000013 10.484 96.70967630000095 9.639 149.66128420000004 4.285 129.3954173 4.161 141.76855429999995 4.269 159.3730932 11.662 105.8950290999995 9.729 126.86979419999999 5.408 150.0704798 3.651 108.00961549999913 8.912 142.57088600000006 4.04 99.28544629999891 8.795 130.1822900999991 11.072 104.5056692000006 10.385 116.95617809999966 11.867 140.41860140000009 4.122 101.7195962999982 11.795 133.81368730000005 3.58 116.02409950000077 9.705 148.99387540000004 11.256)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 2.9357 3 1.0642 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 2.0 1 0.3913 1 5.0 1 0.2968 8 3.3912 2 2.537 1 1.3385 1 1.0 1 0.3475 2 0.0 0 1.7194 8 1.3753 1)
Average genome size in population (length): 112.629
Average program size in population (points): 113.629
Average percent parens in population: 0.009
Minimum age in population: 134.6531184226546
Maximum age in population: 138.7046906740397
Average age in population: 136.7068724798276
Median age in population: 136.7444981849136
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.897
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.897
Total error diversity:				 0.42
Error (vector) diversity:			 0.483
Behavioral diversity:				 0.484
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 211571191
--- Timings ---
Current time: 1529615514610 milliseconds
Total Time:         387.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.3 seconds, 31.5%
Fitness Testing:    213.6 seconds, 55.1%
Report:              51.8 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 40787.230999999985
Test mean error for best: 20.39362
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_mod} {:instruction float_rot} {:instruction float_sub} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_mod float_rot float_sub in2 integer_dec in2 float_frominteger integer_min float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec integer_rot float_dup_times float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 110
Size: 111
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2821.0380105000013
Median total errors in population: 568.019
Error averages by case: (83.87009639999935 9.876 121.64327809999993 3.782 128.02952750000009 4.459 84.32518210000082 9.895 116.56896189999996 2.883 60.93145530000077 10.343 67.43215160000082 9.497 139.2829431 4.189 112.280477 4.272 132.76869 4.115 148.86293629999994 11.607 81.11320469999993 9.376 113.2880708 5.358 133.80577750000012 3.491 81.14701329999929 8.865 133.42375959999998 3.917 73.80910440000054 8.61 104.89790339999949 10.755 78.89596849999981 10.253 89.88397380000006 11.649 131.32841240000008 3.999 77.79348439999849 11.636 117.87421220000002 3.417 88.20097620000078 9.534 132.70045 11.102)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4086 8 0.9357 8 2.4312 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 0.0 0 0.3913 1 3.0 1 0.3871 8 9.9434 2 5.1596 2 0.6084 2 1.0 1 0.3475 1 0.0 0 11.6841 9 0.3317 1)
Average genome size in population (length): 112.848
Average program size in population (points): 113.848
Average percent parens in population: 0.009
Minimum age in population: 135.8114686652043
Maximum age in population: 139.9204352788122
Average age in population: 137.9993876457021
Median age in population: 138.0307897290343
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.903
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.903
Total error diversity:				 0.437
Error (vector) diversity:			 0.501
Behavioral diversity:				 0.501
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 214392540
--- Timings ---
Current time: 1529615519022 milliseconds
Total Time:         392.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       123.6 seconds, 31.5%
Fitness Testing:    216.1 seconds, 55.1%
Report:              52.4 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 40648.92309999999
Test mean error for best: 20.32446
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_sub} {:instruction in2} {:instruction float_mod} {:instruction integer_max} {:instruction float_cos} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction print_integer} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_sub in2 float_mod integer_max float_cos in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div print_integer integer_dec float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec integer_shove float_max float_dec float_dec integer_mod float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 116
Size: 117
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3241.469594700003
Median total errors in population: 566.4014
Error averages by case: (97.74993999999944 9.983 138.53264100000004 4.026 144.9396595000001 4.668 97.28033220000084 10.083 137.6520425 3.067 78.13416710000135 10.437 84.69881620000088 9.583 157.53668009999996 4.271 133.0906847 4.224 149.6751290999999 4.354 166.30396479999996 11.714 94.24008219999972 9.526 132.68370569999996 5.58 155.66744299999996 3.671 96.11772719999934 8.896 150.1624382 4.129 87.25172349999939 8.725 118.28031479999908 10.918 91.74950290000044 10.302 104.6778926999994 11.818 148.16204110000012 4.195 89.94742399999825 11.796 139.10452030000005 3.595 104.33351160000086 9.647 153.07321029999997 11.216)
Error minima by case: (0.4245 8 0.0 0 0.341 1 0.1612 2 1.0 1 1.4521 8 5.9584 7 0.0403 1 0.0 0 0.0 0 1.0914 1 0.2732 1 0.0 0 1.0 1 0.355 1 4.0 1 0.7032 8 13.9434 2 0.1596 1 0.3385 2 0.0 0 0.3475 1 1.0 1 6.6841 8 0.1179 1)
Average genome size in population (length): 112.976
Average program size in population (points): 113.976
Average percent parens in population: 0.009
Minimum age in population: 137.0608159825913
Maximum age in population: 141.4914775798962
Average age in population: 139.3480651464693
Median age in population: 139.3815677569774
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.913
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.913
Total error diversity:				 0.435
Error (vector) diversity:			 0.492
Behavioral diversity:				 0.493
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 217217213
--- Timings ---
Current time: 1529615523582 milliseconds
Total Time:         396.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.8 seconds, 31.5%
Fitness Testing:    218.7 seconds, 55.1%
Report:              53.0 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 40739.9468
Test mean error for best: 20.36997
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_mult} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max integer_div float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times integer_mult float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max integer_sub float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 113
Size: 114
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3248.3931064000026
Median total errors in population: 571.0601
Error averages by case: (100.33240459999946 9.937 135.12336569999997 3.949 141.3512901000001 4.654 102.23022910000073 10.048 136.39944779999996 3.143 80.58550230000114 10.354 83.48899920000095 9.544 154.51925109999996 4.289 131.17688510000002 4.068 146.07673589999996 4.314 163.4964576 11.737 98.90782879999963 9.562 130.68113469999997 5.763 155.00919040000002 3.708 99.74492439999938 8.768 147.08613670000005 4.113 90.11651349999961 8.677 121.9889567999991 10.903 95.51399560000041 10.28 108.68667489999993 11.752 145.13389730000003 4.208 93.03509599999848 11.692 138.80956270000004 3.621 107.03357390000083 9.584 152.07705219999997 11.12)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.0889 8 0.754 8 0.5913 1 0.0 0 0.0 0 4.0 1 0.2449 1 0.0 0 2.0 1 0.3913 1 0.0 0 1.1897 8 9.9434 2 1.1596 1 3.3385 1 0.0 0 0.3475 1 0.0 0 7.5073 8 0.5522 1)
Average genome size in population (length): 112.924
Average program size in population (points): 113.924
Average percent parens in population: 0.009
Minimum age in population: 138.0608159825913
Maximum age in population: 142.7878152671732
Average age in population: 140.6093553454387
Median age in population: 140.6546368391837
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.92
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.92
Total error diversity:				 0.452
Error (vector) diversity:			 0.504
Behavioral diversity:				 0.505
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 220040585
--- Timings ---
Current time: 1529615527959 milliseconds
Total Time:         401.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.1 seconds, 31.4%
Fitness Testing:    221.2 seconds, 55.1%
Report:              53.8 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 41117.65490000001
Test mean error for best: 20.55883
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_rot float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max integer_mult integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 116
Size: 117
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3369.795341200002
Median total errors in population: 571.1158
Error averages by case: (99.53362079999954 9.93 147.3092133999999 4.279 153.6411146 5.036 100.51095470000058 10.063 143.42715559999994 3.288 79.73884220000102 10.362 85.18404310000086 9.561 163.25504420000007 4.414 140.3332355 4.33 159.43190349999998 4.695 172.8232397 11.707 96.90356449999972 9.586 140.20883219999993 5.692 163.32798269999995 3.948 98.34948169999943 8.788 158.8470348000001 4.43 89.75710629999992 8.678 120.19150729999919 10.908 94.49927570000021 10.243 108.28841389999982 11.782 157.78746850000005 4.586 92.11538279999856 11.716 146.55737030000006 3.871 105.79214370000086 9.607 159.1774095 11.304)
Error minima by case: (0.1014 8 0.0 0 0.341 1 0.1612 1 0.0 0 1.4521 7 1.0643 8 0.9358 1 0.0 0 0.0 0 1.0 1 0.2732 1 0.0 0 0.0 0 0.355 1 1.823 1 0.2969 5 1.0505 2 4.8404 2 2.5571 2 0.0 0 0.3475 1 0.0 0 0.5781 8 0.1933 1)
Average genome size in population (length): 113.106
Average program size in population (points): 114.106
Average percent parens in population: 0.009
Minimum age in population: 139.0608159825913
Maximum age in population: 144.1041787022358
Average age in population: 141.8884505797714
Median age in population: 141.8761197575514
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.919
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.919
Total error diversity:				 0.45
Error (vector) diversity:			 0.516
Behavioral diversity:				 0.516
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 222868420
--- Timings ---
Current time: 1529615532412 milliseconds
Total Time:         405.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.3 seconds, 31.4%
Fitness Testing:    223.9 seconds, 55.2%
Report:              54.4 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 40520.60329999999
Test mean error for best: 20.26030
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_mod} {:instruction float_rot} {:instruction float_sub} {:instruction in2} {:instruction float_rot} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_mod float_rot float_sub in2 float_rot in2 float_frominteger integer_min float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec integer_yank float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3405.991443300002
Median total errors in population: 574.5469499999999
Error averages by case: (102.3052347999996 9.957 150.11250060000003 4.09 156.3767247 4.787 102.12690870000081 10.064 142.67766359999996 3.224 80.1627441000011 10.371 84.01401890000083 9.563 168.6336593999999 4.381 138.8365597 4.365 161.28330129999992 4.469 178.24414829999992 11.786 99.10035429999964 9.619 140.28116889999995 5.709 160.37570509999998 3.785 101.23379989999938 8.718 161.3526392000001 4.263 91.7066409999994 8.673 122.61233839999923 10.953 96.25374630000036 10.166 109.5426765999995 11.873 159.65528949999995 4.352 97.35023769999857 11.825 144.4572778 3.741 108.08533470000076 9.604 157.7047698 11.168)
Error minima by case: (1.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 6.5907 8 0.2319 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 0.0 0 0.355 1 1.0 1 0.2968 8 1.0505 2 0.1596 1 2.3385 2 0.0 0 0.3475 1 0.0 0 6.6841 9 0.2247 1)
Average genome size in population (length): 113.489
Average program size in population (points): 114.489
Average percent parens in population: 0.009
Minimum age in population: 140.7761054662105
Maximum age in population: 145.5281126182816
Average age in population: 143.1037473471675
Median age in population: 143.1206450589048
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.924
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.924
Total error diversity:				 0.456
Error (vector) diversity:			 0.521
Behavioral diversity:				 0.523
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 225705963
--- Timings ---
Current time: 1529615536776 milliseconds
Total Time:         410.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.5 seconds, 31.3%
Fitness Testing:    226.4 seconds, 55.2%
Report:              55.0 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 41107.403000000006
Test mean error for best: 20.55370
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_add} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot integer_swap in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_add float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec integer_shove float_max float_dec float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 119
Size: 120
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 2904.2816348000006
Median total errors in population: 570.3332
Error averages by case: (85.77805949999932 9.946 121.05727479999993 3.925 127.51077740000005 4.657 89.66065150000091 9.977 122.20292369999989 3.061 66.42279080000101 10.326 70.20372630000088 9.532 139.2226546 4.191 118.08683479999998 4.177 133.0440592 4.284 148.20022519999992 11.71 86.50624699999979 9.452 117.61498259999995 5.672 140.83077810000012 3.664 84.42990789999934 8.76 133.00340050000008 4.105 74.78332830000055 8.649 110.51577359999936 10.841 79.50827599999984 10.186 98.76582299999974 11.735 131.39585970000005 4.172 81.4946807999984 11.68 124.56050370000007 3.624 92.53142260000081 9.561 137.91367319999998 11.15)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 8 2.0643 8 1.0642 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 1.0 1 0.3913 1 3.0 1 0.2968 8 11.9434 2 0.1596 2 5.3385 2 0.0 0 0.3475 1 0.0 0 4.4459 8 0.5379 1)
Average genome size in population (length): 113.496
Average program size in population (points): 114.496
Average percent parens in population: 0.009
Minimum age in population: 141.7867643189841
Maximum age in population: 146.4472442429425
Average age in population: 144.3266418216392
Median age in population: 144.3712889713815
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.908
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.908
Total error diversity:				 0.461
Error (vector) diversity:			 0.515
Behavioral diversity:				 0.515
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 228543647
--- Timings ---
Current time: 1529615541173 milliseconds
Total Time:         414.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       129.7 seconds, 31.3%
Fitness Testing:    229.0 seconds, 55.3%
Report:              55.5 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 41147.464600000014
Test mean error for best: 20.57373
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec integer_mult float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_frominteger float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3099.8414423000017
Median total errors in population: 570.3332
Error averages by case: (96.01498079999935 9.954 128.10569689999997 3.847 134.3202621 4.584 101.11571420000084 10.047 126.20613229999996 3.047 74.65386860000083 10.381 84.01657520000082 9.575 145.08102880000007 4.304 123.41526600000002 3.998 139.52887230000002 4.28 154.69361499999994 11.66 97.96563139999978 9.548 122.26934069999994 5.798 143.92645389999998 3.622 95.96731479999946 8.726 140.06108540000005 4.059 85.05070929999975 8.696 122.11984199999941 10.875 90.00865740000019 10.25 103.78990249999993 11.75 138.4094161 4.165 93.25388329999852 11.701 127.88399060000002 3.551 101.85625170000078 9.611 140.956951 11.141)
Error minima by case: (0.5606 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.9773 8 1.0393 1 0.0 0 0.0 0 0.0 0 0.0381 1 0.0 0 1.0 1 0.3187 1 4.0 1 0.2968 8 5.9434 2 0.1596 2 2.1692 1 0.0 0 0.3323 1 0.0 0 2.2459 8 0.1933 1)
Average genome size in population (length): 113.839
Average program size in population (points): 114.839
Average percent parens in population: 0.009
Minimum age in population: 142.7867643189841
Maximum age in population: 147.6530174647886
Average age in population: 145.5956170394965
Median age in population: 145.610852501452
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.909
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.909
Total error diversity:				 0.465
Error (vector) diversity:			 0.527
Behavioral diversity:				 0.529
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 231389744
--- Timings ---
Current time: 1529615545550 milliseconds
Total Time:         418.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.9 seconds, 31.3%
Fitness Testing:    231.6 seconds, 55.3%
Report:              56.2 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 47903.017499999994
Test mean error for best: 23.95151
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot integer_swap in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_mod float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_sub float_dec float_dec float_max float_dup_times float_dec integer_yank float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 114
Size: 115
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2793.8850128000017
Median total errors in population: 570.6966500000001
Error averages by case: (89.3168701999994 9.948 114.82351759999995 3.736 121.34540040000005 4.415 89.23191200000085 10.063 109.30419669999999 2.845 66.50714250000124 10.384 70.55724610000081 9.519 130.4340868 4.021 106.62077849999997 4.053 126.36115549999994 4.059 142.11543319999993 11.702 86.07842959999964 9.581 106.8637487 5.408 127.67435430000005 3.446 87.05034499999944 8.67 126.71518380000003 3.904 78.87887349999978 8.617 110.3484664999992 10.904 84.15830680000045 10.221 96.36841749999975 11.747 124.8388261000001 3.963 81.49615049999846 11.749 110.98111320000001 3.366 93.5512783000008 9.547 125.2727795 11.123)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 4.0643 8 0.0642 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 1.0 1 0.355 1 3.0 1 9.4672 8 13.0566 2 2.2686 2 1.3385 2 0.0 0 0.3475 1 0.0 0 0.5781 7 0.3143 1)
Average genome size in population (length): 114.651
Average program size in population (points): 115.651
Average percent parens in population: 0.009
Minimum age in population: 144.6965513305271
Maximum age in population: 148.875284343214
Average age in population: 146.8551378943816
Median age in population: 146.9156030617883
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.902
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.902
Total error diversity:				 0.461
Error (vector) diversity:			 0.527
Behavioral diversity:				 0.528
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 234256215
--- Timings ---
Current time: 1529615549964 milliseconds
Total Time:         423.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       132.2 seconds, 31.2%
Fitness Testing:    234.1 seconds, 55.3%
Report:              56.8 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 41151.654900000016
Test mean error for best: 20.57583
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_min} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction print_integer} {:instruction float_dup} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_rot} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_min float_dec float_max float_dec float_dec float_dec float_div print_integer float_dup float_max float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_rot float_rot float_max float_dec float_dec float_max float_dec integer_shove float_max float_dec float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 4011.324933700003
Median total errors in population: 584.3651
Error averages by case: (132.53499979999964 10.176 169.10051360000006 4.434 175.15029759999996 5.033 135.42757490000082 10.213 162.84490660000003 3.393 109.38488940000133 10.513 110.54060920000094 9.707 182.7833378 4.686 157.36050890000007 4.394 180.9065510000001 4.798 191.89329949999987 11.739 132.23579889999903 9.772 158.14289810000002 5.977 180.91435969999992 4.019 130.19358559999927 8.765 180.31708940000001 4.56 120.72648179999838 8.901 154.74028100000086 11.059 125.84209640000111 10.373 141.66053739999936 11.818 178.97393149999996 4.698 125.31640439999829 11.827 165.125331 3.947 136.65170590000028 9.789 176.71494430000007 11.251)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4125 8 4.0643 8 0.0642 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0 0 0.0 0 0.355 1 4.0 1 8.8111 8 3.9434 2 0.5577 1 0.3385 2 0.0 0 0.3475 1 0.0 0 27.9079 8 0.1549 1)
Average genome size in population (length): 114.521
Average program size in population (points): 115.521
Average percent parens in population: 0.009
Minimum age in population: 145.7992995765911
Maximum age in population: 150.0525211668589
Average age in population: 148.1606485207817
Median age in population: 148.1690469582325
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.921
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.921
Total error diversity:				 0.467
Error (vector) diversity:			 0.524
Behavioral diversity:				 0.526
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 237119629
--- Timings ---
Current time: 1529615554319 milliseconds
Total Time:         427.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.4 seconds, 31.2%
Fitness Testing:    236.7 seconds, 55.4%
Report:              57.4 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 40655.4865
Test mean error for best: 20.32774
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_min} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_min in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 117
Size: 118
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3168.874999000001
Median total errors in population: 581.7126000000001
Error averages by case: (102.08789669999956 9.979 130.66325799999998 4.129 136.62760800000004 4.806 102.2588828000007 10.023 127.12016829999997 3.204 80.74296660000098 10.364 84.97442740000089 9.533 146.15048059999992 4.505 122.6991847 4.372 142.6307969 4.526 156.27726489999995 11.643 98.55410399999964 9.545 122.77776139999997 5.944 144.68404370000002 3.777 102.30324829999944 8.588 142.61318610000006 4.311 90.65508089999945 8.691 122.5822388999993 10.861 95.26859760000053 10.264 109.62544279999956 11.706 141.51974990000005 4.411 95.06333099999854 11.685 129.12248640000007 3.716 107.66644970000084 9.597 142.8763434 11.15)
Error minima by case: (0.4394 2 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.0643 8 2.0642 1 0.0 0 0.0 0 1.0 1 0.2732 2 0.0 0 1.5372 1 0.355 1 2.0 1 0.2968 8 0.9495 2 2.8404 2 2.3385 1 0.0 0 0.3475 1 0.0 0 1.3159 8 0.6211 1)
Average genome size in population (length): 114.315
Average program size in population (points): 115.315
Average percent parens in population: 0.009
Minimum age in population: 146.8642512352742
Maximum age in population: 151.4389983130533
Average age in population: 149.4872012363814
Median age in population: 149.5181105177274
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.926
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.926
Total error diversity:				 0.492
Error (vector) diversity:			 0.548
Behavioral diversity:				 0.549
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 239977752
--- Timings ---
Current time: 1529615558817 milliseconds
Total Time:         431.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.6 seconds, 31.2%
Fitness Testing:    239.2 seconds, 55.4%
Report:              58.0 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 41066.55070000001
Test mean error for best: 20.53328
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_sub} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_365})
Best program: (float_mod float_rot float_sub in2 integer_dec in2 float_frominteger integer_min float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_max float_dec float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_max float_dec float_dec float_max float_dec float_dec integer_min float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth tagged_365)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 110
Size: 111
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3166.8579872000014
Median total errors in population: 571.3332
Error averages by case: (97.95608389999933 9.987 132.87730189999994 3.95 139.07271280000006 4.623 98.70962640000081 10.157 130.99000239999995 3.079 78.88459540000126 10.414 84.4136745000009 9.598 149.04191709999998 4.395 127.52732940000001 4.247 143.98865799999993 4.31 156.37879589999997 11.622 95.48657579999984 9.664 126.37271149999998 5.947 147.64632109999997 3.656 99.87295499999941 8.772 144.6130865 4.107 88.0158688999996 8.706 119.26189029999942 11.011 93.16385030000023 10.345 105.38099069999991 11.812 142.6199411 4.22 89.58763259999839 11.798 132.27177509999999 3.592 105.17968670000076 9.613 146.82900389999995 11.09)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 0.2296 8 0.3067 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 0.0 0 0.3913 1 2.0 1 2.3493 8 6.0 2 8.7314 2 0.3385 2 0.0 0 0.3475 2 0.0 0 14.6841 8 0.1179 1)
Average genome size in population (length): 113.995
Average program size in population (points): 114.995
Average percent parens in population: 0.009
Minimum age in population: 148.2621874989498
Maximum age in population: 152.8780383594738
Average age in population: 150.8557275154149
Median age in population: 150.8684105565366
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.919
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.919
Total error diversity:				 0.454
Error (vector) diversity:			 0.527
Behavioral diversity:				 0.528
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 242827936
--- Timings ---
Current time: 1529615563202 milliseconds
Total Time:         436.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.9 seconds, 31.1%
Fitness Testing:    241.7 seconds, 55.4%
Report:              58.7 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 41098.65490000001
Test mean error for best: 20.54933
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_rot float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max integer_mult integer_max float_dup float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 118
Size: 119
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3102.8327307000022
Median total errors in population: 570.3332
Error averages by case: (100.75030099999951 10.017 124.31687569999988 3.931 130.49944620000008 4.638 101.55917770000104 10.127 125.01067319999989 3.101 80.89469050000147 10.405 84.14735350000097 9.583 142.99843170000005 4.363 121.00021540000002 4.192 135.70069239999992 4.3 151.57387990000004 11.67 98.37261309999941 9.588 119.77871429999996 5.635 142.77966560000007 3.709 98.0900767999993 8.767 136.2919328000001 4.095 89.59625679999894 8.732 122.78792179999883 10.973 95.11473240000059 10.374 109.68948699999936 11.809 134.34427870000005 4.199 93.41513009999821 11.774 126.32827720000006 3.603 106.56097370000084 9.641 140.85593319999995 11.149)
Error minima by case: (0.5606 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.9357 7 0.3926 1 0.0 0 0.0 0 2.8489 1 0.2732 2 0.0 0 0.0 0 0.3913 1 0.0 0 0.2968 8 7.3197 2 1.6967 2 1.8308 1 0.0 0 0.3475 1 0.0 0 3.7551 8 0.3152 1)
Average genome size in population (length): 113.59
Average program size in population (points): 114.59
Average percent parens in population: 0.009
Minimum age in population: 149.7146432412477
Maximum age in population: 154.0507495277876
Average age in population: 152.1355676287988
Median age in population: 152.1582736419292
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.925
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.925
Total error diversity:				 0.443
Error (vector) diversity:			 0.51
Behavioral diversity:				 0.512
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 245667761
--- Timings ---
Current time: 1529615567631 milliseconds
Total Time:         440.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.1 seconds, 31.1%
Fitness Testing:    244.3 seconds, 55.4%
Report:              59.3 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 40610.136699999995
Test mean error for best: 20.30507
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction integer_yank} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max integer_div float_dec float_rot float_dec float_max float_max integer_add float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_rot float_dec float_max float_dec float_dec float_dec float_div integer_yank float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_yank float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_frominteger float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 112
Size: 113
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3154.934578000001
Median total errors in population: 569.3332
Error averages by case: (92.77335259999946 9.941 135.59951619999998 4.044 141.76307000000006 4.714 92.60797970000073 10.121 136.01150849999996 3.144 73.32216730000106 10.361 78.01111530000091 9.522 154.44481349999995 4.415 132.7998923 4.171 146.67604440000002 4.404 163.37139729999998 11.697 89.35665809999962 9.622 131.36193909999997 5.842 154.8570336 3.763 90.85440919999944 8.776 147.44798150000005 4.212 82.0457616999997 8.653 113.54334779999914 10.99 86.8898535000005 10.28 100.6479833999998 11.784 145.72857130000008 4.296 85.20289659999861 11.757 137.40151260000002 3.681 99.6361225000008 9.568 151.65564999999998 11.166)
Error minima by case: (0.4394 7 0.0 0 0.0 0 0.1612 2 0.0 0 0.6294 7 2.0227 8 0.0642 1 0.0 0 0.0 0 1.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 3.0 1 0.7032 8 9.9434 2 1.6967 2 0.0 0 0.0 0 0.3475 1 0.0 0 0.3696 8 0.5742 1)
Average genome size in population (length): 113.443
Average program size in population (points): 114.443
Average percent parens in population: 0.009
Minimum age in population: 151.0012827160787
Maximum age in population: 155.271281248222
Average age in population: 153.4961857647212
Median age in population: 153.5211221456712
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.916
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.916
Total error diversity:				 0.448
Error (vector) diversity:			 0.517
Behavioral diversity:				 0.517
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 248503961
--- Timings ---
Current time: 1529615572016 milliseconds
Total Time:         445.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.3 seconds, 31.1%
Fitness Testing:    246.9 seconds, 55.4%
Report:              59.9 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 41043.6263
Test mean error for best: 20.52181
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_rot} {:instruction float_mod} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction integer_shove} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (integer_sub float_rot float_mod float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_max float_dec float_dec float_rot float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div integer_shove float_dup float_dec float_max float_dec float_dec integer_dup_items float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_sub float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_rot float_dec float_dec float_max float_rot float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 116
Size: 117
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3267.421277500001
Median total errors in population: 570.3332
Error averages by case: (99.8555606999994 9.967 138.4820937 3.978 142.84471340000005 4.716 100.21261810000071 10.014 138.9852073 3.115 81.95016430000078 10.404 86.37064860000098 9.569 157.89089150000004 4.412 135.20822309999997 4.102 150.02085319999998 4.385 164.03365529999996 11.661 96.80353369999985 9.506 133.10293689999995 6.001 154.9449813 3.739 97.59757949999941 8.806 148.55279770000007 4.17 88.72952319999996 8.696 120.32435739999937 10.83 95.59242720000017 10.3 104.98800669999972 11.696 146.78704020000006 4.307 91.4464897999986 11.746 141.0216528 3.675 106.39437780000085 9.64 154.65794409999998 11.188)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 0.6031 7 3.0642 1 0.0 0 0.0 0 1.0 1 0.2732 1 0.0 0 1.0 1 0.355 1 6.9345 1 1.9643 5 1.0505 2 1.0597 2 1.0207 2 1.0 1 0.3475 1 0.0 0 1.6841 9 0.1549 1)
Average genome size in population (length): 112.758
Average program size in population (points): 113.758
Average percent parens in population: 0.009
Minimum age in population: 152.800531654457
Maximum age in population: 156.8596292938231
Average age in population: 154.7578592415697
Median age in population: 154.7708328453197
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.892
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.892
Total error diversity:				 0.448
Error (vector) diversity:			 0.513
Behavioral diversity:				 0.514
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 251323098
--- Timings ---
Current time: 1529615576309 milliseconds
Total Time:         449.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.5 seconds, 31.0%
Fitness Testing:    249.4 seconds, 55.5%
Report:              60.5 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 47960.7045
Test mean error for best: 23.98035
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_252} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction print_integer} {:instruction tagged_318})
Best program: (float_mod float_rot integer_swap in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_mod float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dec float_dec integer_mult float_dec float_dec tagged_252 float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float print_integer tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 112
Size: 113
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3023.6907109000003
Median total errors in population: 569.1158
Error averages by case: (92.74962499999957 9.932 125.69314679999997 3.955 131.8648677 4.7 92.57461320000071 10.002 125.88457009999995 3.106 71.99255920000103 10.346 78.41867640000075 9.529 144.91174890000005 4.269 121.96895749999997 4.147 137.09055849999993 4.383 153.58108699999997 11.683 89.70707859999985 9.51 122.72060639999997 5.559 143.57291340000003 3.693 92.60199089999952 8.74 137.65122180000003 4.108 80.70098799999987 8.659 114.34709249999926 10.807 85.42314620000015 10.235 101.6186291999996 11.767 135.70356820000006 4.269 85.90244779999868 11.731 127.445854 3.622 98.19021570000082 9.591 141.8165479 11.215)
Error minima by case: (0.4394 8 0.0 0 0.341 1 0.1612 2 0.0 0 1.1029 7 4.0643 7 1.0393 1 0.0 0 1.0 1 1.0 1 0.2732 1 0.0 0 0.0 0 0.355 1 1.0 1 0.2968 8 12.9434 2 1.0395 1 3.8308 2 0.0 0 0.3475 1 0.0 0 7.6841 9 0.1933 1)
Average genome size in population (length): 112.735
Average program size in population (points): 113.735
Average percent parens in population: 0.009
Minimum age in population: 153.9190474026971
Maximum age in population: 158.1870661977954
Average age in population: 156.0680363485395
Median age in population: 156.0857714101107
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.896
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.896
Total error diversity:				 0.445
Error (vector) diversity:			 0.506
Behavioral diversity:				 0.507
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 254141598
--- Timings ---
Current time: 1529615580597 milliseconds
Total Time:         453.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       140.7 seconds, 31.0%
Fitness Testing:    251.9 seconds, 55.5%
Report:              61.1 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 41185.16600000001
Test mean error for best: 20.59258
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -152.3737677014
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction integer_add} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction integer_flush} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot integer_swap in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max integer_add float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max integer_flush float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 13.0 2 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3350.648851700003
Median total errors in population: 571.34915
Error averages by case: (106.01678329999946 9.982 138.54964630000006 4.085 144.88795320000006 4.835 109.25262050000086 10.119 136.6456572 3.086 85.21309320000114 10.381 93.53776840000094 9.591 155.60713099999998 4.261 132.45909939999996 4.038 150.3617279 4.505 165.12553949999997 11.757 105.96469299999951 9.631 131.1513602 5.788 154.37555890000002 3.702 105.57005439999931 8.732 150.41755540000008 4.303 94.55518569999937 8.716 131.2298655999993 11.012 100.52652690000049 10.371 114.6380473999998 11.83 149.0585523 4.404 102.36541089999848 11.802 137.760534 3.605 111.46029290000084 9.64 152.46519419999998 11.277)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.0889 7 3.9357 8 1.5907 1 0.0 0 0.0 0 4.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 1.0 1 0.7032 8 9.9434 2 1.7314 1 3.8308 1 0.0 0 0.3475 1 0.0 0 10.6841 8 0.3947 1)
Average genome size in population (length): 112.487
Average program size in population (points): 113.487
Average percent parens in population: 0.009
Minimum age in population: 155.4834575003758
Maximum age in population: 159.3127551484908
Average age in population: 157.3606156234928
Median age in population: 157.393173907285
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.918
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.918
Total error diversity:				 0.443
Error (vector) diversity:			 0.505
Behavioral diversity:				 0.505
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 256953885
--- Timings ---
Current time: 1529615584949 milliseconds
Total Time:         458.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.0 seconds, 31.0%
Fitness Testing:    254.4 seconds, 55.5%
Report:              61.7 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 40827.788299999986
Test mean error for best: 20.41389
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_mod} {:instruction float_rot} {:instruction float_sub} {:instruction in2} {:instruction float_rot} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_mult} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_mod float_rot float_sub in2 float_rot in2 float_frominteger integer_min float_mult float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec integer_stackdepth float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2655.8657089000017
Median total errors in population: 564.8889
Error averages by case: (84.6159324999992 9.904 105.29100689999999 3.751 111.61865080000001 4.453 84.73141260000085 10.058 104.32614429999998 2.888 65.61741410000099 10.379 70.17414630000074 9.567 122.76550239999996 4.215 100.50864710000002 3.808 117.13372129999996 4.086 132.40198919999997 11.599 81.53594480000035 9.51 99.09138859999999 5.579 123.04995230000007 3.5 84.08346849999934 8.786 117.60470560000002 3.941 75.31716650000077 8.641 106.35556009999958 10.921 80.1198993999996 10.208 92.30739730000032 11.815 116.06936610000011 4.007 74.70796709999856 11.744 106.31099250000003 3.37 92.00692080000077 9.587 120.71441180000001 11.089)
Error minima by case: (0.1371 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 7.1098 8 0.3067 1 0.0 0 1.0 1 1.0 1 0.2732 2 0.0 0 0.0 0 0.355 1 3.0 1 1.7032 5 1.9434 2 1.2294 1 3.3385 2 0.0 0 0.3475 1 0.0 0 11.6841 9 0.1549 1)
Average genome size in population (length): 112.732
Average program size in population (points): 113.732
Average percent parens in population: 0.009
Minimum age in population: 156.4834575003758
Maximum age in population: 160.5185781974603
Average age in population: 158.6837168921247
Median age in population: 158.6791708684309
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.906
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.906
Total error diversity:				 0.444
Error (vector) diversity:			 0.512
Behavioral diversity:				 0.512
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 259772410
--- Timings ---
Current time: 1529615589396 milliseconds
Total Time:         462.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.2 seconds, 31.0%
Fitness Testing:    257.0 seconds, 55.6%
Report:              62.3 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 41213.27040000001
Test mean error for best: 20.60664
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_min} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction print_integer} {:instruction print_integer} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_rot} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot integer_swap in2 integer_dec in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max float_max float_max float_dec float_rot integer_shove float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_min float_dec float_max float_dec float_dec float_dec float_div print_integer print_integer float_max float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_rot float_rot float_max float_dec float_dec float_max float_dec integer_shove float_max float_dec float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 116
Size: 117
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3274.9511776000013
Median total errors in population: 579.3332
Error averages by case: (102.71463089999929 10.003 136.78738669999987 4.16 142.92505190000003 4.858 105.12735120000075 10.072 134.25695209999998 3.216 81.48751980000095 10.404 87.14465840000089 9.606 153.90543580000005 4.427 129.62246290000002 4.258 148.71962189999994 4.54 162.25889929999994 11.632 101.9552096000001 9.601 131.20950699999992 5.667 152.20337879999997 3.89 101.51474999999948 8.798 148.48162140000005 4.32 93.16683359999992 8.728 124.77719889999948 10.934 97.85739809999984 10.304 110.6459785000002 11.797 147.38745210000005 4.45 96.13743899999844 11.807 136.26533 3.749 107.60768580000082 9.65 148.70442389999997 11.216)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 8 4.0643 9 0.0403 1 0.0 0 0.0 0 1.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 4.0 1 2.7032 5 15.9434 2 6.1596 2 1.3385 2 0.0 0 0.3475 2 0.0 0 5.7625 9 0.3789 1)
Average genome size in population (length): 112.344
Average program size in population (points): 113.344
Average percent parens in population: 0.009
Minimum age in population: 157.4834575003758
Maximum age in population: 161.9450896592668
Average age in population: 159.9149480849306
Median age in population: 159.9476565753246
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.918
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.918
Total error diversity:				 0.461
Error (vector) diversity:			 0.522
Behavioral diversity:				 0.522
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 262581135
--- Timings ---
Current time: 1529615593844 milliseconds
Total Time:         467.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.4 seconds, 30.9%
Fitness Testing:    259.6 seconds, 55.6%
Report:              62.9 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 40750.422199999986
Test mean error for best: 20.37521
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -151.3737677014
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_rot} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction float_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_yank} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_shove} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction integer_flush} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_dec float_rot float_rot float_cos in2 float_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec float_max integer_yank float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec integer_mult float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_frominteger float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_shove float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max integer_flush float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 12.0 2 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 514.0101
Mean: 10.280202
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3302.9285594000007
Median total errors in population: 570.3332
Error averages by case: (106.79549239999947 10.027 137.52171479999998 3.9 143.72122140000002 4.59 105.65040460000091 10.099 132.45081180000003 3.112 85.93708960000112 10.421 90.08678020000085 9.597 153.75242360000001 4.471 129.2934532 3.888 148.4688778 4.307 164.75880180000001 11.706 102.49633859999999 9.567 127.99125559999999 6.157 149.87235170000002 3.697 104.32905049999924 8.616 149.6900357000001 4.149 96.02199109999961 8.747 127.28687549999911 10.956 100.84129430000002 10.309 113.35090269999974 11.729 147.67005530000003 4.208 99.0903376999984 11.767 134.41608030000003 3.637 112.12832380000079 9.645 148.70559539999996 11.299)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.6639 8 0.2808 1 0.0 0 0.0 0 0.0 0 0.2732 1 0.0 0 0.0 0 0.3913 1 5.0 1 2.2968 5 17.9434 2 1.156 1 2.8308 1 0.0 0 0.3475 2 0.0 0 7.6841 8 1.0134 1)
Average genome size in population (length): 112.456
Average program size in population (points): 113.456
Average percent parens in population: 0.009
Minimum age in population: 158.4834575003758
Maximum age in population: 163.3758992609028
Average age in population: 161.1596694521345
Median age in population: 161.2053116336335
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.907
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.907
Total error diversity:				 0.43
Error (vector) diversity:			 0.485
Behavioral diversity:				 0.485
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 265392710
--- Timings ---
Current time: 1529615598172 milliseconds
Total Time:         471.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       145.6 seconds, 30.9%
Fitness Testing:    262.0 seconds, 55.6%
Report:              63.6 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 41169.60020000001
Test mean error for best: 20.58480
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 42.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 63.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [5.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 2.6087 10 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 511.6761
Mean: 10.233522
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3198.9136325000013
Median total errors in population: 578.6938
Error averages by case: (92.94082889999937 9.906 137.7133989999999 4.105 143.05242880000011 4.859 99.6565168000008 9.926 137.49003220000003 3.147 74.05476480000098 10.351 77.66446010000101 9.538 155.35301049999998 4.271 133.57546740000004 4.078 149.61240479999998 4.562 164.17363669999995 11.749 96.02320819999974 9.465 132.32106120000003 5.732 153.98003210000002 3.749 92.94522739999935 8.777 148.57186370000008 4.288 81.92457920000011 8.659 118.4811805999995 10.769 87.71630089999998 10.307 105.71709249999992 11.564 147.1384057000002 4.445 88.01295769999837 11.566 138.63811760000002 3.666 98.81440830000092 9.595 153.06624739999995 11.202)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 2.9357 8 1.0642 1 0.0 0 0.0 0 0.1813 1 0.2732 2 0.0 0 1.4628 1 0.355 1 1.1809 1 0.2968 8 0.9495 2 3.1596 1 1.3385 2 0.0 0 0.3475 1 0.0 0 8.114 8 0.1933 1)
Average genome size in population (length): 112.903
Average program size in population (points): 113.903
Average percent parens in population: 0.009
Minimum age in population: 159.7763660219595
Maximum age in population: 164.6325002255503
Average age in population: 162.3836070178246
Median age in population: 162.421123945726
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.904
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.904
Total error diversity:				 0.468
Error (vector) diversity:			 0.519
Behavioral diversity:				 0.521
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 268215546
--- Timings ---
Current time: 1529615602555 milliseconds
Total Time:         475.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.9 seconds, 30.9%
Fitness Testing:    264.6 seconds, 55.6%
Report:              64.2 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 41169.60020000001
Test mean error for best: 20.58480
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 42.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 63.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [5.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 2.6087 10 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 511.6761
Mean: 10.233522
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3153.309801800002
Median total errors in population: 570.3332
Error averages by case: (96.23144269999933 9.988 130.64168589999994 3.823 136.99278690000003 4.497 99.67437610000076 10.079 130.725184 3.023 76.96348700000095 10.424 83.09235600000095 9.618 149.76276099999993 4.301 128.8694912 3.99 141.24328939999995 4.286 159.48156409999999 11.677 96.36392379999965 9.59 128.06183949999996 5.914 147.55812080000004 3.594 96.06910449999927 8.811 142.73206810000002 4.01 87.09269029999973 8.73 119.76060129999924 10.928 91.60767000000007 10.195 105.83291059999986 11.805 140.36098020000003 4.114 91.32437219999842 11.801 131.95861130000003 3.51 103.36508780000081 9.659 147.98939709999996 11.187)
Error minima by case: (0.4245 8 0.0 0 0.341 1 0.1612 2 0.0 0 0.9111 8 5.0227 8 0.4312 1 0.0 0 0.666 1 0.0 0 0.2732 1 0.0 0 1.0 1 0.3913 1 5.0 1 2.2226 5 2.0566 2 4.2184 1 3.3385 1 0.0 0 0.3475 1 0.0 0 1.849 9 2.2847 1)
Average genome size in population (length): 112.744
Average program size in population (points): 113.744
Average percent parens in population: 0.009
Minimum age in population: 161.3105137669846
Maximum age in population: 165.6870496059608
Average age in population: 163.6500460149166
Median age in population: 163.693722320977
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.912
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.912
Total error diversity:				 0.449
Error (vector) diversity:			 0.512
Behavioral diversity:				 0.513
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 271034559
--- Timings ---
Current time: 1529615607008 milliseconds
Total Time:         480.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       148.1 seconds, 30.8%
Fitness Testing:    267.2 seconds, 55.6%
Report:              64.8 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 41169.60020000001
Test mean error for best: 20.58480
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 42.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 63.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [5.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 2.6087 10 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 511.6761
Mean: 10.233522
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3660.2474489000015
Median total errors in population: 579.3332
Error averages by case: (108.77183879999957 10.003 161.97200010000012 4.383 167.85895600000003 5.106 110.86584020000093 10.082 158.83825449999995 3.309 86.55070450000133 10.417 94.82332790000103 9.616 177.29288110000002 4.629 153.82074900000006 4.246 173.30107619999987 4.908 188.057567 11.662 107.63418329999917 9.623 153.01791660000004 5.85 174.67723000000004 3.947 108.33492959999913 8.756 173.5657859000001 4.557 96.99005139999909 8.746 131.0831607999988 10.974 102.11916030000066 10.292 115.13468079999922 11.791 172.26602179999998 4.721 102.61132039999819 11.762 159.90518039999998 3.834 112.87022140000089 9.676 173.67641090000004 11.318)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 2.0643 2 1.0593 1 0.0 0 0.334 1 1.0 1 0.2732 1 0.0 0 1.0 1 0.355 1 5.0 1 0.7032 8 2.0566 2 0.1596 1 0.3385 2 0.0 0 0.3475 1 0.0 0 0.2448 8 0.0397 1)
Average genome size in population (length): 113.298
Average program size in population (points): 114.298
Average percent parens in population: 0.009
Minimum age in population: 162.3105137669846
Maximum age in population: 166.9858719735407
Average age in population: 164.9910796459185
Median age in population: 165.0537856388941
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.925
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.925
Total error diversity:				 0.455
Error (vector) diversity:			 0.51
Behavioral diversity:				 0.511
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 273867221
--- Timings ---
Current time: 1529615611326 milliseconds
Total Time:         484.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.3 seconds, 30.8%
Fitness Testing:    269.7 seconds, 55.7%
Report:              65.4 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 41307.69310000002
Test mean error for best: 20.65385
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 118
Size: 119
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 2806.009516300001
Median total errors in population: 570.3332
Error averages by case: (80.6401861999993 9.822 120.64303599999994 3.917 126.96459730000004 4.656 81.95581290000067 9.998 119.21932499999997 3.021 60.73245600000075 10.299 65.1231432000009 9.459 138.66690419999995 4.314 114.9438066 4.025 132.45645899999985 4.634 147.08001649999997 11.668 78.95744469999981 9.506 116.75836029999999 5.712 137.3994460000001 3.636 79.40149699999947 8.661 132.74687360000004 4.112 69.99671260000079 8.553 101.73240509999958 10.861 75.38649199999966 10.246 87.45769810000024 11.681 131.48942690000007 4.229 73.38562439999859 11.731 120.86653060000006 3.572 88.01054300000085 9.494 135.0057191 11.182)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.9357 8 0.2591 1 0.0 0 0.0 0 0.0 0 0.2732 2 0.0 0 1.0 1 0.355 1 7.0 1 0.7032 8 11.9434 2 1.1596 2 3.8308 2 1.0 1 0.3475 1 0.0 0 7.6841 8 0.2121 1)
Average genome size in population (length): 112.815
Average program size in population (points): 113.815
Average percent parens in population: 0.009
Minimum age in population: 163.6243448490928
Maximum age in population: 168.4097323365594
Average age in population: 166.3068634022386
Median age in population: 166.3649414175835
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.915
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.471
Error (vector) diversity:			 0.52
Behavioral diversity:				 0.521
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 276687872
--- Timings ---
Current time: 1529615615710 milliseconds
Total Time:         488.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.5 seconds, 30.8%
Fitness Testing:    272.3 seconds, 55.7%
Report:              66.0 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 41163.79330000001
Test mean error for best: 20.58190
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_dup_times float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 118
Size: 119
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3136.6589449000016
Median total errors in population: 566.855
Error averages by case: (94.83167209999948 9.967 131.02280229999994 3.98 138.19099900000003 4.683 96.86558690000066 10.097 132.15748439999996 3.04 76.14631990000098 10.425 83.29068710000084 9.6 148.87944629999998 4.244 127.24716330000001 4.068 141.47920339999982 5.131 158.65699899999998 11.662 93.45028019999995 9.614 125.6211007 5.622 149.98999570000004 3.619 94.71585809999945 8.996 143.7754043000001 4.14 84.91584959999992 8.743 117.07909279999933 10.986 89.56340000000021 10.333 102.94782719999989 11.796 142.05932120000006 4.258 89.69901929999855 11.782 133.28058920000004 3.514 102.22757910000078 9.641 147.43626379999998 11.188)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.1724 1 0.0889 8 4.0643 8 0.5552 1 0.0 0 0.0 0 1.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 0.9345 1 2.8322 8 4.0566 2 2.1973 1 0.6615 2 0.0 0 0.3475 1 1.0 1 27.4219 9 0.7487 1)
Average genome size in population (length): 113.057
Average program size in population (points): 114.057
Average percent parens in population: 0.009
Minimum age in population: 165.520803013352
Maximum age in population: 169.6856482804869
Average age in population: 167.6501437061497
Median age in population: 167.7174198403762
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.907
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.907
Total error diversity:				 0.479
Error (vector) diversity:			 0.544
Behavioral diversity:				 0.544
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 279514447
--- Timings ---
Current time: 1529615620160 milliseconds
Total Time:         493.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       151.8 seconds, 30.8%
Fitness Testing:    274.9 seconds, 55.7%
Report:              66.6 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 40950.264500000005
Test mean error for best: 20.47513
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2895.729183200002
Median total errors in population: 566.4014
Error averages by case: (86.41304129999916 9.86 118.66925499999991 3.85 125.09840810000003 4.555 90.6864493000007 10.092 120.71039749999998 3.043 69.25555970000072 10.358 73.58580900000095 9.548 137.61077809999995 4.218 118.1740483 3.923 127.59586239999972 6.025 147.16869780000002 11.651 87.10308260000023 9.576 114.9003441 5.496 139.31663710000004 3.664 86.46605879999935 8.897 130.7568697000001 4.024 77.59215340000046 8.65 110.93995619999968 10.964 82.62899569999969 10.238 96.70773670000038 11.77 128.6822742000001 4.143 80.86923609999842 11.819 122.07445 3.533 95.21366360000088 9.58 136.8074185 11.225)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 1 0.1724 1 1.4521 7 0.0643 7 0.2671 1 0.0 0 0.0 0 2.0 1 0.1557 1 0.0 0 2.0 1 0.355 1 1.0 1 1.7032 8 18.0566 2 0.2686 2 0.6615 1 0.0 0 0.3475 1 1.0 1 5.6841 8 0.4621 1)
Average genome size in population (length): 112.942
Average program size in population (points): 113.942
Average percent parens in population: 0.009
Minimum age in population: 166.520803013352
Maximum age in population: 171.0162213633466
Average age in population: 168.9228039536387
Median age in population: 168.9827414622222
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.878
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.878
Total error diversity:				 0.483
Error (vector) diversity:			 0.538
Behavioral diversity:				 0.538
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 282338171
--- Timings ---
Current time: 1529615624519 milliseconds
Total Time:         497.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.0 seconds, 30.7%
Fitness Testing:    277.4 seconds, 55.7%
Report:              67.2 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 41366.40660000001
Test mean error for best: 20.68320
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 112
Size: 113
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3203.259740100001
Median total errors in population: 563.7278
Error averages by case: (95.87351499999919 9.91 138.43870829999997 4.014 144.9167951000001 4.711 95.51746510000076 10.028 137.87306619999998 2.996 74.77175360000093 10.372 79.40173390000083 9.554 155.2062289 4.137 132.92254280000003 3.973 145.21157939999952 7.493 163.5648988 11.695 92.35628699999998 9.526 131.77098740000005 5.624 154.63208300000002 3.666 95.98396239999946 9.047 150.26174900000004 4.188 84.02532580000005 8.676 116.65566529999938 10.869 88.7303774 10.232 102.82205740000018 11.817 148.05303060000003 4.296 87.90299689999854 11.803 138.9775448000001 3.519 100.73840610000083 9.592 153.61097990000007 11.302)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.9111 7 0.0189 7 1.9358 1 0.0 0 0.0 0 2.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 0.8947 1 0.7032 5 14.0566 2 1.6967 1 2.3385 2 0.0 0 0.3475 1 0.0 0 10.6841 8 0.599 1)
Average genome size in population (length): 113.047
Average program size in population (points): 114.047
Average percent parens in population: 0.009
Minimum age in population: 168.0828034315284
Maximum age in population: 172.3289677982564
Average age in population: 170.2307988598096
Median age in population: 170.2611782905656
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.878
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.878
Total error diversity:				 0.475
Error (vector) diversity:			 0.542
Behavioral diversity:				 0.543
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 285164620
--- Timings ---
Current time: 1529615628927 milliseconds
Total Time:         502.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.2 seconds, 30.7%
Fitness Testing:    280.0 seconds, 55.8%
Report:              67.8 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 40935.5837
Test mean error for best: 20.46779
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction integer_swap} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot integer_swap in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec integer_mult float_max float_max float_max float_dec float_rot -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 120
Size: 121
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3269.7627639999996
Median total errors in population: 571.34175
Error averages by case: (95.73778489999926 9.904 139.1789803 4.127 145.43731070000004 4.793 101.7863652000009 10.053 141.0105678 3.21 77.75143530000095 10.389 83.24251620000088 9.573 155.881737 4.352 136.07080729999996 4.039 145.3780787999993 8.483 163.29091069999998 11.631 98.49532439999993 9.587 133.90593199999995 6.044 157.25051349999998 3.843 98.2077797999992 8.844 151.31801940000008 4.317 86.48104959999996 8.699 122.19316569999941 10.891 90.71112430000015 10.242 108.12151439999985 11.772 149.65371190000002 4.484 91.61714159999852 11.79 141.3527718 3.664 103.95793800000078 9.625 156.07328339999995 11.301)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.0643 8 0.5907 1 0.0 0 0.3056 1 0.9086 1 0.2732 2 0.0 0 2.0 1 0.3913 1 3.0 1 1.7032 8 3.9434 2 3.8404 2 1.3385 2 1.0 1 0.3475 2 0.0 0 9.8664 9 0.2562 1)
Average genome size in population (length): 113.591
Average program size in population (points): 114.591
Average percent parens in population: 0.009
Minimum age in population: 169.4315936080178
Maximum age in population: 173.7238335863323
Average age in population: 171.5651431623294
Median age in population: 171.5831843718671
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.891
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.891
Total error diversity:				 0.507
Error (vector) diversity:			 0.576
Behavioral diversity:				 0.577
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 288004545
--- Timings ---
Current time: 1529615633271 milliseconds
Total Time:         506.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       155.4 seconds, 30.7%
Fitness Testing:    282.5 seconds, 55.8%
Report:              68.4 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 40950.264500000005
Test mean error for best: 20.47513
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_865} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_865 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2718.8737736
Median total errors in population: 564.04925
Error averages by case: (75.72834829999931 9.857 117.85625729999997 3.858 124.2264475 4.602 77.91529650000068 10.029 117.25449600000002 3.048 56.30427660000061 10.362 61.57711800000072 9.537 135.99604499999998 4.126 111.81287199999998 3.944 123.27481189999929 8.974 144.8226259 11.632 74.54808830000047 9.48 111.39766030000003 5.811 135.99187529999998 3.692 74.3782192999995 8.959 130.0315656 4.067 66.98706860000082 8.614 99.78808889999966 10.903 71.63253259999952 10.201 83.48640790000015 11.77 128.30704560000004 4.26 68.11064189999885 11.822 118.97234910000002 3.478 82.9839409000007 9.529 131.72569430000004 11.209)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.6505 1 1.7327 8 1.9773 8 0.4604 1 0.0 0 0.334 1 1.0 1 0.2732 2 0.0 0 2.0 1 0.3913 1 0.1053 1 0.7032 8 7.9434 2 0.1596 1 1.3385 2 2.0 1 0.3475 1 1.0 1 0.3159 8 0.0474 1)
Average genome size in population (length): 114.412
Average program size in population (points): 115.412
Average percent parens in population: 0.009
Minimum age in population: 170.4315936080178
Maximum age in population: 174.8683174327264
Average age in population: 172.8785125732415
Median age in population: 172.928246034313
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.881
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.881
Total error diversity:				 0.502
Error (vector) diversity:			 0.568
Behavioral diversity:				 0.568
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 290865170
--- Timings ---
Current time: 1529615637615 milliseconds
Total Time:         510.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.6 seconds, 30.7%
Fitness Testing:    285.1 seconds, 55.8%
Report:              69.0 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 41267.20800000001
Test mean error for best: 20.63360
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_yank} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_359})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_frominteger float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_yank float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_359)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 117
Size: 118
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 2685.1100721
Median total errors in population: 566.8332
Error averages by case: (77.75869119999916 9.856 111.17626639999992 3.568 117.76540020000002 4.25 80.74172780000094 10.018 113.71515889999998 2.831 58.801907800000656 10.331 64.1031194000008 9.517 131.36903279999999 4.041 109.55115620000001 3.662 114.54340789999935 9.119 139.59752389999994 11.552 77.44116350000047 9.494 108.38750749999998 5.848 130.48509230000008 3.444 78.93445979999933 8.806 123.57896030000003 3.75 67.40573920000088 8.601 102.59374259999967 10.891 72.34550529999935 10.149 89.09390040000004 11.815 120.79681370000004 3.884 73.37940939999852 11.845 114.90940940000002 3.232 85.18531610000078 9.517 130.2496601 11.179)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.0643 7 0.0642 1 0.0 0 0.1907 1 1.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 3.0 1 0.489 8 0.0505 2 0.1596 1 1.3385 2 0.0 0 0.3475 2 0.0 0 0.6841 8 1.6211 1)
Average genome size in population (length): 114.299
Average program size in population (points): 115.299
Average percent parens in population: 0.009
Minimum age in population: 171.9125801232699
Maximum age in population: 176.2781565293324
Average age in population: 174.2037938280892
Median age in population: 174.2325149843156
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.895
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.895
Total error diversity:				 0.493
Error (vector) diversity:			 0.561
Behavioral diversity:				 0.562
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 293722745
--- Timings ---
Current time: 1529615642223 milliseconds
Total Time:         515.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       157.8 seconds, 30.6%
Fitness Testing:    287.7 seconds, 55.8%
Report:              69.6 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 41267.20800000001
Test mean error for best: 20.63360
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_max} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_yank} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_frominteger float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_max integer_rot float_dec float_max float_dec float_dec float_dec float_div float_yank float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec integer_max float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 117
Size: 118
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3025.611955799999
Median total errors in population: 566.6672
Error averages by case: (87.78622739999932 9.845 128.49543309999996 3.889 135.32315510000012 4.6 91.83498270000084 9.934 130.08791970000001 3.0 67.67172760000096 10.333 73.4649355000009 9.526 148.30940660000005 4.035 125.50433810000001 3.851 131.39116989999908 9.515 158.06953879999998 11.65 88.3431185 9.418 125.46794480000004 5.921 148.0407242 3.673 88.13222379999925 8.879 141.69361720000006 4.082 76.93336970000007 8.618 111.91966019999923 10.819 81.48267289999993 10.158 98.48657279999975 11.741 139.31358680000008 4.24 82.4494783999986 11.769 131.1261491 3.432 94.53465150000075 9.543 146.04635140000005 11.232)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.6984 8 5.0643 9 0.2671 1 0.0 0 0.334 1 3.0 1 0.2732 1 0.0 0 0.0 0 0.3913 1 3.0 1 2.7032 8 9.0625 2 6.1438 2 2.3385 2 0.0 0 0.3475 1 0.0 0 12.6841 8 0.8067 1)
Average genome size in population (length): 114.571
Average program size in population (points): 115.571
Average percent parens in population: 0.009
Minimum age in population: 173.2644077891583
Maximum age in population: 177.4047371430518
Average age in population: 175.49011353413
Median age in population: 175.527344327786
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.896
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.896
Total error diversity:				 0.451
Error (vector) diversity:			 0.509
Behavioral diversity:				 0.51
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 296587083
--- Timings ---
Current time: 1529615646603 milliseconds
Total Time:         519.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.1 seconds, 30.6%
Fitness Testing:    290.2 seconds, 55.8%
Report:              70.4 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 41311.119300000006
Test mean error for best: 20.65556
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction tagged_311} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_865} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_max tagged_311 float_dec float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_865 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2911.2816219999986
Median total errors in population: 566.9992
Error averages by case: (81.50843259999932 9.854 125.87226469999995 3.849 132.12402620000003 4.545 82.2922391000009 10.046 127.4146323 3.094 63.41987360000102 10.34 70.00221420000094 9.478 145.3978905 4.127 123.3443165 3.832 130.00852169999933 9.499 153.73613209999994 11.632 79.04764290000013 9.529 121.40754869999998 6.189 144.673644 3.761 82.97941229999938 8.566 138.49545760000004 4.062 71.95360590000055 8.615 103.61795909999944 10.934 77.0354008999997 10.294 90.19165029999995 11.735 136.33834969999992 4.296 74.65862659999837 11.731 128.7956455 3.503 89.41451650000086 9.528 143.2466185 11.266)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 8 3.4797 8 0.9328 1 0.0 0 0.0759 1 1.0 1 0.2732 2 0.0 0 3.0 1 0.355 1 0.1053 1 0.7032 5 1.9495 2 1.8404 2 3.3385 1 1.0 1 0.3475 2 0.0 0 4.6841 9 0.5742 1)
Average genome size in population (length): 115.686
Average program size in population (points): 116.686
Average percent parens in population: 0.009
Minimum age in population: 174.5433213333742
Maximum age in population: 178.8388098503532
Average age in population: 176.7823155659573
Median age in population: 176.7969695652741
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.909
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.909
Total error diversity:				 0.46
Error (vector) diversity:			 0.509
Behavioral diversity:				 0.51
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 299479585
--- Timings ---
Current time: 1529615651076 milliseconds
Total Time:         524.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.3 seconds, 30.6%
Fitness Testing:    292.9 seconds, 55.9%
Report:              71.0 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 41103.10630000001
Test mean error for best: 20.55155
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_dup_times float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec integer_dup_times float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 118
Size: 119
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3038.2765494
Median total errors in population: 566.7853
Error averages by case: (89.16639699999952 9.871 127.56884919999995 3.895 133.85203180000002 4.605 93.68365360000058 10.185 128.7118611999999 3.096 69.80488730000066 10.32 76.96917840000081 9.487 147.41779989999998 4.253 125.64927439999998 4.066 131.78891799999937 9.513 155.59802999999997 11.597 90.3928500999999 9.673 124.88078189999997 6.081 145.6420049 3.794 89.5854127999994 8.776 139.90944790000003 4.13 79.0267411 8.625 115.55930799999942 11.071 84.32113370000012 10.263 99.08645839999977 11.786 137.96696810000006 4.3 85.07557259999882 11.828 130.04943190000003 3.535 96.20560180000072 9.518 144.82895540000007 11.267)
Error minima by case: (0.3622 8 0.0 0 0.0 0 0.1612 2 0.0 0 2.0889 8 7.0416 8 3.9358 1 0.0 0 0.334 1 0.0 0 0.1557 2 0.0 0 2.0 1 0.3913 1 5.0 1 2.2226 8 1.9434 2 1.1596 2 0.3385 2 0.0 0 0.3475 1 0.0 0 5.648 9 0.3317 1)
Average genome size in population (length): 115.849
Average program size in population (points): 116.849
Average percent parens in population: 0.009
Minimum age in population: 175.5433213333742
Maximum age in population: 180.0954210359652
Average age in population: 178.0574508589023
Median age in population: 178.0837748095889
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.914
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.914
Total error diversity:				 0.461
Error (vector) diversity:			 0.506
Behavioral diversity:				 0.506
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 302376185
--- Timings ---
Current time: 1529615655454 milliseconds
Total Time:         528.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       161.5 seconds, 30.5%
Fitness Testing:    295.5 seconds, 55.9%
Report:              71.6 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 41229.597100000006
Test mean error for best: 20.61480
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_max float_max float_dec float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3156.662119
Median total errors in population: 566.9992
Error averages by case: (86.48959059999922 9.939 139.70229449999994 4.139 145.8884817000001 4.845 89.98136420000081 10.065 139.47422989999998 3.191 68.43933080000103 10.391 73.46506320000086 9.58 158.06240479999997 4.412 137.3855559 4.098 145.4715008999991 9.667 167.2225866999999 11.658 86.71411850000001 9.58 135.68201399999992 6.218 156.35583840000004 3.876 86.41840559999946 8.683 151.76584310000007 4.356 76.58244890000043 8.696 110.87780809999968 10.941 81.3011661999997 10.249 97.79106310000033 11.839 150.2373668000001 4.573 82.87496619999845 11.846 140.76962050000003 3.661 94.20187820000078 9.603 156.1461782 11.255)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 7 3.0643 8 1.0349 1 0.0 0 0.334 1 2.0 1 0.2732 1 0.0 0 2.0 1 0.3913 1 3.0 1 0.2968 5 5.0505 2 0.0588 2 0.6615 2 1.0 1 0.3475 2 0.0 0 6.6841 9 0.8067 1)
Average genome size in population (length): 115.923
Average program size in population (points): 116.923
Average percent parens in population: 0.009
Minimum age in population: 176.5433213333742
Maximum age in population: 181.4461823078631
Average age in population: 179.329051452444
Median age in population: 179.3322898323794
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.912
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.912
Total error diversity:				 0.483
Error (vector) diversity:			 0.527
Behavioral diversity:				 0.528
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 305274586
--- Timings ---
Current time: 1529615659807 milliseconds
Total Time:         533.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.7 seconds, 30.5%
Fitness Testing:    298.1 seconds, 55.9%
Report:              72.2 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 41024.16730000001
Test mean error for best: 20.51208
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max float_max float_max float_dec float_rot float_dec integer_yankdup float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub float_dup_items float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_mod float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_shove float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 117
Size: 118
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3441.0715803999974
Median total errors in population: 574.6205500000001
Error averages by case: (104.51870179999958 9.994 146.32036090000003 4.219 150.29262159999996 4.868 105.3454117000008 10.128 148.53200110000003 3.381 87.55706920000097 10.409 91.29608750000094 9.607 164.13180300000002 4.731 143.86189399999998 4.119 151.12529489999926 9.617 169.82079419999997 11.63 102.15716139999942 9.623 140.0144155 6.359 163.98817619999994 4.028 104.00638319999929 8.666 156.52163190000007 4.46 94.36236589999916 8.735 126.3165465999993 10.988 101.19039830000075 10.329 112.92507349999957 11.81 155.25667219999994 4.647 97.65276849999852 11.787 150.04798569999994 3.845 111.35406610000081 9.638 163.57989549999996 11.278)
Error minima by case: (0.5606 7 0.0 0 0.0 0 0.1612 2 0.0 0 0.9111 8 4.9357 8 1.0642 1 0.0 0 0.334 1 3.0 1 0.2732 2 0.0 0 0.0 0 0.3913 1 1.0 1 3.7032 5 5.9434 2 3.8595 1 3.8308 1 0.0 0 0.3475 2 0.0 0 6.303 8 0.4621 1)
Average genome size in population (length): 116.378
Average program size in population (points): 117.378
Average percent parens in population: 0.009
Minimum age in population: 178.6530399998303
Maximum age in population: 182.6394919239367
Average age in population: 180.6468329008506
Median age in population: 180.6762099390832
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.917
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.917
Total error diversity:				 0.477
Error (vector) diversity:			 0.514
Behavioral diversity:				 0.515
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 308184161
--- Timings ---
Current time: 1529615664227 milliseconds
Total Time:         537.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.9 seconds, 30.5%
Fitness Testing:    300.7 seconds, 55.9%
Report:              72.8 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 40950.264500000005
Test mean error for best: 20.47513
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_379})
Best program: (float_mod float_rot float_rot float_cos in2 integer_dec float_mod float_rot float_cos in2 integer_dec in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_379)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 1.666 9 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 510.6761
Mean: 10.213522
Genome size: 121
Size: 122
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3175.342774799999
Median total errors in population: 570.0989
Error averages by case: (100.04457899999929 10.001 128.27548629999995 4.205 134.56854590000006 4.864 107.2519327000008 10.061 128.42384059999998 3.307 80.52555890000116 10.415 87.73546210000092 9.635 143.6406346 4.337 124.84535159999999 4.264 133.659839499999 9.603 153.73090929999992 11.621 103.77550409999967 9.579 123.14792689999994 6.088 147.7530350000001 3.978 100.54424799999939 8.795 140.22928250000004 4.366 88.7288688999995 8.783 126.64185329999896 10.926 93.95230560000017 10.276 112.38231399999958 11.802 139.13026500000007 4.586 98.0913109999983 11.861 130.58363280000003 3.769 106.06013060000076 9.697 143.5669566 11.234)
Error minima by case: (0.4394 8 0.0 0 0.659 1 0.1612 2 0.0051 1 1.0889 8 4.0643 8 0.9448 1 0.0 0 0.334 1 0.0 1 0.2732 2 0.0 0 2.0 1 0.3913 1 4.0 1 2.7032 8 1.9434 2 0.1596 2 4.3385 2 0.0 0 0.3475 2 1.0 1 2.065 8 0.194 1)
Average genome size in population (length): 117.165
Average program size in population (points): 118.165
Average percent parens in population: 0.008
Minimum age in population: 179.7125662247189
Maximum age in population: 183.9048666798894
Average age in population: 181.9801397321218
Median age in population: 181.9999036389819
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.895
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.895
Total error diversity:				 0.464
Error (vector) diversity:			 0.499
Behavioral diversity:				 0.499
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 311113436
--- Timings ---
Current time: 1529615668659 milliseconds
Total Time:         541.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.1 seconds, 30.5%
Fitness Testing:    303.3 seconds, 56.0%
Report:              73.4 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 40977.022399999994
Test mean error for best: 20.48851
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -141.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_318})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec integer_yankdup float_dec -92.0397674550659 float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_318)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 1.666 9 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 509.6761
Mean: 10.193522
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3195.9443241999998
Median total errors in population: 575.6672
Error averages by case: (101.2929576999995 9.997 132.32985169999998 4.276 138.43735850000004 4.911 102.25037860000077 10.045 130.65084599999997 3.297 80.138102000001 10.403 85.99699880000092 9.591 149.75357469999994 4.422 127.3398671 4.111 137.81239119999915 9.655 158.14525770000003 11.585 98.77631119999971 9.525 127.13012519999998 6.094 147.9713793 3.931 101.94543159999944 8.674 144.11537510000008 4.448 89.13960759999956 8.71 122.13625989999925 10.932 93.94198650000034 10.265 108.02500669999995 11.766 143.24930940000007 4.639 93.35097419999842 11.825 132.42509540000003 3.72 106.24292370000089 9.631 145.62595439999996 11.268)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 1.0 1 0.7256 8 0.3494 8 0.9358 1 0.0 0 0.334 1 1.0 1 0.2732 2 0.0 0 0.3227 1 0.3913 1 2.9739 1 1.7032 8 1.9434 2 0.7444 1 0.6615 1 1.0 1 0.3475 1 1.0 1 0.8175 9 0.6683 1)
Average genome size in population (length): 117.405
Average program size in population (points): 118.405
Average percent parens in population: 0.008
Minimum age in population: 180.7125662247189
Maximum age in population: 185.6689688787145
Average age in population: 183.1919539841124
Median age in population: 183.2380211473223
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.916
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.916
Total error diversity:				 0.464
Error (vector) diversity:			 0.51
Behavioral diversity:				 0.512
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 314048636
--- Timings ---
Current time: 1529615673248 milliseconds
Total Time:         546.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.3 seconds, 30.4%
Fitness Testing:    305.9 seconds, 56.0%
Report:              74.0 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 40576.00279999999
Test mean error for best: 20.28800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -140.0397674551
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 0.666 9 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 508.6761
Mean: 10.173522
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3156.2914777999986
Median total errors in population: 573.37195
Error averages by case: (100.52765229999954 10.005 127.50586689999999 3.859 132.81707019999996 4.564 106.16134560000083 10.174 128.25548450000002 3.056 78.79896570000109 10.41 85.31801690000087 9.593 146.83494350000004 4.31 124.72745900000001 4.003 131.24917319999926 9.538 153.82376059999996 11.574 102.64823609999937 9.666 122.95727000000004 6.209 144.83428059999991 3.717 100.69188649999933 8.659 140.00234469999995 4.098 88.49700959999912 8.701 126.62765009999897 11.083 93.51613330000049 10.369 111.24842609999965 11.821 137.61712530000005 4.282 95.55651709999844 11.781 129.5937479 3.515 105.41571210000085 9.611 145.2294000000001 11.238)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.5329 8 4.0189 8 0.0642 1 0.0 0 0.2387 1 1.0 1 0.2732 2 0.0 0 1.0 1 0.3913 1 6.0 1 2.7032 8 18.0566 2 2.8404 2 2.1692 2 0.0 0 0.3475 1 0.0 0 11.7423 8 0.1933 1)
Average genome size in population (length): 117.19
Average program size in population (points): 118.19
Average percent parens in population: 0.008
Minimum age in population: 182.3649646556608
Maximum age in population: 186.3769365723267
Average age in population: 184.531574158275
Median age in population: 184.5868859961145
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.927
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.927
Total error diversity:				 0.459
Error (vector) diversity:			 0.501
Behavioral diversity:				 0.503
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 316978586
--- Timings ---
Current time: 1529615677770 milliseconds
Total Time:         550.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.6 seconds, 30.4%
Fitness Testing:    308.4 seconds, 56.0%
Report:              74.8 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 40576.00279999999
Test mean error for best: 20.28800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -140.0397674551
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 0.666 9 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 508.6761
Mean: 10.173522
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3233.6068308999993
Median total errors in population: 580.01125
Error averages by case: (102.17019059999946 10.034 131.0017932999999 4.069 137.10161200000007 4.739 108.73833590000075 10.112 132.46101080000003 3.145 83.12619960000116 10.442 86.51345940000094 9.637 150.00508530000008 4.415 127.997209 4.032 135.27157079999927 9.649 158.2969186999999 11.642 105.26307439999928 9.649 128.27549819999993 6.121 149.3231934 3.765 102.31277219999942 8.773 143.16616520000008 4.242 91.33364479999925 8.817 127.44971589999915 10.934 96.01445470000066 10.33 113.47494839999969 11.671 141.2890801000001 4.446 95.77664819999858 11.649 133.6694662 3.574 108.66922220000083 9.725 148.05256160000002 11.241)
Error minima by case: (0.4245 8 0.0 0 0.0 1 0.1612 2 0.0 0 1.0086 8 2.6577 8 1.0642 1 0.0 0 0.2387 1 1.0 1 0.2732 2 0.0 0 1.2705 1 0.355 1 2.0 1 0.0788 7 8.7636 2 4.1596 1 3.3385 2 1.0 1 0.3298 1 0.0 0 10.6841 8 1.1933 1)
Average genome size in population (length): 117.551
Average program size in population (points): 118.551
Average percent parens in population: 0.008
Minimum age in population: 183.4041610704495
Maximum age in population: 187.9471536773076
Average age in population: 185.813988881847
Median age in population: 185.8396763133547
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.913
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.913
Total error diversity:				 0.503
Error (vector) diversity:			 0.544
Behavioral diversity:				 0.546
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 319917573
--- Timings ---
Current time: 1529615682308 milliseconds
Total Time:         555.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       168.8 seconds, 30.4%
Fitness Testing:    311.1 seconds, 56.0%
Report:              75.5 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 40544.03499999999
Test mean error for best: 20.27202
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction tagged_727} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max tagged_727 float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3288.868876599998
Median total errors in population: 576.04475
Error averages by case: (86.69044909999933 9.953 147.23702540000002 4.168 153.22516349999987 4.809 94.5869129000007 10.113 150.79750960000004 3.333 67.40237130000094 10.367 75.69196670000092 9.576 166.9179957 4.549 146.40767009999996 4.157 151.10799059999928 9.661 174.40283729999996 11.679 91.1368741000002 9.63 145.1438001 6.246 166.9264484 3.977 89.14154929999953 8.626 159.2600651000001 4.387 75.37223590000038 8.684 113.29623559999946 10.94 80.40430579999958 10.246 101.53996120000036 11.727 157.09747589999992 4.546 85.79673509999864 11.678 152.22528549999993 3.811 93.16984960000077 9.581 166.11416279999995 11.332)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 1 0.0 0 0.7256 7 3.9357 2 0.0642 1 0.0 0 0.2387 1 2.0 1 0.2732 2 0.0 0 1.0 1 0.3913 1 3.0 1 1.7032 8 1.0505 2 1.7314 1 0.5985 2 1.0 1 0.3475 1 0.0 0 4.6841 8 0.3006 1)
Average genome size in population (length): 117.72
Average program size in population (points): 118.72
Average percent parens in population: 0.008
Minimum age in population: 184.8171025212629
Maximum age in population: 188.9515857356032
Average age in population: 187.0941468232049
Median age in population: 187.1078544699469
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.923
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.923
Total error diversity:				 0.513
Error (vector) diversity:			 0.553
Behavioral diversity:				 0.553
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 322860773
--- Timings ---
Current time: 1529615686857 milliseconds
Total Time:         560.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.0 seconds, 30.4%
Fitness Testing:    313.7 seconds, 56.0%
Report:              76.1 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 40544.03499999999
Test mean error for best: 20.27202
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction tagged_727} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max tagged_727 float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3183.4129932999986
Median total errors in population: 576.1451500000001
Error averages by case: (97.16993589999946 10.014 131.7272844999999 4.167 137.77824560000008 4.829 100.88502930000074 10.063 132.83269899999996 3.305 78.92141760000118 10.412 86.1588696000009 9.635 149.53292549999992 4.381 129.28324530000003 4.246 136.7549072999993 9.628 158.69820299999992 11.676 97.26804109999958 9.606 127.28457399999992 6.304 151.04302180000002 3.888 97.87400049999945 8.753 143.50163620000006 4.373 86.7688514999996 8.731 119.63667899999909 10.952 91.33538500000029 10.279 107.53711179999975 11.787 142.31474000000014 4.541 93.5685904999986 11.798 134.49163460000003 3.72 104.46572770000077 9.649 148.696237 11.147)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.9111 8 4.0643 8 0.9448 1 0.0 0 0.334 1 2.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 0.0 0 1.7032 5 13.0505 2 2.0497 1 2.3385 2 0.0 0 0.3475 1 0.0 0 2.2861 9 0.7796 1)
Average genome size in population (length): 118.572
Average program size in population (points): 119.572
Average percent parens in population: 0.008
Minimum age in population: 185.9359327357958
Maximum age in population: 190.5121718424355
Average age in population: 188.4077302842566
Median age in population: 188.4581216521872
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.926
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.926
Total error diversity:				 0.519
Error (vector) diversity:			 0.562
Behavioral diversity:				 0.564
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 325825223
--- Timings ---
Current time: 1529615691353 milliseconds
Total Time:         564.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       171.2 seconds, 30.3%
Fitness Testing:    316.4 seconds, 56.0%
Report:              76.8 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 40655.07859999999
Test mean error for best: 20.32754
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max integer_swap float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3417.7223622999986
Median total errors in population: 578.4329
Error averages by case: (101.73816309999951 10.008 147.76176149999998 4.124 152.34068339999996 4.761 106.71621510000072 10.143 147.44018580000002 3.399 82.42985940000115 10.39 85.85821470000101 9.606 164.5533037 4.932 142.2469527 4.314 152.0453969999995 9.658 171.120126 11.67 103.38781329999932 9.677 142.17737980000004 6.373 163.690858 3.931 101.13994499999923 8.629 158.56543320000003 4.306 90.42309899999935 8.754 125.9520185999991 10.987 96.32927520000068 10.35 111.70478289999974 11.796 156.61047739999998 4.507 96.21131039999852 11.757 149.25185320000003 3.807 106.94451750000088 9.624 162.47573640000005 11.104)
Error minima by case: (0.4394 9 0.0 0 0.0 0 0.1612 2 0.0 0 0.0889 7 1.9584 8 0.0672 1 0.0 0 0.3105 1 0.0625 1 0.2732 2 0.0 0 3.0 1 0.3913 1 2.0 1 0.2968 8 21.0505 2 1.1596 2 4.1692 2 0.0 0 0.3475 1 0.0 0 4.1848 8 0.3947 1)
Average genome size in population (length): 119.497
Average program size in population (points): 120.497
Average percent parens in population: 0.008
Minimum age in population: 186.9359327357958
Maximum age in population: 191.8512458626504
Average age in population: 189.6610026438692
Median age in population: 189.6465712627175
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.918
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.918
Total error diversity:				 0.528
Error (vector) diversity:			 0.582
Behavioral diversity:				 0.582
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 328812773
--- Timings ---
Current time: 1529615696004 milliseconds
Total Time:         569.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.5 seconds, 30.3%
Fitness Testing:    319.1 seconds, 56.1%
Report:              77.5 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 40655.07859999999
Test mean error for best: 20.32754
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max integer_swap float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3673.028605299999
Median total errors in population: 585.308
Error averages by case: (111.10376409999952 9.986 160.12491100000003 4.35 164.86837299999996 4.989 115.75947640000072 10.128 156.96921570000003 3.401 90.65434250000104 10.387 91.9349920000009 9.633 176.04020429999997 4.83 153.004379 4.481 164.4333572999994 9.614 185.09888799999993 11.642 112.40393969999944 9.719 152.1630645 6.107 172.43650680000002 3.977 110.58513889999935 8.609 170.10423280000006 4.511 99.72301639999942 8.758 136.09137009999935 10.983 105.32518160000048 10.243 122.20518089999953 11.773 168.73766730000008 4.678 107.6423895999986 11.773 158.51399569999995 3.78 116.23816570000078 9.656 171.81785200000002 11.041)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.3623 8 2.193 8 0.0642 1 0.0 0 0.0 0 1.0 1 0.2732 1 0.0 0 0.0 0 0.355 1 0.0 0 2.2968 5 0.0566 2 2.1596 2 3.6615 2 0.0 0 0.3475 2 0.0 0 0.0809 8 1.8067 1)
Average genome size in population (length): 121.09
Average program size in population (points): 122.09
Average percent parens in population: 0.008
Minimum age in population: 188.6976438134476
Maximum age in population: 192.9443858761344
Average age in population: 190.9384234956237
Median age in population: 190.9669714860868
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.908
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.908
Total error diversity:				 0.536
Error (vector) diversity:			 0.584
Behavioral diversity:				 0.585
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 331840298
--- Timings ---
Current time: 1529615700585 milliseconds
Total Time:         573.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.7 seconds, 30.3%
Fitness Testing:    321.8 seconds, 56.1%
Report:              78.2 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 40655.07859999999
Test mean error for best: 20.32754
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_shove} {:instruction float_mod} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_shove float_mod integer_dec in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max integer_swap float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3443.969051999999
Median total errors in population: 606.7851
Error averages by case: (104.72922009999955 10.063 145.81589219999995 4.175 150.13100020000005 4.752 114.87698850000064 10.232 143.05374339999997 3.477 83.48374590000103 10.429 87.81478610000093 9.68 164.26578319999996 5.092 141.37090089999998 4.408 151.5568858999997 9.581 170.12791109999995 11.6 110.98854309999932 9.807 140.86476859999996 6.396 158.9010004 3.981 105.85379779999943 8.717 156.02989700000006 4.331 93.14637309999942 8.813 132.32630849999916 11.04 98.56607050000049 10.257 118.52047549999959 11.781 154.82713489999998 4.568 104.13120789999859 11.729 144.87766900000005 3.802 109.68929200000085 9.683 158.62565619999995 11.0)
Error minima by case: (0.3658 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.0643 8 1.0642 1 0.0 0 0.3105 1 0.2569 1 0.2732 2 0.0 0 1.0 1 0.355 1 0.0 0 2.7032 8 5.9434 2 0.1275 2 0.9466 2 0.0 0 0.3475 1 0.0 0 4.3159 8 0.0134 1)
Average genome size in population (length): 122.873
Average program size in population (points): 123.873
Average percent parens in population: 0.008
Minimum age in population: 190.1696271634817
Maximum age in population: 193.9406536909107
Average age in population: 192.1630262417944
Median age in population: 192.1999278422529
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.919
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.919
Total error diversity:				 0.587
Error (vector) diversity:			 0.64
Behavioral diversity:				 0.641
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 334912323
--- Timings ---
Current time: 1529615705396 milliseconds
Total Time:         578.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.9 seconds, 30.2%
Fitness Testing:    324.6 seconds, 56.1%
Report:              78.8 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 40544.03499999999
Test mean error for best: 20.27202
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction tagged_727} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_sin float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max tagged_727 float_dup_items float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3757.274127099998
Median total errors in population: 605.8723500000001
Error averages by case: (116.02825309999984 10.053 159.82650849999996 4.44 165.11951539999995 4.977 122.88348870000073 10.228 158.11609319999997 3.639 96.340731000001 10.375 97.75681380000091 9.611 175.84818699999997 5.324 153.76632450000002 4.819 164.33129049999985 9.62 184.7931616999998 11.651 119.31828209999918 9.848 156.35941390000005 6.407 174.93539809999993 4.175 119.3942754999995 8.479 170.75859180000012 4.604 105.21770409999888 8.766 141.18336449999947 11.045 109.97381750000093 10.331 127.77357519999946 11.708 169.39793280000004 4.799 112.38716229999866 11.661 159.9438243000001 4.027 121.98592140000075 9.646 172.57549620000003 11.026)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 7 4.0643 8 1.14 1 0.0 0 0.3105 1 0.0 0 0.2732 1 0.0 0 1.0 1 0.3913 1 1.0 1 0.7032 8 9.9434 2 0.8404 1 1.3385 1 0.0 0 0.3475 1 0.0 0 4.0645 9 1.7026 1)
Average genome size in population (length): 124.873
Average program size in population (points): 125.873
Average percent parens in population: 0.008
Minimum age in population: 191.2807618164057
Maximum age in population: 195.3345562670946
Average age in population: 193.3819845530816
Median age in population: 193.3740667815919
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.929
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.929
Total error diversity:				 0.589
Error (vector) diversity:			 0.648
Behavioral diversity:				 0.648
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 338034248
--- Timings ---
Current time: 1529615710086 milliseconds
Total Time:         583.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.2 seconds, 30.2%
Fitness Testing:    327.3 seconds, 56.1%
Report:              79.6 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 40777.852799999986
Test mean error for best: 20.38893
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_dec} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction tagged_600} {:instruction print_float})
Best program: (float_sin float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_dec float_max float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max tagged_600 print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 132
Size: 133
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3382.9835823999997
Median total errors in population: 601.19685
Error averages by case: (107.9447466999996 10.055 140.35170489999996 4.403 145.52868779999994 4.959 110.97551100000088 10.322 137.79566019999996 3.56 86.01257750000124 10.388 92.52484010000096 9.65 156.29412359999998 5.171 135.9851914 4.984 145.52270279999996 9.468 164.66295269999992 11.62 107.41819799999949 9.914 134.43618079999987 6.148 156.2038895000001 4.132 111.99433979999941 8.589 151.14327110000005 4.52 95.01912439999946 8.742 130.10711359999902 11.169 100.0398651000003 10.328 114.87591549999975 11.795 150.3422549000001 4.716 102.29766649999834 11.8 140.13765270000005 3.942 112.16439480000082 9.646 152.25001700000007 10.934)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.3623 8 2.9357 8 0.0642 1 0.0 0 0.334 1 1.0914 1 0.2732 1 0.0 0 1.0629 1 0.3913 1 0.0 0 1.2968 8 15.9434 2 0.9465 2 0.6615 1 0.0 0 0.3475 1 0.0 0 7.6841 9 0.7458 1)
Average genome size in population (length): 127.097
Average program size in population (points): 128.097
Average percent parens in population: 0.008
Minimum age in population: 192.5897232520439
Maximum age in population: 196.6275530619948
Average age in population: 194.6181955405468
Median age in population: 194.6629165457201
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.916
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.916
Total error diversity:				 0.626
Error (vector) diversity:			 0.681
Behavioral diversity:				 0.681
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 341211748
--- Timings ---
Current time: 1529615714728 milliseconds
Total Time:         587.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       177.4 seconds, 30.2%
Fitness Testing:    330.1 seconds, 56.2%
Report:              80.3 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 40521.890899999984
Test mean error for best: 20.26095
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_min} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction integer_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max integer_min in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max integer_rot float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3862.873809199999
Median total errors in population: 611.8067000000001
Error averages by case: (114.81367529999966 10.105 171.10261149999994 4.507 176.27192039999994 5.06 119.49755970000072 10.226 168.4419812 3.72 92.65421450000146 10.427 96.58616360000086 9.669 185.64533710000003 5.345 164.7233428 4.979 175.0702530000001 9.54 194.6158652999999 11.668 116.0732598999994 9.838 164.40607640000002 6.501 184.65786959999997 4.282 116.70231089999946 8.476 181.9301636000001 4.702 102.9787142999989 8.82 137.7811271999998 11.004 107.75037820000054 10.439 125.43605669999951 11.694 180.30042200000008 4.882 111.38483349999842 11.639 169.85169280000005 4.12 118.84364430000085 9.704 182.9263354 11.081)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 1.9357 8 1.1416 1 0.0 0 0.1784 1 1.0 1 0.2732 2 0.0 0 0.0 0 0.3913 1 1.0 1 3.7032 5 1.8507 2 3.4029 1 0.2189 2 0.0 0 0.3475 1 0.0 0 13.6841 9 0.8821 1)
Average genome size in population (length): 128.447
Average program size in population (points): 129.447
Average percent parens in population: 0.008
Minimum age in population: 193.5897232520439
Maximum age in population: 197.8080652135912
Average age in population: 195.8864883689213
Median age in population: 195.9326920330706
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.926
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.926
Total error diversity:				 0.61
Error (vector) diversity:			 0.669
Behavioral diversity:				 0.67
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 344423323
--- Timings ---
Current time: 1529615719569 milliseconds
Total Time:         592.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.6 seconds, 30.1%
Fitness Testing:    333.0 seconds, 56.2%
Report:              81.0 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 40813.630099999995
Test mean error for best: 20.40682
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_shove} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction integer_yank} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction integer_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max integer_shove in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap integer_yank float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max integer_inc float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec integer_mod float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3687.634301399999
Median total errors in population: 605.5308500000001
Error averages by case: (112.50805009999985 10.1 161.6005722000001 4.368 168.07549729999997 5.008 113.70363960000054 10.146 156.99854049999996 3.606 89.81270790000124 10.438 94.51085250000094 9.692 176.4211636999999 4.96 154.05131550000002 5.076 165.49734930000028 9.426 186.7940753 11.663 110.26020929999919 9.724 154.43596629999996 6.26 176.5517368000001 4.103 113.42058619999945 8.438 173.31627730000002 4.569 100.90148999999886 8.81 131.95475369999892 10.943 103.77092400000083 10.349 118.10057619999955 11.747 171.80466310000006 4.763 104.23730359999844 11.734 158.8968002 3.906 117.60158220000086 9.733 171.84866859999994 10.997)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.2744 8 4.0643 3 0.4896 1 0.0 0 0.1803 1 0.0 0 0.2732 1 0.0 0 1.0 1 0.3913 1 1.0 1 0.7032 8 3.0505 2 0.1596 2 1.3385 1 0.0 0 0.3475 2 0.0 0 4.6841 9 0.4955 1)
Average genome size in population (length): 130.192
Average program size in population (points): 131.192
Average percent parens in population: 0.008
Minimum age in population: 195.0208488927208
Maximum age in population: 199.2973457732527
Average age in population: 197.1628061069571
Median age in population: 197.2084392514346
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.923
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.923
Total error diversity:				 0.591
Error (vector) diversity:			 0.66
Behavioral diversity:				 0.661
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 347678435
--- Timings ---
Current time: 1529615724389 milliseconds
Total Time:         597.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.9 seconds, 30.1%
Fitness Testing:    335.8 seconds, 56.2%
Report:              81.7 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 40564.69889999999
Test mean error for best: 20.28235
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction integer_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max integer_inc float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 2905.904591799999
Median total errors in population: 590.2133000000001
Error averages by case: (86.11257399999944 9.952 122.96177599999994 4.066 128.74497210000007 4.678 90.35743580000066 10.267 120.9383737 3.476 65.35939240000069 10.342 72.63636430000078 9.579 137.63164010000006 4.787 119.46777569999998 4.735 127.4035546000003 9.122 145.69076559999988 11.554 86.85187309999986 9.832 117.27186849999998 6.204 139.7792423000001 3.992 88.82717379999958 8.551 134.1066637000001 4.266 75.44373640000056 8.642 110.17315199999976 11.083 80.4683854999995 10.284 93.60408570000011 11.823 133.08607140000007 4.443 79.58199309999878 11.771 123.39590120000008 3.796 92.54523510000077 9.561 135.7565857 10.902)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 8 0.0643 8 0.6351 1 0.0 0 0.334 1 1.0 1 0.2732 1 0.0 0 0.0 0 0.3913 1 0.1288 1 1.2968 8 3.9434 2 2.1596 2 3.1692 2 0.0 0 0.3049 1 0.0 0 8.6841 9 0.1933 1)
Average genome size in population (length): 131.454
Average program size in population (points): 132.454
Average percent parens in population: 0.008
Minimum age in population: 196.0208488927208
Maximum age in population: 200.1811633451997
Average age in population: 198.3440782960233
Median age in population: 198.375818261981
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.912
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.912
Total error diversity:				 0.594
Error (vector) diversity:			 0.656
Behavioral diversity:				 0.657
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 350965085
--- Timings ---
Current time: 1529615729139 milliseconds
Total Time:         602.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.1 seconds, 30.1%
Fitness Testing:    338.7 seconds, 56.2%
Report:              82.4 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 40813.630099999995
Test mean error for best: 20.40682
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_shove} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction integer_yank} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction integer_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max integer_shove in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap integer_yank float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max integer_inc float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec integer_mod float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3435.9460938999996
Median total errors in population: 587.78925
Error averages by case: (107.44754809999951 10.037 146.32688180000008 4.234 151.9052611 4.896 105.90144980000075 10.167 142.5003583 3.428 85.51821900000103 10.425 90.63941230000087 9.627 163.6732844 4.971 141.8910832 4.848 150.54159610000028 9.344 172.19243159999994 11.6 102.73180409999982 9.745 142.02944779999996 6.192 160.12086240000008 4.09 108.44121329999936 8.696 157.6775770000001 4.451 96.55211679999952 8.778 126.50895889999921 11.009 101.08335790000018 10.28 111.82616110000002 11.809 156.00655979999996 4.691 99.41073029999839 11.782 144.90122480000005 3.877 112.33872680000084 9.682 158.00482720000002 11.116)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 1.0227 7 0.0642 1 0.0 0 0.334 1 0.0 0 0.2732 1 0.0 0 2.0 1 0.355 1 0.0 0 2.6131 7 11.9434 2 0.8404 2 2.6084 2 0.0 0 0.3475 1 0.0 0 0.6046 8 0.3947 1)
Average genome size in population (length): 132.083
Average program size in population (points): 133.083
Average percent parens in population: 0.008
Minimum age in population: 197.4866124185564
Maximum age in population: 201.9448125094095
Average age in population: 199.6727537259233
Median age in population: 199.6910132528736
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.922
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.922
Total error diversity:				 0.568
Error (vector) diversity:			 0.64
Behavioral diversity:				 0.64
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 354267373
--- Timings ---
Current time: 1529615733964 milliseconds
Total Time:         607.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.3 seconds, 30.0%
Fitness Testing:    341.7 seconds, 56.3%
Report:              83.0 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 40659.41689999999
Test mean error for best: 20.32971
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec integer_inc float_dec -92.0397674550659 float_dec float_dec float_dup float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div integer_yankdup float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_swap float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_sub float_dec float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 129
Size: 130
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3244.723646999998
Median total errors in population: 599.7263
Error averages by case: (94.32770479999964 9.935 142.83156459999998 4.16 148.50641190000002 4.791 95.18862080000072 10.162 139.78649839999994 3.332 72.79644390000092 10.316 76.31092590000091 9.531 161.68123800000004 4.87 137.33575569999996 4.451 146.72895770000054 9.257 169.42405469999994 11.662 91.8794949999996 9.743 136.74105949999998 6.492 156.52833619999998 3.973 96.49289759999937 8.349 154.63830789999994 4.403 83.1904384999998 8.664 115.23301749999925 10.975 88.22512570000065 10.185 102.66929599999979 11.699 153.0554726 4.573 86.71652269999865 11.674 141.3944284 3.793 99.31599500000084 9.557 155.96907799999994 11.209)
Error minima by case: (0.4394 2 0.0 0 0.0 0 0.1612 2 0.0 0 0.9111 8 0.4538 7 1.9358 1 0.0 0 0.1754 1 0.9086 1 0.2732 1 0.0 0 0.0 0 0.3913 1 0.0 0 0.9073 7 1.9434 2 0.8404 2 0.3385 2 0.6531 1 0.3024 1 0.0 0 2.2757 8 1.1933 1)
Average genome size in population (length): 132.305
Average program size in population (points): 133.305
Average percent parens in population: 0.008
Minimum age in population: 198.9538569159422
Maximum age in population: 203.0518738494424
Average age in population: 200.9720584226951
Median age in population: 200.985402957762
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.933
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.933
Total error diversity:				 0.571
Error (vector) diversity:			 0.647
Behavioral diversity:				 0.647
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 357575222
--- Timings ---
Current time: 1529615738791 milliseconds
Total Time:         612.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.6 seconds, 30.0%
Fitness Testing:    344.5 seconds, 56.3%
Report:              83.7 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 41189.977
Test mean error for best: 20.59499
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -91.0730770721
Correct output: -91.3409907826 | Program output: -102.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 10.005061137  
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -5.9357757377 
Correct output: 8.8462429043   | Program output: 2.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -25.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -0.075170532  
Correct output: 69.5371683437  | Program output: 40.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -81.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -121.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 36.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 6.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction integer_swap} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction integer_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max in1 float_stackdepth float_dec float_dec float_dec float_dec -92.0397674550659 float_max integer_swap float_max integer_swap float_max float_max float_max float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_dec float_dup_items float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max integer_inc float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 2.0 2 11.0 3 2.1612 10 10.0 1 2.0889 10 8.0227 9 30.0 1 6.0 1 0.334 7 41.0 11 0.2732 9 3.0 1 29.0 2 0.6087 9 17.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 11.0 2 5.6525 12 10.0 1 29.4219 9 30.0 11]
Total: 507.3441
Mean: 10.146882
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3414.8607525999987
Median total errors in population: 589.6831500000001
Error averages by case: (97.36727119999938 10.002 151.23747249999988 4.162 157.8838075000001 4.795 100.4764474000008 10.101 148.0959859 3.337 77.78290550000114 10.418 83.91862640000097 9.599 169.27731169999996 4.81 143.68496839999997 4.557 155.75595230000062 9.247 176.60937189999996 11.638 97.22917159999993 9.713 146.79524339999992 6.406 164.44921030000006 3.992 102.30702009999936 8.498 163.70816910000013 4.394 87.21776139999993 8.722 121.80583319999927 10.908 91.71017629999982 10.291 106.04383469999996 11.675 161.03948170000007 4.568 92.64169739999829 11.709 150.7224874 3.828 104.63348490000085 9.631 164.24306039999996 11.223)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 8 0.0643 3 0.8746 1 0.0 0 0.334 1 0.3184 1 0.1557 2 0.0 0 0.4628 1 0.3913 1 2.0 1 8.2968 8 3.9434 2 3.7314 1 0.3385 1 1.0 1 0.3475 2 0.0 0 7.3954 9 0.992 1)
Average genome size in population (length): 132.752
Average program size in population (points): 133.752
Average percent parens in population: 0.007
Minimum age in population: 200.0471684734347
Maximum age in population: 204.0906400766287
Average age in population: 202.210846470821
Median age in population: 202.2514212375102
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.936
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.936
Total error diversity:				 0.579
Error (vector) diversity:			 0.64
Behavioral diversity:				 0.641
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 360894360
--- Timings ---
Current time: 1529615743587 milliseconds
Total Time:         616.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       184.8 seconds, 30.0%
Fitness Testing:    347.4 seconds, 56.3%
Report:              84.3 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 40787.322499999995
Test mean error for best: 20.39366
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_273})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_273)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3375.149748
Median total errors in population: 600.5308500000001
Error averages by case: (98.59524139999947 9.963 149.3174057 4.423 155.05664930000006 5.024 101.14599580000068 10.144 144.55657200000007 3.456 77.8412330000011 10.372 80.75853470000085 9.598 162.34629699999996 4.874 142.8282289 4.714 153.80748740000053 9.316 173.3762806999999 11.685 97.76465639999998 9.758 141.61762940000003 6.314 164.0013036 4.139 100.83790309999961 8.38 160.53827480000012 4.651 88.06249379999996 8.703 120.7734704999996 10.972 92.41394199999989 10.235 108.09949029999997 11.698 159.4543104000001 4.855 90.61415189999857 11.691 147.3914185 3.978 104.9528097000008 9.593 159.2739677 11.188)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0051 1 1.4521 7 0.0643 8 0.6933 1 0.0 0 0.0033 1 2.0 1 0.2289 2 0.0 0 3.0 1 0.3913 1 2.0 1 0.7032 7 13.9434 2 3.8592 1 0.3385 1 0.0 0 0.3475 1 1.0 1 10.6841 9 0.1933 1)
Average genome size in population (length): 132.826
Average program size in population (points): 133.826
Average percent parens in population: 0.007
Minimum age in population: 201.3731764495352
Maximum age in population: 205.4348013372497
Average age in population: 203.5165126198652
Median age in population: 203.5536345309544
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.938
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.938
Total error diversity:				 0.604
Error (vector) diversity:			 0.657
Behavioral diversity:				 0.658
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 364215309
--- Timings ---
Current time: 1529615748530 milliseconds
Total Time:         621.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.1 seconds, 29.9%
Fitness Testing:    350.5 seconds, 56.4%
Report:              85.0 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 40787.322499999995
Test mean error for best: 20.39366
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_273})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_273)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3572.358529499999
Median total errors in population: 598.7082500000001
Error averages by case: (104.71842579999966 10.032 154.3435177 4.486 159.7424334 5.1 110.53407760000061 10.24 155.07166179999996 3.684 84.92283340000112 10.417 87.94110700000088 9.622 171.61809330000003 5.171 151.81986609999996 4.894 158.31641340000058 9.334 178.92260879999992 11.661 107.08582749999958 9.834 152.62586030000003 6.623 174.0062724999999 4.392 109.69372829999944 8.448 165.6163415 4.704 94.74826379999931 8.752 128.28134939999907 11.048 99.16389830000045 10.367 116.5937741999995 11.772 164.1282102 4.952 100.8061308999985 11.729 158.28166629999998 4.241 111.6119960000008 9.632 169.41217200000008 11.217)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 7 2.0643 8 0.0422 1 0.0 0 0.0228 1 0.1961 1 0.2732 1 0.0 0 1.0 1 0.3913 1 5.0 1 5.7032 8 5.9434 2 4.7314 2 1.3385 2 1.0 1 0.3475 1 0.0 0 5.3954 8 0.0237 1)
Average genome size in population (length): 132.838
Average program size in population (points): 133.838
Average percent parens in population: 0.007
Minimum age in population: 202.772344814854
Maximum age in population: 206.8432033615866
Average age in population: 204.8478607018327
Median age in population: 204.9025001736375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.935
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.935
Total error diversity:				 0.581
Error (vector) diversity:			 0.651
Behavioral diversity:				 0.652
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 367536534
--- Timings ---
Current time: 1529615753323 milliseconds
Total Time:         626.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       187.4 seconds, 29.9%
Fitness Testing:    353.4 seconds, 56.4%
Report:              85.7 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 40787.322499999995
Test mean error for best: 20.39366
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction float_inc} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_273})
Best program: (float_mod float_rot float_cos in2 float_inc in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_273)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3212.7656192999984
Median total errors in population: 588.4647500000001
Error averages by case: (96.66128069999928 9.956 137.08293359999988 4.302 142.8907098 4.906 100.33209310000073 10.153 134.9109897 3.54 75.24294140000107 10.379 79.25479170000088 9.582 152.566385 4.903 131.00807239999997 4.72 141.8215370000007 9.253 162.25976739999993 11.715 96.84648360000008 9.777 131.4534918999999 6.422 153.75526749999997 4.2 99.50075159999955 8.411 148.1651026000001 4.518 85.04466169999995 8.68 119.39513429999938 10.983 90.05980949999967 10.223 107.79967750000019 11.703 147.38345879999997 4.748 90.55367109999851 11.674 137.57511620000008 4.071 102.12704720000077 9.573 149.52444400000002 11.158)
Error minima by case: (0.4394 2 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 7 0.0643 8 1.0672 1 0.0 0 0.0228 2 1.0 1 0.2732 2 0.0 0 3.0 1 0.3913 1 0.0 0 0.978 8 15.9434 2 2.1596 1 2.6615 1 0.0 0 0.3475 1 0.0 0 14.1368 8 0.644 1)
Average genome size in population (length): 132.381
Average program size in population (points): 133.381
Average percent parens in population: 0.008
Minimum age in population: 204.0617167837498
Maximum age in population: 207.9914473755822
Average age in population: 206.1525393248688
Median age in population: 206.1879095474557
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.94
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.94
Total error diversity:				 0.585
Error (vector) diversity:			 0.667
Behavioral diversity:				 0.667
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 370846458
--- Timings ---
Current time: 1529615758064 milliseconds
Total Time:         631.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       188.5 seconds, 29.9%
Fitness Testing:    356.3 seconds, 56.4%
Report:              86.3 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 40747.035800000005
Test mean error for best: 20.37352
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_273})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_273)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3354.1847255999987
Median total errors in population: 591.7669000000001
Error averages by case: (94.78126009999951 9.988 147.00433390000003 4.217 152.53717799999987 4.805 105.12698780000038 10.182 144.64562229999999 3.401 75.24513890000088 10.398 78.63618630000076 9.619 162.87201599999997 4.985 143.06798560000001 4.899 149.89593510000046 9.302 170.72595659999988 11.633 101.55406709999957 9.808 141.29951870000002 6.215 162.47997549999985 4.021 100.50677209999964 8.399 157.8016105000001 4.362 85.35806989999999 8.696 123.61406249999942 10.969 90.69005250000006 10.264 110.20389480000009 11.709 155.6766758999999 4.596 92.99028519999894 11.708 146.84408759999997 3.92 101.07838110000074 9.595 160.93567159999998 10.922)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 7 0.0643 7 3.0642 1 0.0 0 0.334 2 2.0 1 0.2732 1 0.0 0 1.6394 1 0.3913 1 0.0 0 0.2968 8 13.9434 2 0.2686 1 0.3385 2 0.0 0 0.3475 1 0.0 0 1.9592 8 0.1933 1)
Average genome size in population (length): 132.302
Average program size in population (points): 133.302
Average percent parens in population: 0.008
Minimum age in population: 205.0617167837498
Maximum age in population: 209.3674320593281
Average age in population: 207.5043337574146
Median age in population: 207.5531520436841
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.929
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.929
Total error diversity:				 0.594
Error (vector) diversity:			 0.676
Behavioral diversity:				 0.676
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 374154333
--- Timings ---
Current time: 1529615762912 milliseconds
Total Time:         636.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.8 seconds, 29.8%
Fitness Testing:    359.2 seconds, 56.5%
Report:              86.9 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 40787.322499999995
Test mean error for best: 20.39366
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_273})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_273)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3269.5314537999993
Median total errors in population: 586.1414000000001
Error averages by case: (101.83252549999943 10.017 135.74322919999997 4.253 141.3725573 4.872 107.87179700000087 10.213 135.5918452 3.354 80.91806560000092 10.432 84.34830040000094 9.639 150.6333073 4.959 132.09276309999998 4.973 139.42592550000052 9.304 159.13726789999993 11.729 104.38519449999968 9.798 129.18068559999998 6.046 154.48532189999997 3.961 104.2473550999995 8.543 146.42030540000005 4.444 89.70512839999982 8.794 127.45495869999937 11.043 94.51935209999992 10.367 115.22723209999967 11.781 144.76042300000006 4.596 96.74619899999843 11.762 137.4230999 3.888 106.08615200000087 9.671 150.49846209999998 10.985)
Error minima by case: (0.4245 8 0.0 0 0.0 0 0.1612 1 0.0 0 1.2744 7 0.3086 8 1.0466 1 0.0 0 0.334 2 2.0 1 0.2732 2 0.0 0 0.0 0 0.3913 1 0.0 0 1.7032 8 1.9495 2 1.1596 2 0.6615 2 0.6531 1 0.3475 1 0.0 0 7.6841 9 0.5379 1)
Average genome size in population (length): 130.995
Average program size in population (points): 131.995
Average percent parens in population: 0.008
Minimum age in population: 206.7782989465997
Maximum age in population: 210.5499555113051
Average age in population: 208.8187281161148
Median age in population: 208.8586800641827
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.937
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.937
Total error diversity:				 0.602
Error (vector) diversity:			 0.675
Behavioral diversity:				 0.676
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 377429558
--- Timings ---
Current time: 1529615767606 milliseconds
Total Time:         640.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       191.0 seconds, 29.8%
Fitness Testing:    362.1 seconds, 56.5%
Report:              87.6 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 40794.322499999995
Test mean error for best: 20.39716
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction integer_yankdup} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_336})
Best program: (float_mod float_rot integer_yankdup in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_max float_dec float_dec float_dup float_dec float_dec float_max float_dec float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_336)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 126
Size: 127
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3404.7908296999994
Median total errors in population: 600.1407
Error averages by case: (109.5772718999993 10.069 136.8710211999999 4.297 142.59117309999996 4.938 119.1244465000007 10.204 134.9518525 3.304 90.40287140000126 10.46 94.60023890000096 9.675 153.99280640000003 4.826 133.9343135 4.93 141.48242700000054 9.346 162.22897449999994 11.708 115.58225349999968 9.831 132.2113681999999 5.749 153.44839770000002 3.907 113.71132049999943 8.606 147.29871750000012 4.496 100.11650119999966 8.802 137.38842409999938 11.003 105.06624099999996 10.366 122.32298629999988 11.723 146.42938049999998 4.663 108.44736789999838 11.681 137.09643320000004 3.828 116.73026430000083 9.685 150.12177690000001 10.965)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 0.0889 8 2.0227 8 0.7762 1 0.0 0 0.334 2 3.0 1 0.2732 2 0.0 0 0.0 0 0.355 1 1.0 1 0.2968 8 0.0505 2 0.8404 2 1.6615 1 0.0 0 0.3475 1 0.0 0 5.6841 9 0.0134 1)
Average genome size in population (length): 129.952
Average program size in population (points): 130.952
Average percent parens in population: 0.008
Minimum age in population: 207.7782989465997
Maximum age in population: 212.2093536810648
Average age in population: 210.2037960306046
Median age in population: 210.2441562832006
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.923
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.923
Total error diversity:				 0.616
Error (vector) diversity:			 0.7
Behavioral diversity:				 0.701
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 380678683
--- Timings ---
Current time: 1529615772441 milliseconds
Total Time:         645.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.3 seconds, 29.8%
Fitness Testing:    364.9 seconds, 56.5%
Report:              88.2 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 40728.5724
Test mean error for best: 20.36429
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_273})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc integer_mod float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_273)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3306.9988872999998
Median total errors in population: 583.1303500000001
Error averages by case: (100.27686169999932 9.924 139.25704729999998 4.215 145.0316874000001 4.876 104.31365170000085 10.143 138.61562590000003 3.291 81.1274105000011 10.352 88.27188150000092 9.554 155.6027861 4.849 136.54891859999998 5.099 142.67108440000064 9.212 164.60365469999988 11.717 101.0072302999998 9.688 135.08629329999997 5.428 157.49462349999996 3.961 102.38693309999935 8.513 149.67724539999995 4.388 90.8509105999996 8.681 124.0114015999996 10.968 95.93660750000016 10.311 109.77437890000003 11.742 147.94166820000004 4.567 96.6010350999984 11.738 140.55046310000003 3.872 108.12033620000084 9.584 153.63115070000003 10.935)
Error minima by case: (0.5606 8 0.0 0 0.0 0 0.1612 1 0.0 0 0.5327 8 1.0227 8 0.0642 1 0.0 0 0.334 1 1.0 1 0.2732 2 0.0 0 0.0 0 0.355 1 0.0 0 1.3871 8 1.9434 2 3.1596 1 3.8308 1 0.0 0 0.0 0 0.0 0 21.9089 9 0.3317 1)
Average genome size in population (length): 129.335
Average program size in population (points): 130.335
Average percent parens in population: 0.008
Minimum age in population: 209.2670985170944
Maximum age in population: 213.656314164466
Average age in population: 211.4636656024388
Median age in population: 211.4760637590477
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.924
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.924
Total error diversity:				 0.587
Error (vector) diversity:			 0.666
Behavioral diversity:				 0.667
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 383912433
--- Timings ---
Current time: 1529615777108 milliseconds
Total Time:         650.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.5 seconds, 29.8%
Fitness Testing:    367.8 seconds, 56.6%
Report:              88.9 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 40717.657999999996
Test mean error for best: 20.35883
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_yankdup})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec integer_yankdup float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth integer_yankdup)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 0.334 7 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3489.996183200001
Median total errors in population: 601.0032000000001
Error averages by case: (107.48375199999954 10.027 148.92744999999994 4.729 154.60818729999997 5.331 115.85436860000064 10.247 140.0491482 3.605 89.41770790000129 10.475 94.08563290000083 9.686 159.05006030000013 5.138 141.1910285 5.234 154.11530090000056 9.367 167.12233079999973 11.718 112.00822669999931 9.843 140.01809249999994 5.533 159.7679792 4.195 113.17252089999954 8.586 158.67271910000022 4.886 99.53810869999899 8.837 132.223331299999 11.022 103.94013500000077 10.433 118.72843659999965 11.785 158.70274259999997 5.002 104.06370009999857 11.847 143.3480567000001 4.162 115.2688859000007 9.697 156.21028050000004 11.043)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.0643 8 0.2238 1 0.0 0 0.0524 1 0.0 0 0.2732 2 0.0 0 0.0 0 0.0363 1 0.0 0 8.6798 8 10.0566 2 4.1596 2 0.3385 2 0.0 0 0.3475 1 0.0 0 3.4804 8 0.1933 1)
Average genome size in population (length): 128.225
Average program size in population (points): 129.225
Average percent parens in population: 0.008
Minimum age in population: 210.3791343047795
Maximum age in population: 215.656314164466
Average age in population: 212.8558688196992
Median age in population: 212.9100532182515
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.915
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.593
Error (vector) diversity:			 0.661
Behavioral diversity:				 0.662
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 387118507
--- Timings ---
Current time: 1529615781855 milliseconds
Total Time:         655.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       194.8 seconds, 29.7%
Fitness Testing:    370.6 seconds, 56.6%
Report:              89.5 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 40723.194599999995
Test mean error for best: 20.36160
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -92.0730770721
Correct output: -91.3409907826 | Program output: -103.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 9.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -6.9357757377 
Correct output: 8.8462429043   | Program output: 1.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -26.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -1.075170532  
Correct output: 69.5371683437  | Program output: 39.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -82.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -122.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 35.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 5.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_swap} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_yankdup})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec integer_yankdup float_dec float_dec -92.0397674550659 float_max float_max float_max float_swap float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth integer_yankdup)
Errors: [7.5606 9 3.0 2 12.0 3 2.1612 10 9.0 1 2.0889 10 8.0227 9 29.0 2 7.0 1 0.334 7 42.0 12 0.2732 9 2.0 1 30.0 1 0.6087 9 16.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 10.0 1 5.6525 12 9.0 2 29.4219 9 29.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 2707.392188999999
Median total errors in population: 587.1986
Error averages by case: (91.57812889999944 9.896 102.25963779999991 4.396 108.53593550000001 5.049 100.60392100000067 10.032 97.9006437 3.19 72.77504530000101 10.346 74.44412700000083 9.539 114.38903420000003 4.491 95.93506289999999 4.805 109.13386700000058 9.127 123.2516111999999 11.643 97.10530549999973 9.606 93.12121680000001 5.176 116.62261360000005 3.75 95.0955862999996 8.36 112.24390990000018 4.527 81.51418009999975 8.691 119.66429259999921 10.81 86.40622189999998 10.422 106.49371389999979 11.629 113.15067640000011 4.668 89.08404489999849 11.69 99.29847860000005 3.697 97.8445986000008 9.545 113.0813354 10.774)
Error minima by case: (0.4394 2 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 2 0.0227 2 0.7154 1 0.0 0 0.334 2 1.0 1 0.1557 1 0.0 0 3.0 1 0.0363 1 0.1053 1 2.2968 1 18.0 2 1.1596 2 1.0 1 0.0 0 0.3475 1 0.0 0 0.5781 2 0.1933 1)
Average genome size in population (length): 126.79
Average program size in population (points): 127.79
Average percent parens in population: 0.008
Minimum age in population: 211.3791343047795
Maximum age in population: 217.0365595256212
Average age in population: 214.0835836004814
Median age in population: 214.1000688688824
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.915
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.58
Error (vector) diversity:			 0.652
Behavioral diversity:				 0.652
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 390288532
--- Timings ---
Current time: 1529615786626 milliseconds
Total Time:         659.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.0 seconds, 29.7%
Fitness Testing:    373.4 seconds, 56.6%
Report:              90.2 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 40754.9669
Test mean error for best: 20.37748
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 float_mult in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_yank float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth float_stackdepth)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3027.3926844
Median total errors in population: 584.8666000000001
Error averages by case: (103.61540049999957 9.988 116.50030309999981 4.585 122.68995290000004 5.147 110.13583560000068 10.186 112.09239379999995 3.438 85.76811110000119 10.399 84.86112220000088 9.607 128.57474430000013 4.803 110.64098769999995 4.999 123.1365744000007 9.17 136.64725249999984 11.723 106.73326219999923 9.75 107.7605877999999 5.207 133.20737540000016 4.016 105.76143429999959 8.406 126.27788600000017 4.657 94.788440099999 8.774 128.2380490999988 10.969 99.85045290000072 10.432 115.01948469999944 11.776 127.03584570000022 4.778 96.0298828999985 11.809 115.6086127000001 4.045 110.60606320000075 9.631 126.60662930000001 10.911)
Error minima by case: (0.1163 8 0.0 0 0.0 0 0.1612 1 0.0 0 0.2744 8 1.0227 8 0.1254 1 0.0 0 0.334 1 3.0 1 0.0614 1 0.0 0 1.0 1 0.3913 1 0.9345 1 0.3871 8 0.541 2 0.7314 1 0.0 0 0.0 0 0.3475 1 0.0 0 0.6841 8 0.3006 1)
Average genome size in population (length): 125.868
Average program size in population (points): 126.868
Average percent parens in population: 0.008
Minimum age in population: 212.7159114703368
Maximum age in population: 218.1482658984764
Average age in population: 215.3395993661003
Median age in population: 215.3918272969267
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.915
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.564
Error (vector) diversity:			 0.635
Behavioral diversity:				 0.636
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 393435407
--- Timings ---
Current time: 1529615791345 milliseconds
Total Time:         664.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       197.3 seconds, 29.7%
Fitness Testing:    376.2 seconds, 56.6%
Report:              90.9 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 40756.033200000005
Test mean error for best: 20.37802
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_dec -92.94415431172159 float_max float_max float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 2550.7539457000003
Median total errors in population: 583.8666000000001
Error averages by case: (86.63029939999929 9.904 95.17797129999987 4.347 101.41799050000002 4.948 91.2387700000008 10.122 90.08751430000004 3.037 70.77144180000113 10.384 74.71434070000089 9.566 107.82420410000014 4.399 91.25275299999996 4.974 101.40341390000066 9.036 116.90315649999985 11.607 87.53264600000003 9.657 86.4663278 4.951 109.55076600000011 3.682 89.69976149999962 8.471 105.05011060000021 4.471 78.53246969999977 8.707 109.83440829999958 10.978 83.63231489999971 10.329 97.52202100000011 11.644 105.65878420000011 4.571 81.54356029999832 11.84 91.53680450000002 3.655 95.79137220000078 9.591 105.3027432 10.807)
Error minima by case: (0.1163 2 0.0 0 0.341 1 0.1612 2 0.0 0 0.7256 8 0.0643 8 2.9429 1 0.0 0 0.334 1 0.0 0 0.2732 2 0.0 0 1.0 1 0.355 1 1.0 1 3.0435 8 7.9434 2 1.4734 1 1.0 2 0.0 0 0.3475 2 0.0 0 17.6841 2 0.1933 1)
Average genome size in population (length): 125.953
Average program size in population (points): 126.953
Average percent parens in population: 0.008
Minimum age in population: 214.1065245959531
Maximum age in population: 219.436689066193
Average age in population: 216.6433880270515
Median age in population: 216.6927703829535
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.927
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.927
Total error diversity:				 0.561
Error (vector) diversity:			 0.629
Behavioral diversity:				 0.63
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 396584444
--- Timings ---
Current time: 1529615796057 milliseconds
Total Time:         669.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.6 seconds, 29.7%
Fitness Testing:    379.0 seconds, 56.6%
Report:              91.5 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 40779.51439999999
Test mean error for best: 20.38976
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction float_inc} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction integer_add} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction integer_rot} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_mod} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_273})
Best program: (float_mod float_rot float_cos in2 float_inc in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max integer_add integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 integer_rot float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_mod float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_273)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 126
Size: 127
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3023.9525224999984
Median total errors in population: 584.3325
Error averages by case: (103.65409469999955 9.934 118.25557029999976 4.523 124.58902300000008 5.161 113.36760240000068 10.105 111.03997969999996 3.282 83.19615260000118 10.357 81.19109370000095 9.606 128.07190850000012 4.548 111.88869239999995 5.161 124.65027010000064 9.196 135.6092112999998 11.687 109.72449729999894 9.689 107.58006619999993 4.896 131.88206300000013 3.909 102.69360299999946 8.426 127.80622470000023 4.643 92.58576569999896 8.764 130.53688879999882 10.902 97.24315890000095 10.372 116.98883269999943 11.647 128.33853720000022 4.751 96.3859088999985 11.677 113.78827640000004 3.917 108.62958720000078 9.602 126.65351379999998 10.847)
Error minima by case: (0.4394 1 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 2 1.0227 8 1.0552 1 0.0 0 0.334 1 0.0 0 0.2732 1 0.0 0 0.0 0 0.0363 1 0.1053 1 1.5564 1 2.0566 2 2.1596 1 0.0 0 0.0 0 0.3475 1 0.0 0 2.5781 1 0.1933 1)
Average genome size in population (length): 125.374
Average program size in population (points): 126.374
Average percent parens in population: 0.008
Minimum age in population: 215.1065245959531
Maximum age in population: 220.0660237571024
Average age in population: 217.8878106866297
Median age in population: 217.9387142934032
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.925
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.925
Total error diversity:				 0.566
Error (vector) diversity:			 0.62
Behavioral diversity:				 0.621
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 399719194
--- Timings ---
Current time: 1529615800663 milliseconds
Total Time:         673.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       199.8 seconds, 29.6%
Fitness Testing:    381.8 seconds, 56.7%
Report:              92.2 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 40787.322499999995
Test mean error for best: 20.39366
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_mod} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_273})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_mod float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec float_max float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_273)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 2692.1037436999995
Median total errors in population: 576.6966500000001
Error averages by case: (91.54008989999922 9.958 99.7380329 4.323 106.28863580000001 5.042 97.05898780000098 10.108 97.91186310000005 2.992 75.32460240000103 10.403 76.17334730000096 9.574 114.35635950000008 4.147 97.95704769999998 4.959 105.58872990000063 9.06 122.48466479999992 11.705 93.55561189999997 9.69 93.60336509999998 4.519 119.36974840000006 3.634 95.6155086999994 8.405 109.59775960000019 4.381 82.45128050000004 8.758 115.67344259999942 10.939 88.08493810000002 10.416 105.36537049999994 11.703 109.78605110000007 4.584 85.34208729999843 11.73 100.31410700000006 3.634 100.29903060000085 9.629 113.45508119999995 10.875)
Error minima by case: (0.4394 3 0.0 0 0.341 1 0.1612 2 0.0 0 0.3623 4 1.0227 3 0.0642 1 0.0 0 0.334 1 1.0 1 0.1557 2 0.0 0 1.0 1 0.3913 1 0.1053 1 0.3871 4 7.9434 2 0.1596 1 2.3385 1 0.0 0 0.3475 2 0.0 0 2.4219 3 0.1549 1)
Average genome size in population (length): 125.201
Average program size in population (points): 126.201
Average percent parens in population: 0.008
Minimum age in population: 216.9410511636933
Maximum age in population: 221.3413476463723
Average age in population: 219.2947772655036
Median age in population: 219.3451599923487
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.916
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.916
Total error diversity:				 0.556
Error (vector) diversity:			 0.617
Behavioral diversity:				 0.618
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 402849506
--- Timings ---
Current time: 1529615805363 milliseconds
Total Time:         678.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.1 seconds, 29.6%
Fitness Testing:    384.6 seconds, 56.7%
Report:              92.8 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 40771.3225
Test mean error for best: 20.38566
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -93.0730770721
Correct output: -91.3409907826 | Program output: -104.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 8.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -7.9357757377 
Correct output: 8.8462429043   | Program output: 0.8462429043  
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -27.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -2.075170532  
Correct output: 69.5371683437  | Program output: 38.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -83.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -123.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 34.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: 4.8067224721  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_273})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_max float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_273)
Errors: [7.5606 9 4.0 2 13.0 3 2.1612 10 8.0 1 2.0889 10 8.0227 9 28.0 2 8.0 1 0.334 7 43.0 12 0.2732 9 1.0 1 31.0 2 0.6087 9 15.0 2 10.6016 8 36.0566 11 17.7314 10 23.8308 12 9.0 2 5.6525 12 8.0 2 29.4219 9 28.0 11]
Total: 506.3441
Mean: 10.126882
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 2783.5278151999987
Median total errors in population: 585.87195
Error averages by case: (96.45701169999933 9.967 105.00208649999979 4.636 111.09780230000007 5.317 101.98031660000072 10.251 100.13198449999997 3.26 79.95118700000104 10.41 79.9112069000009 9.579 114.02532810000012 4.532 97.61926189999996 4.913 111.40134300000085 9.186 125.90432769999975 11.726 98.94922239999951 9.883 93.1647008 4.945 123.00363410000017 3.965 99.09621059999957 8.544 114.20978240000028 4.822 87.94395559999963 8.793 120.74076569999914 11.06 91.27463660000005 10.55 106.32009669999985 11.75 115.52817560000015 4.901 88.2486251999985 11.785 103.02509920000006 4.028 105.36197150000078 9.639 113.71408259999998 11.023)
Error minima by case: (0.4394 3 0.0 0 0.0 0 0.1612 2 0.0 0 0.8412 3 0.0643 2 0.9358 1 0.0 0 0.3298 1 1.0 1 0.2732 2 0.0 0 1.0 1 0.0363 1 0.1053 1 0.3984 2 18.0566 2 0.2686 1 1.0 1 0.0 0 0.3475 1 0.0 0 7.0542 3 0.1933 1)
Average genome size in population (length): 124.37
Average program size in population (points): 125.37
Average percent parens in population: 0.008
Minimum age in population: 218.5063791543237
Maximum age in population: 222.4646902720383
Average age in population: 220.6242063253886
Median age in population: 220.6595888064312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.928
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.928
Total error diversity:				 0.567
Error (vector) diversity:			 0.627
Behavioral diversity:				 0.628
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 405959006
--- Timings ---
Current time: 1529615809985 milliseconds
Total Time:         683.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.3 seconds, 29.6%
Fitness Testing:    387.3 seconds, 56.7%
Report:              93.4 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 41448.990200000015
Test mean error for best: 20.72450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -100.0730770721
Correct output: -91.3409907826 | Program output: -111.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 1.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -14.9357757377
Correct output: 8.8462429043   | Program output: -6.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -34.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -9.075170532  
Correct output: 69.5371683437  | Program output: 31.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -90.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -130.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 27.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -2.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 11.0 3 20.0 2 2.1612 10 1.0 1 2.0889 10 8.0227 9 21.0 2 15.0 12 0.334 7 50.0 12 0.2732 9 6.0 1 38.0 2 0.6087 9 8.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 2.0 1 5.6525 12 1.0 1 29.4219 9 21.0 1]
Total: 502.3441
Mean: 10.046882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2670.2479979000004
Median total errors in population: 577.1672
Error averages by case: (91.8833183999992 9.857 100.61381409999989 4.47 106.19662210000008 5.153 99.85363020000067 10.068 94.86008479999995 3.139 74.30788940000095 10.326 70.75312360000082 9.495 113.51047360000003 4.262 92.98252419999999 4.878 108.42688030000068 9.141 119.96512489999985 11.75 96.21620759999959 9.653 91.71838039999992 4.722 115.58124250000017 3.797 94.52781879999958 8.535 109.52215580000019 4.568 82.42592499999998 8.71 118.26995169999938 10.881 88.45757850000008 10.447 103.08077929999989 11.589 111.1136197000001 4.702 82.9403537999987 11.683 98.00388400000013 3.82 98.9757920000007 9.543 109.94482320000003 10.927)
Error minima by case: (0.4394 2 0.0 0 0.341 1 0.1612 2 0.1556 1 1.4521 4 0.0227 3 0.055 1 0.0 0 0.334 1 0.4607 1 0.2732 2 0.0 0 0.0 0 0.0363 1 3.0 1 0.3871 3 20.0805 2 1.1596 2 0.6615 2 0.0 0 0.3475 1 1.0 1 7.6841 3 0.0134 1)
Average genome size in population (length): 124.332
Average program size in population (points): 125.332
Average percent parens in population: 0.008
Minimum age in population: 219.9013188542286
Maximum age in population: 223.9321040583246
Average age in population: 221.8963480751064
Median age in population: 221.9239281868861
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.921
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.921
Total error diversity:				 0.559
Error (vector) diversity:			 0.608
Behavioral diversity:				 0.608
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 409067656
--- Timings ---
Current time: 1529615814661 milliseconds
Total Time:         687.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       203.6 seconds, 29.6%
Fitness Testing:    390.0 seconds, 56.7%
Report:              94.1 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 41448.990200000015
Test mean error for best: 20.72450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -100.0730770721
Correct output: -91.3409907826 | Program output: -111.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 1.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -14.9357757377
Correct output: 8.8462429043   | Program output: -6.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -34.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -9.075170532  
Correct output: 69.5371683437  | Program output: 31.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -90.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -130.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 27.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -2.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 11.0 3 20.0 2 2.1612 10 1.0 1 2.0889 10 8.0227 9 21.0 2 15.0 12 0.334 7 50.0 12 0.2732 9 6.0 1 38.0 2 0.6087 9 8.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 2.0 1 5.6525 12 1.0 1 29.4219 9 21.0 1]
Total: 502.3441
Mean: 10.046882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2645.978723199999
Median total errors in population: 567.29155
Error averages by case: (100.02034149999938 9.972 89.55727559999997 4.221 96.24207310000003 4.882 107.83582800000073 10.23 84.39309080000004 3.033 84.05153100000108 10.47 83.25050960000097 9.611 102.04932410000009 4.173 84.7414738 4.923 95.50938060000063 8.918 112.43833409999984 11.657 104.42780569999948 9.754 80.2089308 4.644 106.69991210000003 3.666 100.91881759999934 8.589 99.55000600000017 4.317 92.74251139999937 8.786 126.87035569999902 11.082 97.64030190000045 10.473 112.53316819999974 11.726 99.7603514000001 4.392 92.77305319999849 11.838 87.31252090000004 3.72 108.8914858000008 9.681 99.91834029999998 10.884)
Error minima by case: (0.4394 8 0.0 0 0.659 1 0.1612 1 0.0 0 1.4521 7 0.9326 9 1.5511 1 0.0 0 0.334 1 1.0 1 0.2732 2 0.0 0 1.0 1 0.0363 1 1.0 1 9.2968 8 24.0566 2 0.1596 1 1.6615 1 0.0 0 0.3475 2 0.0 0 6.7356 9 0.1933 1)
Average genome size in population (length): 124.602
Average program size in population (points): 125.602
Average percent parens in population: 0.008
Minimum age in population: 220.9013188542286
Maximum age in population: 224.9609733639921
Average age in population: 223.1997801489094
Median age in population: 223.2283310586821
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.909
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.909
Total error diversity:				 0.53
Error (vector) diversity:			 0.601
Behavioral diversity:				 0.601
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 412182830
--- Timings ---
Current time: 1529615819352 milliseconds
Total Time:         692.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       204.8 seconds, 29.6%
Fitness Testing:    392.8 seconds, 56.7%
Report:              94.8 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 41448.990200000015
Test mean error for best: 20.72450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -100.0730770721
Correct output: -91.3409907826 | Program output: -111.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 1.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -14.9357757377
Correct output: 8.8462429043   | Program output: -6.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -34.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -9.075170532  
Correct output: 69.5371683437  | Program output: 31.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -90.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -130.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 27.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -2.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 11.0 3 20.0 2 2.1612 10 1.0 1 2.0889 10 8.0227 9 21.0 2 15.0 12 0.334 7 50.0 12 0.2732 9 6.0 1 38.0 2 0.6087 9 8.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 2.0 1 5.6525 12 1.0 1 29.4219 9 21.0 1]
Total: 502.3441
Mean: 10.046882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2683.013558099999
Median total errors in population: 571.5941
Error averages by case: (90.23447449999932 9.841 104.23096919999986 4.272 110.66632600000003 4.953 92.7802438000007 10.062 97.33918049999994 3.069 72.58704490000096 10.351 72.28340200000095 9.465 117.41344450000008 4.383 99.60202190000001 4.761 109.89330400000075 8.989 123.9737749999999 11.743 89.52974459999989 9.625 96.90744579999995 4.88 117.68778980000012 3.716 92.87554969999944 8.355 114.02750020000016 4.385 82.31135840000007 8.636 112.32224349999927 10.859 87.64999939999997 10.313 97.37381350000005 11.563 114.13698220000003 4.489 79.83625609999845 11.666 100.73292390000007 3.755 98.49334300000079 9.502 113.5954217 10.896)
Error minima by case: (0.4394 1 0.0 0 0.0 0 0.1612 1 0.0 0 0.2744 8 0.0643 7 0.0552 1 0.0 0 0.334 1 1.0 1 0.2732 2 0.0 0 0.0 0 0.0363 1 0.0 0 2.2226 8 18.0566 2 2.8404 1 0.6615 1 0.0 0 0.3475 1 0.0 0 1.6954 1 0.3317 1)
Average genome size in population (length): 124.0
Average program size in population (points): 125.0
Average percent parens in population: 0.008
Minimum age in population: 221.9627156502112
Maximum age in population: 226.5077370385463
Average age in population: 224.4622251762831
Median age in population: 224.5057478615715
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.909
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.909
Total error diversity:				 0.54
Error (vector) diversity:			 0.599
Behavioral diversity:				 0.599
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 415283205
--- Timings ---
Current time: 1529615824070 milliseconds
Total Time:         697.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.1 seconds, 29.6%
Fitness Testing:    395.6 seconds, 56.7%
Report:              95.5 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 41448.990200000015
Test mean error for best: 20.72450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -100.0730770721
Correct output: -91.3409907826 | Program output: -111.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 1.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -14.9357757377
Correct output: 8.8462429043   | Program output: -6.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -34.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -9.075170532  
Correct output: 69.5371683437  | Program output: 31.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -90.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -130.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 27.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -2.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 11.0 3 20.0 2 2.1612 10 1.0 1 2.0889 10 8.0227 9 21.0 2 15.0 12 0.334 7 50.0 12 0.2732 9 6.0 1 38.0 2 0.6087 9 8.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 2.0 1 5.6525 12 1.0 1 29.4219 9 21.0 1]
Total: 502.3441
Mean: 10.046882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2435.9537886999997
Median total errors in population: 570.53065
Error averages by case: (80.25461029999911 9.834 93.78433099999991 4.293 100.28398080000007 4.93 89.78128830000088 10.016 82.94760099999998 3.036 63.285655700000824 10.353 64.69508580000097 9.495 102.98568520000008 4.245 81.99279169999998 5.011 100.55969890000073 9.054 114.08573009999986 11.713 85.55223360000001 9.554 82.1625671999999 4.731 104.60113790000005 3.723 82.75668109999945 8.378 103.7184278000002 4.376 72.5121834000002 8.667 109.60432219999939 10.867 77.56377539999963 10.381 93.59539800000005 11.588 104.46939440000004 4.491 76.80160929999839 11.708 86.00632500000009 3.749 89.38281060000075 9.538 98.09346399999998 10.746)
Error minima by case: (0.1163 2 0.0 0 0.0 0 0.1612 2 0.0 0 0.2744 1 0.0643 8 0.0642 1 0.0 0 0.0365 1 0.5587 1 0.2732 1 0.0 0 0.0 0 0.3913 1 4.0 1 0.2968 2 3.681 2 2.1596 1 0.0 0 0.0 0 0.3475 1 0.0 0 3.6841 2 0.8552 1)
Average genome size in population (length): 124.311
Average program size in population (points): 125.311
Average percent parens in population: 0.008
Minimum age in population: 223.2774028322927
Maximum age in population: 227.9570269748057
Average age in population: 225.7122801872849
Median age in population: 225.7156139609859
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.906
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.906
Total error diversity:				 0.544
Error (vector) diversity:			 0.614
Behavioral diversity:				 0.614
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 418391330
--- Timings ---
Current time: 1529615828682 milliseconds
Total Time:         701.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       207.3 seconds, 29.5%
Fitness Testing:    398.3 seconds, 56.8%
Report:              96.1 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 41448.990200000015
Test mean error for best: 20.72450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -100.0730770721
Correct output: -91.3409907826 | Program output: -111.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 1.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -14.9357757377
Correct output: 8.8462429043   | Program output: -6.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -34.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -9.075170532  
Correct output: 69.5371683437  | Program output: 31.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -90.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -130.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 27.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -2.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 11.0 3 20.0 2 2.1612 10 1.0 1 2.0889 10 8.0227 9 21.0 2 15.0 12 0.334 7 50.0 12 0.2732 9 6.0 1 38.0 2 0.6087 9 8.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 2.0 1 5.6525 12 1.0 1 29.4219 9 21.0 1]
Total: 502.3441
Mean: 10.046882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2647.630791999999
Median total errors in population: 577.9014
Error averages by case: (87.7837163999993 9.883 102.91277939999985 4.583 109.35091250000005 5.23 93.0344476000007 10.083 98.30062609999996 3.284 71.80089250000086 10.365 67.39780920000084 9.512 114.20344490000014 4.449 98.6046033 5.33 109.68534010000079 9.137 122.06894159999979 11.754 89.24609129999978 9.66 93.8364909 4.669 119.4663731000001 3.945 89.27064849999948 8.429 112.09475760000015 4.675 78.99339739999962 8.68 110.2368537999995 10.951 83.0731491000001 10.373 98.12969580000009 11.618 113.29038300000019 4.766 76.78771439999878 11.797 101.08935820000002 3.956 96.81846520000076 9.562 112.85090009999996 10.612)
Error minima by case: (0.4245 2 0.0 0 0.659 1 0.1612 2 0.0 0 1.0889 2 0.0227 8 1.7745 1 0.0 0 0.334 1 1.0 1 0.2732 1 0.0 0 0.0 0 0.0363 1 1.9345 1 2.975 2 6.0566 2 0.8404 1 0.3385 1 0.0 0 0.3475 2 0.0 0 14.5781 2 0.8229 1)
Average genome size in population (length): 124.709
Average program size in population (points): 125.709
Average percent parens in population: 0.008
Minimum age in population: 224.7197020293396
Maximum age in population: 229.1710569700262
Average age in population: 227.0242364432707
Median age in population: 227.0576292849429
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.909
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.909
Total error diversity:				 0.545
Error (vector) diversity:			 0.616
Behavioral diversity:				 0.616
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 421509342
--- Timings ---
Current time: 1529615833384 milliseconds
Total Time:         706.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.6 seconds, 29.5%
Fitness Testing:    401.0 seconds, 56.8%
Report:              96.8 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 41448.990200000015
Test mean error for best: 20.72450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -100.0730770721
Correct output: -91.3409907826 | Program output: -111.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 1.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -14.9357757377
Correct output: 8.8462429043   | Program output: -6.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -34.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -9.075170532  
Correct output: 69.5371683437  | Program output: 31.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -90.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -130.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 27.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -2.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 11.0 3 20.0 2 2.1612 10 1.0 1 2.0889 10 8.0227 9 21.0 2 15.0 12 0.334 7 50.0 12 0.2732 9 6.0 1 38.0 2 0.6087 9 8.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 2.0 1 5.6525 12 1.0 1 29.4219 9 21.0 1]
Total: 502.3441
Mean: 10.046882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2706.551296499999
Median total errors in population: 575.1183
Error averages by case: (93.67075939999933 9.911 99.86137029999978 4.638 106.2460923 5.273 100.60283780000076 10.14 95.66328089999992 3.486 78.6681287000011 10.393 76.98488560000094 9.546 111.72905610000021 4.604 96.25986910000002 5.479 106.68077290000072 9.106 118.00632669999986 11.699 97.1997516999995 9.71 91.71339629999999 4.668 117.06387350000017 4.049 95.48156089999927 8.701 108.95711960000015 4.746 86.22200969999963 8.745 119.16455889999874 10.955 91.31848990000029 10.454 106.2363005999995 11.626 110.07797850000026 4.796 86.91983919999849 11.688 98.80973210000008 4.097 103.41689360000078 9.601 110.8394122 10.646)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.0889 8 0.0643 8 0.5913 1 0.0 0 0.334 1 0.1407 1 0.2732 1 0.0 0 1.6151 1 0.0363 1 1.0 1 1.1792 7 1.0505 2 0.5742 2 0.0 0 0.0 0 0.3475 1 0.0 0 7.6841 8 0.806 1)
Average genome size in population (length): 124.878
Average program size in population (points): 125.878
Average percent parens in population: 0.008
Minimum age in population: 225.7197020293396
Maximum age in population: 230.4758867388016
Average age in population: 228.2975281749544
Median age in population: 228.3504025102021
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.908
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.908
Total error diversity:				 0.555
Error (vector) diversity:			 0.61
Behavioral diversity:				 0.611
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 424631566
--- Timings ---
Current time: 1529615838053 milliseconds
Total Time:         711.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       209.8 seconds, 29.5%
Fitness Testing:    403.8 seconds, 56.8%
Report:              97.5 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 41448.990200000015
Test mean error for best: 20.72450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -100.0730770721
Correct output: -91.3409907826 | Program output: -111.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 1.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -14.9357757377
Correct output: 8.8462429043   | Program output: -6.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -34.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -9.075170532  
Correct output: 69.5371683437  | Program output: 31.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -90.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -130.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 27.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -2.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 11.0 3 20.0 2 2.1612 10 1.0 1 2.0889 10 8.0227 9 21.0 2 15.0 12 0.334 7 50.0 12 0.2732 9 6.0 1 38.0 2 0.6087 9 8.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 2.0 1 5.6525 12 1.0 1 29.4219 9 21.0 1]
Total: 502.3441
Mean: 10.046882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2459.2289962999994
Median total errors in population: 579.7354
Error averages by case: (80.37450799999935 9.856 93.65972669999988 4.538 100.15741880000003 5.101 86.59045330000056 10.045 88.95175909999999 3.168 65.13190420000073 10.333 63.57167330000074 9.499 105.53889070000007 4.284 88.74970599999996 5.519 100.66937410000064 9.015 114.07131289999985 11.728 82.89195060000027 9.609 85.0373976 4.56 110.89684950000009 3.786 84.31961159999967 8.338 102.55417060000016 4.568 72.53317240000061 8.689 105.52409879999949 10.884 77.75649369999944 10.397 92.2392001000003 11.686 104.06024130000021 4.663 72.60426459999884 11.714 92.01186460000005 3.758 89.71038340000077 9.535 103.92057039999997 10.429)
Error minima by case: (0.1163 8 0.0 0 0.7872 1 0.1612 2 0.0 0 0.7256 8 0.0643 8 0.9328 1 0.0 0 0.334 2 0.0 0 0.2732 2 0.0 0 1.4628 1 0.3913 1 1.0 1 0.2771 8 22.0566 2 2.1596 1 2.1692 2 0.0 0 0.3475 1 0.0 0 2.6841 8 0.3317 1)
Average genome size in population (length): 125.291
Average program size in population (points): 126.291
Average percent parens in population: 0.008
Minimum age in population: 226.7197020293396
Maximum age in population: 231.6315880878805
Average age in population: 229.5991922872058
Median age in population: 229.6642973804393
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.904
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.904
Total error diversity:				 0.567
Error (vector) diversity:			 0.616
Behavioral diversity:				 0.617
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 427764091
--- Timings ---
Current time: 1529615842704 milliseconds
Total Time:         715.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       211.0 seconds, 29.5%
Fitness Testing:    406.5 seconds, 56.8%
Report:              98.2 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 41448.990200000015
Test mean error for best: 20.72450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -100.0730770721
Correct output: -91.3409907826 | Program output: -111.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 1.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -14.9357757377
Correct output: 8.8462429043   | Program output: -6.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -34.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -9.075170532  
Correct output: 69.5371683437  | Program output: 31.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -90.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -130.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 27.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -2.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 11.0 3 20.0 2 2.1612 10 1.0 1 2.0889 10 8.0227 9 21.0 2 15.0 12 0.334 7 50.0 12 0.2732 9 6.0 1 38.0 2 0.6087 9 8.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 2.0 1 5.6525 12 1.0 1 29.4219 9 21.0 1]
Total: 502.3441
Mean: 10.046882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2746.3747613999994
Median total errors in population: 579.5333
Error averages by case: (101.37649839999935 9.915 97.68992449999983 4.521 104.50736010000013 5.094 105.2305297000008 10.176 92.03535939999999 3.149 87.0922722000011 10.405 85.57889360000092 9.595 107.98355990000007 4.235 92.7807427 5.92 104.56700610000071 9.075 114.76238559999977 11.73 101.95165199999965 9.715 88.38329039999988 4.415 113.7162249000001 3.824 103.2382311999994 8.281 105.99960910000023 4.557 94.03427459999936 8.796 124.792764299999 10.985 98.97565660000038 10.518 112.38981639999965 11.705 107.45903740000023 4.626 92.44553029999835 11.824 94.64432250000011 3.738 110.96592380000072 9.63 107.21289569999999 10.132)
Error minima by case: (0.1163 2 0.0 0 0.0 0 0.1612 1 0.0 0 0.7256 2 1.0227 3 1.0642 1 0.0 0 0.1161 1 2.0 1 0.1557 1 0.0 0 2.0 1 0.0 0 1.0 1 1.6016 2 1.0505 2 1.1596 1 0.6615 1 0.0 0 0.3475 1 0.0 0 7.5781 2 1.4786 1)
Average genome size in population (length): 125.958
Average program size in population (points): 126.958
Average percent parens in population: 0.008
Minimum age in population: 228.1376795973267
Maximum age in population: 233.1286411504161
Average age in population: 230.8114063931183
Median age in population: 230.8098548049019
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.925
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.925
Total error diversity:				 0.564
Error (vector) diversity:			 0.621
Behavioral diversity:				 0.622
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 430913304
--- Timings ---
Current time: 1529615847435 milliseconds
Total Time:         720.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       212.2 seconds, 29.5%
Fitness Testing:    409.3 seconds, 56.8%
Report:              98.9 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 41448.990200000015
Test mean error for best: 20.72450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -100.0730770721
Correct output: -91.3409907826 | Program output: -111.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 1.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -14.9357757377
Correct output: 8.8462429043   | Program output: -6.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -34.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -9.075170532  
Correct output: 69.5371683437  | Program output: 31.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -90.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -130.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 27.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -2.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 11.0 3 20.0 2 2.1612 10 1.0 1 2.0889 10 8.0227 9 21.0 2 15.0 12 0.334 7 50.0 12 0.2732 9 6.0 1 38.0 2 0.6087 9 8.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 2.0 1 5.6525 12 1.0 1 29.4219 9 21.0 1]
Total: 502.3441
Mean: 10.046882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2442.1931810999995
Median total errors in population: 577.78285
Error averages by case: (92.45367159999937 9.898 86.2427774 4.549 93.04197980000001 5.019 94.5123636000006 10.1 78.07591320000006 3.171 74.3971279000009 10.346 72.66467690000083 9.514 93.77765750000003 4.234 80.05365859999999 6.689 92.77158880000061 9.004 102.5612724999999 11.667 91.00816149999983 9.651 74.4676108 3.99 101.34525600000006 3.762 92.57161479999958 8.5 93.3956332000002 4.46 82.5247978999999 8.718 112.99720419999932 10.907 87.43195640000002 10.403 100.95428440000018 11.687 95.00740050000002 4.547 81.16166629999876 11.743 81.08387490000008 3.62 98.70899340000075 9.547 93.897039 9.359)
Error minima by case: (0.4394 8 0.0 0 0.0 0 0.1612 2 0.0 0 1.7611 8 0.0643 8 0.0642 1 0.0 0 0.334 2 0.2875 1 0.2732 2 0.0 0 1.0 1 0.0363 1 0.0 0 4.2968 8 0.9401 2 0.8404 2 0.6615 1 0.0 0 0.3475 1 0.0 0 5.6841 8 0.3947 1)
Average genome size in population (length): 127.393
Average program size in population (points): 128.393
Average percent parens in population: 0.008
Minimum age in population: 229.1376795973267
Maximum age in population: 234.316122274681
Average age in population: 232.0536835551215
Median age in population: 232.0491532514799
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.903
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.903
Total error diversity:				 0.561
Error (vector) diversity:			 0.628
Behavioral diversity:				 0.628
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 434098454
--- Timings ---
Current time: 1529615852256 milliseconds
Total Time:         725.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       213.5 seconds, 29.4%
Fitness Testing:    412.2 seconds, 56.8%
Report:              99.6 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 41596.21150000002
Test mean error for best: 20.79811
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2702.1935286
Median total errors in population: 592.25265
Error averages by case: (96.27281239999955 9.932 102.24867809999988 4.597 108.89047950000007 4.969 106.01067070000074 9.912 87.60296609999999 3.357 77.3666169000011 10.41 78.76704990000088 9.593 108.59268040000008 4.161 94.78950780000001 7.579 108.25296050000065 9.062 117.71930499999985 11.707 102.19287219999943 9.47 91.33830269999997 4.018 111.21247290000012 3.76 100.42298669999956 8.617 108.09920180000026 4.401 86.61304079999955 8.768 122.2438278999993 10.708 91.99750020000043 10.342 107.55496249999995 11.557 109.7908402000001 4.508 91.69964929999865 11.703 90.75248790000009 3.54 103.50993190000068 9.633 103.35772429999999 8.59)
Error minima by case: (0.4394 2 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 8 0.0227 8 0.4087 1 0.0 0 0.1369 2 0.0 0 0.2732 1 0.0 0 0.0 0 0.0363 1 0.0 0 1.7032 7 12.0566 1 2.2686 1 2.0 1 0.0 0 0.3475 1 0.0 0 10.2538 8 0.1933 1)
Average genome size in population (length): 129.663
Average program size in population (points): 130.663
Average percent parens in population: 0.008
Minimum age in population: 230.1376795973267
Maximum age in population: 236.0607090033262
Average age in population: 233.3639291882954
Median age in population: 233.3996582399793
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.925
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.925
Total error diversity:				 0.584
Error (vector) diversity:			 0.646
Behavioral diversity:				 0.646
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 437340404
--- Timings ---
Current time: 1529615857078 milliseconds
Total Time:         730.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       214.7 seconds, 29.4%
Fitness Testing:    415.0 seconds, 56.8%
Report:             100.3 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 41557.25930000002
Test mean error for best: 20.77863
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -140.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.666 9 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 501.6761
Mean: 10.033522
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2755.045710099999
Median total errors in population: 599.0585000000001
Error averages by case: (97.43414849999957 9.971 104.18288319999981 4.732 110.67616430000008 5.071 103.50876090000075 10.002 93.3958718 3.541 80.83803320000104 10.373 78.19449450000084 9.584 111.30030390000012 4.308 101.42655479999999 8.531 109.76125790000066 9.164 124.05020869999977 11.752 100.06661579999957 9.589 95.04005829999996 3.849 120.46472050000008 3.884 99.4626357999996 8.587 109.2287475000002 4.578 88.60331259999955 8.779 121.0713861999992 10.786 92.77661600000033 10.361 107.0424031999999 11.659 110.91326490000016 4.689 87.22729679999864 11.71 96.75685210000007 3.61 105.6408983000007 9.625 109.16622039999999 8.081)
Error minima by case: (0.4394 2 0.0 0 0.341 1 0.1612 2 0.0 0 1.3185 7 0.0643 8 1.392 1 0.0 0 0.1421 1 1.0 1 0.1557 1 0.0 0 0.4628 1 0.355 1 0.0 0 8.2968 8 1.0505 2 0.2686 1 1.3385 1 0.0 0 0.3475 2 0.0 0 1.6841 8 0.1933 1)
Average genome size in population (length): 131.091
Average program size in population (points): 132.091
Average percent parens in population: 0.008
Minimum age in population: 232.3665681995663
Maximum age in population: 237.1266660107168
Average age in population: 234.7320088434508
Median age in population: 234.759427611812
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.941
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.941
Total error diversity:				 0.617
Error (vector) diversity:			 0.689
Behavioral diversity:				 0.69
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 440617878
--- Timings ---
Current time: 1529615861892 milliseconds
Total Time:         735.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.9 seconds, 29.4%
Fitness Testing:    417.9 seconds, 56.8%
Report:             101.1 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 41860.413000000015
Test mean error for best: 20.93021
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -140.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_max float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.666 9 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 501.6761
Mean: 10.033522
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3096.896870499999
Median total errors in population: 583.5466000000001
Error averages by case: (114.24715879999945 10.047 113.96037499999984 4.771 120.57208810000003 5.01 123.33621600000063 10.265 103.08716549999991 3.789 96.432030500001 10.453 98.74403320000084 9.688 119.44613860000004 4.301 111.44294819999998 9.54 117.75178840000068 9.186 135.54054059999984 11.809 119.92625319999969 9.864 104.76075509999993 3.75 129.33831130000016 3.95 116.91443539999953 8.576 116.9038899000002 4.445 105.86060189999942 8.898 141.05062739999974 11.031 110.46918790000018 10.47 124.72543999999989 11.741 118.04248240000013 4.612 108.65281449999866 11.794 104.83207240000007 3.564 122.49547210000065 9.709 119.79004410000003 7.311)
Error minima by case: (0.4245 2 0.0 0 0.0 0 0.1612 2 0.0 0 1.4521 7 0.9773 8 0.0642 1 0.0 0 0.0963 2 0.7117 2 0.2732 1 0.0 0 0.4628 1 0.355 1 0.0 0 5.9451 8 18.0 2 2.1596 1 2.3385 1 0.0 0 0.3475 2 0.0 0 0.6841 8 0.1919 1)
Average genome size in population (length): 132.971
Average program size in population (points): 133.971
Average percent parens in population: 0.007
Minimum age in population: 233.8047403078439
Maximum age in population: 238.2986106630406
Average age in population: 236.1150733590008
Median age in population: 236.1354196907895
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.933
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.933
Total error diversity:				 0.587
Error (vector) diversity:			 0.674
Behavioral diversity:				 0.675
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 443942528
--- Timings ---
Current time: 1529615866677 milliseconds
Total Time:         739.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       217.2 seconds, 29.4%
Fitness Testing:    420.7 seconds, 56.9%
Report:             101.8 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 41549.83900000002
Test mean error for best: 20.77492
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction integer_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc integer_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max integer_yankdup float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2906.7004513
Median total errors in population: 598.0585000000001
Error averages by case: (101.52305569999943 9.95 111.8555991999998 5.044 118.30672240000004 5.129 111.4151202000006 10.167 97.49079909999996 3.946 85.31270470000105 10.445 85.0191217000009 9.632 114.61326240000018 4.472 106.45864119999996 9.9 116.35560560000066 9.251 132.14735909999973 11.706 107.56670469999925 9.759 100.50368739999998 3.937 127.99844500000013 4.063 105.19713719999967 8.656 114.19049590000026 4.649 93.35291809999907 8.846 127.91449449999882 10.937 98.26294430000073 10.514 113.71728329999962 11.614 116.13770230000019 4.768 97.89510689999852 11.728 101.21538490000006 3.614 110.0525484000007 9.662 113.03560709999998 6.773)
Error minima by case: (0.1014 1 0.0 0 0.0 0 0.1612 2 0.0 0 0.2744 4 0.0227 3 2.9358 1 0.0 0 0.334 2 1.1514 1 0.2732 1 0.0 0 1.5372 1 0.355 1 0.0 0 1.1678 3 2.0566 2 1.2686 1 2.3385 2 0.0 0 0.3475 2 0.0 0 3.6841 3 0.1406 1)
Average genome size in population (length): 134.172
Average program size in population (points): 135.172
Average percent parens in population: 0.007
Minimum age in population: 235.2977971244877
Maximum age in population: 239.4477662764834
Average age in population: 237.4243426380883
Median age in population: 237.4557102388346
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.933
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.933
Total error diversity:				 0.612
Error (vector) diversity:			 0.684
Behavioral diversity:				 0.685
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 447297653
--- Timings ---
Current time: 1529615871602 milliseconds
Total Time:         744.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       218.4 seconds, 29.3%
Fitness Testing:    423.7 seconds, 56.9%
Report:             102.5 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 41589.83640000002
Test mean error for best: 20.79492
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 143
Size: 144
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2894.169329499999
Median total errors in population: 596.1659000000001
Error averages by case: (105.70678169999945 10.066 106.5177652999998 4.846 113.1106763 4.921 114.64254460000062 10.172 93.46005299999996 4.025 90.82931200000101 10.466 87.88737310000093 9.661 111.92741080000012 4.191 105.15009810000001 10.659 109.64571780000057 9.209 125.7268294999998 11.722 111.13194509999938 9.74 98.07838819999995 3.558 120.87955270000013 3.806 110.47584829999958 8.462 107.77568110000021 4.301 98.62401139999926 8.914 130.63486449999928 10.945 102.92488510000045 10.509 119.57603879999994 11.682 109.07623810000013 4.491 99.5637446999986 11.76 96.33862920000007 3.314 115.22450030000073 9.716 111.88243979999999 6.242)
Error minima by case: (0.1311 2 0.0 0 1.0 1 0.1612 2 0.0 0 0.2744 1 0.0227 3 1.4171 1 0.0 0 0.334 2 3.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 0.0 0 3.2968 2 1.0566 2 0.0 0 0.3385 1 0.0 0 0.3475 1 0.0 0 0.3159 2 0.127 1)
Average genome size in population (length): 135.936
Average program size in population (points): 136.936
Average percent parens in population: 0.007
Minimum age in population: 236.2998076900701
Maximum age in population: 241.027871669909
Average age in population: 238.8150309710648
Median age in population: 238.8697719455915
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.94
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.94
Total error diversity:				 0.609
Error (vector) diversity:			 0.686
Behavioral diversity:				 0.687
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 450696502
--- Timings ---
Current time: 1529615876505 milliseconds
Total Time:         749.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       219.6 seconds, 29.3%
Fitness Testing:    426.6 seconds, 56.9%
Report:             103.2 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 41589.83640000002
Test mean error for best: 20.79492
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max integer_div float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2775.6747853
Median total errors in population: 595.2245
Error averages by case: (96.75385159999959 9.937 103.56255459999981 4.969 110.09398540000005 4.994 108.69399480000068 10.153 90.51363999999995 4.137 80.91248880000099 10.417 83.65968090000086 9.599 107.55381480000014 4.381 102.12464259999996 10.67 107.76537460000057 9.241 123.1351040999998 11.702 105.09312959999943 9.739 94.70868029999994 3.73 121.37690690000012 4.103 102.03298039999954 8.659 104.96103910000019 4.476 89.48783969999936 8.82 126.7617763999991 10.914 94.89269720000048 10.444 111.46384759999981 11.662 107.14373790000013 4.626 95.80868719999853 11.761 94.63089430000008 3.585 106.3596011000007 9.667 107.59583539999996 6.202)
Error minima by case: (0.4245 2 0.0 0 0.0 0 0.1612 1 0.0 0 1.0218 8 0.0227 7 0.587 1 0.0 0 0.334 1 0.0914 1 0.2732 2 0.0 0 1.4628 1 0.3913 1 0.0 0 3.7032 8 7.7349 1 0.2686 2 1.0 1 0.0 0 0.3475 2 0.0 0 1.3159 8 0.1505 1)
Average genome size in population (length): 136.299
Average program size in population (points): 137.299
Average percent parens in population: 0.007
Minimum age in population: 237.2998076900701
Maximum age in population: 242.1667533307647
Average age in population: 240.2108437778825
Median age in population: 240.2738146846042
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.933
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.933
Total error diversity:				 0.616
Error (vector) diversity:			 0.688
Behavioral diversity:				 0.689
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 454104602
--- Timings ---
Current time: 1529615881499 milliseconds
Total Time:         754.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       220.9 seconds, 29.3%
Fitness Testing:    429.6 seconds, 56.9%
Report:             104.0 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 41589.83640000002
Test mean error for best: 20.79492
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max integer_div float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2879.0531119000007
Median total errors in population: 599.8648500000002
Error averages by case: (98.0019040999994 9.903 115.62857349999967 5.209 122.02598750000001 5.189 109.51161910000062 10.087 98.85147489999996 4.115 80.74533940000086 10.382 78.64856520000095 9.596 114.59603760000023 4.383 110.51914989999999 10.859 119.21798730000059 9.301 128.18537659999973 11.634 105.39148549999952 9.677 102.10156529999988 3.678 128.0830167000002 4.153 101.71452139999971 8.603 115.79180810000028 4.74 90.00262729999953 8.779 123.39626339999914 10.827 94.64074640000044 10.383 111.41569499999996 11.642 119.4263492000002 4.847 91.04897869999859 11.742 102.15493150000007 3.566 105.65685400000075 9.601 113.37625429999999 6.024)
Error minima by case: (0.2636 2 0.0 0 0.0 0 0.1612 1 0.0 0 0.2744 4 0.0227 3 1.2224 1 0.1538 1 0.334 2 1.0 1 0.2732 2 0.0 0 2.0 1 0.355 1 0.0 0 0.6016 3 10.0566 2 1.2686 1 1.0 1 0.0 0 0.3475 2 0.0 0 8.8038 3 0.1591 1)
Average genome size in population (length): 136.415
Average program size in population (points): 137.415
Average percent parens in population: 0.007
Minimum age in population: 239.1806793765374
Maximum age in population: 243.7233167009644
Average age in population: 241.5380903648454
Median age in population: 241.565880094158
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.936
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.936
Total error diversity:				 0.609
Error (vector) diversity:			 0.671
Behavioral diversity:				 0.672
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 457515527
--- Timings ---
Current time: 1529615886286 milliseconds
Total Time:         759.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       222.1 seconds, 29.2%
Fitness Testing:    432.5 seconds, 57.0%
Report:             104.6 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 41590.14040000002
Test mean error for best: 20.79507
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2648.7509300999996
Median total errors in population: 598.0585000000001
Error averages by case: (90.73831139999932 9.911 103.38680589999991 4.808 110.17428050000005 4.786 101.98862100000068 10.135 88.91330020000001 4.044 72.28701180000107 10.366 73.33556750000092 9.572 104.86875450000012 4.156 98.80347699999997 10.937 106.06692130000053 9.129 119.1239732999998 11.698 98.35425969999946 9.665 92.06215639999998 3.405 116.68612290000007 3.864 96.1015128999996 8.458 103.91003290000022 4.256 81.68214559999979 8.735 118.45888069999904 10.893 86.59487110000006 10.396 105.05653109999972 11.637 105.4973278000001 4.399 85.89152939999857 11.707 91.21544830000006 3.256 98.29391180000077 9.573 103.72817509999999 5.745)
Error minima by case: (0.4394 2 0.0 0 2.341 1 0.1612 2 0.0 0 0.2744 8 0.0643 3 0.1525 1 0.0 0 0.1461 1 2.0 1 0.2732 1 0.0 0 0.5372 1 0.355 1 0.0 0 0.3984 8 12.0566 2 1.2686 1 1.3385 2 0.0 0 0.3475 1 0.0 0 2.3159 9 0.0378 1)
Average genome size in population (length): 137.438
Average program size in population (points): 138.438
Average percent parens in population: 0.007
Minimum age in population: 240.5014952587502
Maximum age in population: 245.165836104329
Average age in population: 242.8244711451421
Median age in population: 242.8547401335382
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.936
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.936
Total error diversity:				 0.612
Error (vector) diversity:			 0.684
Behavioral diversity:				 0.685
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 460951886
--- Timings ---
Current time: 1529615891210 milliseconds
Total Time:         764.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.4 seconds, 29.2%
Fitness Testing:    435.5 seconds, 57.0%
Report:             105.3 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 41592.14960000002
Test mean error for best: 20.79607
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction integer_mult} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 integer_mult float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2542.3897078000005
Median total errors in population: 599.2245
Error averages by case: (89.80690719999926 9.894 98.4573611999998 4.949 105.16773590000005 4.904 96.45939800000055 10.079 79.80561129999997 4.172 70.76763000000116 10.379 74.16192900000088 9.607 98.49226910000006 4.066 92.41065400000001 11.08 102.1849926000004 9.231 118.5901834999998 11.656 92.59102119999987 9.67 85.75705350000001 3.437 112.05485510000014 3.842 93.67759849999962 8.517 98.85078730000025 4.286 80.2935936 8.683 113.4106516999991 10.871 85.46633209999976 10.288 98.79467520000007 11.628 101.31849200000012 4.451 83.05725059999851 11.681 82.60170000000002 3.212 96.64891600000082 9.568 95.71610920000002 5.695)
Error minima by case: (0.4394 2 0.0 0 0.2377 1 0.1612 1 0.0 0 1.4521 8 0.0227 8 0.1856 1 1.0 1 0.1461 1 1.0 1 0.2732 1 0.0 0 0.5372 1 0.355 1 0.0 0 0.2968 8 11.0566 2 0.1596 1 2.0 1 0.0 0 0.3475 1 0.0 0 1.3159 9 0.011 1)
Average genome size in population (length): 137.264
Average program size in population (points): 138.264
Average percent parens in population: 0.007
Minimum age in population: 241.9888189628096
Maximum age in population: 246.1849033400034
Average age in population: 244.1483949520087
Median age in population: 244.1580014925783
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.941
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.941
Total error diversity:				 0.632
Error (vector) diversity:			 0.711
Behavioral diversity:				 0.711
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 464384011
--- Timings ---
Current time: 1529615896088 milliseconds
Total Time:         769.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       224.6 seconds, 29.2%
Fitness Testing:    438.5 seconds, 57.0%
Report:             106.0 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 41614.24710000002
Test mean error for best: 20.80712
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_swap} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max integer_swap float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3335.3515895999994
Median total errors in population: 604.578
Error averages by case: (115.31674409999945 10.06 134.0510143999998 5.205 140.5038966999999 5.22 127.51084580000062 10.153 113.70605759999992 4.313 94.83825130000112 10.488 102.87626360000093 9.75 134.61662850000025 4.455 129.1318163 11.065 137.50321150000042 9.439 154.07102149999974 11.665 123.70900939999946 9.765 122.5463869999999 3.825 146.3558014000001 4.218 118.15382849999956 8.778 134.5272418000002 4.586 106.3066898999992 8.912 142.7630674999999 10.845 110.54920210000054 10.415 125.88232419999997 11.616 136.55806360000005 4.798 116.05860349999848 11.817 117.64139990000012 3.615 120.54526290000078 9.751 128.7609566 6.114)
Error minima by case: (0.4394 2 0.0 0 0.659 1 0.1612 1 0.0 0 0.7256 8 0.0227 7 3.9358 1 0.0 0 0.334 1 2.0 1 0.2732 1 0.0 0 3.0 1 0.3913 1 0.0 0 2.9967 8 0.0566 2 0.8404 2 4.0 1 0.0 0 0.3475 1 0.0 0 1.6841 9 0.1933 1)
Average genome size in population (length): 137.97
Average program size in population (points): 138.97
Average percent parens in population: 0.007
Minimum age in population: 243.054469843154
Maximum age in population: 247.4964850646874
Average age in population: 245.474518358033
Median age in population: 245.4949293035881
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.95
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.95
Total error diversity:				 0.622
Error (vector) diversity:			 0.699
Behavioral diversity:				 0.7
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 467834011
--- Timings ---
Current time: 1529615901041 milliseconds
Total Time:         774.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.8 seconds, 29.2%
Fitness Testing:    441.4 seconds, 57.0%
Report:             106.7 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 41592.14960000002
Test mean error for best: 20.79607
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction integer_mult} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 integer_mult float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3313.6134483
Median total errors in population: 610.8905000000001
Error averages by case: (117.07753109999966 10.122 130.95963679999969 5.121 137.45968619999996 5.033 128.3681175000005 10.166 114.20111819999991 4.305 98.69489340000116 10.526 100.55189440000093 9.767 132.0723889000002 4.307 124.903279 10.986 133.9974222000005 9.418 151.33620789999972 11.669 124.3043947999991 9.82 118.81281769999987 3.826 142.46999850000003 4.017 121.07297099999955 8.598 131.11804690000025 4.472 108.49900619999875 8.936 142.85615169999946 10.926 113.08167110000075 10.58 126.9420229999998 11.569 133.22398180000027 4.612 112.62737429999851 11.727 114.2501318000001 3.355 124.71223360000079 9.749 130.59447029999995 5.819)
Error minima by case: (0.4394 3 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 4 0.0227 3 0.0 0 0.0 0 0.0177 1 1.0 1 0.2732 2 0.0 0 0.4628 1 0.0363 1 0.0 0 7.6016 3 1.9434 2 0.9306 1 0.6615 1 0.0 0 0.3475 2 0.0 0 11.5781 3 0.0 0)
Average genome size in population (length): 138.299
Average program size in population (points): 139.299
Average percent parens in population: 0.007
Minimum age in population: 244.6183022358895
Maximum age in population: 249.1455008272319
Average age in population: 246.801345188073
Median age in population: 246.8234011998012
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.662
Error (vector) diversity:			 0.741
Behavioral diversity:				 0.741
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 471291736
--- Timings ---
Current time: 1529615905940 milliseconds
Total Time:         779.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       227.1 seconds, 29.1%
Fitness Testing:    444.3 seconds, 57.0%
Report:             107.5 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 41589.83640000002
Test mean error for best: 20.79492
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_dup_times} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max integer_div float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_dup_times tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2853.7822178
Median total errors in population: 597.5861500000001
Error averages by case: (94.3955921999994 9.924 117.10493189999976 5.174 123.60540620000005 5.056 103.07772740000046 10.196 99.41224459999992 4.602 73.2908350000012 10.33 78.8030830000009 9.603 117.94502100000022 4.444 113.547862 11.12 120.30823710000035 9.374 136.52749659999975 11.637 99.51511299999942 9.822 105.98241909999989 3.783 131.9549137000002 4.182 99.03326559999972 8.626 117.19770090000023 4.501 83.72649909999933 8.678 118.59843649999902 10.979 89.21085330000041 10.387 103.19560670000004 11.68 119.41610250000014 4.619 88.98113749999857 11.78 102.83165650000008 3.558 99.87369490000081 9.527 116.8263815 5.838)
Error minima by case: (0.4394 2 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 4 0.0227 3 0.5223 1 0.0 0 0.0177 1 0.0 0 0.2732 1 0.0 0 0.4628 1 0.3913 1 0.0 0 0.3871 3 1.0505 2 2.1596 2 1.0 1 0.0 0 0.3475 2 0.0 0 0.6841 3 0.5223 1)
Average genome size in population (length): 138.331
Average program size in population (points): 139.331
Average percent parens in population: 0.007
Minimum age in population: 246.1729921991294
Maximum age in population: 250.2312135545471
Average age in population: 248.1690560669079
Median age in population: 248.222744021394
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.647
Error (vector) diversity:			 0.731
Behavioral diversity:				 0.732
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 474750186
--- Timings ---
Current time: 1529615910872 milliseconds
Total Time:         784.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.3 seconds, 29.1%
Fitness Testing:    447.4 seconds, 57.1%
Report:             108.2 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 41593.14960000002
Test mean error for best: 20.79657
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max integer_yank float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2896.593076099999
Median total errors in population: 596.9201500000001
Error averages by case: (92.8058688999993 9.915 119.80667849999975 5.165 126.1561606 5.069 102.58065590000048 10.2 106.29794839999992 4.43 73.57570390000065 10.373 76.31908890000088 9.624 122.32050050000015 4.53 117.4569745 11.207 121.98372190000036 9.338 141.65568409999972 11.571 98.67556949999975 9.819 110.54500659999988 3.895 137.7760776000001 4.228 97.8033288999997 8.751 119.89877840000014 4.518 82.97139329999987 8.77 118.65102689999925 10.907 87.80734140000011 10.306 104.03621170000027 11.668 121.32957690000019 4.664 86.28065569999873 11.77 109.24269040000011 3.592 99.77273500000082 9.593 121.07069769999994 5.87)
Error minima by case: (0.4394 2 0.0 0 0.1322 1 0.1612 2 0.0 0 0.7256 8 0.0189 7 0.9407 1 0.0 0 0.0177 2 1.0 1 0.2521 2 0.0 0 1.0 1 0.3913 1 0.0 0 1.6523 8 2.0566 2 0.2686 1 0.6615 1 0.0 0 0.3475 1 0.0 0 0.4219 2 0.3284 1)
Average genome size in population (length): 137.957
Average program size in population (points): 138.957
Average percent parens in population: 0.007
Minimum age in population: 247.3153084592692
Maximum age in population: 251.453619889007
Average age in population: 249.5086170399488
Median age in population: 249.5624937074234
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.943
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.943
Total error diversity:				 0.648
Error (vector) diversity:			 0.725
Behavioral diversity:				 0.726
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 478199697
--- Timings ---
Current time: 1529615915768 milliseconds
Total Time:         788.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       229.5 seconds, 29.1%
Fitness Testing:    450.4 seconds, 57.1%
Report:             108.9 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 41589.83640000002
Test mean error for best: 20.79492
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max integer_div float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2844.7999039
Median total errors in population: 601.0585000000001
Error averages by case: (94.60337059999925 10.027 111.86992499999984 5.184 118.46520400000003 5.082 111.88119170000061 10.238 95.25607529999996 4.437 75.8809921000007 10.431 78.48889810000084 9.694 113.84652570000021 4.483 109.62118929999998 11.126 115.6465674000005 9.322 133.82968579999974 11.613 108.14217159999967 9.872 101.9728547999999 3.825 129.30278800000022 4.178 99.53878229999965 8.786 112.13771910000024 4.564 85.92120660000008 8.832 126.3606305999994 10.956 89.62528759999998 10.428 109.28368270000024 11.695 114.56541060000016 4.628 94.17436299999872 11.777 99.70269030000011 3.534 102.47867290000066 9.694 112.06701879999993 5.731)
Error minima by case: (0.4245 2 0.0 0 0.0 0 0.1612 1 0.0 0 0.0889 7 0.0643 8 0.6835 1 0.0 0 0.0177 1 1.0 1 0.2732 1 0.0 0 0.0 0 0.0363 1 0.0 0 0.3871 8 6.0566 2 0.3977 1 1.3385 1 0.0 0 0.3475 1 0.0 0 1.5781 9 0.1933 1)
Average genome size in population (length): 138.775
Average program size in population (points): 139.775
Average percent parens in population: 0.007
Minimum age in population: 248.6295988627132
Maximum age in population: 252.7851810575096
Average age in population: 250.763934418903
Median age in population: 250.7866185681729
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.672
Error (vector) diversity:			 0.753
Behavioral diversity:				 0.753
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 481669447
--- Timings ---
Current time: 1529615920783 milliseconds
Total Time:         793.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       230.7 seconds, 29.1%
Fitness Testing:    453.4 seconds, 57.1%
Report:             109.6 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 41567.81010000002
Test mean error for best: 20.78391
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_stackdepth} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.47792354371524} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -91.67295678500486} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_pop} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_stackdepth in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.47792354371524 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -91.67295678500486 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_pop float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_shove float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_shove float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3187.6572576000012
Median total errors in population: 612.5783500000001
Error averages by case: (102.78816649999942 9.979 133.63499129999983 5.358 140.09342409999988 5.257 117.16174730000039 10.214 116.56130739999993 4.648 83.54158260000096 10.403 85.4807740000009 9.737 133.51664970000022 4.68 127.49003199999999 10.98 137.6602156000005 9.448 152.19193959999973 11.623 112.9720232999992 9.878 121.27131499999987 4.023 146.03947040000006 4.362 109.40074879999977 8.887 134.2709931000002 4.746 93.2719389999993 8.828 129.889350799999 10.878 97.6165279000005 10.288 115.24357339999976 11.584 136.95342260000012 4.885 99.97954219999875 11.709 117.98881140000013 3.786 109.47423130000077 9.697 131.14247830000002 6.144)
Error minima by case: (0.4394 2 0.0 0 0.341 1 0.1612 1 0.0 0 0.323 4 0.0227 3 0.0666 1 0.0 0 0.334 2 1.0 1 0.1557 1 0.0 0 0.0 0 0.355 1 0.0 0 2.2226 3 3.9434 1 0.2686 1 0.0 0 0.0 0 0.3475 2 0.0 0 1.6841 3 0.1933 1)
Average genome size in population (length): 138.13
Average program size in population (points): 139.13
Average percent parens in population: 0.007
Minimum age in population: 249.9615122247589
Maximum age in population: 254.0899984976251
Average age in population: 252.0142555450842
Median age in population: 252.039254849737
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.95
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.95
Total error diversity:				 0.688
Error (vector) diversity:			 0.759
Behavioral diversity:				 0.759
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 485123511
--- Timings ---
Current time: 1529615925629 milliseconds
Total Time:         798.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       232.0 seconds, 29.0%
Fitness Testing:    456.3 seconds, 57.1%
Report:             110.4 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 41589.83640000002
Test mean error for best: 20.79492
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_dup_times} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_rot float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_dup_times tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2957.609604
Median total errors in population: 596.7149000000002
Error averages by case: (95.13079919999937 9.931 123.3647185999997 5.027 129.97184260000003 4.965 106.0438477000006 10.265 105.6699076999999 4.461 74.93283140000118 10.374 76.9165179000009 9.603 123.05098960000021 4.311 118.54247620000002 11.109 125.57427500000058 9.305 144.5712078999997 11.684 103.08513199999933 9.91 111.03375259999981 3.837 138.76688140000013 4.134 100.34258679999947 8.719 123.39933580000023 4.346 86.2337567999996 8.733 122.26054669999894 11.079 91.18332400000035 10.27 107.26724349999986 11.783 125.00375110000027 4.52 91.56007429999856 11.839 109.65432140000013 3.55 101.66616090000079 9.596 122.96532289999999 6.067)
Error minima by case: (0.4394 2 0.0 0 2.0 1 0.1612 2 0.0 0 2.0889 7 1.0227 7 0.376 1 1.0 1 0.334 1 4.0 1 0.2732 2 0.0 0 0.0 0 0.0363 1 0.0 0 0.218 8 1.0505 2 0.1596 1 0.3001 2 0.0 0 0.1202 1 0.0 0 2.4579 9 1.1933 1)
Average genome size in population (length): 137.674
Average program size in population (points): 138.674
Average percent parens in population: 0.007
Minimum age in population: 251.1582999385859
Maximum age in population: 255.2731326709813
Average age in population: 253.3113703581019
Median age in population: 253.3547029869249
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.931
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.931
Total error diversity:				 0.672
Error (vector) diversity:			 0.746
Behavioral diversity:				 0.746
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 488565886
--- Timings ---
Current time: 1529615930507 milliseconds
Total Time:         803.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       233.2 seconds, 29.0%
Fitness Testing:    459.2 seconds, 57.1%
Report:             111.1 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 41589.83640000002
Test mean error for best: 20.79492
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_swap} {:instruction float_add} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod integer_swap float_add in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max integer_div float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2703.759936999999
Median total errors in population: 593.7404
Error averages by case: (82.0956435999994 9.857 114.46869519999983 5.055 121.19579540000007 4.959 93.76086780000058 10.062 100.12700299999999 4.561 65.03925130000117 10.292 73.77564100000087 9.585 113.36976080000021 4.375 109.22208219999997 11.138 116.70510360000063 9.256 134.04948039999968 11.629 89.64699009999985 9.66 101.46799909999989 3.746 133.49719410000026 4.162 86.13504519999975 8.681 114.36800980000027 4.389 73.09922929999975 8.637 109.74175889999916 10.836 77.94527550000002 10.204 94.24192340000032 11.552 116.01850970000021 4.505 79.2942467999986 11.727 103.4666418000001 3.551 89.7247023000007 9.517 113.55808669999993 5.809)
Error minima by case: (0.4394 2 0.0 0 0.341 1 0.1612 2 0.0 0 0.2744 7 0.0643 8 0.2097 1 0.0 0 0.334 1 1.0 1 0.2732 1 0.0 0 1.5372 1 0.2387 1 0.0 0 0.7032 8 8.0566 2 2.1596 1 1.6615 1 0.0 0 0.3298 2 0.0 0 0.3159 9 1.1933 1)
Average genome size in population (length): 137.737
Average program size in population (points): 138.737
Average percent parens in population: 0.007
Minimum age in population: 252.5138919786987
Maximum age in population: 256.4112020597539
Average age in population: 254.5327965046062
Median age in population: 254.5998901396933
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.945
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.945
Total error diversity:				 0.651
Error (vector) diversity:			 0.734
Behavioral diversity:				 0.735
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 492009723
--- Timings ---
Current time: 1529615935378 milliseconds
Total Time:         808.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.4 seconds, 29.0%
Fitness Testing:    462.2 seconds, 57.2%
Report:             111.7 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 41573.14410000002
Test mean error for best: 20.78657
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_pop} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec integer_min float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_pop float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_shove float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_shove float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_max float_dec float_dec float_yank float_dec float_dec float_max float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2906.1988896000003
Median total errors in population: 600.7245
Error averages by case: (93.63458879999925 10.004 118.23329409999982 5.174 124.82647500000006 5.086 108.49489950000086 10.271 101.25287530000001 4.504 75.97175740000102 10.446 80.72359440000096 9.683 118.73451710000012 4.306 114.47486969999999 11.138 121.4081283000007 9.322 139.1775883999998 11.646 104.38662499999985 9.9 106.89858170000002 3.781 133.39093140000008 4.154 100.41535069999968 8.766 118.17565470000028 4.485 85.30974400000005 8.796 124.09223409999909 11.121 90.02444589999966 10.46 108.00924390000013 11.752 120.3760396000001 4.631 93.5270183999984 11.814 104.08403050000008 3.478 101.99895040000075 9.645 118.4364513 5.778)
Error minima by case: (0.4245 3 0.0 0 1.659 1 0.1612 1 0.0 0 1.0889 4 0.0227 8 1.9358 1 0.0 0 0.334 2 0.0914 1 0.2732 1 0.0 0 1.0 1 0.355 1 0.0 0 5.3612 3 8.0566 2 1.1596 2 0.0 0 0.0 0 0.3298 1 0.0 0 0.6841 3 0.1933 1)
Average genome size in population (length): 138.056
Average program size in population (points): 139.056
Average percent parens in population: 0.007
Minimum age in population: 253.5138919786987
Maximum age in population: 257.8903173180944
Average age in population: 255.795951111298
Median age in population: 255.8453131107969
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.933
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.933
Total error diversity:				 0.655
Error (vector) diversity:			 0.727
Behavioral diversity:				 0.728
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 495461735
--- Timings ---
Current time: 1529615940252 milliseconds
Total Time:         813.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       235.6 seconds, 29.0%
Fitness Testing:    465.2 seconds, 57.2%
Report:             112.5 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 41562.76750000002
Test mean error for best: 20.78138
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_pop} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec integer_min float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_pop float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_shove float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_shove float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2810.3090171999997
Median total errors in population: 585.8352000000001
Error averages by case: (93.81080579999941 10.005 112.99578019999976 4.897 119.84376920000003 4.699 103.03275660000058 10.286 97.51817509999995 4.486 76.47718880000095 10.449 79.70411400000079 9.65 111.95598150000016 4.194 108.48712419999997 11.321 113.20421780000055 9.183 134.73180269999975 11.626 99.99745459999951 9.877 100.66940019999991 3.589 130.29996940000018 4.007 98.57338319999967 8.871 111.31915840000016 4.115 85.644142 8.784 121.64124999999915 11.109 89.70317149999993 10.377 105.62873939999994 11.764 112.48789620000014 4.245 90.64455989999868 11.879 99.59083980000003 3.283 102.62915950000075 9.67 112.04917719999995 5.303)
Error minima by case: (0.1163 2 1.0 1 0.659 1 0.1612 2 0.0 0 0.2744 8 0.0643 8 0.0642 1 0.0 0 0.334 1 0.0 0 0.2732 2 0.0 0 5.7712 1 0.3913 1 0.0 0 0.6016 8 8.0566 2 1.7314 1 0.2358 1 0.0 0 0.3475 2 0.0 0 0.6841 2 0.1933 1)
Average genome size in population (length): 138.445
Average program size in population (points): 139.445
Average percent parens in population: 0.007
Minimum age in population: 254.5138919786987
Maximum age in population: 259.1302304015927
Average age in population: 257.013353036601
Median age in population: 257.0340505864896
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.931
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.931
Total error diversity:				 0.627
Error (vector) diversity:			 0.702
Behavioral diversity:				 0.703
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 498923282
--- Timings ---
Current time: 1529615945171 milliseconds
Total Time:         818.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       236.9 seconds, 29.0%
Fitness Testing:    468.1 seconds, 57.2%
Report:             113.1 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 41567.81010000002
Test mean error for best: 20.78391
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_stackdepth} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.47792354371524} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -91.80925148732683} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_pop} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_stackdepth in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.47792354371524 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -91.80925148732683 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_swap float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_pop float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_shove float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_shove float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2648.203659500001
Median total errors in population: 591.47225
Error averages by case: (91.91654089999939 9.889 100.89160699999981 5.004 107.54063820000005 4.849 102.87766820000063 10.174 84.06637369999999 4.404 75.64257460000104 10.381 80.38540390000098 9.618 100.99057460000012 4.235 97.01776229999997 11.139 103.86151170000053 9.133 122.96373219999981 11.53 98.79262069999972 9.758 89.23095709999994 3.635 118.53442590000013 4.0 98.19336919999964 8.662 100.82685130000021 4.268 84.17335759999986 8.7 117.95591639999935 10.958 89.13827670000006 10.356 104.72843680000022 11.685 102.95141080000009 4.38 89.57322599999866 11.817 88.0671864000001 3.326 101.02058560000081 9.585 99.69265169999998 5.684)
Error minima by case: (0.4394 2 0.0 0 0.0 0 0.1612 2 0.0 0 0.7256 3 1.0227 2 0.0642 1 0.0 0 0.334 1 3.0 1 0.2732 1 0.0 0 1.0 1 0.3913 1 0.0 0 5.2968 2 0.9495 2 0.9178 2 0.0 0 0.0 0 0.3475 1 0.0 0 1.3159 3 1.1933 1)
Average genome size in population (length): 138.169
Average program size in population (points): 139.169
Average percent parens in population: 0.007
Minimum age in population: 255.801592297411
Maximum age in population: 260.8179740006833
Average age in population: 258.3483272408681
Median age in population: 258.401641086029
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.93
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.93
Total error diversity:				 0.645
Error (vector) diversity:			 0.717
Behavioral diversity:				 0.718
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 502378007
--- Timings ---
Current time: 1529615950155 milliseconds
Total Time:         823.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       238.1 seconds, 28.9%
Fitness Testing:    471.2 seconds, 57.2%
Report:             113.8 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 41559.767500000016
Test mean error for best: 20.77988
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max integer_div float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec integer_div float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_dup_items float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_shove float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2412.735114199999
Median total errors in population: 584.4697500000001
Error averages by case: (77.97579149999912 9.829 96.05641079999988 4.689 103.0580965 4.567 91.32610820000068 10.104 79.20172320000003 4.278 59.237946700000954 10.295 63.502463100000845 9.532 96.50967140000007 3.959 91.66002029999993 11.228 96.78445950000074 8.969 118.85555759999984 11.569 87.31377439999991 9.67 83.68599619999998 3.424 114.31944550000013 3.863 83.98502769999956 8.739 95.39035340000018 3.884 68.32503950000101 8.6 107.94038019999927 10.858 73.5882721999991 10.236 93.14610300000032 11.556 96.0446214 4.018 75.72238889999856 11.667 83.68877030000007 3.115 85.76922230000076 9.494 96.16647039999998 5.338)
Error minima by case: (0.1311 2 0.0 0 1.6032 1 0.1612 2 0.0 0 1.4521 8 1.0227 8 0.2846 1 0.0 0 0.2195 1 1.0 1 0.2732 2 0.0 0 1.0 1 0.0363 1 0.0 0 2.2968 8 2.0566 2 0.7314 2 0.4918 1 0.0 0 0.3475 2 0.0 0 1.6841 9 1.127 1)
Average genome size in population (length): 138.091
Average program size in population (points): 139.091
Average percent parens in population: 0.007
Minimum age in population: 257.2204530968855
Maximum age in population: 261.5197511578384
Average age in population: 259.5608751258704
Median age in population: 259.559055528426
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.935
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.935
Total error diversity:				 0.597
Error (vector) diversity:			 0.689
Behavioral diversity:				 0.69
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 505830706
--- Timings ---
Current time: 1529615955034 milliseconds
Total Time:         828.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       239.4 seconds, 28.9%
Fitness Testing:    474.2 seconds, 57.3%
Report:             114.5 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 41568.81010000002
Test mean error for best: 20.78441
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_stackdepth} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.47792354371524} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -91.80925148732683} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_pop} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_dup} {:instruction float_shove} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_stackdepth in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.47792354371524 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -91.80925148732683 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_pop float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_shove float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec integer_dup float_shove float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2888.4586956000003
Median total errors in population: 580.06495
Error averages by case: (86.64275129999912 9.867 120.8893947999998 4.939 127.62832780000004 4.754 104.34672500000053 10.179 108.59198759999994 4.284 70.14230930000117 10.339 73.27951020000096 9.625 122.96557450000014 4.151 119.68129340000003 11.191 121.62937560000083 9.138 144.55386519999976 11.619 100.15728209999966 9.765 111.8844781999999 3.697 141.12578910000013 4.026 94.02951029999963 9.012 120.35928300000018 4.168 78.16235360000042 8.659 118.36726409999925 10.96 82.55925859999967 10.26 105.3303061 11.695 120.98487610000019 4.263 87.43318659999854 11.83 111.36159400000007 3.284 95.53204220000084 9.567 124.10335690000001 5.445)
Error minima by case: (0.4394 2 0.0 0 1.0 1 0.1612 2 0.0 0 0.0889 8 0.0643 8 0.1372 1 1.0 1 0.334 2 0.0 0 0.2732 1 0.0 0 2.0 1 0.3913 1 0.0 0 5.2968 8 8.0566 2 0.1596 1 0.4352 2 0.0 0 0.3475 1 0.0 0 4.6841 9 0.1933 1)
Average genome size in population (length): 138.324
Average program size in population (points): 139.324
Average percent parens in population: 0.007
Minimum age in population: 258.8483580792617
Maximum age in population: 263.0611267379403
Average age in population: 260.902081203109
Median age in population: 260.9091063803075
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.939
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.939
Total error diversity:				 0.593
Error (vector) diversity:			 0.666
Behavioral diversity:				 0.667
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 509289218
--- Timings ---
Current time: 1529615959999 milliseconds
Total Time:         833.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       240.6 seconds, 28.9%
Fitness Testing:    477.1 seconds, 57.3%
Report:             115.2 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 41580.76750000002
Test mean error for best: 20.79038
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction print_integer} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_dup_times} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_rot float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec integer_min float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max print_integer float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_dup_times tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3071.1567527000007
Median total errors in population: 596.2245
Error averages by case: (99.94679249999948 10.068 124.86300089999989 5.092 131.3043543 4.975 112.38691690000061 10.256 111.4864107 4.468 82.28137830000115 10.489 88.2800339000009 9.716 126.52025090000018 4.444 121.75804999999995 11.051 126.89229180000083 9.211 148.4929757999998 11.637 108.397050699999 9.849 114.81750649999994 3.904 143.72344750000005 4.127 103.89384079999954 8.794 124.81072400000016 4.359 90.82454699999911 8.848 128.47702169999886 10.994 95.8755065000006 10.456 117.23267189999953 11.683 126.28181050000012 4.551 98.08091729999842 11.743 113.02507400000003 3.434 106.8274017000008 9.706 125.09677659999998 5.725)
Error minima by case: (0.4394 2 0.0 0 0.0 0 0.1612 1 0.0 0 9.0E-4 6 0.0227 8 0.9359 1 0.0 0 0.334 2 2.0 1 0.2732 1 0.0 0 0.0 0 0.3913 1 0.0 0 2.234 8 6.0566 2 0.887 2 0.3385 2 0.0 0 0.3475 1 0.0 0 0.5393 8 0.0609 1)
Average genome size in population (length): 138.3
Average program size in population (points): 139.3
Average percent parens in population: 0.007
Minimum age in population: 259.8483580792617
Maximum age in population: 264.0068262261238
Average age in population: 262.1141638256518
Median age in population: 262.1491618599104
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.939
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.939
Total error diversity:				 0.614
Error (vector) diversity:			 0.677
Behavioral diversity:				 0.678
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 512747318
--- Timings ---
Current time: 1529615964926 milliseconds
Total Time:         838.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       241.9 seconds, 28.9%
Fitness Testing:    480.1 seconds, 57.3%
Report:             116.0 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 41567.81010000002
Test mean error for best: 20.78391
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_stackdepth} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.47792354371524} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -91.80925148732683} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_pop} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_stackdepth in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.47792354371524 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_rot float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -91.80925148732683 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_pop float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_shove float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_shove float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3200.8969932000005
Median total errors in population: 592.0585000000001
Error averages by case: (108.26076019999927 9.981 130.72530889999987 5.167 137.1394089 5.017 116.49128280000048 10.219 115.17090949999996 4.577 89.42334110000093 10.443 93.9735685000009 9.722 132.12444270000023 4.543 126.99790909999999 11.189 132.55648450000078 9.225 150.09252879999977 11.608 112.30079149999928 9.817 120.69242449999994 4.0 143.77514140000002 4.34 110.4946630999996 8.972 130.49091880000014 4.423 100.81729719999939 8.816 131.0543058999992 11.026 105.46551610000064 10.405 114.7478888 11.604 131.99874990000015 4.596 102.88846139999863 11.701 115.6456795000001 3.674 115.98269400000082 9.674 131.00351609999998 5.844)
Error minima by case: (0.4245 2 0.0 0 0.0 0 0.1612 1 0.0 0 1.0889 7 0.0643 9 1.2255 1 0.0 0 0.334 2 1.0914 1 0.2732 2 0.0 0 1.0 1 0.1954 1 0.0 0 2.8456 8 10.0505 2 2.1392 1 0.4526 1 0.0 0 0.3475 1 0.0 0 4.3159 8 0.7274 1)
Average genome size in population (length): 138.233
Average program size in population (points): 139.233
Average percent parens in population: 0.007
Minimum age in population: 261.4575885280651
Maximum age in population: 265.4715135161844
Average age in population: 263.449186473508
Median age in population: 263.5537778331158
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.943
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.943
Total error diversity:				 0.595
Error (vector) diversity:			 0.65
Behavioral diversity:				 0.651
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 516203480
--- Timings ---
Current time: 1529615969820 milliseconds
Total Time:         843.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       243.1 seconds, 28.8%
Fitness Testing:    483.1 seconds, 57.3%
Report:             116.7 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 41601.12310000002
Test mean error for best: 20.80056
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_dup_times} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max integer_div float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup float_dec float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_dup_times tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3034.828392
Median total errors in population: 596.7747
Error averages by case: (99.1960367999992 9.957 124.35933449999983 5.03 131.0199897 4.93 111.49822390000057 10.244 109.09310279999998 4.441 80.15004240000086 10.44 84.74640460000082 9.722 126.13199100000018 4.234 122.63387119999999 11.31 126.18009300000072 9.204 146.84536829999982 11.607 107.40135419999973 9.841 114.95528359999997 3.719 139.4307592000001 4.024 103.00158409999968 8.713 123.80017550000015 4.241 91.43693059999993 8.798 127.90398889999913 11.019 95.25016950000006 10.378 109.3309460000001 11.655 125.1662946000002 4.461 95.38119229999872 11.736 110.28793770000007 3.325 105.83786330000072 9.648 125.58745429999996 5.525)
Error minima by case: (0.4394 2 0.0 0 3.6093 1 0.1612 1 0.0 0 0.4787 8 0.0227 8 0.2617 1 0.0 0 0.334 2 3.0 1 0.2732 2 0.0 0 0.0 0 0.0 0 0.0 0 1.2323 8 10.0566 2 2.1596 2 0.3385 1 0.0 0 0.3475 1 0.0 0 4.4219 8 1.8067 1)
Average genome size in population (length): 138.188
Average program size in population (points): 139.188
Average percent parens in population: 0.007
Minimum age in population: 262.4881156309122
Maximum age in population: 266.7285731538952
Average age in population: 264.6887735678193
Median age in population: 264.7480405502556
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.604
Error (vector) diversity:			 0.663
Behavioral diversity:				 0.663
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 519658755
--- Timings ---
Current time: 1529615974697 milliseconds
Total Time:         847.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.3 seconds, 28.8%
Fitness Testing:    486.0 seconds, 57.3%
Report:             117.4 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 41497.24300000002
Test mean error for best: 20.74862
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_pop} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction print_integer} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_604} {:instruction float_dec} {:instruction tagged_842} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos in2 in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_max float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_max float_dec float_dec float_max float_dup_times float_dec float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_pop float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup print_integer float_max float_dec float_dec integer_mult float_dec float_dec tagged_604 float_dec tagged_842 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_shove float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2774.192854799999
Median total errors in population: 594.8648500000002
Error averages by case: (84.42754399999932 9.903 115.95667389999983 5.013 123.6909258 4.816 101.64384430000048 10.226 99.20095559999992 4.461 66.28792150000075 10.404 70.35115280000086 9.635 117.5254015000001 4.247 112.43721499999998 11.088 117.50198000000064 9.153 140.39442079999978 11.673 97.3070116999999 9.825 105.99173789999989 3.783 131.89918330000015 4.031 90.39816249999973 8.821 116.39896070000016 4.198 76.70078540000023 8.718 115.2762945999994 11.0 81.97201639999965 10.362 100.26857730000047 11.664 117.57768620000012 4.302 82.26287089999876 11.713 101.72417900000006 3.336 92.61025600000079 9.581 116.93109769999995 5.503)
Error minima by case: (0.4394 2 0.0 0 0.0 0 0.1612 1 0.0 0 1.4521 8 0.0227 7 1.5828 1 0.0 0 0.334 2 0.9678 1 0.0 0 0.0 0 0.5372 1 0.355 1 0.0 0 3.2968 8 7.0566 2 0.1596 2 0.0 0 0.0 0 0.3475 1 0.0 0 0.6841 8 0.2739 1)
Average genome size in population (length): 137.774
Average program size in population (points): 138.774
Average percent parens in population: 0.007
Minimum age in population: 263.4881156309122
Maximum age in population: 267.6846526855644
Average age in population: 265.893522622788
Median age in population: 265.9329765211859
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.944
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.944
Total error diversity:				 0.626
Error (vector) diversity:			 0.686
Behavioral diversity:				 0.686
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 523103667
--- Timings ---
Current time: 1529615979572 milliseconds
Total Time:         852.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       245.6 seconds, 28.8%
Fitness Testing:    489.0 seconds, 57.3%
Report:             118.0 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 41600.373000000014
Test mean error for best: 20.80019
;;------------------------------
Outputs of best individual on training cases:
Correct output: 47.8985805159  | Program output: 40.3379677515 
Correct output: -89.0730770721 | Program output: -101.0730770721
Correct output: -91.3409907826 | Program output: -112.3409907826
Correct output: 151.161161036  | Program output: 153.3223220721
Correct output: 0.005061137    | Program output: 0.005061137   
Correct output: 2.7256015537   | Program output: 0.6367380071  
Correct output: 8.9356530487   | Program output: 0.9129452507  
Correct output: -35.9357757377 | Program output: -15.9357757377
Correct output: 8.8462429043   | Program output: -7.1537570957 
Correct output: -139.3737677014 | Program output: -139.0397674551
Correct output: 15.9086340651  | Program output: -35.0913659349
Correct output: 133.2732407891 | Program output: 133.5464815783
Correct output: -3.075170532   | Program output: -10.075170532 
Correct output: 69.5371683437  | Program output: 30.5371683437 
Correct output: 61.0363157976  | Program output: 61.6449930571 
Correct output: -98.9344588134 | Program output: -91.9344588134
Correct output: 10.2968110209  | Program output: -0.3048106211 
Correct output: 121.0565638189 | Program output: 157.1131276379
Correct output: -18.1596322192 | Program output: -0.4281826695 
Correct output: 89.1692271714  | Program output: 65.3384543427 
Correct output: -132.6928280664 | Program output: -131.6928280664
Correct output: 63.3475368658  | Program output: 57.6950737316 
Correct output: 26.2227587776  | Program output: 26.2227587776 
Correct output: 30.3158869706  | Program output: 0.8939966636  
Correct output: -23.1932775279 | Program output: -3.1932775279 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_rot} {:instruction float_cos} {:instruction float_dup} {:instruction in2} {:instruction in2} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction in1} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.94415431172159} {:instruction float_max} {:instruction float_max} {:instruction integer_inc} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction -92.0397674550659} {:instruction -92.0397674550659} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_max} {:instruction float_dup} {:instruction integer_max} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tagged_901} {:instruction float_dup} {:instruction float_rot} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction float_max} {:instruction integer_add} {:instruction print_float} {:instruction float_stackdepth} {:instruction tagged_408})
Best program: (float_mod float_rot float_cos float_dup in2 in2 float_frominteger integer_min float_sin float_dup_times in1 float_stackdepth float_dec float_dec float_dec -92.94415431172159 float_max float_max integer_inc float_max float_max float_dec float_rot float_dec float_dec float_dec float_dec float_dec -92.0397674550659 float_max float_dec float_dec float_dec -92.0397674550659 float_max float_max float_rot float_dec float_dec float_dec float_dec -92.0397674550659 -92.0397674550659 float_max float_max float_max float_max float_max float_dec float_rot float_dec float_max float_max float_dec float_dec float_dec float_dec float_dec float_max float_dup_times float_rot float_max float_dec float_dec float_max float_dec float_dec float_dec float_dec float_sub float_dec float_dec float_rot float_dec float_sub integer_stackdepth float_yank float_dec float_max float_dec float_dec float_dec float_div float_max float_dup integer_max float_max float_dec float_dec integer_mult float_dec float_dec float_max float_dec tagged_901 float_dup float_rot float_max float_dec float_dec float_max float_dec float_dec integer_min float_dec float_dec float_frominteger float_dec float_dec float_max float_dup_times float_dec float_dec float_dec float_dec float_dec float_max float_dec float_dec float_yank float_dec float_dec float_max float_dup_times float_dec float_dup_times float_dec float_dec float_dec float_dec float_add float_max integer_add print_float float_stackdepth tagged_408)
Errors: [7.5606 9 12.0 3 21.0 2 2.1612 10 0.0 0 2.0889 10 8.0227 9 20.0 1 16.0 12 0.334 7 51.0 11 0.2732 9 7.0 2 39.0 2 0.6087 9 7.0 1 10.6016 8 36.0566 11 17.7314 10 23.8308 12 1.0 1 5.6525 12 0.0 0 29.4219 9 20.0 1]
Total: 499.3441
Mean: 9.986882
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2695.1424528999996
Median total errors in population: 590.5563000000001
Error averages by case: (90.10185869999943 9.964 104.77321779999986 5.027 111.46234490000002 4.808 104.33751510000045 10.198 91.18489179999997 4.325 73.96139410000103 10.413 75.6855300000008 9.634 106.13386580000007 4.16 101.75825579999997 11.041 106.79639050000074 9.05 128.6820199999998 11.539 100.38063429999913 9.744 94.20226039999997 3.645 122.4411128000001 3.915 94.49267739999968 8.685 104.12372800000016 4.219 82.37818439999981 8.799 120.82272329999904 10.942 87.10064570000033 10.42 104.7337299999998 11.666 105.9397815000002 4.335 90.01398449999874 11.745 92.46173210000008 3.224 99.4755502000007 9.632 105.07542380000001 5.493)
Error minima by case: (0.4245 8 0.0 0 1.0 1 0.1612 2 0.0 0 1.4521 8 0.0227 8 1.0669 1 0.0 0 0.334 2 0.0 0 0.2732 1 0.0 0 1.0 1 0.3913 1 0.0 0 5.2968 8 2.0566 2 0.1596 1 0.3385 1 0.0 0 0.3475 1 0.0 0 3.995 8 0.1836 1)
Average genome size in population (length): 138.471
Average program size in population (points): 139.471
Average percent parens in population: 0.007
Minimum age in population: 265.1408620675058
Maximum age in population: 269.0702436479785
Average age in population: 267.1488095849695
Median age in population: 267.1664606753234
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.925
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.925
Total error diversity:				 0.593
Error (vector) diversity:			 0.649
Behavioral diversity:				 0.65
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 526566040
--- Timings ---
Current time: 1529615984582 milliseconds
Total Time:         857.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.7 seconds, 28.8%
Fitness Testing:    492.1 seconds, 57.4%
Report:             118.7 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
