Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-93.86528451365004 -58] -151.86528451365004]
Train Case:   1 | Input/Output: [[79.73139325229383 35] 114.73139325229383]
Train Case:   2 | Input/Output: [[-52.244564079035925 67] 14.755435920964075]
Train Case:   3 | Input/Output: [[81.35833379186238 -60] 21.35833379186238]
Train Case:   4 | Input/Output: [[76.81454087423546 0] 76.81454087423546]
Train Case:   5 | Input/Output: [[-67.0111889010617 70] 2.9888110989382994]
Train Case:   6 | Input/Output: [[12.864280297014503 -63] -50.1357197029855]
Train Case:   7 | Input/Output: [[22.564621262218694 56] 78.5646212622187]
Train Case:   8 | Input/Output: [[-8.280997365845778 75] 66.71900263415422]
Train Case:   9 | Input/Output: [[47.7358427867033 -38] 9.735842786703301]
Train Case:  10 | Input/Output: [[64.77936306471878 -42] 22.77936306471878]
Train Case:  11 | Input/Output: [[45.45852515974036 -89] -43.54147484025964]
Train Case:  12 | Input/Output: [[76.00990576267844 80] 156.00990576267844]
Train Case:  13 | Input/Output: [[-51.668948534902626 3] -48.668948534902626]
Train Case:  14 | Input/Output: [[61.06326244210791 24] 85.06326244210791]
Train Case:  15 | Input/Output: [[79.73799740701506 92] 171.73799740701506]
Train Case:  16 | Input/Output: [[22.35560398380332 22] 44.35560398380332]
Train Case:  17 | Input/Output: [[-82.95429656081586 42] -40.95429656081586]
Train Case:  18 | Input/Output: [[-80.64971776533801 52] -28.64971776533801]
Train Case:  19 | Input/Output: [[20.722800846941155 -38] -17.277199153058845]
Train Case:  20 | Input/Output: [[44.16589106469405 49] 93.16589106469405]
Train Case:  21 | Input/Output: [[-22.355001824534625 35] 12.644998175465375]
Train Case:  22 | Input/Output: [[-49.97482587081781 87] 37.02517412918219]
Train Case:  23 | Input/Output: [[52.06822772590817 -76] -23.931772274091827]
Train Case:  24 | Input/Output: [[-70.12825639580909 36] -34.12825639580909]
Test Case:   0 | Input/Output: [[97.18804831767497 -67] 30.18804831767497]
Test Case:   1 | Input/Output: [[-50.082680799148946 26] -24.082680799148946]
Test Case:   2 | Input/Output: [[14.580033841730582 -52] -37.41996615826942]
Test Case:   3 | Input/Output: [[-41.62150146162982 71] 29.37849853837018]
Test Case:   4 | Input/Output: [[2.9785027143011575 -73] -70.02149728569884]
Test Case:   5 | Input/Output: [[67.13282024908486 57] 124.13282024908486]
Test Case:   6 | Input/Output: [[-59.18638808731804 -36] -95.18638808731805]
Test Case:   7 | Input/Output: [[-91.38383886330172 11] -80.38383886330172]
Test Case:   8 | Input/Output: [[-43.248548268818524 -74] -117.24854826881852]
Test Case:   9 | Input/Output: [[-1.6958889966063566 -87] -88.69588899660636]
Test Case:  10 | Input/Output: [[67.22255187212863 64] 131.22255187212863]
Test Case:  11 | Input/Output: [[-74.84868487120019 -46] -120.84868487120019]
Test Case:  12 | Input/Output: [[50.32085679409866 -99] -48.67914320590134]
Test Case:  13 | Input/Output: [[-51.14300804187468 48] -3.1430080418746797]
Test Case:  14 | Input/Output: [[4.854877708188795 -42] -37.145122291811205]
Test Case:  15 | Input/Output: [[91.39521935084844 -83] 8.395219350848436]
Test Case:  16 | Input/Output: [[-25.10127366884747 -50] -75.10127366884747]
Test Case:  17 | Input/Output: [[48.83674242020416 15] 63.83674242020416]
Test Case:  18 | Input/Output: [[99.42331488306175 98] 197.42331488306175]
Test Case:  19 | Input/Output: [[14.050060586824983 -54] -39.94993941317502]
Test Case:  20 | Input/Output: [[88.31886865550825 -20] 68.31886865550825]
Test Case:  21 | Input/Output: [[57.21838147164675 -84] -26.78161852835325]
Test Case:  22 | Input/Output: [[-99.57651025207916 -20] -119.57651025207916]
Test Case:  23 | Input/Output: [[-55.234629029368755 -6] -61.234629029368755]
Test Case:  24 | Input/Output: [[96.1771456101477 -87] 9.177145610147704]
Test Case:  25 | Input/Output: [[-24.505350867158754 -78] -102.50535086715875]
Test Case:  26 | Input/Output: [[-97.40725187588413 93] -4.407251875884128]
Test Case:  27 | Input/Output: [[-86.79721565513687 89] 2.202784344863133]
Test Case:  28 | Input/Output: [[-73.92417616373501 76] 2.0758238362649877]
Test Case:  29 | Input/Output: [[55.09792410756759 -72] -16.902075892432407]
Test Case:  30 | Input/Output: [[42.39991187587282 -50] -7.600088124127183]
Test Case:  31 | Input/Output: [[-85.83140789008065 51] -34.831407890080655]
Test Case:  32 | Input/Output: [[0.7067681995192316 56] 56.70676819951923]
Test Case:  33 | Input/Output: [[-73.92220181062059 99] 25.077798189379408]
Test Case:  34 | Input/Output: [[-95.60799342615125 -17] -112.60799342615125]
Test Case:  35 | Input/Output: [[-9.549801169041785 -8] -17.549801169041785]
Test Case:  36 | Input/Output: [[8.92506910207895 86] 94.92506910207895]
Test Case:  37 | Input/Output: [[-73.06807831125002 63] -10.06807831125002]
Test Case:  38 | Input/Output: [[-28.334139077965844 -28] -56.334139077965844]
Test Case:  39 | Input/Output: [[91.97559495424343 -62] 29.975594954243434]
Test Case:  40 | Input/Output: [[-41.91181574990892 -75] -116.91181574990892]
Test Case:  41 | Input/Output: [[-99.09069865376199 5] -94.09069865376199]
Test Case:  42 | Input/Output: [[-0.7907726276384324 93] 92.20922737236157]
Test Case:  43 | Input/Output: [[70.52085243318734 33] 103.52085243318734]
Test Case:  44 | Input/Output: [[10.564794123097784 -26] -15.435205876902216]
Test Case:  45 | Input/Output: [[-68.54333397962967 -66] -134.54333397962967]
Test Case:  46 | Input/Output: [[74.89611792290464 36] 110.89611792290464]
Test Case:  47 | Input/Output: [[-95.58039069854564 32] -63.58039069854564]
Test Case:  48 | Input/Output: [[8.433964255407517 -20] -11.566035744592483]
Test Case:  49 | Input/Output: [[-7.624493556680406 -51] -58.624493556680406]
Test Case:  50 | Input/Output: [[29.71768550404238 87] 116.71768550404238]
Test Case:  51 | Input/Output: [[55.02585439304568 -57] -1.9741456069543233]
Test Case:  52 | Input/Output: [[24.73054886010513 -79] -54.26945113989487]
Test Case:  53 | Input/Output: [[96.18548038530494 59] 155.18548038530494]
Test Case:  54 | Input/Output: [[79.21529791959367 7] 86.21529791959367]
Test Case:  55 | Input/Output: [[54.85848964479615 -75] -20.14151035520385]
Test Case:  56 | Input/Output: [[4.948636844043605 -42] -37.051363155956395]
Test Case:  57 | Input/Output: [[-78.6831368863432 49] -29.683136886343206]
Test Case:  58 | Input/Output: [[30.704851033093036 90] 120.70485103309304]
Test Case:  59 | Input/Output: [[30.73953670104345 81] 111.73953670104345]
Test Case:  60 | Input/Output: [[84.23902734482874 85] 169.23902734482874]
Test Case:  61 | Input/Output: [[51.70340263090122 -90] -38.29659736909878]
Test Case:  62 | Input/Output: [[-24.935539984196225 -56] -80.93553998419623]
Test Case:  63 | Input/Output: [[79.12026583927175 -77] 2.1202658392717524]
Test Case:  64 | Input/Output: [[-21.724234437651987 -93] -114.72423443765199]
Test Case:  65 | Input/Output: [[-97.35287471003889 -11] -108.35287471003889]
Test Case:  66 | Input/Output: [[22.124276804387065 -14] 8.124276804387065]
Test Case:  67 | Input/Output: [[49.487486739116264 -7] 42.487486739116264]
Test Case:  68 | Input/Output: [[-28.416432266862017 2] -26.416432266862017]
Test Case:  69 | Input/Output: [[-4.622501271758921 21] 16.37749872824108]
Test Case:  70 | Input/Output: [[40.761446790184976 -12] 28.761446790184976]
Test Case:  71 | Input/Output: [[-95.97674849069118 -55] -150.9767484906912]
Test Case:  72 | Input/Output: [[-66.32309827657201 36] -30.32309827657201]
Test Case:  73 | Input/Output: [[36.92628864485178 -6] 30.92628864485178]
Test Case:  74 | Input/Output: [[93.73470263861574 18] 111.73470263861574]
Test Case:  75 | Input/Output: [[-31.199500462477616 -39] -70.19950046247762]
Test Case:  76 | Input/Output: [[10.385047940418218 90] 100.38504794041822]
Test Case:  77 | Input/Output: [[-81.12274792350064 -63] -144.12274792350064]
Test Case:  78 | Input/Output: [[-34.71633251381118 44] 9.283667486188818]
Test Case:  79 | Input/Output: [[-74.13478101193911 -40] -114.13478101193911]
Test Case:  80 | Input/Output: [[-69.36977830544717 75] 5.63022169455283]
Test Case:  81 | Input/Output: [[57.35832158346125 98] 155.35832158346125]
Test Case:  82 | Input/Output: [[-40.48116231150283 -100] -140.48116231150283]
Test Case:  83 | Input/Output: [[5.426335744989743 79] 84.42633574498974]
Test Case:  84 | Input/Output: [[35.56351199350962 -28] 7.563511993509621]
Test Case:  85 | Input/Output: [[-58.066719031048294 85] 26.933280968951706]
Test Case:  86 | Input/Output: [[6.722956610622518 93] 99.72295661062252]
Test Case:  87 | Input/Output: [[61.63668603050587 -38] 23.63668603050587]
Test Case:  88 | Input/Output: [[66.35757329115032 -58] 8.357573291150317]
Test Case:  89 | Input/Output: [[95.856556793376 60] 155.856556793376]
Test Case:  90 | Input/Output: [[-36.57653001592522 -72] -108.57653001592521]
Test Case:  91 | Input/Output: [[37.87765401905031 61] 98.87765401905031]
Test Case:  92 | Input/Output: [[31.878220537419764 -79] -47.121779462580236]
Test Case:  93 | Input/Output: [[-59.10025749128695 -96] -155.10025749128695]
Test Case:  94 | Input/Output: [[-23.995078291795963 -23] -46.99507829179596]
Test Case:  95 | Input/Output: [[-69.9881852781347 100] 30.011814721865306]
Test Case:  96 | Input/Output: [[-42.615597661092686 94] 51.384402338907314]
Test Case:  97 | Input/Output: [[2.7033087797901487 -29] -26.29669122020985]
Test Case:  98 | Input/Output: [[55.868680457460925 85] 140.86868045746093]
Test Case:  99 | Input/Output: [[80.68920381447839 -8] 72.68920381447839]
Test Case: 100 | Input/Output: [[-79.09252739096091 -68] -147.09252739096092]
Test Case: 101 | Input/Output: [[7.216241728901963 75] 82.21624172890196]
Test Case: 102 | Input/Output: [[-77.28586488379975 -56] -133.28586488379975]
Test Case: 103 | Input/Output: [[78.11449935783713 -45] 33.11449935783713]
Test Case: 104 | Input/Output: [[70.50130776889029 -50] 20.501307768890285]
Test Case: 105 | Input/Output: [[-16.000790791582872 -67] -83.00079079158287]
Test Case: 106 | Input/Output: [[57.702879544670765 -31] 26.702879544670765]
Test Case: 107 | Input/Output: [[-98.90731147384884 -77] -175.90731147384884]
Test Case: 108 | Input/Output: [[16.134182706696336 21] 37.134182706696336]
Test Case: 109 | Input/Output: [[47.74227634503032 76] 123.74227634503032]
Test Case: 110 | Input/Output: [[50.76437823890231 84] 134.7643782389023]
Test Case: 111 | Input/Output: [[-72.19544975738458 -38] -110.19544975738458]
Test Case: 112 | Input/Output: [[-70.32488954508997 18] -52.324889545089974]
Test Case: 113 | Input/Output: [[-92.1656156176756 74] -18.1656156176756]
Test Case: 114 | Input/Output: [[83.19534569296101 -56] 27.195345692961013]
Test Case: 115 | Input/Output: [[-95.67055738114982 -7] -102.67055738114982]
Test Case: 116 | Input/Output: [[-63.56062318211424 80] 16.43937681788576]
Test Case: 117 | Input/Output: [[-24.066938151697286 -1] -25.066938151697286]
Test Case: 118 | Input/Output: [[-75.08521588744145 60] -15.08521588744145]
Test Case: 119 | Input/Output: [[25.179303464658915 -93] -67.82069653534109]
Test Case: 120 | Input/Output: [[-82.4330242113978 -81] -163.4330242113978]
Test Case: 121 | Input/Output: [[91.24047939004043 -33] 58.240479390040434]
Test Case: 122 | Input/Output: [[-16.36745310418533 -39] -55.36745310418533]
Test Case: 123 | Input/Output: [[-0.02161142425202911 4] 3.978388575747971]
Test Case: 124 | Input/Output: [[-69.2616655677702 -7] -76.2616655677702]
Test Case: 125 | Input/Output: [[82.22925631675534 95] 177.22925631675534]
Test Case: 126 | Input/Output: [[-99.56183068086553 2] -97.56183068086553]
Test Case: 127 | Input/Output: [[-4.533266305382739 20] 15.466733694617261]
Test Case: 128 | Input/Output: [[19.40392144711329 42] 61.40392144711329]
Test Case: 129 | Input/Output: [[-38.739485992627664 30] -8.739485992627664]
Test Case: 130 | Input/Output: [[53.03176108285419 -40] 13.031761082854189]
Test Case: 131 | Input/Output: [[-5.542888154741348 -88] -93.54288815474135]
Test Case: 132 | Input/Output: [[-67.0944091415339 -32] -99.0944091415339]
Test Case: 133 | Input/Output: [[50.5270481780517 -69] -18.4729518219483]
Test Case: 134 | Input/Output: [[90.29370570245078 64] 154.29370570245078]
Test Case: 135 | Input/Output: [[-55.291177680080295 29] -26.291177680080295]
Test Case: 136 | Input/Output: [[35.45353559808845 -56] -20.54646440191155]
Test Case: 137 | Input/Output: [[63.793966904291864 -38] 25.793966904291864]
Test Case: 138 | Input/Output: [[-29.519913082980565 0] -29.519913082980565]
Test Case: 139 | Input/Output: [[71.7908900713916 74] 145.7908900713916]
Test Case: 140 | Input/Output: [[26.358902062482287 -89] -62.64109793751771]
Test Case: 141 | Input/Output: [[-62.42256855280341 -85] -147.4225685528034]
Test Case: 142 | Input/Output: [[82.87453397181613 92] 174.87453397181613]
Test Case: 143 | Input/Output: [[41.02264661057529 -14] 27.022646610575293]
Test Case: 144 | Input/Output: [[65.42447236549384 60] 125.42447236549384]
Test Case: 145 | Input/Output: [[-82.37602406652194 -43] -125.37602406652194]
Test Case: 146 | Input/Output: [[-35.558016905063255 -49] -84.55801690506325]
Test Case: 147 | Input/Output: [[41.240035013762906 -66] -24.759964986237094]
Test Case: 148 | Input/Output: [[-25.716820858205097 61] 35.2831791417949]
Test Case: 149 | Input/Output: [[39.463985207514895 42] 81.4639852075149]
Test Case: 150 | Input/Output: [[10.022146263099714 -67] -56.977853736900286]
Test Case: 151 | Input/Output: [[-88.4814128751052 31] -57.48141287510521]
Test Case: 152 | Input/Output: [[-63.4113113736996 4] -59.4113113736996]
Test Case: 153 | Input/Output: [[-95.80991272845478 0] -95.80991272845478]
Test Case: 154 | Input/Output: [[63.5868444322945 100] 163.5868444322945]
Test Case: 155 | Input/Output: [[51.12165779514498 -62] -10.878342204855016]
Test Case: 156 | Input/Output: [[37.28382125626965 66] 103.28382125626965]
Test Case: 157 | Input/Output: [[51.605776145563226 -2] 49.605776145563226]
Test Case: 158 | Input/Output: [[36.65639856902652 -78] -41.34360143097348]
Test Case: 159 | Input/Output: [[85.94348960668455 68] 153.94348960668455]
Test Case: 160 | Input/Output: [[-92.381587899841 -1] -93.381587899841]
Test Case: 161 | Input/Output: [[5.301211378698568 -26] -20.698788621301432]
Test Case: 162 | Input/Output: [[62.52049075026363 -24] 38.52049075026363]
Test Case: 163 | Input/Output: [[-11.410059949000484 45] 33.589940050999516]
Test Case: 164 | Input/Output: [[-38.73418548770633 -66] -104.73418548770633]
Test Case: 165 | Input/Output: [[-92.64250734079357 -27] -119.64250734079357]
Test Case: 166 | Input/Output: [[16.18005105045303 48] 64.18005105045303]
Test Case: 167 | Input/Output: [[33.290664467445964 42] 75.29066446744596]
Test Case: 168 | Input/Output: [[-48.92477185107731 11] -37.92477185107731]
Test Case: 169 | Input/Output: [[57.66663747146259 39] 96.6666374714626]
Test Case: 170 | Input/Output: [[82.39648765245201 50] 132.396487652452]
Test Case: 171 | Input/Output: [[4.776210962969898 -53] -48.2237890370301]
Test Case: 172 | Input/Output: [[-15.801249420404389 56] 40.19875057959561]
Test Case: 173 | Input/Output: [[46.412304630254965 -12] 34.412304630254965]
Test Case: 174 | Input/Output: [[99.7808671596367 -68] 31.7808671596367]
Test Case: 175 | Input/Output: [[83.55625143683096 -1] 82.55625143683096]
Test Case: 176 | Input/Output: [[63.891863574809946 -92] -28.108136425190054]
Test Case: 177 | Input/Output: [[-88.29558365761832 -76] -164.29558365761832]
Test Case: 178 | Input/Output: [[90.38154660002351 78] 168.3815466000235]
Test Case: 179 | Input/Output: [[51.9929061896824 -42] 9.992906189682401]
Test Case: 180 | Input/Output: [[-22.33597413662794 -35] -57.33597413662794]
Test Case: 181 | Input/Output: [[-20.102297417566135 21] 0.8977025824338654]
Test Case: 182 | Input/Output: [[-96.33746934870253 99] 2.662530651297473]
Test Case: 183 | Input/Output: [[30.06738390546434 -74] -43.93261609453566]
Test Case: 184 | Input/Output: [[-26.52928775467953 0] -26.52928775467953]
Test Case: 185 | Input/Output: [[73.77082799029054 11] 84.77082799029054]
Test Case: 186 | Input/Output: [[80.78801112388334 2] 82.78801112388334]
Test Case: 187 | Input/Output: [[-99.43324093968968 -87] -186.43324093968968]
Test Case: 188 | Input/Output: [[-8.857588259552045 66] 57.142411740447955]
Test Case: 189 | Input/Output: [[93.74200783109407 -36] 57.74200783109407]
Test Case: 190 | Input/Output: [[-39.292357328492834 -64] -103.29235732849284]
Test Case: 191 | Input/Output: [[98.84340489103874 -30] 68.84340489103874]
Test Case: 192 | Input/Output: [[-39.41490723976542 -48] -87.41490723976543]
Test Case: 193 | Input/Output: [[-67.24229373182185 31] -36.242293731821846]
Test Case: 194 | Input/Output: [[9.012360886864997 -75] -65.987639113135]
Test Case: 195 | Input/Output: [[82.00417290598924 63] 145.00417290598924]
Test Case: 196 | Input/Output: [[-55.54578319657399 -81] -136.545783196574]
Test Case: 197 | Input/Output: [[-57.79769752497796 74] 16.202302475022037]
Test Case: 198 | Input/Output: [[36.26031051268029 -68] -31.73968948731971]
Test Case: 199 | Input/Output: [[28.181418338925454 32] 60.181418338925454]
Test Case: 200 | Input/Output: [[58.52293660732573 67] 125.52293660732573]
Test Case: 201 | Input/Output: [[-94.24342669229627 -22] -116.24342669229627]
Test Case: 202 | Input/Output: [[23.397159226861746 57] 80.39715922686175]
Test Case: 203 | Input/Output: [[89.89983671182881 -46] 43.89983671182881]
Test Case: 204 | Input/Output: [[52.05334644202591 24] 76.05334644202591]
Test Case: 205 | Input/Output: [[78.6688252370142 -74] 4.668825237014204]
Test Case: 206 | Input/Output: [[-32.75616634009806 30] -2.756166340098062]
Test Case: 207 | Input/Output: [[-69.53423468702103 17] -52.534234687021026]
Test Case: 208 | Input/Output: [[-61.60928436418198 -82] -143.60928436418197]
Test Case: 209 | Input/Output: [[-52.83044310193912 28] -24.830443101939117]
Test Case: 210 | Input/Output: [[-19.3988550101393 84] 64.6011449898607]
Test Case: 211 | Input/Output: [[3.7871299155480784 -89] -85.21287008445192]
Test Case: 212 | Input/Output: [[-37.97955607253138 94] 56.02044392746862]
Test Case: 213 | Input/Output: [[-95.18027701601328 71] -24.180277016013278]
Test Case: 214 | Input/Output: [[29.39667256549575 95] 124.39667256549575]
Test Case: 215 | Input/Output: [[-39.157277032488125 100] 60.842722967511875]
Test Case: 216 | Input/Output: [[12.976934736413568 54] 66.97693473641357]
Test Case: 217 | Input/Output: [[65.68610001168486 -24] 41.68610001168486]
Test Case: 218 | Input/Output: [[68.93086366444572 -42] 26.930863664445724]
Test Case: 219 | Input/Output: [[-79.23517933712239 85] 5.764820662877611]
Test Case: 220 | Input/Output: [[-34.43310938223216 -98] -132.43310938223215]
Test Case: 221 | Input/Output: [[27.122397861606544 77] 104.12239786160654]
Test Case: 222 | Input/Output: [[-1.6774625576643274 -38] -39.67746255766433]
Test Case: 223 | Input/Output: [[-25.53331430736914 -59] -84.53331430736914]
Test Case: 224 | Input/Output: [[-65.17260243074065 20] -45.17260243074065]
Test Case: 225 | Input/Output: [[27.813990527545272 55] 82.81399052754527]
Test Case: 226 | Input/Output: [[91.26626803612973 -79] 12.26626803612973]
Test Case: 227 | Input/Output: [[-3.8148425993251607 4] 0.18515740067483932]
Test Case: 228 | Input/Output: [[72.7513482039702 90] 162.7513482039702]
Test Case: 229 | Input/Output: [[70.42990223080488 17] 87.42990223080488]
Test Case: 230 | Input/Output: [[-91.50896862576417 89] -2.508968625764169]
Test Case: 231 | Input/Output: [[10.606156233125802 78] 88.6061562331258]
Test Case: 232 | Input/Output: [[13.569163906644178 -73] -59.43083609335582]
Test Case: 233 | Input/Output: [[64.3853295666488 -17] 47.38532956664881]
Test Case: 234 | Input/Output: [[-2.320735017200292 -83] -85.32073501720029]
Test Case: 235 | Input/Output: [[59.38872079580608 -37] 22.38872079580608]
Test Case: 236 | Input/Output: [[43.02357067025852 25] 68.02357067025852]
Test Case: 237 | Input/Output: [[45.56204874918902 -34] 11.562048749189017]
Test Case: 238 | Input/Output: [[-90.042583528607 -18] -108.042583528607]
Test Case: 239 | Input/Output: [[97.86259727564962 -32] 65.86259727564962]
Test Case: 240 | Input/Output: [[-9.061357317768554 92] 82.93864268223145]
Test Case: 241 | Input/Output: [[83.69628093181342 15] 98.69628093181342]
Test Case: 242 | Input/Output: [[13.115447144171853 72] 85.11544714417185]
Test Case: 243 | Input/Output: [[-79.15721930269648 61] -18.157219302696475]
Test Case: 244 | Input/Output: [[80.26242481768236 57] 137.26242481768236]
Test Case: 245 | Input/Output: [[23.77019653199359 -66] -42.22980346800641]
Test Case: 246 | Input/Output: [[-46.516119353637734 -23] -69.51611935363773]
Test Case: 247 | Input/Output: [[-51.47225075768287 63] 11.527749242317128]
Test Case: 248 | Input/Output: [[-25.886896038027558 -81] -106.88689603802756]
Test Case: 249 | Input/Output: [[-6.604609131197265 -31] -37.604609131197265]
Test Case: 250 | Input/Output: [[25.49162294394442 -89] -63.50837705605558]
Test Case: 251 | Input/Output: [[-45.727409919088416 71] 25.272590080911584]
Test Case: 252 | Input/Output: [[-37.94161118007202 60] 22.058388819927977]
Test Case: 253 | Input/Output: [[20.598921977106727 79] 99.59892197710673]
Test Case: 254 | Input/Output: [[99.63902734355315 87] 186.63902734355315]
Test Case: 255 | Input/Output: [[-5.799243513861185 30] 24.200756486138815]
Test Case: 256 | Input/Output: [[91.25283297521409 55] 146.2528329752141]
Test Case: 257 | Input/Output: [[78.27359874835511 56] 134.2735987483551]
Test Case: 258 | Input/Output: [[80.66031877042258 -22] 58.66031877042258]
Test Case: 259 | Input/Output: [[-36.22761516908473 -73] -109.22761516908473]
Test Case: 260 | Input/Output: [[53.735621811471646 59] 112.73562181147165]
Test Case: 261 | Input/Output: [[-6.638877376597435 100] 93.36112262340257]
Test Case: 262 | Input/Output: [[80.25756534495022 -68] 12.257565344950223]
Test Case: 263 | Input/Output: [[-40.58994007776266 61] 20.410059922237338]
Test Case: 264 | Input/Output: [[46.14843239973089 -89] -42.85156760026911]
Test Case: 265 | Input/Output: [[97.00776251688359 94] 191.0077625168836]
Test Case: 266 | Input/Output: [[11.7931457442469 -42] -30.2068542557531]
Test Case: 267 | Input/Output: [[26.579470477181857 -74] -47.42052952281814]
Test Case: 268 | Input/Output: [[29.25564242578247 4] 33.25564242578247]
Test Case: 269 | Input/Output: [[8.75123202359967 40] 48.75123202359967]
Test Case: 270 | Input/Output: [[-88.8022186576231 20] -68.8022186576231]
Test Case: 271 | Input/Output: [[98.0092058559807 78] 176.0092058559807]
Test Case: 272 | Input/Output: [[-15.58451901461602 59] 43.41548098538398]
Test Case: 273 | Input/Output: [[33.56235663178575 -53] -19.437643368214253]
Test Case: 274 | Input/Output: [[-27.434804293678397 75] 47.5651957063216]
Test Case: 275 | Input/Output: [[25.442573467611055 15] 40.442573467611055]
Test Case: 276 | Input/Output: [[-37.20046131450905 -64] -101.20046131450906]
Test Case: 277 | Input/Output: [[60.00587740792548 28] 88.00587740792548]
Test Case: 278 | Input/Output: [[20.850558772508478 56] 76.85055877250848]
Test Case: 279 | Input/Output: [[-58.54116689193094 25] -33.54116689193094]
Test Case: 280 | Input/Output: [[74.73055615438656 58] 132.73055615438656]
Test Case: 281 | Input/Output: [[-74.82895737839934 66] -8.828957378399338]
Test Case: 282 | Input/Output: [[-19.403980730628547 -96] -115.40398073062855]
Test Case: 283 | Input/Output: [[-51.15120787528531 46] -5.1512078752853085]
Test Case: 284 | Input/Output: [[-0.6781175440488312 -100] -100.67811754404883]
Test Case: 285 | Input/Output: [[1.7425159381859032 29] 30.742515938185903]
Test Case: 286 | Input/Output: [[-65.6081086346322 -60] -125.6081086346322]
Test Case: 287 | Input/Output: [[-88.81204367191609 51] -37.812043671916086]
Test Case: 288 | Input/Output: [[83.26953113222282 54] 137.26953113222282]
Test Case: 289 | Input/Output: [[52.866135108131886 38] 90.86613510813189]
Test Case: 290 | Input/Output: [[-46.03636429636664 83] 36.96363570363336]
Test Case: 291 | Input/Output: [[-73.2220678028584 -57] -130.22206780285842]
Test Case: 292 | Input/Output: [[-40.518011612868634 23] -17.518011612868634]
Test Case: 293 | Input/Output: [[74.30952350934515 89] 163.30952350934515]
Test Case: 294 | Input/Output: [[-99.4614950632251 -55] -154.4614950632251]
Test Case: 295 | Input/Output: [[-16.29771273557725 -87] -103.29771273557725]
Test Case: 296 | Input/Output: [[-7.917008545724798 -34] -41.9170085457248]
Test Case: 297 | Input/Output: [[-1.4231366732805384 70] 68.57686332671946]
Test Case: 298 | Input/Output: [[-33.71324612715772 98] 64.28675387284228]
Test Case: 299 | Input/Output: [[-9.742835512881598 100] 90.2571644871184]
Test Case: 300 | Input/Output: [[47.51422698753515 -95] -47.48577301246485]
Test Case: 301 | Input/Output: [[-45.95448991031843 98] 52.04551008968157]
Test Case: 302 | Input/Output: [[1.1342444504075928 -96] -94.86575554959241]
Test Case: 303 | Input/Output: [[-75.6973927027923 27] -48.6973927027923]
Test Case: 304 | Input/Output: [[31.718917192650053 -74] -42.28108280734995]
Test Case: 305 | Input/Output: [[27.588719377457835 97] 124.58871937745783]
Test Case: 306 | Input/Output: [[90.25572582752426 -20] 70.25572582752426]
Test Case: 307 | Input/Output: [[26.60702854548005 56] 82.60702854548005]
Test Case: 308 | Input/Output: [[-53.267014450109905 -84] -137.2670144501099]
Test Case: 309 | Input/Output: [[-2.158932836574266 24] 21.841067163425734]
Test Case: 310 | Input/Output: [[46.885779708982994 -97] -50.114220291017006]
Test Case: 311 | Input/Output: [[83.07309585652399 -94] -10.926904143476008]
Test Case: 312 | Input/Output: [[-42.67856907583083 -78] -120.67856907583084]
Test Case: 313 | Input/Output: [[-90.11773393431722 100] 9.882266065682785]
Test Case: 314 | Input/Output: [[1.7558458493741824 30] 31.755845849374182]
Test Case: 315 | Input/Output: [[79.64083282541273 -91] -11.35916717458727]
Test Case: 316 | Input/Output: [[79.69342212792645 4] 83.69342212792645]
Test Case: 317 | Input/Output: [[-71.74216249338895 70] -1.7421624933889461]
Test Case: 318 | Input/Output: [[-4.491824592375735 -32] -36.491824592375735]
Test Case: 319 | Input/Output: [[10.17052907312575 -75] -64.82947092687425]
Test Case: 320 | Input/Output: [[-32.16842768979275 -39] -71.16842768979275]
Test Case: 321 | Input/Output: [[-2.055074572933009 -49] -51.05507457293301]
Test Case: 322 | Input/Output: [[-14.987719434921232 -97] -111.98771943492123]
Test Case: 323 | Input/Output: [[8.028981199704347 96] 104.02898119970435]
Test Case: 324 | Input/Output: [[-76.53757788251623 14] -62.53757788251623]
Test Case: 325 | Input/Output: [[46.05042545969923 -29] 17.050425459699227]
Test Case: 326 | Input/Output: [[-72.9366472319036 19] -53.936647231903606]
Test Case: 327 | Input/Output: [[-23.897547085442895 -22] -45.897547085442895]
Test Case: 328 | Input/Output: [[81.4150137391974 -60] 21.415013739197406]
Test Case: 329 | Input/Output: [[-74.47514863633975 -79] -153.47514863633975]
Test Case: 330 | Input/Output: [[5.759517709003887 61] 66.75951770900389]
Test Case: 331 | Input/Output: [[50.72996473525296 11] 61.72996473525296]
Test Case: 332 | Input/Output: [[-6.244689915624463 89] 82.75531008437554]
Test Case: 333 | Input/Output: [[15.590117656142752 -49] -33.40988234385725]
Test Case: 334 | Input/Output: [[41.1964343674133 -45] -3.8035656325866967]
Test Case: 335 | Input/Output: [[-71.48321513347082 98] 26.51678486652918]
Test Case: 336 | Input/Output: [[-2.416505915440851 60] 57.58349408455915]
Test Case: 337 | Input/Output: [[-31.446823440666734 -83] -114.44682344066673]
Test Case: 338 | Input/Output: [[87.71715556515119 -82] 5.717155565151188]
Test Case: 339 | Input/Output: [[17.486340011494093 86] 103.4863400114941]
Test Case: 340 | Input/Output: [[7.125645225509317 -96] -88.87435477449068]
Test Case: 341 | Input/Output: [[26.612540538481838 -8] 18.612540538481838]
Test Case: 342 | Input/Output: [[-25.07180776113789 -52] -77.07180776113789]
Test Case: 343 | Input/Output: [[-50.917136916974655 -11] -61.917136916974655]
Test Case: 344 | Input/Output: [[3.538536382334698 -17] -13.461463617665302]
Test Case: 345 | Input/Output: [[-66.34661255503048 1] -65.34661255503048]
Test Case: 346 | Input/Output: [[-19.469641153000453 -18] -37.46964115300045]
Test Case: 347 | Input/Output: [[-4.786239800100219 -38] -42.78623980010022]
Test Case: 348 | Input/Output: [[-41.47132573323704 -32] -73.47132573323704]
Test Case: 349 | Input/Output: [[-45.69604385312549 26] -19.696043853125488]
Test Case: 350 | Input/Output: [[56.64305562776241 -58] -1.3569443722375922]
Test Case: 351 | Input/Output: [[-13.92280163662305 12] -1.9228016366230491]
Test Case: 352 | Input/Output: [[-21.662196753793367 49] 27.337803246206633]
Test Case: 353 | Input/Output: [[49.1673668900161 48] 97.1673668900161]
Test Case: 354 | Input/Output: [[-60.43937824290821 -75] -135.43937824290822]
Test Case: 355 | Input/Output: [[75.34609804188602 -20] 55.34609804188602]
Test Case: 356 | Input/Output: [[58.784297382542945 56] 114.78429738254295]
Test Case: 357 | Input/Output: [[-9.740999129136725 52] 42.259000870863275]
Test Case: 358 | Input/Output: [[-37.752380827870915 -39] -76.75238082787092]
Test Case: 359 | Input/Output: [[-54.007627082258594 72] 17.992372917741406]
Test Case: 360 | Input/Output: [[-4.1220964072111315 -28] -32.12209640721113]
Test Case: 361 | Input/Output: [[77.76744038674533 91] 168.76744038674533]
Test Case: 362 | Input/Output: [[-98.92080522774454 43] -55.92080522774454]
Test Case: 363 | Input/Output: [[65.92345522980872 -58] 7.923455229808724]
Test Case: 364 | Input/Output: [[-50.39906900509645 57] 6.60093099490355]
Test Case: 365 | Input/Output: [[39.76794860462573 21] 60.76794860462573]
Test Case: 366 | Input/Output: [[6.360462169719213 59] 65.36046216971921]
Test Case: 367 | Input/Output: [[-92.35612358874204 -78] -170.35612358874204]
Test Case: 368 | Input/Output: [[49.78321088920325 67] 116.78321088920325]
Test Case: 369 | Input/Output: [[-60.80308471664184 100] 39.19691528335816]
Test Case: 370 | Input/Output: [[71.61715306021932 81] 152.61715306021932]
Test Case: 371 | Input/Output: [[-32.89417996700199 10] -22.89417996700199]
Test Case: 372 | Input/Output: [[-58.435463230929386 -27] -85.43546323092939]
Test Case: 373 | Input/Output: [[62.25648548549 51] 113.25648548549]
Test Case: 374 | Input/Output: [[-48.48578084604398 -53] -101.48578084604398]
Test Case: 375 | Input/Output: [[-1.8507736748632198 13] 11.14922632513678]
Test Case: 376 | Input/Output: [[28.828790465951784 81] 109.82879046595178]
Test Case: 377 | Input/Output: [[67.68067023603399 89] 156.680670236034]
Test Case: 378 | Input/Output: [[-74.5780056198945 42] -32.5780056198945]
Test Case: 379 | Input/Output: [[-59.39805155715625 45] -14.39805155715625]
Test Case: 380 | Input/Output: [[-25.435219906310962 91] 65.56478009368904]
Test Case: 381 | Input/Output: [[32.837768801001744 4] 36.837768801001744]
Test Case: 382 | Input/Output: [[-98.16065746124126 -94] -192.16065746124127]
Test Case: 383 | Input/Output: [[54.324332424381765 -1] 53.324332424381765]
Test Case: 384 | Input/Output: [[25.17774068271011 57] 82.17774068271011]
Test Case: 385 | Input/Output: [[88.50914665288755 -96] -7.4908533471124485]
Test Case: 386 | Input/Output: [[-64.60822445006862 31] -33.60822445006862]
Test Case: 387 | Input/Output: [[68.84264132139916 -10] 58.84264132139916]
Test Case: 388 | Input/Output: [[75.84028146508197 1] 76.84028146508197]
Test Case: 389 | Input/Output: [[-86.58152286005512 -14] -100.58152286005512]
Test Case: 390 | Input/Output: [[31.135735107636265 -73] -41.864264892363735]
Test Case: 391 | Input/Output: [[-55.50044565218386 -88] -143.50044565218386]
Test Case: 392 | Input/Output: [[-86.19500441009784 -41] -127.19500441009784]
Test Case: 393 | Input/Output: [[-16.97836794375671 -9] -25.97836794375671]
Test Case: 394 | Input/Output: [[32.57349701460734 -68] -35.42650298539266]
Test Case: 395 | Input/Output: [[76.4289458805834 47] 123.4289458805834]
Test Case: 396 | Input/Output: [[95.33826322817896 47] 142.33826322817896]
Test Case: 397 | Input/Output: [[-32.945859849286535 -8] -40.945859849286535]
Test Case: 398 | Input/Output: [[-68.0160139657167 56] -12.016013965716695]
Test Case: 399 | Input/Output: [[69.64355690862772 52] 121.64355690862772]
Test Case: 400 | Input/Output: [[-64.01085679516186 -79] -143.01085679516186]
Test Case: 401 | Input/Output: [[72.39081558122913 -36] 36.390815581229134]
Test Case: 402 | Input/Output: [[-30.227576448288218 -61] -91.22757644828822]
Test Case: 403 | Input/Output: [[9.265890958139678 -31] -21.73410904186032]
Test Case: 404 | Input/Output: [[89.14719345718754 72] 161.14719345718754]
Test Case: 405 | Input/Output: [[37.23983550724907 -33] 4.239835507249069]
Test Case: 406 | Input/Output: [[10.51934888850164 16] 26.51934888850164]
Test Case: 407 | Input/Output: [[43.49553806900025 21] 64.49553806900025]
Test Case: 408 | Input/Output: [[-26.908856987219053 7] -19.908856987219053]
Test Case: 409 | Input/Output: [[79.2894853854335 27] 106.2894853854335]
Test Case: 410 | Input/Output: [[83.21876450861924 72] 155.21876450861924]
Test Case: 411 | Input/Output: [[-4.949716537683813 -41] -45.94971653768381]
Test Case: 412 | Input/Output: [[-70.23880259813765 -63] -133.23880259813765]
Test Case: 413 | Input/Output: [[-23.514614712599098 -31] -54.5146147125991]
Test Case: 414 | Input/Output: [[-75.96626522682139 0] -75.96626522682139]
Test Case: 415 | Input/Output: [[-54.11126338851528 85] 30.888736611484717]
Test Case: 416 | Input/Output: [[-4.393292988318947 52] 47.60670701168105]
Test Case: 417 | Input/Output: [[-90.23703069186205 36] -54.237030691862046]
Test Case: 418 | Input/Output: [[66.33659562185287 -67] -0.6634043781471348]
Test Case: 419 | Input/Output: [[22.926889475491237 39] 61.92688947549124]
Test Case: 420 | Input/Output: [[-30.17465986337271 90] 59.82534013662729]
Test Case: 421 | Input/Output: [[80.44499758343264 -46] 34.44499758343264]
Test Case: 422 | Input/Output: [[-61.651310559312655 -53] -114.65131055931266]
Test Case: 423 | Input/Output: [[87.07337532819886 90] 177.07337532819886]
Test Case: 424 | Input/Output: [[-33.301455434265776 72] 38.698544565734224]
Test Case: 425 | Input/Output: [[-56.37898160355033 -27] -83.37898160355033]
Test Case: 426 | Input/Output: [[6.512777369601082 -18] -11.487222630398918]
Test Case: 427 | Input/Output: [[16.95112018200892 19] 35.95112018200892]
Test Case: 428 | Input/Output: [[-2.2457628021653733 -90] -92.24576280216537]
Test Case: 429 | Input/Output: [[-1.4063333151107997 -63] -64.4063333151108]
Test Case: 430 | Input/Output: [[-46.074911331675985 -98] -144.074911331676]
Test Case: 431 | Input/Output: [[-60.95880740146029 22] -38.95880740146029]
Test Case: 432 | Input/Output: [[70.93616059467524 -47] 23.936160594675243]
Test Case: 433 | Input/Output: [[43.23133431230616 96] 139.23133431230616]
Test Case: 434 | Input/Output: [[-24.487667243398946 100] 75.51233275660105]
Test Case: 435 | Input/Output: [[-90.38164244765245 -38] -128.38164244765244]
Test Case: 436 | Input/Output: [[-23.381239751759637 -39] -62.38123975175964]
Test Case: 437 | Input/Output: [[12.390852781548787 -4] 8.390852781548787]
Test Case: 438 | Input/Output: [[38.492551352514425 47] 85.49255135251443]
Test Case: 439 | Input/Output: [[-53.03700906212043 -41] -94.03700906212043]
Test Case: 440 | Input/Output: [[26.123815945642505 82] 108.1238159456425]
Test Case: 441 | Input/Output: [[92.46756960165098 95] 187.46756960165098]
Test Case: 442 | Input/Output: [[37.14774515127252 5] 42.14774515127252]
Test Case: 443 | Input/Output: [[-17.63531069161661 -88] -105.63531069161661]
Test Case: 444 | Input/Output: [[-89.23516583739948 -99] -188.23516583739948]
Test Case: 445 | Input/Output: [[6.326147023854503 21] 27.326147023854503]
Test Case: 446 | Input/Output: [[-80.67314045203705 77] -3.673140452037046]
Test Case: 447 | Input/Output: [[37.116968928931044 69] 106.11696892893104]
Test Case: 448 | Input/Output: [[-81.31597599081546 42] -39.31597599081546]
Test Case: 449 | Input/Output: [[-38.82734318310028 16] -22.827343183100282]
Test Case: 450 | Input/Output: [[-99.82474666371355 79] -20.824746663713555]
Test Case: 451 | Input/Output: [[0.9698644188646028 -81] -80.0301355811354]
Test Case: 452 | Input/Output: [[43.31999979347637 -39] 4.31999979347637]
Test Case: 453 | Input/Output: [[44.42996032683638 -84] -39.57003967316362]
Test Case: 454 | Input/Output: [[16.007631404621407 13] 29.007631404621407]
Test Case: 455 | Input/Output: [[-78.54074732202562 -56] -134.54074732202562]
Test Case: 456 | Input/Output: [[73.22716170657492 90] 163.22716170657492]
Test Case: 457 | Input/Output: [[7.4081124131748055 -80] -72.5918875868252]
Test Case: 458 | Input/Output: [[-28.19136322353266 -19] -47.19136322353266]
Test Case: 459 | Input/Output: [[78.79244267222575 56] 134.79244267222575]
Test Case: 460 | Input/Output: [[22.85563891274576 2] 24.85563891274576]
Test Case: 461 | Input/Output: [[72.31426388405936 -35] 37.31426388405936]
Test Case: 462 | Input/Output: [[-43.13932125259219 1] -42.13932125259219]
Test Case: 463 | Input/Output: [[-44.21208885124681 7] -37.21208885124681]
Test Case: 464 | Input/Output: [[-63.90921487265322 -56] -119.90921487265322]
Test Case: 465 | Input/Output: [[-93.27585664171896 86] -7.27585664171896]
Test Case: 466 | Input/Output: [[-84.64573063340185 -2] -86.64573063340185]
Test Case: 467 | Input/Output: [[90.1341213571159 61] 151.1341213571159]
Test Case: 468 | Input/Output: [[-51.93377214691595 96] 44.06622785308405]
Test Case: 469 | Input/Output: [[44.38325262630386 -25] 19.383252626303857]
Test Case: 470 | Input/Output: [[-89.24996473833673 -38] -127.24996473833673]
Test Case: 471 | Input/Output: [[-80.12031923611292 -15] -95.12031923611292]
Test Case: 472 | Input/Output: [[-88.0865242989752 12] -76.0865242989752]
Test Case: 473 | Input/Output: [[56.95427678141962 -100] -43.04572321858038]
Test Case: 474 | Input/Output: [[-14.304407122691202 -38] -52.3044071226912]
Test Case: 475 | Input/Output: [[42.04816985120607 76] 118.04816985120607]
Test Case: 476 | Input/Output: [[-95.93533390357152 -4] -99.93533390357152]
Test Case: 477 | Input/Output: [[-72.38074083992569 26] -46.38074083992569]
Test Case: 478 | Input/Output: [[82.22636558810999 61] 143.22636558810999]
Test Case: 479 | Input/Output: [[-30.413272129581046 -99] -129.41327212958106]
Test Case: 480 | Input/Output: [[64.19466868129061 -35] 29.194668681290608]
Test Case: 481 | Input/Output: [[-42.08463177782762 59] 16.915368222172383]
Test Case: 482 | Input/Output: [[-76.31616619708393 -92] -168.31616619708393]
Test Case: 483 | Input/Output: [[43.169386562206 -71] -27.830613437794]
Test Case: 484 | Input/Output: [[-42.881245993058116 -23] -65.88124599305812]
Test Case: 485 | Input/Output: [[13.002480958271462 -80] -66.99751904172854]
Test Case: 486 | Input/Output: [[31.072827399308466 -98] -66.92717260069153]
Test Case: 487 | Input/Output: [[-85.97253773217876 -21] -106.97253773217876]
Test Case: 488 | Input/Output: [[-72.42072428009266 -86] -158.42072428009266]
Test Case: 489 | Input/Output: [[-26.285160549741036 -83] -109.28516054974104]
Test Case: 490 | Input/Output: [[61.5100002619435 24] 85.5100002619435]
Test Case: 491 | Input/Output: [[-74.09213284415574 97] 22.907867155844258]
Test Case: 492 | Input/Output: [[15.143150002989742 16] 31.143150002989742]
Test Case: 493 | Input/Output: [[40.62066223165161 41] 81.62066223165161]
Test Case: 494 | Input/Output: [[66.85554281278624 -48] 18.85554281278624]
Test Case: 495 | Input/Output: [[39.10599671492534 -74] -34.89400328507466]
Test Case: 496 | Input/Output: [[90.6358064115841 57] 147.6358064115841]
Test Case: 497 | Input/Output: [[-32.52404026439275 -76] -108.52404026439275]
Test Case: 498 | Input/Output: [[37.10002000148364 -58] -20.899979998516358]
Test Case: 499 | Input/Output: [[12.52596009314108 -44] -31.47403990685892]
Test Case: 500 | Input/Output: [[-15.332720223939106 -58] -73.3327202239391]
Test Case: 501 | Input/Output: [[-21.169478599225272 -13] -34.16947859922527]
Test Case: 502 | Input/Output: [[58.88076989036608 -1] 57.88076989036608]
Test Case: 503 | Input/Output: [[51.092926628347556 28] 79.09292662834756]
Test Case: 504 | Input/Output: [[-10.724372561539084 -90] -100.72437256153908]
Test Case: 505 | Input/Output: [[36.74716629395286 74] 110.74716629395286]
Test Case: 506 | Input/Output: [[42.914199339012896 -84] -41.085800660987104]
Test Case: 507 | Input/Output: [[4.233894132913022 -87] -82.76610586708698]
Test Case: 508 | Input/Output: [[65.76433316932145 89] 154.76433316932145]
Test Case: 509 | Input/Output: [[63.541554446473015 56] 119.54155444647301]
Test Case: 510 | Input/Output: [[65.69068702706014 -95] -29.309312972939864]
Test Case: 511 | Input/Output: [[72.13072995051658 -99] -26.86927004948342]
Test Case: 512 | Input/Output: [[58.72969611236306 -31] 27.729696112363058]
Test Case: 513 | Input/Output: [[-42.01675338298963 -9] -51.01675338298963]
Test Case: 514 | Input/Output: [[-11.27935191550462 -61] -72.27935191550462]
Test Case: 515 | Input/Output: [[92.15650563601417 20] 112.15650563601417]
Test Case: 516 | Input/Output: [[-94.4601408887942 73] -21.4601408887942]
Test Case: 517 | Input/Output: [[-13.719489220608153 32] 18.280510779391847]
Test Case: 518 | Input/Output: [[88.03129188123566 35] 123.03129188123566]
Test Case: 519 | Input/Output: [[15.021642771220755 20] 35.021642771220755]
Test Case: 520 | Input/Output: [[60.098377633841835 14] 74.09837763384184]
Test Case: 521 | Input/Output: [[-28.851594559629532 63] 34.14840544037047]
Test Case: 522 | Input/Output: [[47.37561876467046 41] 88.37561876467046]
Test Case: 523 | Input/Output: [[86.81788803203881 -24] 62.81788803203881]
Test Case: 524 | Input/Output: [[37.42165725618432 36] 73.42165725618432]
Test Case: 525 | Input/Output: [[91.63382046106204 -1] 90.63382046106204]
Test Case: 526 | Input/Output: [[-44.52415938235406 75] 30.475840617645943]
Test Case: 527 | Input/Output: [[49.00421237986393 -9] 40.00421237986393]
Test Case: 528 | Input/Output: [[16.795253077468345 36] 52.795253077468345]
Test Case: 529 | Input/Output: [[73.0830227039545 74] 147.0830227039545]
Test Case: 530 | Input/Output: [[26.045598829454136 -57] -30.954401170545864]
Test Case: 531 | Input/Output: [[63.990066617667964 -68] -4.0099333823320364]
Test Case: 532 | Input/Output: [[99.8078365881139 82] 181.8078365881139]
Test Case: 533 | Input/Output: [[-29.349729000128704 17] -12.349729000128704]
Test Case: 534 | Input/Output: [[54.28988876297396 88] 142.28988876297396]
Test Case: 535 | Input/Output: [[57.03036034865866 -81] -23.96963965134134]
Test Case: 536 | Input/Output: [[65.52061421776102 23] 88.52061421776102]
Test Case: 537 | Input/Output: [[94.9091431571201 73] 167.9091431571201]
Test Case: 538 | Input/Output: [[-82.6827134798078 90] 7.317286520192198]
Test Case: 539 | Input/Output: [[-36.67459456393583 -86] -122.67459456393583]
Test Case: 540 | Input/Output: [[69.70883402712346 28] 97.70883402712346]
Test Case: 541 | Input/Output: [[-71.55664889608109 -58] -129.55664889608107]
Test Case: 542 | Input/Output: [[35.64503711870722 55] 90.64503711870722]
Test Case: 543 | Input/Output: [[96.60345056543386 80] 176.60345056543386]
Test Case: 544 | Input/Output: [[-90.30223672233558 7] -83.30223672233558]
Test Case: 545 | Input/Output: [[-65.95233268829793 -70] -135.95233268829793]
Test Case: 546 | Input/Output: [[38.675023672783624 -41] -2.324976327216376]
Test Case: 547 | Input/Output: [[88.56667427848689 47] 135.5666742784869]
Test Case: 548 | Input/Output: [[70.04481666472117 -8] 62.04481666472117]
Test Case: 549 | Input/Output: [[88.55081007411854 -53] 35.550810074118544]
Test Case: 550 | Input/Output: [[39.93503946818916 52] 91.93503946818916]
Test Case: 551 | Input/Output: [[-62.442951675178634 -63] -125.44295167517863]
Test Case: 552 | Input/Output: [[98.83530369067284 -30] 68.83530369067284]
Test Case: 553 | Input/Output: [[84.92601906719463 -26] 58.92601906719463]
Test Case: 554 | Input/Output: [[-78.18002871419634 62] -16.18002871419634]
Test Case: 555 | Input/Output: [[87.44883767510996 -63] 24.448837675109957]
Test Case: 556 | Input/Output: [[83.50529721437988 -4] 79.50529721437988]
Test Case: 557 | Input/Output: [[1.3181291305789102 72] 73.31812913057891]
Test Case: 558 | Input/Output: [[-91.20235870943756 -11] -102.20235870943756]
Test Case: 559 | Input/Output: [[96.0183229270979 -86] 10.018322927097898]
Test Case: 560 | Input/Output: [[-98.63589196953217 -62] -160.63589196953217]
Test Case: 561 | Input/Output: [[44.97588489253127 100] 144.97588489253127]
Test Case: 562 | Input/Output: [[-1.7299324063673396 0] -1.7299324063673396]
Test Case: 563 | Input/Output: [[86.9426182561634 19] 105.9426182561634]
Test Case: 564 | Input/Output: [[-18.871908020842127 56] 37.12809197915787]
Test Case: 565 | Input/Output: [[-8.936711783062606 80] 71.0632882169374]
Test Case: 566 | Input/Output: [[-12.39848649388071 -28] -40.39848649388071]
Test Case: 567 | Input/Output: [[-11.648615271262358 11] -0.6486152712623579]
Test Case: 568 | Input/Output: [[-41.087538548942646 72] 30.912461451057354]
Test Case: 569 | Input/Output: [[-64.27953160150477 -20] -84.27953160150477]
Test Case: 570 | Input/Output: [[50.262600606137 -24] 26.262600606137]
Test Case: 571 | Input/Output: [[18.64929607233033 -74] -55.35070392766967]
Test Case: 572 | Input/Output: [[-21.157703603763082 -37] -58.15770360376308]
Test Case: 573 | Input/Output: [[94.9712448881028 -23] 71.9712448881028]
Test Case: 574 | Input/Output: [[-88.68717522358847 -25] -113.68717522358847]
Test Case: 575 | Input/Output: [[11.168045478122536 66] 77.16804547812254]
Test Case: 576 | Input/Output: [[-97.97421110774431 58] -39.97421110774431]
Test Case: 577 | Input/Output: [[51.60023302547975 -1] 50.60023302547975]
Test Case: 578 | Input/Output: [[-83.16175910426126 -50] -133.16175910426125]
Test Case: 579 | Input/Output: [[92.63864083258437 -48] 44.63864083258437]
Test Case: 580 | Input/Output: [[-4.3669446056745045 30] 25.633055394325496]
Test Case: 581 | Input/Output: [[-81.69491585682276 -33] -114.69491585682276]
Test Case: 582 | Input/Output: [[60.211314985466004 -66] -5.788685014533996]
Test Case: 583 | Input/Output: [[-91.53426526938169 61] -30.53426526938169]
Test Case: 584 | Input/Output: [[-61.15566450039833 83] 21.84433549960167]
Test Case: 585 | Input/Output: [[-23.346796635693195 79] 55.653203364306805]
Test Case: 586 | Input/Output: [[-25.80223178219528 -79] -104.80223178219528]
Test Case: 587 | Input/Output: [[80.25331952431006 88] 168.25331952431006]
Test Case: 588 | Input/Output: [[-62.883957452844854 94] 31.116042547155146]
Test Case: 589 | Input/Output: [[-6.460510224426017 -95] -101.46051022442602]
Test Case: 590 | Input/Output: [[12.594623553201828 -81] -68.40537644679817]
Test Case: 591 | Input/Output: [[10.082985632609635 10] 20.082985632609635]
Test Case: 592 | Input/Output: [[-33.92952623733237 -29] -62.92952623733237]
Test Case: 593 | Input/Output: [[51.836580284459274 -54] -2.1634197155407264]
Test Case: 594 | Input/Output: [[19.22844293752233 -61] -41.77155706247767]
Test Case: 595 | Input/Output: [[96.99462524171744 -44] 52.99462524171744]
Test Case: 596 | Input/Output: [[-62.56589554813059 -12] -74.56589554813058]
Test Case: 597 | Input/Output: [[96.70277854752402 -72] 24.70277854752402]
Test Case: 598 | Input/Output: [[-1.8575224670845216 83] 81.14247753291548]
Test Case: 599 | Input/Output: [[-35.69246768533911 -19] -54.69246768533911]
Test Case: 600 | Input/Output: [[26.649689434768533 -46] -19.350310565231467]
Test Case: 601 | Input/Output: [[69.94542521889824 -55] 14.945425218898237]
Test Case: 602 | Input/Output: [[-80.14028396408055 38] -42.14028396408055]
Test Case: 603 | Input/Output: [[-20.11868238464396 -15] -35.11868238464396]
Test Case: 604 | Input/Output: [[59.423675780590685 -80] -20.576324219409315]
Test Case: 605 | Input/Output: [[-7.493673806868742 -48] -55.49367380686874]
Test Case: 606 | Input/Output: [[6.2848603844034585 76] 82.28486038440346]
Test Case: 607 | Input/Output: [[-38.38933081871934 -50] -88.38933081871934]
Test Case: 608 | Input/Output: [[-27.37967852360181 70] 42.62032147639819]
Test Case: 609 | Input/Output: [[-58.35190158815187 -35] -93.35190158815186]
Test Case: 610 | Input/Output: [[-24.325374351490908 -70] -94.32537435149091]
Test Case: 611 | Input/Output: [[-8.110154502315623 -33] -41.11015450231562]
Test Case: 612 | Input/Output: [[-76.3622443467505 69] -7.362244346750501]
Test Case: 613 | Input/Output: [[-8.33550159334986 77] 68.66449840665014]
Test Case: 614 | Input/Output: [[21.380380307406767 54] 75.38038030740677]
Test Case: 615 | Input/Output: [[81.9337192424369 79] 160.9337192424369]
Test Case: 616 | Input/Output: [[72.82025887482718 4] 76.82025887482718]
Test Case: 617 | Input/Output: [[78.97690035969066 -17] 61.97690035969066]
Test Case: 618 | Input/Output: [[-54.82679093401303 67] 12.173209065986967]
Test Case: 619 | Input/Output: [[-35.97880248220247 90] 54.02119751779753]
Test Case: 620 | Input/Output: [[14.299622812915615 -65] -50.700377187084385]
Test Case: 621 | Input/Output: [[39.423846144674656 -65] -25.576153855325344]
Test Case: 622 | Input/Output: [[-25.249566273136196 39] 13.750433726863804]
Test Case: 623 | Input/Output: [[70.79479133892565 55] 125.79479133892565]
Test Case: 624 | Input/Output: [[87.3068474295863 9] 96.3068474295863]
Test Case: 625 | Input/Output: [[49.44673755235388 73] 122.44673755235388]
Test Case: 626 | Input/Output: [[-8.471237472858434 76] 67.52876252714157]
Test Case: 627 | Input/Output: [[-88.86808473055461 -29] -117.86808473055461]
Test Case: 628 | Input/Output: [[-92.27460764679407 -80] -172.27460764679407]
Test Case: 629 | Input/Output: [[97.64937992330712 4] 101.64937992330712]
Test Case: 630 | Input/Output: [[60.50146129476758 -17] 43.50146129476758]
Test Case: 631 | Input/Output: [[-64.02176022682937 -38] -102.02176022682937]
Test Case: 632 | Input/Output: [[93.16079682204895 -16] 77.16079682204895]
Test Case: 633 | Input/Output: [[-56.240154646092975 -23] -79.24015464609298]
Test Case: 634 | Input/Output: [[-97.5900530797017 56] -41.590053079701704]
Test Case: 635 | Input/Output: [[92.40354879632051 62] 154.4035487963205]
Test Case: 636 | Input/Output: [[79.33547943274704 98] 177.33547943274704]
Test Case: 637 | Input/Output: [[89.60663027180098 87] 176.60663027180098]
Test Case: 638 | Input/Output: [[83.52345800716395 49] 132.52345800716395]
Test Case: 639 | Input/Output: [[-76.00671596297047 35] -41.006715962970475]
Test Case: 640 | Input/Output: [[-72.76965081774425 -100] -172.76965081774426]
Test Case: 641 | Input/Output: [[-54.11179304398115 31] -23.11179304398115]
Test Case: 642 | Input/Output: [[57.33901791367808 3] 60.33901791367808]
Test Case: 643 | Input/Output: [[57.48313669386732 -38] 19.483136693867323]
Test Case: 644 | Input/Output: [[68.26230352576951 52] 120.26230352576951]
Test Case: 645 | Input/Output: [[42.072242296850305 38] 80.0722422968503]
Test Case: 646 | Input/Output: [[-85.74503173856071 -4] -89.74503173856071]
Test Case: 647 | Input/Output: [[-92.36335340340523 100] 7.6366465965947725]
Test Case: 648 | Input/Output: [[-70.6745006793993 52] -18.6745006793993]
Test Case: 649 | Input/Output: [[93.17937635252008 -58] 35.17937635252008]
Test Case: 650 | Input/Output: [[-75.48479510703265 -63] -138.48479510703265]
Test Case: 651 | Input/Output: [[-39.20524191813235 27] -12.205241918132351]
Test Case: 652 | Input/Output: [[52.57164911280893 -100] -47.42835088719107]
Test Case: 653 | Input/Output: [[26.21749282923051 34] 60.21749282923051]
Test Case: 654 | Input/Output: [[-47.62974691314745 -71] -118.62974691314744]
Test Case: 655 | Input/Output: [[-39.92129114533196 -1] -40.92129114533196]
Test Case: 656 | Input/Output: [[86.59130594846681 74] 160.5913059484668]
Test Case: 657 | Input/Output: [[37.49506188164898 56] 93.49506188164898]
Test Case: 658 | Input/Output: [[-80.02855808728225 -73] -153.02855808728225]
Test Case: 659 | Input/Output: [[-52.04496539784025 -96] -148.04496539784026]
Test Case: 660 | Input/Output: [[-50.262643934242604 -45] -95.2626439342426]
Test Case: 661 | Input/Output: [[97.7741170490483 -99] -1.2258829509517]
Test Case: 662 | Input/Output: [[-41.01933674924361 -77] -118.0193367492436]
Test Case: 663 | Input/Output: [[75.93081485666008 -87] -11.069185143339922]
Test Case: 664 | Input/Output: [[45.71809737673789 -81] -35.28190262326211]
Test Case: 665 | Input/Output: [[-61.72745063944198 -71] -132.727450639442]
Test Case: 666 | Input/Output: [[-89.28124814814313 -1] -90.28124814814313]
Test Case: 667 | Input/Output: [[8.156956628423046 49] 57.156956628423046]
Test Case: 668 | Input/Output: [[-94.76046352873774 99] 4.239536471262255]
Test Case: 669 | Input/Output: [[-27.4543262600272 85] 57.5456737399728]
Test Case: 670 | Input/Output: [[-95.47641562271455 34] -61.476415622714555]
Test Case: 671 | Input/Output: [[-56.42755090866951 -2] -58.42755090866951]
Test Case: 672 | Input/Output: [[-13.972855242799142 -84] -97.97285524279914]
Test Case: 673 | Input/Output: [[-32.21270234452378 -3] -35.21270234452378]
Test Case: 674 | Input/Output: [[-21.41822558292084 9] -12.41822558292084]
Test Case: 675 | Input/Output: [[-77.96422236613253 -12] -89.96422236613253]
Test Case: 676 | Input/Output: [[17.536585853335794 -91] -73.4634141466642]
Test Case: 677 | Input/Output: [[97.81445255495316 -6] 91.81445255495316]
Test Case: 678 | Input/Output: [[-23.925710747429065 -48] -71.92571074742906]
Test Case: 679 | Input/Output: [[-9.050415331701501 -59] -68.0504153317015]
Test Case: 680 | Input/Output: [[-75.85144093985836 84] 8.148559060141636]
Test Case: 681 | Input/Output: [[83.69476707704621 24] 107.69476707704621]
Test Case: 682 | Input/Output: [[-7.943942373412696 67] 59.056057626587304]
Test Case: 683 | Input/Output: [[27.45602985073927 57] 84.45602985073927]
Test Case: 684 | Input/Output: [[30.852044243945812 -47] -16.147955756054188]
Test Case: 685 | Input/Output: [[-75.87987472794339 86] 10.120125272056612]
Test Case: 686 | Input/Output: [[27.02606589573655 99] 126.02606589573655]
Test Case: 687 | Input/Output: [[-65.32286332975825 27] -38.32286332975825]
Test Case: 688 | Input/Output: [[-49.0783550716857 -34] -83.0783550716857]
Test Case: 689 | Input/Output: [[-42.918296728802765 16] -26.918296728802765]
Test Case: 690 | Input/Output: [[65.79888707890552 41] 106.79888707890552]
Test Case: 691 | Input/Output: [[50.7462692707405 -30] 20.7462692707405]
Test Case: 692 | Input/Output: [[96.00517293056319 62] 158.0051729305632]
Test Case: 693 | Input/Output: [[97.04564651429234 64] 161.04564651429234]
Test Case: 694 | Input/Output: [[-60.83919578119534 10] -50.83919578119534]
Test Case: 695 | Input/Output: [[-9.039712551652414 -50] -59.039712551652414]
Test Case: 696 | Input/Output: [[-60.55448582622256 29] -31.55448582622256]
Test Case: 697 | Input/Output: [[-45.972558419538686 67] 21.027441580461314]
Test Case: 698 | Input/Output: [[66.65158054980066 41] 107.65158054980066]
Test Case: 699 | Input/Output: [[81.89316692185082 2] 83.89316692185082]
Test Case: 700 | Input/Output: [[57.12053784483368 94] 151.12053784483368]
Test Case: 701 | Input/Output: [[-26.64266061653791 56] 29.35733938346209]
Test Case: 702 | Input/Output: [[60.023312679334964 57] 117.02331267933496]
Test Case: 703 | Input/Output: [[-61.84350286479761 -21] -82.84350286479761]
Test Case: 704 | Input/Output: [[43.61766629854799 -30] 13.617666298547988]
Test Case: 705 | Input/Output: [[-68.21315679553899 71] 2.7868432044610074]
Test Case: 706 | Input/Output: [[31.361003047524946 -10] 21.361003047524946]
Test Case: 707 | Input/Output: [[-29.066671367440918 99] 69.93332863255908]
Test Case: 708 | Input/Output: [[28.835800917687635 41] 69.83580091768764]
Test Case: 709 | Input/Output: [[-26.602398377313577 23] -3.602398377313577]
Test Case: 710 | Input/Output: [[-44.81602138683194 51] 6.183978613168058]
Test Case: 711 | Input/Output: [[35.74433390508008 7] 42.74433390508008]
Test Case: 712 | Input/Output: [[-94.73734979426625 -80] -174.73734979426627]
Test Case: 713 | Input/Output: [[-81.74830959571617 44] -37.748309595716165]
Test Case: 714 | Input/Output: [[-78.02888517039186 37] -41.02888517039186]
Test Case: 715 | Input/Output: [[94.07461799065166 -25] 69.07461799065166]
Test Case: 716 | Input/Output: [[-66.9335923316381 -100] -166.9335923316381]
Test Case: 717 | Input/Output: [[-79.1692330873245 -99] -178.1692330873245]
Test Case: 718 | Input/Output: [[94.90843877787682 -33] 61.908438777876825]
Test Case: 719 | Input/Output: [[72.40864037962069 7] 79.40864037962069]
Test Case: 720 | Input/Output: [[-42.37677038197918 -38] -80.37677038197918]
Test Case: 721 | Input/Output: [[-26.88134019329081 87] 60.11865980670919]
Test Case: 722 | Input/Output: [[-10.889028279536177 -81] -91.88902827953618]
Test Case: 723 | Input/Output: [[-2.954735096996288 -14] -16.954735096996288]
Test Case: 724 | Input/Output: [[36.15623827341702 -60] -23.843761726582983]
Test Case: 725 | Input/Output: [[-63.89389975891113 -84] -147.89389975891112]
Test Case: 726 | Input/Output: [[-28.575135987697877 95] 66.42486401230212]
Test Case: 727 | Input/Output: [[76.83666573255724 73] 149.83666573255724]
Test Case: 728 | Input/Output: [[-96.32898509731909 91] -5.328985097319091]
Test Case: 729 | Input/Output: [[95.65404748786159 36] 131.6540474878616]
Test Case: 730 | Input/Output: [[2.060016312163242 16] 18.060016312163242]
Test Case: 731 | Input/Output: [[22.60249376012034 80] 102.60249376012034]
Test Case: 732 | Input/Output: [[17.907326860127554 -91] -73.09267313987245]
Test Case: 733 | Input/Output: [[81.81261058270465 96] 177.81261058270465]
Test Case: 734 | Input/Output: [[-64.77723407761567 6] -58.777234077615674]
Test Case: 735 | Input/Output: [[-72.5811211548343 -73] -145.5811211548343]
Test Case: 736 | Input/Output: [[21.314968350276487 -93] -71.68503164972351]
Test Case: 737 | Input/Output: [[-5.646381791411258 79] 73.35361820858874]
Test Case: 738 | Input/Output: [[47.62160491229571 -96] -48.37839508770429]
Test Case: 739 | Input/Output: [[-29.956586689152218 60] 30.043413310847782]
Test Case: 740 | Input/Output: [[-35.74706907763951 -58] -93.74706907763951]
Test Case: 741 | Input/Output: [[-81.12624383659146 26] -55.126243836591456]
Test Case: 742 | Input/Output: [[98.73119621571738 67] 165.73119621571738]
Test Case: 743 | Input/Output: [[26.753436868538415 50] 76.75343686853842]
Test Case: 744 | Input/Output: [[-74.92994506241395 -72] -146.92994506241394]
Test Case: 745 | Input/Output: [[91.8053527001702 -14] 77.8053527001702]
Test Case: 746 | Input/Output: [[-61.87251976739001 -2] -63.87251976739001]
Test Case: 747 | Input/Output: [[71.95506902399941 77] 148.9550690239994]
Test Case: 748 | Input/Output: [[30.823791020472555 -65] -34.176208979527445]
Test Case: 749 | Input/Output: [[-17.13783003298886 -88] -105.13783003298886]
Test Case: 750 | Input/Output: [[15.254533472255957 78] 93.25453347225596]
Test Case: 751 | Input/Output: [[-78.16606123599526 -83] -161.16606123599524]
Test Case: 752 | Input/Output: [[-68.98791201485648 51] -17.987912014856477]
Test Case: 753 | Input/Output: [[-32.260849432935544 16] -16.260849432935544]
Test Case: 754 | Input/Output: [[-73.33311157306773 64] -9.333111573067725]
Test Case: 755 | Input/Output: [[-18.112982408134187 74] 55.88701759186581]
Test Case: 756 | Input/Output: [[35.81994447766016 80] 115.81994447766016]
Test Case: 757 | Input/Output: [[-87.01005542918507 -94] -181.01005542918506]
Test Case: 758 | Input/Output: [[-60.614085446053025 72] 11.385914553946975]
Test Case: 759 | Input/Output: [[-3.493688508923597 21] 17.506311491076403]
Test Case: 760 | Input/Output: [[19.321440746463864 39] 58.321440746463864]
Test Case: 761 | Input/Output: [[-32.320967662701875 95] 62.679032337298125]
Test Case: 762 | Input/Output: [[47.000550603576386 -53] -5.999449396423614]
Test Case: 763 | Input/Output: [[-31.208825891037392 76] 44.79117410896261]
Test Case: 764 | Input/Output: [[-94.63994285304511 13] -81.63994285304511]
Test Case: 765 | Input/Output: [[48.49660484453216 7] 55.49660484453216]
Test Case: 766 | Input/Output: [[-67.29401998704077 -8] -75.29401998704077]
Test Case: 767 | Input/Output: [[66.00590047787668 16] 82.00590047787668]
Test Case: 768 | Input/Output: [[-61.99915208709965 -42] -103.99915208709965]
Test Case: 769 | Input/Output: [[-4.212327326182546 -82] -86.21232732618255]
Test Case: 770 | Input/Output: [[25.32636355926958 97] 122.32636355926958]
Test Case: 771 | Input/Output: [[-5.996645491419315 78] 72.00335450858068]
Test Case: 772 | Input/Output: [[2.344693779752191 -6] -3.655306220247809]
Test Case: 773 | Input/Output: [[-3.5769590267430402 -67] -70.57695902674304]
Test Case: 774 | Input/Output: [[33.94241320424945 79] 112.94241320424945]
Test Case: 775 | Input/Output: [[25.99945105773824 6] 31.99945105773824]
Test Case: 776 | Input/Output: [[95.03974855874858 100] 195.03974855874858]
Test Case: 777 | Input/Output: [[-36.75863528529144 79] 42.24136471470856]
Test Case: 778 | Input/Output: [[49.544879904300245 54] 103.54487990430025]
Test Case: 779 | Input/Output: [[53.549863166068775 -9] 44.549863166068775]
Test Case: 780 | Input/Output: [[48.584353304404374 11] 59.584353304404374]
Test Case: 781 | Input/Output: [[-93.13466529962922 87] -6.134665299629219]
Test Case: 782 | Input/Output: [[42.08171651359123 -97] -54.91828348640877]
Test Case: 783 | Input/Output: [[-97.04625093436906 -4] -101.04625093436906]
Test Case: 784 | Input/Output: [[-52.80514730256458 -75] -127.80514730256458]
Test Case: 785 | Input/Output: [[-98.83146294121666 11] -87.83146294121666]
Test Case: 786 | Input/Output: [[90.50910564373956 -8] 82.50910564373956]
Test Case: 787 | Input/Output: [[-21.37273382268843 -77] -98.37273382268843]
Test Case: 788 | Input/Output: [[-15.513940130834158 -62] -77.51394013083416]
Test Case: 789 | Input/Output: [[-67.6783677507787 -90] -157.6783677507787]
Test Case: 790 | Input/Output: [[26.243391420683437 8] 34.24339142068344]
Test Case: 791 | Input/Output: [[49.633312862806235 73] 122.63331286280624]
Test Case: 792 | Input/Output: [[-16.100035139372977 93] 76.89996486062702]
Test Case: 793 | Input/Output: [[22.444432216707384 41] 63.44443221670738]
Test Case: 794 | Input/Output: [[51.62804521820374 73] 124.62804521820374]
Test Case: 795 | Input/Output: [[-42.83254895037456 -84] -126.83254895037456]
Test Case: 796 | Input/Output: [[-13.318028509656273 70] 56.68197149034373]
Test Case: 797 | Input/Output: [[-84.4786764870594 -34] -118.4786764870594]
Test Case: 798 | Input/Output: [[-54.50553301297174 18] -36.50553301297174]
Test Case: 799 | Input/Output: [[57.545040441239905 48] 105.5450404412399]
Test Case: 800 | Input/Output: [[-51.90846911007765 2] -49.90846911007765]
Test Case: 801 | Input/Output: [[71.7553124559401 23] 94.7553124559401]
Test Case: 802 | Input/Output: [[-13.85724261470638 -56] -69.85724261470638]
Test Case: 803 | Input/Output: [[77.8478462769933 -81] -3.1521537230067054]
Test Case: 804 | Input/Output: [[-10.561476708986334 -17] -27.561476708986334]
Test Case: 805 | Input/Output: [[-19.38740220787973 74] 54.61259779212027]
Test Case: 806 | Input/Output: [[47.72013529262554 86] 133.72013529262554]
Test Case: 807 | Input/Output: [[42.35300540926255 9] 51.35300540926255]
Test Case: 808 | Input/Output: [[54.26882381253935 86] 140.26882381253935]
Test Case: 809 | Input/Output: [[-42.616734362050956 -28] -70.61673436205095]
Test Case: 810 | Input/Output: [[-59.83170446633472 32] -27.83170446633472]
Test Case: 811 | Input/Output: [[5.220472843359005 82] 87.220472843359]
Test Case: 812 | Input/Output: [[18.91600919159356 4] 22.91600919159356]
Test Case: 813 | Input/Output: [[-56.19466824604231 34] -22.194668246042312]
Test Case: 814 | Input/Output: [[-42.531234960178296 60] 17.468765039821704]
Test Case: 815 | Input/Output: [[-24.841091351953736 -42] -66.84109135195374]
Test Case: 816 | Input/Output: [[-62.54866160332708 -44] -106.54866160332708]
Test Case: 817 | Input/Output: [[80.60528378597942 41] 121.60528378597942]
Test Case: 818 | Input/Output: [[55.15525875777362 -9] 46.15525875777362]
Test Case: 819 | Input/Output: [[-16.24599833187918 -86] -102.24599833187918]
Test Case: 820 | Input/Output: [[-56.95774578439294 -13] -69.95774578439294]
Test Case: 821 | Input/Output: [[73.95608910926731 -76] -2.0439108907326897]
Test Case: 822 | Input/Output: [[80.17617758917373 3] 83.17617758917373]
Test Case: 823 | Input/Output: [[85.23348823625102 -98] -12.76651176374898]
Test Case: 824 | Input/Output: [[67.29734657374979 -34] 33.29734657374979]
Test Case: 825 | Input/Output: [[14.453942719293082 31] 45.45394271929308]
Test Case: 826 | Input/Output: [[7.973561195091321 1] 8.973561195091321]
Test Case: 827 | Input/Output: [[-96.50515914000847 59] -37.50515914000847]
Test Case: 828 | Input/Output: [[-73.59397456995438 16] -57.59397456995438]
Test Case: 829 | Input/Output: [[-39.499563364852406 9] -30.499563364852406]
Test Case: 830 | Input/Output: [[23.37954024557594 -83] -59.62045975442406]
Test Case: 831 | Input/Output: [[-81.1711207748439 89] 7.828879225156101]
Test Case: 832 | Input/Output: [[-70.95778803524264 62] -8.957788035242643]
Test Case: 833 | Input/Output: [[24.62705181988811 -61] -36.37294818011189]
Test Case: 834 | Input/Output: [[59.24197737091873 -34] 25.241977370918733]
Test Case: 835 | Input/Output: [[59.1539819113388 10] 69.1539819113388]
Test Case: 836 | Input/Output: [[-88.03479529671345 72] -16.034795296713455]
Test Case: 837 | Input/Output: [[25.39385213148013 95] 120.39385213148013]
Test Case: 838 | Input/Output: [[65.20974299443907 32] 97.20974299443907]
Test Case: 839 | Input/Output: [[38.3090467592973 -45] -6.690953240702697]
Test Case: 840 | Input/Output: [[76.76683910333827 -96] -19.23316089666173]
Test Case: 841 | Input/Output: [[-49.63883112880998 25] -24.638831128809983]
Test Case: 842 | Input/Output: [[56.87707360251477 -41] 15.87707360251477]
Test Case: 843 | Input/Output: [[76.59992999669464 -62] 14.599929996694641]
Test Case: 844 | Input/Output: [[-1.9283022426353824 -48] -49.92830224263538]
Test Case: 845 | Input/Output: [[78.98867103293 30] 108.98867103293]
Test Case: 846 | Input/Output: [[-23.561098990746416 -70] -93.56109899074642]
Test Case: 847 | Input/Output: [[-95.71965585032392 -13] -108.71965585032392]
Test Case: 848 | Input/Output: [[-40.08196274129923 35] -5.081962741299229]
Test Case: 849 | Input/Output: [[-59.116570098713474 67] 7.883429901286526]
Test Case: 850 | Input/Output: [[58.97574527847769 86] 144.9757452784777]
Test Case: 851 | Input/Output: [[87.16823400647462 -82] 5.16823400647462]
Test Case: 852 | Input/Output: [[-9.5678438223147 82] 72.4321561776853]
Test Case: 853 | Input/Output: [[70.595501271703 -40] 30.595501271703]
Test Case: 854 | Input/Output: [[76.2873360056553 -66] 10.287336005655305]
Test Case: 855 | Input/Output: [[-8.93751987026954 71] 62.06248012973046]
Test Case: 856 | Input/Output: [[83.99654538729473 2] 85.99654538729473]
Test Case: 857 | Input/Output: [[-76.7382478736111 -66] -142.7382478736111]
Test Case: 858 | Input/Output: [[24.10642845412228 -74] -49.89357154587772]
Test Case: 859 | Input/Output: [[-54.73037570358083 -42] -96.73037570358083]
Test Case: 860 | Input/Output: [[5.357451197517719 48] 53.35745119751772]
Test Case: 861 | Input/Output: [[97.86120345693269 -20] 77.86120345693269]
Test Case: 862 | Input/Output: [[-19.682730365107986 43] 23.317269634892014]
Test Case: 863 | Input/Output: [[6.980941086131452 100] 106.98094108613145]
Test Case: 864 | Input/Output: [[31.145792330601182 38] 69.14579233060118]
Test Case: 865 | Input/Output: [[1.2647243235127945 -79] -77.7352756764872]
Test Case: 866 | Input/Output: [[-54.29255796603323 -91] -145.29255796603323]
Test Case: 867 | Input/Output: [[-18.87565585997919 -79] -97.87565585997919]
Test Case: 868 | Input/Output: [[49.32581994110424 66] 115.32581994110424]
Test Case: 869 | Input/Output: [[-4.015566305724704 -60] -64.0155663057247]
Test Case: 870 | Input/Output: [[-19.089623146896855 -80] -99.08962314689686]
Test Case: 871 | Input/Output: [[94.49064919014353 -36] 58.49064919014353]
Test Case: 872 | Input/Output: [[-92.44049393243505 95] 2.5595060675649535]
Test Case: 873 | Input/Output: [[-77.82972423063315 82] 4.170275769366853]
Test Case: 874 | Input/Output: [[61.62461402686682 5] 66.62461402686682]
Test Case: 875 | Input/Output: [[74.01178158926919 -60] 14.01178158926919]
Test Case: 876 | Input/Output: [[-77.10620638865244 -80] -157.10620638865242]
Test Case: 877 | Input/Output: [[-14.889569930053526 28] 13.110430069946474]
Test Case: 878 | Input/Output: [[-32.534471197827614 -79] -111.53447119782761]
Test Case: 879 | Input/Output: [[95.85369876245409 -74] 21.853698762454087]
Test Case: 880 | Input/Output: [[-84.06818266592013 -99] -183.06818266592012]
Test Case: 881 | Input/Output: [[29.458731230072914 -19] 10.458731230072914]
Test Case: 882 | Input/Output: [[-12.011649432732781 51] 38.98835056726722]
Test Case: 883 | Input/Output: [[-9.740377121017147 -47] -56.74037712101715]
Test Case: 884 | Input/Output: [[-77.18396896223314 -1] -78.18396896223314]
Test Case: 885 | Input/Output: [[83.44757505587006 34] 117.44757505587006]
Test Case: 886 | Input/Output: [[19.067720070760544 27] 46.067720070760544]
Test Case: 887 | Input/Output: [[36.836727773359655 93] 129.83672777335966]
Test Case: 888 | Input/Output: [[-85.19028447598076 -21] -106.19028447598076]
Test Case: 889 | Input/Output: [[-21.274140106893682 -58] -79.27414010689368]
Test Case: 890 | Input/Output: [[-60.996239306971376 -91] -151.99623930697138]
Test Case: 891 | Input/Output: [[-70.77527235060049 -56] -126.77527235060049]
Test Case: 892 | Input/Output: [[-95.3812942258519 -77] -172.3812942258519]
Test Case: 893 | Input/Output: [[52.569209124046836 65] 117.56920912404684]
Test Case: 894 | Input/Output: [[62.24704845143654 36] 98.24704845143654]
Test Case: 895 | Input/Output: [[86.53871033277954 73] 159.53871033277954]
Test Case: 896 | Input/Output: [[71.70365956562406 2] 73.70365956562406]
Test Case: 897 | Input/Output: [[49.95916773106438 40] 89.95916773106438]
Test Case: 898 | Input/Output: [[82.36288754910308 17] 99.36288754910308]
Test Case: 899 | Input/Output: [[66.90449333444519 35] 101.90449333444519]
Test Case: 900 | Input/Output: [[12.26498633178042 98] 110.26498633178042]
Test Case: 901 | Input/Output: [[7.76465774263022 97] 104.76465774263022]
Test Case: 902 | Input/Output: [[-39.28716676087418 98] 58.71283323912582]
Test Case: 903 | Input/Output: [[47.78065936073958 33] 80.78065936073958]
Test Case: 904 | Input/Output: [[25.159830764670915 -8] 17.159830764670915]
Test Case: 905 | Input/Output: [[48.500671633629594 -84] -35.499328366370406]
Test Case: 906 | Input/Output: [[-14.28464929258611 -16] -30.28464929258611]
Test Case: 907 | Input/Output: [[-89.48392094035233 94] 4.516079059647666]
Test Case: 908 | Input/Output: [[-47.811603982195884 64] 16.188396017804116]
Test Case: 909 | Input/Output: [[-61.64082823470518 10] -51.64082823470518]
Test Case: 910 | Input/Output: [[49.13953117678807 -7] 42.13953117678807]
Test Case: 911 | Input/Output: [[-46.85735303069454 57] 10.14264696930546]
Test Case: 912 | Input/Output: [[-77.05234845141152 61] -16.05234845141152]
Test Case: 913 | Input/Output: [[-42.40943486477595 -97] -139.40943486477596]
Test Case: 914 | Input/Output: [[91.93813378320715 42] 133.93813378320715]
Test Case: 915 | Input/Output: [[56.5567503074935 -54] 2.556750307493502]
Test Case: 916 | Input/Output: [[-79.5585557990704 35] -44.558555799070405]
Test Case: 917 | Input/Output: [[7.638397620186012 -50] -42.36160237981399]
Test Case: 918 | Input/Output: [[-12.243000814937076 -25] -37.243000814937076]
Test Case: 919 | Input/Output: [[32.40074743042797 -51] -18.59925256957203]
Test Case: 920 | Input/Output: [[-84.2278519608264 -44] -128.2278519608264]
Test Case: 921 | Input/Output: [[60.31249144872268 -22] 38.31249144872268]
Test Case: 922 | Input/Output: [[-12.1570823285968 -20] -32.1570823285968]
Test Case: 923 | Input/Output: [[20.501548565009358 -29] -8.498451434990642]
Test Case: 924 | Input/Output: [[-93.25500808994029 3] -90.25500808994029]
Test Case: 925 | Input/Output: [[-9.930608749863353 73] 63.06939125013665]
Test Case: 926 | Input/Output: [[44.92726428681405 -90] -45.07273571318595]
Test Case: 927 | Input/Output: [[-25.27033074092779 -61] -86.27033074092779]
Test Case: 928 | Input/Output: [[89.28359472039489 18] 107.28359472039489]
Test Case: 929 | Input/Output: [[44.331893230727616 -93] -48.668106769272384]
Test Case: 930 | Input/Output: [[-15.87993468814453 54] 38.12006531185547]
Test Case: 931 | Input/Output: [[41.145257887775045 9] 50.145257887775045]
Test Case: 932 | Input/Output: [[-26.126456722031662 -45] -71.12645672203166]
Test Case: 933 | Input/Output: [[-89.21848540818405 88] -1.2184854081840513]
Test Case: 934 | Input/Output: [[-85.2969289485909 -68] -153.2969289485909]
Test Case: 935 | Input/Output: [[71.26558036479253 -30] 41.26558036479253]
Test Case: 936 | Input/Output: [[34.3856629215895 -39] -4.6143370784105]
Test Case: 937 | Input/Output: [[-95.46392472857595 95] -0.4639247285759467]
Test Case: 938 | Input/Output: [[59.672773551211804 -66] -6.3272264487881955]
Test Case: 939 | Input/Output: [[79.44281034291598 50] 129.44281034291598]
Test Case: 940 | Input/Output: [[24.50621830972888 -84] -59.49378169027112]
Test Case: 941 | Input/Output: [[-91.17055087325821 -94] -185.1705508732582]
Test Case: 942 | Input/Output: [[-93.61518430183978 100] 6.384815698160224]
Test Case: 943 | Input/Output: [[62.39054224114568 -8] 54.39054224114568]
Test Case: 944 | Input/Output: [[12.615579363656622 -53] -40.38442063634338]
Test Case: 945 | Input/Output: [[15.164046731359733 5] 20.164046731359733]
Test Case: 946 | Input/Output: [[-43.35176766444266 19] -24.35176766444266]
Test Case: 947 | Input/Output: [[-85.65932119411579 75] -10.65932119411579]
Test Case: 948 | Input/Output: [[66.49998440324836 -9] 57.49998440324836]
Test Case: 949 | Input/Output: [[-56.25355352620276 -85] -141.25355352620275]
Test Case: 950 | Input/Output: [[73.48533093308183 14] 87.48533093308183]
Test Case: 951 | Input/Output: [[20.72010783801055 3] 23.72010783801055]
Test Case: 952 | Input/Output: [[10.131113321117311 25] 35.13111332111731]
Test Case: 953 | Input/Output: [[-41.71848585096063 97] 55.28151414903937]
Test Case: 954 | Input/Output: [[77.91657170768414 43] 120.91657170768414]
Test Case: 955 | Input/Output: [[91.52907604403774 -45] 46.52907604403774]
Test Case: 956 | Input/Output: [[-41.92674132033743 97] 55.07325867966257]
Test Case: 957 | Input/Output: [[-41.895859900836975 70] 28.104140099163025]
Test Case: 958 | Input/Output: [[0.6215207030514591 27] 27.62152070305146]
Test Case: 959 | Input/Output: [[-1.4768116827851117 -7] -8.476811682785112]
Test Case: 960 | Input/Output: [[-19.625305046637976 25] 5.374694953362024]
Test Case: 961 | Input/Output: [[75.45391519280244 -82] -6.546084807197559]
Test Case: 962 | Input/Output: [[85.52699034725123 -62] 23.52699034725123]
Test Case: 963 | Input/Output: [[69.73297687314067 -85] -15.267023126859328]
Test Case: 964 | Input/Output: [[63.68169733866813 -7] 56.68169733866813]
Test Case: 965 | Input/Output: [[96.20727553393002 93] 189.20727553393002]
Test Case: 966 | Input/Output: [[11.968962063144616 -50] -38.031037936855384]
Test Case: 967 | Input/Output: [[-95.41924152286543 91] -4.419241522865434]
Test Case: 968 | Input/Output: [[-85.52291240820146 3] -82.52291240820146]
Test Case: 969 | Input/Output: [[-29.990617636373784 80] 50.009382363626216]
Test Case: 970 | Input/Output: [[-11.537913437564583 -92] -103.53791343756458]
Test Case: 971 | Input/Output: [[7.359216439626252 -84] -76.64078356037375]
Test Case: 972 | Input/Output: [[66.97124339681244 -80] -13.02875660318756]
Test Case: 973 | Input/Output: [[6.951334427621859 -98] -91.04866557237814]
Test Case: 974 | Input/Output: [[-0.4492731805705148 -22] -22.449273180570515]
Test Case: 975 | Input/Output: [[47.849707145594294 77] 124.8497071455943]
Test Case: 976 | Input/Output: [[-93.42477902765431 0] -93.42477902765431]
Test Case: 977 | Input/Output: [[-74.77031598181458 6] -68.77031598181458]
Test Case: 978 | Input/Output: [[-24.627121971698045 88] 63.372878028301955]
Test Case: 979 | Input/Output: [[74.87889188387521 -57] 17.878891883875212]
Test Case: 980 | Input/Output: [[-97.65122465105505 -18] -115.65122465105505]
Test Case: 981 | Input/Output: [[37.50284093153883 -86] -48.49715906846117]
Test Case: 982 | Input/Output: [[-79.62800070439076 -42] -121.62800070439076]
Test Case: 983 | Input/Output: [[-95.92529122568261 -98] -193.9252912256826]
Test Case: 984 | Input/Output: [[57.618592391636554 10] 67.61859239163655]
Test Case: 985 | Input/Output: [[95.60594033348485 -93] 2.6059403334848525]
Test Case: 986 | Input/Output: [[62.01484638762088 40] 102.01484638762088]
Test Case: 987 | Input/Output: [[26.68263861787581 -84] -57.31736138212419]
Test Case: 988 | Input/Output: [[67.09519429624262 37] 104.09519429624262]
Test Case: 989 | Input/Output: [[49.76133220755855 -53] -3.238667792441447]
Test Case: 990 | Input/Output: [[29.604011214947747 43] 72.60401121494775]
Test Case: 991 | Input/Output: [[85.9429105720765 -26] 59.9429105720765]
Test Case: 992 | Input/Output: [[37.07120581555904 -18] 19.07120581555904]
Test Case: 993 | Input/Output: [[55.550416631128854 83] 138.55041663112885]
Test Case: 994 | Input/Output: [[-36.64171961266553 -37] -73.64171961266553]
Test Case: 995 | Input/Output: [[47.530974149896764 -93] -45.469025850103236]
Test Case: 996 | Input/Output: [[9.710959617028081 51] 60.71095961702808]
Test Case: 997 | Input/Output: [[-85.36440482483745 -41] -126.36440482483745]
Test Case: 998 | Input/Output: [[55.120704700927945 0] 55.120704700927945]
Test Case: 999 | Input/Output: [[59.05416927690885 7] 66.05416927690885]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 16 -15 98 -100 25 -88 50 75 57 -99 106 -49 -64 -116 -92 84
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 67537.63709999998
Test mean error for best: 33.76882
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -1.0          
Correct output: 114.7313932523 | Program output: 78.7313932523 
Correct output: 14.755435921   | Program output: -1.0          
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -1.0          
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 21.5646212622 
Correct output: 66.7190026342  | Program output: -1.0          
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 75.0099057627 
Correct output: -48.6689485349 | Program output: -1.0          
Correct output: 85.0632624421  | Program output: 60.0632624421 
Correct output: 171.737997407  | Program output: 78.737997407  
Correct output: 44.3556039838  | Program output: 21.3556039838 
Correct output: -40.9542965608 | Program output: -1.0          
Correct output: -28.6497177653 | Program output: -1.0          
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 43.1658910647 
Correct output: 12.6449981755  | Program output: -1.0          
Correct output: 37.0251741292  | Program output: -1.0          
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_swap} {:instruction float_dup_items} {:instruction integer_max} {:instruction float_inc} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_stackdepth} {:instruction integer_div} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction float_mod} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_frominteger} {:instruction integer_swap} {:instruction print_float} {:instruction integer_pop} {:instruction float_mult} {:instruction 14.113145092366366} {:instruction tagged_488} {:instruction integer_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_flush} {:instruction float_shove} {:instruction in2})
Best program: (integer_yank in1 float_add tag_float_737 float_max integer_yankdup integer_yankdup float_div float_div float_stackdepth tagged_950 float_mod float_sub float_yankdup integer_add integer_swap float_dup_items integer_max float_inc integer_flush in1 float_frominteger integer_div float_stackdepth integer_div float_dec integer_dec integer_inc float_yankdup float_dup_times integer_yankdup integer_yank float_mod float_yank integer_stackdepth integer_pop float_frominteger integer_swap print_float integer_pop float_mult 14.113145092366366 tagged_488 integer_yank float_cos float_tan float_flush float_shove in2)
Errors: [150.8653 12 36.0 3 15.7554 11 59.0 2 1.0 1 3.9888 10 62.0 12 57.0 2 67.719 11 37.0 2 41.0 2 88.0 12 81.0 2 47.6689 12 25.0 2 93.0 2 23.0 2 39.9543 11 27.6497 12 37.0 12 50.0 1 13.645 12 38.0252 11 75.0 12 33.1283 12]
Total: 1386.3999000000001
Mean: 27.727999
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 18266.1110956
Median total errors in population: 25333.0
Error averages by case: (747.7037201999982 13.895 721.8015309000009 13.179 712.1616111000008 12.32 722.5877648999998 12.387 702.6100319999978 12.069 709.8076888000002 12.344 723.4736224999992 12.894 713.6428240000004 12.348 717.4984212000003 13.039 717.0668812000011 11.59 720.5550058999997 12.323 727.413272500001 13.72 732.6016572999984 13.045 708.2477190000011 13.109 714.7888916000002 12.305 738.8377200000011 12.297 703.8308769000007 12.388 713.9515398999988 12.894 710.062879299999 13.106 717.3845827000008 13.901 715.192116500002 12.212 704.6392495000003 13.167 712.9526292999998 13.103 724.2976200000012 13.77 712.5272383999987 13.069)
Error minima by case: (35.8653 3 2.7314 3 0.2063 7 0.3583 1 0.0 0 0.0112 8 3.8643 8 1.4354 2 0.281 8 0.2642 2 0.2206 2 0.5856 8 3.9901 2 1.2262 2 3.3641 2 11.738 2 0.3556 2 2.0457 2 0.8276 2 3.7228 8 0.8341 1 0.645 8 0.0252 8 0.8236 8 2.1127 2)
Average genome size in population (length): 50.554
Average program size in population (points): 51.554
Average percent parens in population: 0.043
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.321
Error (vector) diversity:			 0.349
Behavioral diversity:				 0.363
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1267632
--- Timings ---
Current time: 1529614802268 milliseconds
Total Time:           3.1 seconds
Initialization:       0.1 seconds,  3.9%
Reproduction:         0.6 seconds, 18.0%
Fitness Testing:      2.4 seconds, 78.1%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 67537.63709999998
Test mean error for best: 33.76882
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -1.0          
Correct output: 114.7313932523 | Program output: 78.7313932523 
Correct output: 14.755435921   | Program output: -1.0          
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -1.0          
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 21.5646212622 
Correct output: 66.7190026342  | Program output: -1.0          
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 75.0099057627 
Correct output: -48.6689485349 | Program output: -1.0          
Correct output: 85.0632624421  | Program output: 60.0632624421 
Correct output: 171.737997407  | Program output: 78.737997407  
Correct output: 44.3556039838  | Program output: 21.3556039838 
Correct output: -40.9542965608 | Program output: -1.0          
Correct output: -28.6497177653 | Program output: -1.0          
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 43.1658910647 
Correct output: 12.6449981755  | Program output: -1.0          
Correct output: 37.0251741292  | Program output: -1.0          
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_dup} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_swap} {:instruction float_dup_items} {:instruction integer_max} {:instruction float_inc} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_stackdepth} {:instruction integer_div} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction float_mod} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_frominteger} {:instruction integer_swap} {:instruction print_float} {:instruction integer_pop} {:instruction float_mult} {:instruction 14.113145092366366} {:instruction tagged_488} {:instruction integer_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_flush} {:instruction float_shove} {:instruction in2})
Best program: (float_sub float_dup integer_shove float_stackdepth in1 float_add tag_float_737 float_max integer_yankdup integer_yankdup float_div float_div float_stackdepth tagged_950 float_mod float_sub float_yankdup integer_add integer_swap float_dup_items integer_max float_inc integer_flush in1 float_frominteger integer_div float_stackdepth integer_div float_dec integer_dec integer_inc float_yankdup float_dup_times integer_yankdup integer_yank float_mod float_yank integer_stackdepth integer_pop float_frominteger integer_swap print_float integer_pop float_mult 14.113145092366366 tagged_488 integer_yank float_cos float_tan float_flush float_shove in2)
Errors: [150.8653 12 36.0 3 15.7554 11 59.0 2 1.0 1 3.9888 10 62.0 12 57.0 2 67.719 11 37.0 2 41.0 2 88.0 12 81.0 2 47.6689 12 25.0 2 93.0 2 23.0 2 39.9543 11 27.6497 12 37.0 12 50.0 1 13.645 12 38.0252 11 75.0 12 33.1283 12]
Total: 1386.3999000000001
Mean: 27.727999
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 6606.267855499997
Median total errors in population: 1737.3875000000003
Error averages by case: (307.8872542000012 11.241 268.1049222999981 10.661 241.17151739999977 11.604 249.69190909999938 9.966 238.45231240000086 9.321 239.84837669999976 11.613 254.05772190000062 11.97 251.68528020000218 9.983 255.36807970000035 12.055 234.9246819999994 9.341 243.99513650000006 9.906 264.0658102999994 12.636 296.39088480000123 10.446 235.73191769999858 10.736 251.41451730000162 9.896 306.8161532000023 9.884 229.13433090000115 10.138 249.07879630000215 10.273 245.94314880000124 10.605 236.86930690000045 13.036 257.497816699999 9.819 226.71392709999978 12.291 251.2515598000001 12.38 254.06286519999964 12.599 243.16962810000155 10.54)
Error minima by case: (35.8653 3 15.7314 3 0.2063 8 0.3583 1 0.0 0 0.0112 6 5.1357 8 1.4354 2 0.281 8 0.2642 2 0.2206 2 0.5856 8 2.0099 2 1.2262 2 5.0633 2 6.262 2 0.3556 2 2.0457 2 3.3658 2 3.7228 9 1.1659 1 0.3439 8 0.0252 8 2.1569 8 2.1127 2)
Average genome size in population (length): 58.896
Average program size in population (points): 59.896
Average percent parens in population: 0.022
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.484
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.782
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.782
Total error diversity:				 0.275
Error (vector) diversity:			 0.302
Behavioral diversity:				 0.324
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2743607
--- Timings ---
Current time: 1529614806095 milliseconds
Total Time:           7.1 seconds
Initialization:       0.1 seconds,  1.7%
Reproduction:         2.3 seconds, 32.9%
Fitness Testing:      4.1 seconds, 58.1%
Report:               0.5 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 52908.70119999999
Test mean error for best: 26.45435
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 78.7313932523 
Correct output: 14.755435921   | Program output: -2.9178029717 
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -1.1387404182 
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 21.5646212622 
Correct output: 66.7190026342  | Program output: -2.9102057545 
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 75.0099057627 
Correct output: -48.6689485349 | Program output: -2.9860329287 
Correct output: 85.0632624421  | Program output: 60.0632624421 
Correct output: 171.737997407  | Program output: 78.737997407  
Correct output: 44.3556039838  | Program output: 21.3556039838 
Correct output: -40.9542965608 | Program output: -2.9559524036 
Correct output: -28.6497177653 | Program output: -1.1418315612 
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 43.1658910647 
Correct output: 12.6449981755  | Program output: -1.644122147  
Correct output: 37.0251741292  | Program output: -1.7134186665 
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -2.8485389937 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction integer_div} {:instruction tagged_253} {:instruction tagged_581} {:instruction in2} {:instruction in1} {:instruction float_yank} {:instruction float_sin} {:instruction integer_max} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_dup} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (integer_min integer_min float_sub integer_div tagged_253 tagged_581 in2 in1 float_yank float_sin integer_max integer_add float_dec integer_yankdup integer_dup_items print_integer integer_max integer_mult float_sub -28.64851647495597 float_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_dup float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 36.0 3 17.6732 10 59.0 2 1.0 1 4.1276 10 62.0 12 57.0 2 69.6292 9 37.0 2 41.0 2 88.0 12 81.0 2 45.6829 12 25.0 2 93.0 2 23.0 2 37.9983 9 27.5079 10 37.0 12 50.0 1 14.2891 8 38.7386 11 75.0 12 31.2797 10]
Total: 1269.9264999999998
Mean: 25.39853
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 4452.965645199999
Median total errors in population: 1442.0
Error averages by case: (188.5661350000002 6.401 161.42116159999998 5.998 177.74215290000006 11.706 178.97699830000008 4.75 130.6970459999997 3.859 180.9041831999999 11.631 178.29433490000005 12.404 170.16479230000016 5.339 182.42799619999988 12.001 159.51008649999991 5.075 164.3953524 5.349 200.57178339999996 12.616 197.8110439000003 5.394 132.40430060000017 5.647 149.771021 5.32 208.1616228000004 5.155 142.28027819999997 5.445 163.73200790000013 5.552 170.29814650000003 5.654 158.04751619999993 13.334 167.9719847000001 5.256 150.59805740000002 12.067 193.93169659999995 13.145 189.78354549999997 12.065 157.71840120000005 5.621)
Error minima by case: (57.0 3 34.0 3 0.2063 8 1.7384 1 0.0 0 0.0112 6 11.8643 8 7.5646 2 6.4251 9 0.2642 2 3.1594 2 5.996 9 61.0099 2 1.3311 2 23.0 2 64.738 2 0.3556 2 1.0457 2 2.3503 2 14.0723 9 29.1659 1 0.3439 8 4.0392 8 13.6137 8 1.8717 2)
Average genome size in population (length): 52.878
Average program size in population (points): 53.878
Average percent parens in population: 0.023
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9685
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.132
Error (vector) diversity:			 0.142
Behavioral diversity:				 0.148
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4068157
--- Timings ---
Current time: 1529614809753 milliseconds
Total Time:          10.5 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         3.8 seconds, 36.0%
Fitness Testing:      5.7 seconds, 54.1%
Report:               0.9 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 52908.70119999999
Test mean error for best: 26.45435
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 78.7313932523 
Correct output: 14.755435921   | Program output: -2.9178029717 
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -1.1387404182 
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 21.5646212622 
Correct output: 66.7190026342  | Program output: -2.9102057545 
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 75.0099057627 
Correct output: -48.6689485349 | Program output: -2.9860329287 
Correct output: 85.0632624421  | Program output: 60.0632624421 
Correct output: 171.737997407  | Program output: 78.737997407  
Correct output: 44.3556039838  | Program output: 21.3556039838 
Correct output: -40.9542965608 | Program output: -2.9559524036 
Correct output: -28.6497177653 | Program output: -1.1418315612 
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 43.1658910647 
Correct output: 12.6449981755  | Program output: -1.644122147  
Correct output: 37.0251741292  | Program output: -1.7134186665 
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -2.8485389937 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction integer_div} {:instruction tagged_253} {:instruction tagged_581} {:instruction in2} {:instruction in1} {:instruction float_yank} {:instruction float_sin} {:instruction integer_max} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_dup} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (integer_min integer_min float_sub integer_div tagged_253 tagged_581 in2 in1 float_yank float_sin integer_max integer_add float_dec integer_yankdup integer_dup_items print_integer integer_max integer_mult float_sub -28.64851647495597 float_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_dup float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 36.0 3 17.6732 10 59.0 2 1.0 1 4.1276 10 62.0 12 57.0 2 69.6292 9 37.0 2 41.0 2 88.0 12 81.0 2 45.6829 12 25.0 2 93.0 2 23.0 2 37.9983 9 27.5079 10 37.0 12 50.0 1 14.2891 8 38.7386 11 75.0 12 31.2797 10]
Total: 1269.9264999999998
Mean: 25.39853
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 4328.6657883
Median total errors in population: 1425.0
Error averages by case: (178.28694750000005 4.84 151.3654444 4.502 180.0540067999999 11.411 172.1180123 2.892 117.84001269999996 1.975 182.00644079999992 11.352 175.6852948 12.35 168.6623086 3.576 189.09233390000014 11.528 153.1250664 3.477 156.726207 3.561 197.63440819999994 12.448 190.92625190000004 3.796 128.66540250000006 3.94 141.24895729999997 3.566 201.58270780000004 3.696 138.8180219 3.572 160.55148750000006 3.9 168.24175970000007 3.976 153.39922899999996 13.161 162.87692610000002 3.507 153.49301479999994 11.581 197.63379780000005 13.16 186.04363169999996 11.622 155.2341169 3.965)
Error minima by case: (57.0 2 33.0 2 12.4438 2 5.0879 1 0.0 0 1.0 1 20.6579 1 12.5646 2 0.719 2 6.7358 1 3.6669 2 5.3158 2 78.0 2 1.0 1 19.0633 2 90.0 2 20.0 1 15.5537 1 11.6579 1 4.3421 2 4.0214 1 11.5982 2 28.9748 2 7.6842 2 4.3421 2)
Average genome size in population (length): 46.518
Average program size in population (points): 47.518
Average percent parens in population: 0.025
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.39625
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.632
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.632
Total error diversity:				 0.06
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5234882
--- Timings ---
Current time: 1529614813260 milliseconds
Total Time:          14.0 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.2 seconds, 36.9%
Fitness Testing:      7.1 seconds, 51.1%
Report:               1.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 53683.39160000002
Test mean error for best: 26.84170
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -92.8652845137
Correct output: 114.7313932523 | Program output: 80.7313932523 
Correct output: 14.755435921   | Program output: -51.244564079 
Correct output: 21.3583337919  | Program output: 0.7163816615  
Correct output: 76.8145408742  | Program output: 77.8145408742 
Correct output: 2.9888110989   | Program output: -66.0111889011
Correct output: -50.135719703  | Program output: 4.4719234372  
Correct output: 78.5646212622  | Program output: 23.5646212622 
Correct output: 66.7190026342  | Program output: -7.2809973658 
Correct output: 9.7358427867   | Program output: 0.7591948325  
Correct output: 22.7793630647  | Program output: 0.623295789   
Correct output: -43.5414748403 | Program output: 1.8941625826  
Correct output: 156.0099057627 | Program output: 77.0099057627 
Correct output: -48.6689485349 | Program output: -50.6689485349
Correct output: 85.0632624421  | Program output: 62.0632624421 
Correct output: 171.737997407  | Program output: 80.737997407  
Correct output: 44.3556039838  | Program output: 23.3556039838 
Correct output: -40.9542965608 | Program output: -81.9542965608
Correct output: -28.6497177653 | Program output: -79.6497177653
Correct output: -17.2771991531 | Program output: 1.7032794372  
Correct output: 93.1658910647  | Program output: 45.1658910647 
Correct output: 12.6449981755  | Program output: -21.3550018245
Correct output: 37.0251741292  | Program output: -48.9748258708
Correct output: -23.9317722741 | Program output: 1.4132750087  
Correct output: -34.1282563958 | Program output: -69.1282563958
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_mod} {:instruction integer_yank} {:instruction in2} {:instruction float_sub} {:instruction float_max} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_items} {:instruction in2} {:instruction integer_mult} {:instruction float_div} {:instruction integer_shove} {:instruction integer_swap} {:instruction in2} {:instruction float_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction tag_float_665} {:instruction float_shove} {:instruction float_rot} {:instruction integer_add} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction tag_float_665} {:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_min} {:instruction 65} {:instruction integer_div} {:instruction integer_min} {:instruction float_mult} {:instruction -62} {:instruction in1} {:instruction integer_pop} {:instruction float_inc} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_max} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_float} {:instruction float_flush} {:instruction integer_dup_times} {:instruction 26.508729475895933} {:instruction float_dup_items} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction tagged_707} {:instruction integer_flush})
Best program: (float_stackdepth integer_mod integer_yank in2 float_sub float_max in1 float_inc integer_dup_items in2 integer_mult float_div integer_shove integer_swap in2 float_min integer_inc integer_sub integer_fromfloat float_swap integer_dup_times float_stackdepth tag_float_665 float_shove float_rot integer_add float_frominteger integer_dup_times float_dup_items tag_float_665 float_shove integer_yankdup integer_min 65 integer_div integer_min float_mult -62 in1 integer_pop float_inc float_div integer_yankdup float_max integer_yank integer_shove print_float float_flush integer_dup_times 26.508729475895933 float_dup_items integer_stackdepth integer_fromfloat float_yank tagged_707 integer_flush)
Errors: [59.0 3 34.0 3 66.0 11 20.642 10 1.0 1 69.0 11 54.6076 11 55.0 2 74.0 11 8.9766 9 22.1561 11 45.4356 11 79.0 3 2.0 2 23.0 2 91.0 3 21.0 2 41.0 2 51.0 2 18.9805 11 48.0 2 34.0 11 86.0 13 25.345 12 35.0 2]
Total: 1226.1434000000002
Mean: 24.522867
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3526.4101478000002
Median total errors in population: 1421.0
Error averages by case: (155.89082170000023 5.491 122.52974480000002 4.377 142.1167376999997 11.23 138.42457920000012 3.211 83.55719159999998 2.281 141.74109400000032 11.056 142.65841689999993 12.162 138.80391749999993 3.46 157.11162839999994 11.284 118.91060559999993 3.327 122.91451659999993 3.388 164.79903180000005 12.275 163.51749590000009 4.041 101.50536030000002 4.861 111.53074949999997 3.434 174.68805190000003 3.944 107.78824400000002 3.425 128.45470029999984 4.632 133.02683819999976 4.829 119.37001289999994 12.529 133.53974050000005 3.274 118.46493849999997 11.408 160.54710320000015 12.77 152.57491339999999 11.578 122.83271339999966 4.844)
Error minima by case: (56.9892 2 33.0 2 12.7164 8 19.3826 1 0.0 0 0.9585 8 12.8643 9 13.5646 2 1.719 8 7.5838 1 18.2206 1 5.3158 10 78.0 2 1.0 1 20.0633 2 90.0 2 13.7912 1 34.0457 1 11.6579 1 4.3421 9 28.1659 1 10.5513 8 21.1216 10 7.6842 10 4.3421 2)
Average genome size in population (length): 48.869
Average program size in population (points): 49.869
Average percent parens in population: 0.021
Minimum age in population: 4.0
Maximum age in population: 7.625
Average age in population: 5.881875
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 64
Genome diversity (% unique Plush genomes):	 0.65
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 64
Syntactic diversity (% unique Push programs):	 0.65
Total error diversity:				 0.073
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6467289
--- Timings ---
Current time: 1529614816671 milliseconds
Total Time:          17.6 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.5 seconds, 37.2%
Fitness Testing:      8.7 seconds, 49.6%
Report:               2.2 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 60478.10869999998
Test mean error for best: 30.23905
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 78.7313932523 
Correct output: 14.755435921   | Program output: -2.9178029717 
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -1.1387404182 
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 21.5646212622 
Correct output: 66.7190026342  | Program output: -2.9102057545 
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 75.0099057627 
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 60.0632624421 
Correct output: 171.737997407  | Program output: 78.737997407  
Correct output: 44.3556039838  | Program output: 21.3556039838 
Correct output: -40.9542965608 | Program output: -2.9559524036 
Correct output: -28.6497177653 | Program output: -1.1418315612 
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 43.1658910647 
Correct output: 12.6449981755  | Program output: -1.644122147  
Correct output: 37.0251741292  | Program output: -1.7134186665 
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -2.8485389937 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction integer_div} {:instruction tagged_253} {:instruction tagged_581} {:instruction in2} {:instruction in1} {:instruction float_yank} {:instruction float_sin} {:instruction integer_max} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction integer_stackdepth})
Best program: (integer_min integer_min float_sub integer_div tagged_253 tagged_581 in2 in1 float_yank float_sin integer_max integer_add float_dec integer_yankdup integer_dup_items print_integer integer_max integer_mult float_sub -28.64851647495597 float_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap integer_stackdepth)
Errors: [57.0 3 36.0 3 17.6732 10 59.0 2 1.0 1 4.1276 10 62.0 12 57.0 2 69.6292 9 37.0 2 41.0 2 88.0 12 81.0 2 4.0 2 25.0 2 93.0 2 23.0 2 37.9983 9 27.5079 10 37.0 12 50.0 1 14.2891 8 38.7386 11 75.0 12 31.2797 10]
Total: 1218.2435999999998
Mean: 24.364872
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3228.088523799999
Median total errors in population: 1421.0
Error averages by case: (175.68474660000123 8.17 114.19793410000008 4.77 110.28938749999918 11.026 126.67851340000024 3.75 82.76346809999993 2.831 104.76011800000126 10.52 130.95473179999993 12.021 127.35131209999986 3.865 140.16620619999958 10.985 107.48814449999989 3.657 111.93908899999997 3.748 153.13234390000008 12.209 155.6828020000002 4.239 104.11253550000028 8.379 102.01214919999987 3.776 167.24711710000008 4.036 95.39596069999999 3.765 114.30628909999947 7.649 111.393357399999 8.203 107.25477999999981 12.38 123.36932130000031 3.302 96.71783980000001 11.278 129.72930340000013 11.853 140.45531410000015 11.932 108.38375899999883 8.278)
Error minima by case: (56.0 2 33.0 2 2.8834 1 17.3583 1 0.0 0 0.0112 1 1.8643 9 13.8834 2 2.8559 2 5.7358 1 4.6609 1 0.9215 10 10.1166 2 1.0 1 22.0 2 22.1166 2 7.6444 1 3.6947 1 0.9988 1 2.491 8 20.8834 1 8.1908 1 11.9497 2 19.9619 8 4.4797 2)
Average genome size in population (length): 53.98
Average program size in population (points): 54.98
Average percent parens in population: 0.019
Minimum age in population: 5.0
Maximum age in population: 9.0625
Average age in population: 7.3135625
Median age in population: 7.375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 117
Genome diversity (% unique Plush genomes):	 0.682
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 117
Syntactic diversity (% unique Push programs):	 0.682
Total error diversity:				 0.124
Error (vector) diversity:			 0.133
Behavioral diversity:				 0.134
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 7843276
--- Timings ---
Current time: 1529614820131 milliseconds
Total Time:          20.9 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         7.9 seconds, 37.6%
Fitness Testing:     10.3 seconds, 49.0%
Report:               2.7 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 52479.58949999999
Test mean error for best: 26.23979
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 78.7313932523 
Correct output: 14.755435921   | Program output: -2.9178029717 
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -1.1387404182 
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 21.5646212622 
Correct output: 66.7190026342  | Program output: -2.9102057545 
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 75.0099057627 
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 60.0632624421 
Correct output: 171.737997407  | Program output: 78.737997407  
Correct output: 44.3556039838  | Program output: 21.3556039838 
Correct output: -40.9542965608 | Program output: -2.9559524036 
Correct output: -28.6497177653 | Program output: -1.1418315612 
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 43.1658910647 
Correct output: 12.6449981755  | Program output: -1.644122147  
Correct output: 37.0251741292  | Program output: -1.7134186665 
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -2.8485389937 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction integer_div} {:instruction tagged_253} {:instruction tagged_581} {:instruction in2} {:instruction in1} {:instruction float_yank} {:instruction float_sin} {:instruction integer_max} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_dup} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (integer_min integer_min float_sub integer_div tagged_253 tagged_581 in2 in1 float_yank float_sin integer_max integer_add float_dec integer_yankdup integer_dup_items print_integer integer_max integer_mult float_sub -28.64851647495597 float_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub float_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_dup float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup_items float_max float_dup_times in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 36.0 3 17.6732 10 59.0 2 1.0 1 4.1276 10 62.0 12 57.0 2 69.6292 9 37.0 2 41.0 2 88.0 12 81.0 2 4.0 2 25.0 2 93.0 2 23.0 2 37.9983 9 27.5079 10 37.0 12 50.0 1 14.2891 8 38.7386 11 75.0 12 31.2797 10]
Total: 1218.2435999999998
Mean: 24.364872
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 4612.306258299988
Median total errors in population: 1386.3999000000001
Error averages by case: (228.95491480000138 8.899 171.8248731999999 5.268 157.5511327999989 10.924 179.30684900000006 4.167 136.3310156999998 3.262 148.17617580000191 10.312 183.66093390000015 12.087 185.4675784000002 4.336 198.38760380000053 10.725 161.27657589999987 4.024 165.53475839999993 4.184 203.32266979999997 12.273 211.3641473000002 4.49 178.56010260000022 11.282 160.52093539999993 4.242 222.12461340000036 4.257 155.0147879999999 4.289 171.97584270000155 9.941 163.7549051999992 10.66 161.77718270000003 12.525 180.48964900000004 3.531 151.9696477999993 10.703 176.06202350000092 11.399 191.7200942999999 12.308 166.29924490000056 10.79)
Error minima by case: (36.8653 2 33.0 2 1.7028 2 14.8945 1 0.0 0 0.0112 1 0.8643 8 18.5646 2 12.2327 2 5.7358 1 13.4735 1 7.4585 9 4.9901 2 1.0 1 22.0 2 13.262 2 0.6444 1 3.6947 1 0.2792 1 7.3515 9 5.8341 1 0.4077 2 0.7723 2 10.9761 9 4.4797 2)
Average genome size in population (length): 65.048
Average program size in population (points): 66.048
Average percent parens in population: 0.016
Minimum age in population: 6.5
Maximum age in population: 10.625
Average age in population: 8.66103125
Median age in population: 8.6875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 56
Genome diversity (% unique Plush genomes):	 0.702
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 56
Syntactic diversity (% unique Push programs):	 0.702
Total error diversity:				 0.173
Error (vector) diversity:			 0.181
Behavioral diversity:				 0.182
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 9493993
--- Timings ---
Current time: 1529614823793 milliseconds
Total Time:          24.5 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.2 seconds, 37.6%
Fitness Testing:     11.9 seconds, 48.6%
Report:               3.3 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 57784.50010000012
Test mean error for best: 28.89225
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 114.9910067182
Correct output: 14.755435921   | Program output: -16.9849506132
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -31.7515754352
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 57.8242347281 
Correct output: 66.7190026342  | Program output: 26.9786161    
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 111.2695192286
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 96.322875908  
Correct output: 171.737997407  | Program output: 114.9976108729
Correct output: 44.3556039838  | Program output: 57.6152174497 
Correct output: -40.9542965608 | Program output: -47.6946830949
Correct output: -28.6497177653 | Program output: -45.3901042995
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 79.4255045306 
Correct output: 12.6449981755  | Program output: 12.9046116413 
Correct output: 37.0251741292  | Program output: -14.7152124049
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -34.8686429299
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_dup} {:instruction 36.25961346587397} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction integer_stackdepth})
Best program: (float_sub float_dup 36.25961346587397 in1 float_add tag_float_737 float_max integer_yankdup integer_yankdup float_div float_div float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap integer_stackdepth)
Errors: [57.0 3 0.2596 9 31.7404 10 59.0 2 1.0 1 34.7404 13 62.0 12 20.7404 10 39.7404 9 37.0 2 41.0 2 88.0 12 44.7404 11 4.0 2 11.2596 11 56.7404 10 13.2596 11 6.7404 10 16.7404 11 37.0 12 13.7404 11 0.2596 9 51.7404 10 75.0 12 0.7404 9]
Total: 1018.1828000000002
Mean: 20.363655
Genome size: 86
Size: 87
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 5301.290436899992
Median total errors in population: 1269.9264999999998
Error averages by case: (217.86506200000025 5.746 204.63455349999987 5.188 188.50067159999938 10.663 207.21315710000002 3.955 148.40481879999996 2.833 179.16973560000272 10.374 210.62155159999998 12.141 219.04228560000013 4.274 227.20745059999868 10.111 189.3863201999999 3.809 192.0660746999999 4.04 231.31121759999996 12.145 240.90786390000014 4.503 209.16839450000222 10.973 194.0953254 4.235 250.98236980000027 4.138 190.7930853 4.339 202.1738113000026 9.493 195.34136949999873 10.1 188.9371974 12.503 214.66055120000001 3.537 184.33797829999807 9.472 205.85882790000161 11.427 219.19384920000002 12.283 197.0189143000021 10.116)
Error minima by case: (56.0 2 0.2596 2 0.2459 3 2.8 1 0.0 0 1.1276 4 1.8643 4 20.7404 2 2.719 4 7.7358 1 3.2382 1 2.2796 4 2.097 2 1.0 1 11.2596 2 7.0 1 2.2487 1 1.9543 1 0.6497 1 8.9696 4 2.941 1 0.2596 3 10.0901 2 4.0682 4 0.7404 2)
Average genome size in population (length): 79.697
Average program size in population (points): 80.697
Average percent parens in population: 0.013
Minimum age in population: 7.9375
Maximum age in population: 12.03125
Average age in population: 10.035359375
Median age in population: 10.09375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.204
Error (vector) diversity:			 0.214
Behavioral diversity:				 0.217
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 11492401
--- Timings ---
Current time: 1529614827921 milliseconds
Total Time:          28.6 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        10.6 seconds, 37.2%
Fitness Testing:     14.0 seconds, 48.8%
Report:               3.9 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 47005.776700000046
Test mean error for best: 23.50289
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 114.9910067182
Correct output: 14.755435921   | Program output: -16.9849506132
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -31.7515754352
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 57.8242347281 
Correct output: 66.7190026342  | Program output: 26.9786161    
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 111.2695192286
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 96.322875908  
Correct output: 171.737997407  | Program output: 114.9976108729
Correct output: 44.3556039838  | Program output: 57.6152174497 
Correct output: -40.9542965608 | Program output: -47.6946830949
Correct output: -28.6497177653 | Program output: -45.3901042995
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 79.4255045306 
Correct output: 12.6449981755  | Program output: 12.9046116413 
Correct output: 37.0251741292  | Program output: -14.7152124049
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -34.8686429299
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_dup} {:instruction 36.25961346587397} {:instruction in1} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction float_max} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction integer_stackdepth})
Best program: (float_sub float_dup 36.25961346587397 in1 float_add integer_yankdup integer_dup_items print_integer integer_max integer_mult float_sub -28.64851647495597 float_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub float_max float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap integer_stackdepth)
Errors: [57.0 3 0.2596 9 31.7404 10 59.0 2 1.0 1 34.7404 13 62.0 12 20.7404 10 39.7404 9 37.0 2 41.0 2 88.0 12 44.7404 11 4.0 2 11.2596 11 56.7404 10 13.2596 11 6.7404 10 16.7404 11 37.0 12 13.7404 11 0.2596 9 51.7404 10 75.0 12 0.7404 9]
Total: 1018.1828000000002
Mean: 20.363655
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 4831.350012199989
Median total errors in population: 1269.9264999999998
Error averages by case: (194.35156750000016 5.119 185.25292890000003 4.925 172.0093684999992 10.598 188.32120779999997 3.836 124.33676099999995 2.468 164.58818820000266 10.318 193.86547079999994 11.952 200.63459689999996 4.058 209.85787609999844 10.039 170.53604489999984 3.723 174.2394846999998 3.921 213.2146307999999 11.968 223.17606650000005 4.32 184.56746490000208 9.467 175.42905560000003 3.977 232.50975350000002 3.961 172.2292997 4.087 183.06785340000255 9.001 178.70553989999848 9.542 171.29885610000008 12.365 196.52602770000004 3.385 166.94918689999827 9.311 190.55253270000142 11.45 201.5204228000001 12.126 178.1648264000019 9.528)
Error minima by case: (56.0 2 0.2596 3 10.7022 8 1.4274 1 0.0 0 1.0645 9 4.0193 8 8.9062 2 8.281 9 0.7404 2 2.1749 1 9.5415 9 2.097 2 2.0 2 10.2596 2 10.3689 2 2.2487 2 3.6947 2 0.3503 2 11.3713 10 2.941 1 0.2596 7 9.0901 9 4.7167 9 0.1283 2)
Average genome size in population (length): 80.954
Average program size in population (points): 81.954
Average percent parens in population: 0.013
Minimum age in population: 9.125
Maximum age in population: 13.390625
Average age in population: 11.4158984375
Median age in population: 11.40625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.834
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.834
Total error diversity:				 0.209
Error (vector) diversity:			 0.226
Behavioral diversity:				 0.226
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 13522911
--- Timings ---
Current time: 1529614831953 milliseconds
Total Time:          32.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.0 seconds, 36.7%
Fitness Testing:     16.0 seconds, 49.0%
Report:               4.6 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 47005.776700000046
Test mean error for best: 23.50289
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 114.9910067182
Correct output: 14.755435921   | Program output: -16.9849506132
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -31.7515754352
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 57.8242347281 
Correct output: 66.7190026342  | Program output: 26.9786161    
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 111.2695192286
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 96.322875908  
Correct output: 171.737997407  | Program output: 114.9976108729
Correct output: 44.3556039838  | Program output: 57.6152174497 
Correct output: -40.9542965608 | Program output: -47.6946830949
Correct output: -28.6497177653 | Program output: -45.3901042995
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 79.4255045306 
Correct output: 12.6449981755  | Program output: 12.9046116413 
Correct output: 37.0251741292  | Program output: -14.7152124049
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -34.8686429299
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_dup} {:instruction 36.25961346587397} {:instruction in1} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction float_max} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction integer_stackdepth})
Best program: (float_sub float_dup 36.25961346587397 in1 float_add integer_yankdup integer_dup_items print_integer integer_max integer_mult float_sub -28.64851647495597 float_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub float_max float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap integer_stackdepth)
Errors: [57.0 3 0.2596 9 31.7404 10 59.0 2 1.0 1 34.7404 13 62.0 12 20.7404 10 39.7404 9 37.0 2 41.0 2 88.0 12 44.7404 11 4.0 2 11.2596 11 56.7404 10 13.2596 11 6.7404 10 16.7404 11 37.0 12 13.7404 11 0.2596 9 51.7404 10 75.0 12 0.7404 9]
Total: 1018.1828000000002
Mean: 20.363655
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 4578.047626999986
Median total errors in population: 1264.9264999999998
Error averages by case: (176.51494030000006 4.817 180.33347679999991 5.198 171.72527039999966 10.649 166.7353053 4.189 115.80369820000001 2.451 164.31924830000193 10.53 173.56771939999993 11.96 195.08834540000007 4.374 204.7738916999991 10.157 148.7241604999999 4.028 153.1661422999997 4.252 192.40699839999974 12.001 218.5714199000002 4.712 166.30997730000024 6.481 171.7167286 4.373 228.9405251000002 4.338 167.94830109999995 4.482 178.10997130000186 8.572 173.85508719999882 9.116 149.78365940000018 12.262 190.84631210000015 3.833 161.93366159999886 9.529 189.1295209000009 11.58 179.87085790000006 12.185 172.81040760000104 8.993)
Error minima by case: (56.0 2 0.2596 3 4.5192 8 13.5192 1 0.0 0 1.5192 8 14.8643 4 5.5646 2 6.281 8 0.7404 2 4.7404 1 24.7545 2 2.097 2 1.9858 2 1.6485 2 10.3689 2 0.6444 2 3.6947 2 0.0012 2 1.5098 2 2.941 1 0.2596 7 9.0901 8 5.1448 2 0.2596 2)
Average genome size in population (length): 80.328
Average program size in population (points): 81.328
Average percent parens in population: 0.013
Minimum age in population: 10.125
Maximum age in population: 14.921875
Average age in population: 12.767546875
Median age in population: 12.81640625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 42
Genome diversity (% unique Plush genomes):	 0.826
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 42
Syntactic diversity (% unique Push programs):	 0.826
Total error diversity:				 0.227
Error (vector) diversity:			 0.241
Behavioral diversity:				 0.242
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 15541566
--- Timings ---
Current time: 1529614836016 milliseconds
Total Time:          36.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.4 seconds, 36.4%
Fitness Testing:     18.1 seconds, 49.3%
Report:               5.1 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 57784.50010000012
Test mean error for best: 28.89225
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 114.9910067182
Correct output: 14.755435921   | Program output: -16.9849506132
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -31.7515754352
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 57.8242347281 
Correct output: 66.7190026342  | Program output: 26.9786161    
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 111.2695192286
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 96.322875908  
Correct output: 171.737997407  | Program output: 114.9976108729
Correct output: 44.3556039838  | Program output: 57.6152174497 
Correct output: -40.9542965608 | Program output: -47.6946830949
Correct output: -28.6497177653 | Program output: -45.3901042995
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 79.4255045306 
Correct output: 12.6449981755  | Program output: 12.9046116413 
Correct output: 37.0251741292  | Program output: -14.7152124049
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -34.8686429299
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_dup} {:instruction 36.25961346587397} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap})
Best program: (float_sub float_dup 36.25961346587397 in1 float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot integer_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_dec integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap)
Errors: [57.0 3 0.2596 9 31.7404 10 59.0 2 1.0 1 34.7404 13 62.0 12 20.7404 10 39.7404 9 37.0 2 41.0 2 88.0 12 44.7404 11 4.0 2 11.2596 11 56.7404 10 13.2596 11 6.7404 10 16.7404 11 37.0 12 13.7404 11 0.2596 9 51.7404 10 75.0 12 0.7404 9]
Total: 1018.1828000000002
Mean: 20.363655
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3849.719933000004
Median total errors in population: 1218.2435999999998
Error averages by case: (157.25295380000028 5.062 142.52764520000025 5.48 139.1329004000003 10.485 148.38999660000002 3.211 93.66944389999998 2.069 131.49136030000145 10.788 151.98524719999998 12.04 159.00642790000003 4.906 171.62966219999925 9.808 128.86782239999994 3.155 132.7168120999999 3.297 174.20759299999997 12.054 181.81215280000035 5.301 134.83983790000022 5.579 135.98999990000027 5.044 192.89795170000045 4.799 133.53890420000033 5.13 144.56213830000135 9.364 140.27234809999854 10.032 129.05314610000005 12.32 153.4927023000001 4.513 127.40564419999949 9.211 157.27422090000013 11.174 162.19274260000003 12.121 138.9912789999995 9.576)
Error minima by case: (56.0 2 0.2596 3 10.0184 8 19.9256 1 0.0 0 1.1276 8 11.1357 8 19.7404 2 22.1784 8 8.2175 2 21.5328 1 4.5415 10 24.645 2 2.0 2 9.2596 2 55.7404 2 9.096 2 1.9543 2 0.0012 2 13.0723 10 12.7404 1 0.2596 7 1.7656 8 15.0682 10 0.2596 2)
Average genome size in population (length): 83.364
Average program size in population (points): 84.364
Average percent parens in population: 0.012
Minimum age in population: 11.546875
Maximum age in population: 16.259765625
Average age in population: 14.15522265625
Median age in population: 14.2421875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.832
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.832
Total error diversity:				 0.205
Error (vector) diversity:			 0.214
Behavioral diversity:				 0.214
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 17638716
--- Timings ---
Current time: 1529614840322 milliseconds
Total Time:          41.0 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.8 seconds, 36.1%
Fitness Testing:     20.3 seconds, 49.6%
Report:               5.8 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 55278.810200000116
Test mean error for best: 27.63941
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 115.9910067182
Correct output: 14.755435921   | Program output: -15.9849506132
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -30.7515754352
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 58.8242347281 
Correct output: 66.7190026342  | Program output: 27.9786161    
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 112.2695192286
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 97.322875908  
Correct output: 171.737997407  | Program output: 115.9976108729
Correct output: 44.3556039838  | Program output: 58.6152174497 
Correct output: -40.9542965608 | Program output: -46.6946830949
Correct output: -28.6497177653 | Program output: -44.3901042995
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 80.4255045306 
Correct output: 12.6449981755  | Program output: 13.9046116413 
Correct output: 37.0251741292  | Program output: -13.7152124049
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -33.8686429299
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_dup} {:instruction 36.25961346587397} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_swap} {:instruction float_dup_items} {:instruction integer_max} {:instruction float_inc} {:instruction integer_flush} {:instruction in1} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_stackdepth} {:instruction integer_div} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction integer_stackdepth})
Best program: (float_sub float_dup 36.25961346587397 in1 float_add tag_float_737 float_max integer_yankdup integer_yankdup float_div float_div float_stackdepth tagged_950 float_mod float_sub float_yankdup integer_add integer_swap float_dup_items integer_max float_inc integer_flush in1 float_frominteger integer_div float_stackdepth integer_div float_dec integer_dec integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_swap float_dup integer_mult float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod integer_stackdepth integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times float_dec float_rot float_dup_times float_swap integer_stackdepth)
Errors: [57.0 3 1.2596 10 30.7404 10 59.0 2 1.0 1 33.7404 13 62.0 12 19.7404 9 38.7404 10 37.0 2 41.0 2 88.0 12 43.7404 11 4.0 2 12.2596 11 55.7404 10 14.2596 11 5.7404 10 15.7404 11 37.0 12 12.7404 11 1.2596 10 50.7404 10 75.0 12 0.2596 10]
Total: 1014.7020000000001
Mean: 20.29404
Genome size: 94
Size: 95
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 4424.2124979000055
Median total errors in population: 1214.2435999999998
Error averages by case: (185.81205740000044 5.764 151.78750940000035 7.864 169.34789979999982 10.652 176.97407389999998 3.433 118.91950989999997 2.487 168.041814000001 12.082 179.73396839999998 12.193 167.77901520000026 7.969 182.87866030000032 9.892 157.83735769999998 3.411 161.4682805 3.511 202.03087369999994 12.201 189.6010479000009 8.658 166.02988319999992 7.265 154.55653460000005 8.436 199.96843310000125 7.839 153.8374495000003 8.606 160.02420770000066 10.05 163.08151199999972 10.766 157.87503809999998 12.549 162.65144890000022 8.227 145.8746690000004 9.721 186.2675965000011 10.914 190.6425904 12.257 154.89206679999978 9.552)
Error minima by case: (56.0 2 0.2596 3 3.0919 3 2.0982 1 0.0 0 1.9888 4 19.0441 4 1.8242 2 2.4808 4 7.9386 2 0.6772 1 25.6384 4 4.9901 2 2.0 2 9.2596 2 13.262 2 0.6444 2 3.6947 2 0.0012 2 8.9696 4 5.8341 1 0.2596 3 1.7656 2 15.6242 4 0.2596 2)
Average genome size in population (length): 82.839
Average program size in population (points): 83.839
Average percent parens in population: 0.012
Minimum age in population: 13.1640625
Maximum age in population: 17.48046875
Average age in population: 15.571638671875
Median age in population: 15.623046875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.24
Error (vector) diversity:			 0.253
Behavioral diversity:				 0.254
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 19738791
--- Timings ---
Current time: 1529614844705 milliseconds
Total Time:          45.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.2 seconds, 35.7%
Fitness Testing:     22.5 seconds, 49.7%
Report:               6.5 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 57189.19460000013
Test mean error for best: 28.59460
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (integer_min integer_min float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup integer_yankdup float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 0.9603 8 31.0397 11 59.0 2 1.0 1 34.0397 12 62.0 12 20.0397 8 39.0397 10 37.0 2 41.0 2 88.0 12 44.0397 11 4.0 2 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 37.0 12 13.0397 9 0.9603 9 51.0397 10 75.0 12 0.0397 8]
Total: 1001.2779000000002
Mean: 20.025558
Genome size: 75
Size: 76
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 4312.9961197000075
Median total errors in population: 1053.4424000000001
Error averages by case: (185.04929470000013 4.987 140.2406092000007 8.963 167.91556430000014 10.607 177.00405610000004 3.504 120.48898230000003 2.578 169.73897190000028 12.584 179.13945910000004 12.201 155.90243889999977 9.347 173.58122690000047 9.9 157.88994990000003 3.416 161.44765180000005 3.544 202.26846719999995 12.213 179.5058306000008 10.224 164.09168789999987 6.13 145.13960860000066 10.006 189.92396690000135 9.215 144.45498240000066 10.215 150.40157919999933 10.211 156.95669159999983 10.954 157.08645480000004 12.459 150.31916779999955 9.921 138.45200970000062 10.002 184.34066870000106 10.685 190.8335017 12.281 145.1782974999993 9.498)
Error minima by case: (56.0 2 0.2596 2 3.0919 8 1.5751 1 0.0 0 2.2015 7 2.8643 4 7.9081 2 7.281 9 9.3575 2 0.154 1 9.4585 3 16.0919 1 3.0 2 9.5725 2 8.0 1 8.096 2 5.7404 2 0.9988 2 13.0723 4 12.7404 1 0.2596 7 0.7656 8 18.6981 4 0.0397 2)
Average genome size in population (length): 83.407
Average program size in population (points): 84.407
Average percent parens in population: 0.012
Minimum age in population: 14.1640625
Maximum age in population: 18.89208984375
Average age in population: 17.012515625
Median age in population: 17.04052734375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.842
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.842
Total error diversity:				 0.201
Error (vector) diversity:			 0.205
Behavioral diversity:				 0.206
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 21853691
--- Timings ---
Current time: 1529614848848 milliseconds
Total Time:          49.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        17.5 seconds, 35.3%
Fitness Testing:     24.7 seconds, 49.8%
Report:               7.3 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 44970.19940000004
Test mean error for best: 22.48510
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 143.6395231931
Correct output: 14.755435921   | Program output: 11.6635658618 
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -3.1030589602 
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 86.472751203  
Correct output: 66.7190026342  | Program output: 55.627132575  
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 139.9180357035
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 124.9713923829
Correct output: 171.737997407  | Program output: 143.6461273478
Correct output: 44.3556039838  | Program output: 86.2637339246 
Correct output: -40.9542965608 | Program output: -19.04616662  
Correct output: -28.6497177653 | Program output: -16.7415878245
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 108.0740210055
Correct output: 12.6449981755  | Program output: 41.5531281163 
Correct output: 37.0251741292  | Program output: 13.93330407   
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -6.220126455  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_dup} {:instruction 36.25961346587397} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_mod} {:instruction float_dup} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction float_mult} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (float_sub float_dup 36.25961346587397 in1 float_add tag_float_737 float_max integer_yankdup integer_yankdup float_div float_div float_stackdepth tagged_950 float_mod float_sub integer_yankdup integer_dup_items print_integer integer_max integer_mult float_sub -28.64851647495597 integer_mult float_sub -28.64851647495597 float_rot float_dup_times integer_fromfloat in2 float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_mult float_sub integer_dup_times float_mod integer_stackdepth integer_dup_items float_mod float_dup float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush float_mult -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 28.9081 10 3.0919 9 59.0 2 1.0 1 6.0919 12 62.0 12 7.9081 10 11.0919 11 37.0 2 41.0 2 88.0 12 16.0919 10 4.0 2 39.9081 11 28.0919 10 41.9081 10 21.9081 9 11.9081 10 37.0 12 14.9081 11 28.9081 10 23.0919 11 75.0 12 27.9081 9]
Total: 985.7243
Mean: 19.714485
Genome size: 98
Size: 99
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 4194.790249900004
Median total errors in population: 1018.1828000000002
Error averages by case: (181.6901308000001 4.656 134.89790070000092 8.678 169.89997280000048 10.681 166.20832369999997 3.426 108.6764212 2.461 171.6750030000006 12.567 169.68710849999997 12.246 152.85403239999994 9.072 173.37302550000084 9.937 146.73857660000002 3.317 150.3387013 3.426 192.57094949999998 12.288 174.27172270000068 9.858 160.1851208999999 4.781 140.32021130000064 9.712 184.69343870000102 8.939 140.8395389000006 9.905 151.77107499999994 10.015 158.3314699000002 10.737 146.69651300000004 12.453 146.11229739999956 9.595 138.47230380000084 10.061 186.49071850000135 10.769 180.19298869999994 12.3 146.61870509999954 9.304)
Error minima by case: (37.8653 2 0.1144 3 3.0919 8 20.0 1 0.0 0 2.0446 8 12.8643 2 7.0454 2 4.1391 8 2.0 1 2.0 1 30.4585 10 4.9901 2 3.0 2 7.9392 2 13.262 2 0.6444 2 4.6947 2 0.9988 2 2.0 1 5.8341 1 0.1144 7 1.7656 8 23.9318 11 0.0397 2)
Average genome size in population (length): 84.714
Average program size in population (points): 85.714
Average percent parens in population: 0.012
Minimum age in population: 15.1640625
Maximum age in population: 20.8359375
Average age in population: 18.45445166015625
Median age in population: 18.4920654296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.887
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.887
Total error diversity:				 0.195
Error (vector) diversity:			 0.198
Behavioral diversity:				 0.198
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 23996166
--- Timings ---
Current time: 1529614853114 milliseconds
Total Time:          53.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        18.9 seconds, 35.1%
Fitness Testing:     27.0 seconds, 50.1%
Report:               7.8 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 44970.19940000004
Test mean error for best: 22.48510
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 143.6395231931
Correct output: 14.755435921   | Program output: 11.6635658618 
Correct output: 21.3583337919  | Program output: 80.3583337919 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -3.1030589602 
Correct output: -50.135719703  | Program output: 11.864280297  
Correct output: 78.5646212622  | Program output: 86.472751203  
Correct output: 66.7190026342  | Program output: 55.627132575  
Correct output: 9.7358427867   | Program output: 46.7358427867 
Correct output: 22.7793630647  | Program output: 63.7793630647 
Correct output: -43.5414748403 | Program output: 44.4585251597 
Correct output: 156.0099057627 | Program output: 139.9180357035
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 124.9713923829
Correct output: 171.737997407  | Program output: 143.6461273478
Correct output: 44.3556039838  | Program output: 86.2637339246 
Correct output: -40.9542965608 | Program output: -19.04616662  
Correct output: -28.6497177653 | Program output: -16.7415878245
Correct output: -17.2771991531 | Program output: 19.7228008469 
Correct output: 93.1658910647  | Program output: 108.0740210055
Correct output: 12.6449981755  | Program output: 41.5531281163 
Correct output: 37.0251741292  | Program output: 13.93330407   
Correct output: -23.9317722741 | Program output: 51.0682277259 
Correct output: -34.1282563958 | Program output: -6.220126455  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_dup} {:instruction 36.25961346587397} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction print_integer} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction integer_mult} {:instruction float_sub} {:instruction -28.64851647495597} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_div} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_mod} {:instruction float_dup} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction float_mult} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction tagged_838} {:instruction float_dup} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (float_sub float_dup 36.25961346587397 in1 float_add tag_float_737 float_max integer_yankdup integer_yankdup float_div float_div float_stackdepth tagged_950 float_mod float_sub integer_yankdup integer_dup_items print_integer integer_max integer_mult float_sub -28.64851647495597 integer_mult float_sub -28.64851647495597 float_rot float_dup_times integer_fromfloat in2 float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_div -52 integer_yankdup float_dup integer_mult float_sub integer_dup_times float_mod integer_stackdepth integer_dup_items float_mod float_dup float_min integer_dec integer_add in1 float_rot integer_mult in1 float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush float_mult -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan tagged_838 float_dup float_sin float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 28.9081 10 3.0919 9 59.0 2 1.0 1 6.0919 12 62.0 12 7.9081 10 11.0919 11 37.0 2 41.0 2 88.0 12 16.0919 10 4.0 2 39.9081 11 28.0919 10 41.9081 10 21.9081 9 11.9081 10 37.0 12 14.9081 11 28.9081 10 23.0919 11 75.0 12 27.9081 9]
Total: 985.7243
Mean: 19.714485
Genome size: 98
Size: 99
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 4097.7451852
Median total errors in population: 1018.1828000000002
Error averages by case: (171.68182500000012 4.664 136.06715900000117 8.896 167.72246680000057 10.624 159.1286841 3.462 98.51836380000003 2.42 169.69611490000085 12.563 160.28579669999993 12.204 151.71694699999998 9.208 168.76502710000068 9.958 139.57996550000004 3.335 143.17154570000002 3.439 184.77889209999995 12.248 174.42204690000096 10.102 153.85732969999998 4.502 140.89515190000083 9.904 184.9039298000011 9.142 141.16196240000087 10.086 150.33101490000007 9.971 157.1555678000002 10.722 138.43448510000002 12.384 146.0296301 9.801 134.58160510000135 10.052 184.3007490000011 10.763 173.18834799999993 12.277 145.2915767999998 9.352)
Error minima by case: (55.0 2 0.1061 3 1.9826 8 4.6203 1 0.0 0 2.9888 9 10.1357 9 2.8242 2 7.281 8 7.0022 2 6.0414 1 3.5415 8 4.9901 2 3.0 2 0.8463 2 13.262 2 0.6444 2 0.9543 2 0.9988 2 8.2427 8 5.8341 1 0.1061 7 0.7656 8 14.8973 10 0.0397 2)
Average genome size in population (length): 85.038
Average program size in population (points): 86.038
Average percent parens in population: 0.012
Minimum age in population: 16.1640625
Maximum age in population: 21.9049072265625
Average age in population: 19.89241137695312
Median age in population: 19.93304443359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.876
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.876
Total error diversity:				 0.188
Error (vector) diversity:			 0.194
Behavioral diversity:				 0.195
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 26146191
--- Timings ---
Current time: 1529614857335 milliseconds
Total Time:          58.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.2 seconds, 34.8%
Fitness Testing:     29.2 seconds, 50.3%
Report:               8.5 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 48603.04520000011
Test mean error for best: 24.30152
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -75.0         
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -15.7086094361
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times float_swap float_mult)
Errors: [76.8653 12 0.9603 8 31.0397 11 22.3583 11 77.8145 11 34.0397 12 49.1357 10 20.0397 8 39.0397 10 10.7358 12 23.7794 11 42.5415 11 44.0397 11 32.9603 10 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 16.2772 11 13.0397 9 0.9603 9 51.0397 10 22.9318 12 0.0397 8]
Total: 966.6777000000001
Mean: 19.333553
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 4314.641665099999
Median total errors in population: 1018.1828000000002
Error averages by case: (178.25186970000016 4.907 151.7774169000004 9.272 171.85131280000013 10.703 164.56213230000003 3.674 106.2053279 2.649 174.38376530000033 12.743 166.43026580000003 12.338 165.0988496 9.253 178.89761500000054 10.141 145.19416560000005 3.57 148.78154100000006 3.627 190.22175019999997 12.385 187.57158500000074 10.315 157.02333679999995 4.547 157.61371210000007 10.113 197.88068870000114 9.372 156.79493700000003 10.278 155.76754309999984 10.127 162.63561519999993 10.934 144.37808370000005 12.509 161.87301389999996 10.057 146.51782060000033 10.288 188.68140470000085 10.864 178.6138112 12.395 150.89010099999985 9.683)
Error minima by case: (56.0 2 0.2596 3 2.0919 8 21.3583 1 0.0 0 2.9888 9 11.1357 9 7.9081 2 0.8559 9 9.3575 2 21.9674 1 4.5415 10 15.0919 2 3.0 2 3.6485 2 27.0919 2 5.6485 2 1.9543 2 0.9988 2 8.9696 8 10.6704 1 0.2596 7 0.7656 8 15.0682 10 0.0397 2)
Average genome size in population (length): 85.98
Average program size in population (points): 86.98
Average percent parens in population: 0.012
Minimum age in population: 17.1640625
Maximum age in population: 23.42987060546875
Average age in population: 21.33600360107422
Median age in population: 21.39059448242188
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.881
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.881
Total error diversity:				 0.213
Error (vector) diversity:			 0.221
Behavioral diversity:				 0.222
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 28323007
--- Timings ---
Current time: 1529614861661 milliseconds
Total Time:          62.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.6 seconds, 34.6%
Fitness Testing:     31.6 seconds, 50.6%
Report:               9.1 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 48603.04520000011
Test mean error for best: 24.30152
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -75.0         
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -15.7086094361
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times float_swap float_mult)
Errors: [76.8653 12 0.9603 8 31.0397 11 22.3583 11 77.8145 11 34.0397 12 49.1357 10 20.0397 8 39.0397 10 10.7358 12 23.7794 11 42.5415 11 44.0397 11 32.9603 10 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 16.2772 11 13.0397 9 0.9603 9 51.0397 10 22.9318 12 0.0397 8]
Total: 966.6777000000001
Mean: 19.333553
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 4420.511857599996
Median total errors in population: 1018.1828000000002
Error averages by case: (181.55532060000016 5.095 155.00077130000034 9.336 177.25670320000023 10.671 166.2695892 3.925 116.48850180000007 3.003 178.9945889000005 12.345 169.3438041 12.238 168.47040950000007 8.874 184.82807380000077 10.503 147.00927679999998 3.805 150.6526102 3.898 192.56376429999986 12.326 188.8749215000008 10.095 168.65019530000006 4.687 160.5748133000002 9.813 199.1075057000011 9.246 161.04574280000017 9.834 161.7607133999999 9.961 167.58850330000004 10.742 147.44127390000003 12.465 163.6199514 9.785 154.58720930000027 10.527 193.86063010000106 10.997 181.0744144999999 12.349 157.6265693999996 9.746)
Error minima by case: (36.8653 2 0.2596 3 2.0919 8 20.3583 1 0.0 0 1.0052 7 23.8643 8 1.8242 2 6.281 8 8.7358 2 21.3883 1 30.4585 10 3.9901 2 0.8332 2 3.6485 2 12.262 2 0.3556 2 4.1449 2 0.0012 2 16.2772 8 2.5883 1 0.2596 8 0.1701 8 22.9318 10 0.0397 2)
Average genome size in population (length): 86.049
Average program size in population (points): 87.049
Average percent parens in population: 0.012
Minimum age in population: 20.5906982421875
Maximum age in population: 24.91510009765625
Average age in population: 22.80854052734375
Median age in population: 22.84559631347656
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.85
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.85
Total error diversity:				 0.237
Error (vector) diversity:			 0.242
Behavioral diversity:				 0.243
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 30506457
--- Timings ---
Current time: 1529614865969 milliseconds
Total Time:          66.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.9 seconds, 34.4%
Fitness Testing:     34.0 seconds, 50.9%
Report:               9.7 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 48049.5240000001
Test mean error for best: 24.02476
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -75.0         
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -15.7086094361
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction integer_swap} {:instruction -40} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup} {:instruction integer_rot} {:instruction float_shove} {:instruction float_tan} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_dec} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_flush integer_swap -40 integer_add integer_add integer_mod float_dup integer_rot float_shove float_tan in2 float_flush integer_mod integer_max float_dec float_rot float_dup_times float_swap float_mult)
Errors: [76.8653 12 0.9603 8 31.0397 11 22.3583 11 77.8145 11 34.0397 12 49.1357 10 20.0397 8 39.0397 10 10.7358 12 23.7794 11 42.5415 11 44.0397 11 32.9603 10 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 16.2772 11 13.0397 9 0.9603 9 51.0397 10 22.9318 12 0.0397 8]
Total: 966.6777000000001
Mean: 19.333553
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3995.576100899999
Median total errors in population: 1014.7020000000001
Error averages by case: (161.35252160000016 4.801 143.41014090000093 9.079 160.15384309999948 10.35 145.12496450000017 3.79 92.92469360000001 2.892 165.1025693999997 11.69 146.53865200000013 12.07 150.4436175999995 8.84 164.8647781999998 10.669 125.33070540000006 3.755 129.2344167000001 3.787 170.99850680000006 12.206 169.09813109999976 9.861 153.01947120000003 4.76 149.3565568000007 9.577 179.51131539999992 9.31 150.77496500000058 9.281 155.01428199999967 9.51 158.04031829999974 10.163 124.20648890000005 12.26 148.77392179999956 9.602 142.92653640000086 10.318 176.3815483999999 11.031 159.10111880000008 12.213 152.72403699999964 9.353)
Error minima by case: (36.8653 2 0.0397 3 1.0919 8 13.9013 1 0.0 0 2.0547 8 23.8643 8 2.1718 2 2.8109 8 9.7358 2 12.4803 1 30.4585 10 14.0919 2 2.0 2 3.6485 2 26.0919 2 1.2076 2 1.8474 2 0.9988 2 5.5826 8 10.1449 1 0.0397 7 0.1701 8 12.2372 11 0.0397 2)
Average genome size in population (length): 84.48
Average program size in population (points): 85.48
Average percent parens in population: 0.012
Minimum age in population: 21.8048095703125
Maximum age in population: 26.22642517089844
Average age in population: 24.19116893005371
Median age in population: 24.23178863525391
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.833
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.833
Total error diversity:				 0.247
Error (vector) diversity:			 0.248
Behavioral diversity:				 0.249
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 32652457
--- Timings ---
Current time: 1529614870193 milliseconds
Total Time:          71.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.3 seconds, 34.2%
Fitness Testing:     36.3 seconds, 51.1%
Report:              10.3 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 48902.85110000002
Test mean error for best: 24.45143
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -75.0         
Correct output: 114.7313932523 | Program output: 114.9910067182
Correct output: 14.755435921   | Program output: -16.9849506132
Correct output: 21.3583337919  | Program output: -1.3820527423 
Correct output: 76.8145408742  | Program output: -1.9258456599 
Correct output: 2.9888110989   | Program output: -31.7515754352
Correct output: -50.135719703  | Program output: -1.8761062371 
Correct output: 78.5646212622  | Program output: 57.8242347281 
Correct output: 66.7190026342  | Program output: 26.9786161    
Correct output: 9.7358427867   | Program output: -1.0045437474 
Correct output: 22.7793630647  | Program output: -1.9610234694 
Correct output: -43.5414748403 | Program output: -1.2818613744 
Correct output: 156.0099057627 | Program output: 111.2695192286
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 96.322875908  
Correct output: 171.737997407  | Program output: 114.9976108729
Correct output: 44.3556039838  | Program output: 57.6152174497 
Correct output: -40.9542965608 | Program output: -47.6946830949
Correct output: -28.6497177653 | Program output: -45.3901042995
Correct output: -17.2771991531 | Program output: -1.0175856872 
Correct output: 93.1658910647  | Program output: 79.4255045306 
Correct output: 12.6449981755  | Program output: 12.9046116413 
Correct output: 37.0251741292  | Program output: -14.7152124049
Correct output: -23.9317722741 | Program output: -1.6721588082 
Correct output: -34.1282563958 | Program output: -34.8686429299
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_dup} {:instruction 36.25961346587397} {:instruction in1} {:instruction float_add} {:instruction tag_float_696} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_dup_items} {:instruction integer_max} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_pop} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_swap} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_mult})
Best program: (float_sub float_dup 36.25961346587397 in1 float_add tag_float_696 float_max integer_yankdup integer_yankdup float_div float_div float_stackdepth tagged_950 float_mod float_sub float_yankdup integer_yankdup integer_swap float_dup_items integer_max float_inc integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_inc integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_pop float_dup_times float_mult integer_yankdup float_stackdepth float_dup_times float_swap integer_yankdup integer_dup float_max float_dup_times in2 float_mult)
Errors: [76.8653 12 0.2596 9 31.7404 10 22.7404 9 78.7404 11 34.7404 13 48.2596 11 20.7404 10 39.7404 9 10.7404 10 24.7404 10 42.2596 11 44.7404 11 4.0 2 11.2596 11 56.7404 10 13.2596 11 6.7404 10 16.7404 11 16.2596 10 13.7404 11 0.2596 9 51.7404 10 22.2596 12 0.7404 9]
Total: 942.0481000000001
Mean: 18.840961
Genome size: 80
Size: 81
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2878.4966681999995
Median total errors in population: 1001.2779000000002
Error averages by case: (142.24046380000033 4.918 100.30271320000051 8.737 94.34723039999956 10.132 114.41202400000034 3.806 63.32320780000003 2.954 102.58632399999951 11.571 119.03827170000002 11.907 97.0897963999999 8.738 105.83712509999941 10.84 94.590746 3.903 99.14499110000001 3.804 140.63813080000034 12.054 113.63537569999933 9.298 102.82067940000013 4.703 105.83748870000055 9.325 125.23848459999923 9.072 104.99014140000052 8.865 102.4574078999999 9.29 100.09818009999987 9.788 94.99398229999989 12.099 98.69641279999992 9.294 96.60840730000044 10.247 111.95380319999938 11.057 127.93020190000024 12.16 102.11807859999993 9.005)
Error minima by case: (36.8653 2 0.0397 3 1.1978 8 14.602 1 0.0 0 0.434 8 17.5215 8 5.9081 2 0.8109 8 8.7358 2 13.181 1 10.9272 10 4.9901 2 3.0 2 3.6485 2 0.5566 2 0.6444 2 3.1449 2 0.0012 2 10.7228 8 5.8341 1 0.0397 7 0.2344 7 4.0682 10 0.0397 2)
Average genome size in population (length): 86.533
Average program size in population (points): 87.533
Average percent parens in population: 0.012
Minimum age in population: 23.03825378417969
Maximum age in population: 27.68164825439453
Average age in population: 25.73597984313965
Median age in population: 25.79565048217773
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.828
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.828
Total error diversity:				 0.261
Error (vector) diversity:			 0.263
Behavioral diversity:				 0.263
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 34851964
--- Timings ---
Current time: 1529614874621 milliseconds
Total Time:          75.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.7 seconds, 34.1%
Fitness Testing:     38.6 seconds, 51.3%
Report:              10.9 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 48426.18110000012
Test mean error for best: 24.21309
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -75.0         
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction in1} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_div} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction -45.14410243647322} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (integer_flush integer_min float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup in1 float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 float_add integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_div -52 integer_yankdup float_dup integer_mult float_sub integer_dup_times float_mod float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup -45.14410243647322 float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times float_swap float_mult)
Errors: [76.8653 12 0.9603 8 31.0397 11 22.3583 11 77.8145 11 34.0397 12 49.1357 10 20.0397 8 39.0397 10 10.7358 12 23.7794 11 42.5415 11 44.0397 11 4.0 2 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 16.2772 11 13.0397 9 0.9603 9 51.0397 10 22.9318 12 0.0397 8]
Total: 929.7174000000001
Mean: 18.594349
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3259.8011688000006
Median total errors in population: 985.7243
Error averages by case: (154.5395100000008 6.912 110.49499240000078 8.827 114.01968359999897 10.452 127.58446170000093 5.493 96.6088660999996 4.861 121.8962863999992 11.784 135.05943440000004 11.64 106.99579749999971 8.956 118.72245119999899 10.928 109.73375249999971 5.716 115.63647029999998 5.478 151.27146320000043 11.937 124.89292189999914 9.611 117.33757680000076 6.208 114.80221060000075 9.476 135.73652929999903 9.425 114.10666780000079 9.084 121.36794509999952 9.424 119.49661969999947 9.931 110.75142009999965 12.034 107.94004499999981 9.489 110.18432320000082 10.322 130.93318849999903 11.164 138.0837569000005 12.204 121.23079459999957 9.018)
Error minima by case: (17.0 2 0.0397 3 0.1164 8 13.9013 1 0.0 0 0.5838 8 11.1357 8 2.4354 2 1.2154 8 9.7358 2 12.4803 1 4.5415 10 4.9901 2 2.0 2 2.6485 2 0.5566 2 0.6444 2 1.9543 2 0.0012 2 1.2392 8 5.8341 1 0.0397 8 0.1701 8 5.4154 9 0.0397 2)
Average genome size in population (length): 86.741
Average program size in population (points): 87.741
Average percent parens in population: 0.011
Minimum age in population: 25.14851379394531
Maximum age in population: 29.31658935546875
Average age in population: 27.22637351608276
Median age in population: 27.25897407531738
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.845
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.845
Total error diversity:				 0.281
Error (vector) diversity:			 0.285
Behavioral diversity:				 0.285
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 37052836
--- Timings ---
Current time: 1529614879002 milliseconds
Total Time:          79.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.0 seconds, 33.9%
Fitness Testing:     40.8 seconds, 51.3%
Report:              11.6 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 46765.96180000011
Test mean error for best: 23.38298
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in1} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items in1 float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 0.9603 8 31.0397 11 22.3583 11 77.8145 11 34.0397 12 49.1357 10 20.0397 8 39.0397 10 10.7358 12 23.7794 11 42.5415 11 44.0397 11 4.0 2 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 16.2772 11 13.0397 9 0.9603 9 51.0397 10 22.9318 12 0.0397 8]
Total: 900.8521000000001
Mean: 18.017042
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3181.2248367999987
Median total errors in population: 983.7243
Error averages by case: (167.20869970000174 9.914 102.06481180000125 8.55 113.47883179999843 10.938 120.27289490000202 8.344 124.90217539999838 8.071 115.35292079999864 11.89 133.47298849999993 11.036 110.04966229999869 8.574 123.28646889999828 10.592 105.62509199999921 8.811 114.17529969999993 8.317 140.10820380000152 11.633 131.7414836999982 10.158 107.61177450000116 7.856 106.82321150000134 9.183 143.4105788999981 9.936 105.37035990000122 8.604 100.78552379999894 9.589 105.32141929999891 9.978 107.8999948999992 11.679 106.89619409999882 9.134 96.88212680000119 10.041 130.98094149999827 10.862 125.57739090000149 12.251 97.36678739999898 8.618)
Error minima by case: (55.0 2 0.0397 3 1.0919 8 18.2177 1 0.0 0 0.8034 8 13.1754 9 1.8242 2 1.8109 8 0.0397 2 3.9603 1 6.5811 8 3.9901 2 2.8334 2 9.2596 2 12.262 2 0.3556 2 1.994 2 0.0012 2 13.0723 9 4.8341 1 0.0397 7 0.1701 8 10.8677 10 0.0397 2)
Average genome size in population (length): 85.703
Average program size in population (points): 86.703
Average percent parens in population: 0.012
Minimum age in population: 26.39945983886719
Maximum age in population: 30.30635643005371
Average age in population: 28.67730228424072
Median age in population: 28.73930358886719
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.286
Error (vector) diversity:			 0.289
Behavioral diversity:				 0.29
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 39227584
--- Timings ---
Current time: 1529614883254 milliseconds
Total Time:          84.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        28.4 seconds, 33.8%
Fitness Testing:     43.1 seconds, 51.3%
Report:              12.4 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 46765.96180000011
Test mean error for best: 23.38298
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in1} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items in1 float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 0.9603 8 31.0397 11 22.3583 11 77.8145 11 34.0397 12 49.1357 10 20.0397 8 39.0397 10 10.7358 12 23.7794 11 42.5415 11 44.0397 11 4.0 2 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 16.2772 11 13.0397 9 0.9603 9 51.0397 10 22.9318 12 0.0397 8]
Total: 900.8521000000001
Mean: 18.017042
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3475.6063353999994
Median total errors in population: 966.6777000000001
Error averages by case: (177.7696509000019 11.123 112.2216192000015 8.776 125.3902651999983 11.225 131.09668560000182 9.41 149.83569229999927 9.46 127.43614019999843 12.141 144.8777078000007 10.803 122.24049549999839 8.707 136.18858609999828 10.577 117.7449928999988 10.021 127.30821189999966 9.512 149.0514501000009 11.484 146.49604979999845 10.64 119.165638300001 7.791 116.9597814000015 9.417 157.46003609999843 10.352 113.96854700000146 8.778 109.20750219999883 9.812 115.54759989999872 10.16 119.64980519999936 11.372 118.0452382999986 9.336 104.05462060000094 10.087 142.92139169999848 10.843 134.2423604000013 12.194 104.02426679999907 8.681)
Error minima by case: (1.8653 2 0.0397 3 1.3 6 13.9013 1 0.0 0 0.434 8 13.8643 2 1.8242 2 2.8109 8 3.9988 2 12.4803 1 1.9171 2 4.9901 2 3.0 2 3.6485 2 13.262 2 0.6444 2 4.0397 2 0.9988 2 3.4456 1 5.8341 1 0.0397 7 0.7656 8 21.2596 2 0.0397 2)
Average genome size in population (length): 86.57
Average program size in population (points): 87.57
Average percent parens in population: 0.012
Minimum age in population: 27.81925201416016
Maximum age in population: 31.95464611053467
Average age in population: 30.08442160797119
Median age in population: 30.11468887329102
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.83
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.83
Total error diversity:				 0.27
Error (vector) diversity:			 0.277
Behavioral diversity:				 0.279
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 41424334
--- Timings ---
Current time: 1529614887631 milliseconds
Total Time:          88.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        29.8 seconds, 33.7%
Fitness Testing:     45.5 seconds, 51.5%
Report:              13.0 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 46856.95299999994
Test mean error for best: 23.42848
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 134.086875333 
Correct output: 14.755435921   | Program output: 2.1109180016  
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -12.6557068204
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 76.9201033429 
Correct output: 66.7190026342  | Program output: 46.0744847148 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 130.3653878434
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.4187445228
Correct output: 171.737997407  | Program output: 134.0934794877
Correct output: 44.3556039838  | Program output: 76.7110860645 
Correct output: -40.9542965608 | Program output: -28.5988144801
Correct output: -28.6497177653 | Program output: -26.2942356847
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 98.5213731454 
Correct output: 12.6449981755  | Program output: 32.0004802561 
Correct output: 37.0251741292  | Program output: 4.3806562099  
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -15.7727743151
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in1} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items in1 float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 19.3555 10 12.6445 11 22.3583 11 77.8145 11 15.6445 12 49.1357 10 1.6445 10 20.6445 10 10.7358 12 23.7794 11 42.5415 11 25.6445 12 4.0 2 30.3555 11 37.6445 9 32.3555 12 12.3555 11 2.3555 10 16.2772 11 5.3555 10 19.3555 10 32.6445 11 22.9318 12 18.3555 10]
Total: 865.9296999999999
Mean: 17.318594
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3882.9100189000005
Median total errors in population: 966.6777000000001
Error averages by case: (192.061248200002 10.614 125.98975950000168 8.984 147.91085579999827 11.248 144.70413850000094 9.334 163.26075819999974 9.525 149.69050249999853 12.372 159.79206770000104 11.069 137.39317069999817 9.036 153.1783764999985 10.615 131.52260319999883 9.891 140.82953629999975 9.5 163.00765940000036 11.631 162.51622309999868 10.702 131.56507850000065 6.036 130.2697334000017 9.714 173.4428671999986 10.272 127.96735220000177 9.246 129.75405129999828 10.186 136.53067159999827 10.633 134.24854419999986 11.513 133.55463639999837 9.628 120.64162440000166 10.259 164.94632729999864 11.009 148.20998560000066 12.278 125.71024719999834 8.917)
Error minima by case: (17.0 2 0.0397 2 3.0919 3 13.7753 1 0.0 0 0.6056 2 1.8643 2 1.6445 2 2.78 8 3.9988 2 12.3543 1 1.9171 2 3.9901 2 2.0 2 9.0879 2 12.262 2 0.3556 2 5.0397 2 1.6609 2 3.4456 1 4.8341 1 0.0397 7 0.1701 3 20.2596 2 0.0397 2)
Average genome size in population (length): 87.344
Average program size in population (points): 88.344
Average percent parens in population: 0.011
Minimum age in population: 28.9411735534668
Maximum age in population: 33.42211818695068
Average age in population: 31.51849526071548
Median age in population: 31.56709003448486
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.847
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.847
Total error diversity:				 0.3
Error (vector) diversity:			 0.308
Behavioral diversity:				 0.309
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 43642250
--- Timings ---
Current time: 1529614892010 milliseconds
Total Time:          92.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        31.2 seconds, 33.6%
Fitness Testing:     47.9 seconds, 51.6%
Report:              13.6 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 46856.95299999994
Test mean error for best: 23.42848
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 134.086875333 
Correct output: 14.755435921   | Program output: 2.1109180016  
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -12.6557068204
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 76.9201033429 
Correct output: 66.7190026342  | Program output: 46.0744847148 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 130.3653878434
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.4187445228
Correct output: 171.737997407  | Program output: 134.0934794877
Correct output: 44.3556039838  | Program output: 76.7110860645 
Correct output: -40.9542965608 | Program output: -28.5988144801
Correct output: -28.6497177653 | Program output: -26.2942356847
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 98.5213731454 
Correct output: 12.6449981755  | Program output: 32.0004802561 
Correct output: 37.0251741292  | Program output: 4.3806562099  
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -15.7727743151
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in1} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mult})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items in1 float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup float_max float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times float_swap float_mult)
Errors: [57.0 3 19.3555 10 12.6445 11 22.3583 11 77.8145 11 15.6445 12 49.1357 10 1.6445 10 20.6445 10 10.7358 12 23.7794 11 42.5415 11 25.6445 12 4.0 2 30.3555 11 37.6445 9 32.3555 12 12.3555 11 2.3555 10 16.2772 11 5.3555 10 19.3555 10 32.6445 11 22.9318 12 18.3555 10]
Total: 865.9296999999999
Mean: 17.318594
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3707.031173300001
Median total errors in population: 966.6777000000001
Error averages by case: (191.3296071000017 9.818 119.96034120000158 8.676 136.89857759999828 11.238 138.15086860000164 9.535 158.11781159999953 9.693 139.4124782999985 12.099 155.25925340000094 10.831 133.1841363999983 8.607 147.3816001999984 10.593 125.1906724999989 10.217 134.7093076999998 9.718 157.3585287000008 11.469 158.53435929999856 10.498 123.36221340000039 5.322 124.0591043000015 9.292 169.50244339999867 10.198 121.98262180000155 8.776 118.9198449999986 9.715 126.10213139999846 10.025 128.62122509999944 11.425 127.8774053999985 9.159 112.03479720000144 10.143 154.16013949999856 10.911 141.88234340000093 12.148 114.38436079999865 8.549)
Error minima by case: (17.0 2 0.0397 2 3.0919 3 14.602 1 0.0 0 1.9888 2 11.1357 1 1.6445 2 1.6777 7 0.0397 2 3.9603 1 4.5415 2 4.9901 2 3.0 2 9.2596 2 13.262 2 0.6444 2 1.9543 2 2.3555 2 14.5368 2 5.3555 1 0.0397 7 1.0648 3 15.0682 2 0.0397 2)
Average genome size in population (length): 89.268
Average program size in population (points): 90.268
Average percent parens in population: 0.011
Minimum age in population: 30.68747138977051
Maximum age in population: 34.82393074035645
Average age in population: 33.01693156003952
Median age in population: 33.07669901847839
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.864
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.864
Total error diversity:				 0.296
Error (vector) diversity:			 0.311
Behavioral diversity:				 0.313
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 45905675
--- Timings ---
Current time: 1529614896433 milliseconds
Total Time:          97.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.5 seconds, 33.5%
Fitness Testing:     50.3 seconds, 51.7%
Report:              14.2 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 44455.83980000012
Test mean error for best: 22.22792
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: -0.1854591258 
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_add} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction in1} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_div} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction -45.14410243647322} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times})
Best program: (integer_flush integer_add float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup in1 float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_div float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup -45.14410243647322 float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times)
Errors: [57.0 3 0.9603 8 31.0397 11 22.0 12 77.0 10 34.0397 12 50.0 1 20.0397 8 39.0397 10 10.0 12 23.0 11 43.0 2 44.0397 11 4.0 2 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 17.0 2 13.0397 9 0.9603 9 51.0397 10 23.0 2 0.0397 8]
Total: 863.2779
Mean: 17.265558
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3210.103363600002
Median total errors in population: 929.7174000000001
Error averages by case: (165.11062300000097 7.846 100.43021310000087 8.486 117.7008577999987 11.331 120.3790698000017 9.61 142.17042789999897 9.688 121.0283126999989 11.984 138.4454625000002 10.632 110.6741530999989 8.305 125.03478039999858 10.613 107.52102939999929 10.405 117.31109409999972 9.819 139.5114412000014 11.324 137.12734919999855 10.401 95.8867082000001 4.493 104.38133960000079 8.994 148.23199139999844 10.136 100.73576920000076 8.377 101.63613829999925 9.341 108.21498359999916 9.528 111.27409459999913 11.339 107.28018129999916 8.853 90.65896380000062 10.092 135.3190016999986 10.867 124.36934500000123 12.005 96.74403269999924 8.457)
Error minima by case: (56.0 2 0.0397 2 4.6887 3 1.9142 1 0.0 0 0.8034 2 1.3111 1 0.6445 2 0.8559 9 0.0397 1 3.181 1 22.4189 2 1.9901 2 3.0 2 10.9603 2 10.262 2 0.3556 2 1.006 2 0.6609 2 4.3663 2 2.8341 1 0.0397 7 0.1701 3 16.0286 2 0.0397 2)
Average genome size in population (length): 88.557
Average program size in population (points): 89.557
Average percent parens in population: 0.011
Minimum age in population: 32.39632034301758
Maximum age in population: 36.27379739284515
Average age in population: 34.50283418726921
Median age in population: 34.54906266927719
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.858
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.858
Total error diversity:				 0.291
Error (vector) diversity:			 0.298
Behavioral diversity:				 0.298
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 48149325
--- Timings ---
Current time: 1529614900902 milliseconds
Total Time:         101.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.9 seconds, 33.4%
Fitness Testing:     52.6 seconds, 51.9%
Report:              14.8 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 44455.83980000012
Test mean error for best: 22.22792
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: -0.1854591258 
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_add} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction in1} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction -45.14410243647322} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times})
Best program: (integer_flush integer_add float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup in1 float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup -45.14410243647322 float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times)
Errors: [57.0 3 0.9603 8 31.0397 11 22.0 12 77.0 10 34.0397 12 50.0 1 20.0397 8 39.0397 10 10.0 12 23.0 11 43.0 2 44.0397 11 4.0 2 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 17.0 2 13.0397 9 0.9603 9 51.0397 10 23.0 2 0.0397 8]
Total: 863.2779
Mean: 17.265558
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2824.570070800001
Median total errors in population: 900.8521000000001
Error averages by case: (138.8656789000004 5.461 84.55810230000034 8.568 102.07990169999897 11.324 106.25615290000157 9.679 130.48538389999806 9.666 105.96740239999899 11.946 123.45114139999971 10.556 93.68260299999947 8.359 110.35551739999877 10.603 93.09769329999973 10.446 103.14213509999972 9.806 125.56270960000201 11.306 118.04634499999834 10.482 82.1296226 3.973 89.58357620000048 9.121 129.29613569999822 10.006 87.87579720000045 8.601 88.08073429999962 9.259 93.09238209999958 9.291 95.86832199999883 11.331 89.53747739999973 8.838 79.64882490000018 10.134 120.18328429999842 10.852 109.55322540000088 12.069 84.02592179999967 8.467)
Error minima by case: (36.8653 2 0.0397 3 1.3566 3 13.602 1 0.0 0 2.0547 2 7.5723 1 0.6445 2 5.5009 8 0.2642 2 4.2206 2 1.9171 2 3.9901 2 3.0 2 5.9041 2 12.262 2 0.3556 2 1.9543 1 1.3555 2 2.0397 2 4.3555 1 0.0397 8 1.0183 3 1.7705 2 0.0397 2)
Average genome size in population (length): 86.785
Average program size in population (points): 87.785
Average percent parens in population: 0.012
Minimum age in population: 33.77257013320923
Maximum age in population: 37.74150377511978
Average age in population: 35.92558192658424
Median age in population: 35.97523775696754
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.843
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.843
Total error diversity:				 0.25
Error (vector) diversity:			 0.254
Behavioral diversity:				 0.254
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 50345900
--- Timings ---
Current time: 1529614905307 milliseconds
Total Time:         105.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.3 seconds, 33.3%
Fitness Testing:     54.9 seconds, 51.9%
Report:              15.6 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 44455.83980000012
Test mean error for best: 22.22792
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 115.6917323511
Correct output: 14.755435921   | Program output: -16.2842249803
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: -0.1854591258 
Correct output: 2.9888110989   | Program output: -31.0508498023
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 58.524960361  
Correct output: 66.7190026342  | Program output: 27.6793417329 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 111.9702448614
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 97.0236015409 
Correct output: 171.737997407  | Program output: 115.6983365058
Correct output: 44.3556039838  | Program output: 58.3159430826 
Correct output: -40.9542965608 | Program output: -46.993957462 
Correct output: -28.6497177653 | Program output: -44.6893786666
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 80.1262301635 
Correct output: 12.6449981755  | Program output: 13.6053372742 
Correct output: 37.0251741292  | Program output: -14.014486772 
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -34.167917297 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_add} {:instruction float_sub} {:instruction float_dup} {:instruction 36.960339098771115} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction in1} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_min} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_inc} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction -45.14410243647322} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times})
Best program: (integer_flush integer_add float_sub float_dup 36.960339098771115 in1 float_add tag_float_737 float_max integer_yankdup in1 float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_min integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_inc float_stackdepth float_dup_times float_mult integer_yankdup integer_dup -45.14410243647322 float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times)
Errors: [57.0 3 0.9603 8 31.0397 11 22.0 12 77.0 10 34.0397 12 50.0 1 20.0397 8 39.0397 10 10.0 12 23.0 11 43.0 2 44.0397 11 4.0 2 11.9603 9 56.0397 11 13.9603 8 6.0397 9 16.0397 9 17.0 2 13.0397 9 0.9603 9 51.0397 10 23.0 2 0.0397 8]
Total: 863.2779
Mean: 17.265558
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2797.5889722000024
Median total errors in population: 900.8521000000001
Error averages by case: (131.6396124000003 5.058 90.8610984000007 9.083 100.26386649999867 11.276 100.54256320000178 9.837 126.70460039999784 9.664 105.66884749999868 11.955 118.66293599999956 10.534 89.83815739999922 8.875 105.86858389999858 10.598 87.29883369999963 10.433 97.4423098999997 9.909 120.01444480000204 11.29 114.74304199999848 10.745 79.69621060000001 3.744 95.8746765000009 9.681 126.03376809999816 9.4 94.47448160000089 9.703 93.64123939999993 9.762 93.59224989999994 9.467 90.69733699999871 11.384 88.93940290000003 9.082 86.44361770000077 10.372 117.91501179999824 11.097 103.8134725000011 12.113 92.89060809999988 8.966)
Error minima by case: (56.0 2 0.0397 3 4.1186 7 13.9013 1 0.0 0 1.1186 2 11.1357 1 0.6445 2 3.8814 8 3.4814 2 12.4803 1 1.9171 2 4.9901 2 3.0 2 0.1964 2 13.262 2 0.6444 2 1.9543 2 1.3555 2 1.0397 2 2.5508 1 0.0397 8 0.7656 7 3.0793 2 0.0397 2)
Average genome size in population (length): 85.028
Average program size in population (points): 86.028
Average percent parens in population: 0.012
Minimum age in population: 35.13671147823334
Maximum age in population: 39.42864087224007
Average age in population: 37.49199765473604
Median age in population: 37.54594975709915
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.814
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.814
Total error diversity:				 0.219
Error (vector) diversity:			 0.221
Behavioral diversity:				 0.222
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 52497700
--- Timings ---
Current time: 1529614909681 milliseconds
Total Time:         110.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.6 seconds, 33.2%
Fitness Testing:     57.2 seconds, 51.9%
Report:              16.4 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 46273.32099999999
Test mean error for best: 23.13666
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 132.5241713519
Correct output: 14.755435921   | Program output: 0.5482140206  
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -14.2184108014
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 75.3573993619 
Correct output: 66.7190026342  | Program output: 44.5117807338 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 128.8026838623
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 113.8560405418
Correct output: 171.737997407  | Program output: 132.5307755067
Correct output: 44.3556039838  | Program output: 75.1483820835 
Correct output: -40.9542965608 | Program output: -30.1615184612
Correct output: -28.6497177653 | Program output: -27.8569396657
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 96.9586691643 
Correct output: 12.6449981755  | Program output: 30.4377762751 
Correct output: 37.0251741292  | Program output: 2.8179522288  
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -17.3354782962
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in1} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_swap} {:instruction float_mult})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 53.792778099653454 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items in1 float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup float_swap float_mult)
Errors: [57.0 3 17.7928 10 14.2072 11 22.3583 11 77.8145 11 17.2072 11 49.1357 10 3.2072 10 22.2072 10 10.7358 12 23.7794 11 42.5415 11 27.2072 9 4.0 2 28.7928 12 39.2072 9 30.7928 10 10.7928 10 0.7928 9 16.2772 11 3.7928 7 17.7928 10 34.2072 10 22.9318 12 16.7928 11]
Total: 854.367
Mean: 17.08734
Genome size: 77
Size: 78
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3049.500614299995
Median total errors in population: 865.9296999999999
Error averages by case: (142.1131559000002 4.937 105.87681480000104 9.72 102.22893039999903 11.348 113.55787750000196 9.974 141.24793209999848 9.868 107.36964279999906 12.046 131.09045459999953 10.48 95.33682749999912 9.559 110.45226579999891 10.731 100.61224679999924 10.444 110.76609119999975 10.034 132.5785630000019 11.198 119.5234263999987 11.132 92.25261440000004 3.942 111.09647980000105 10.37 130.66295249999857 8.894 109.72016380000107 10.932 102.43536780000085 10.384 97.04892790000068 9.799 103.6499000999988 11.385 96.61596200000085 9.447 101.59914280000092 10.778 120.0495335999987 11.393 116.61767940000125 12.07 104.57866140000083 9.554)
Error minima by case: (36.8653 2 0.2596 2 6.0 2 3.6445 1 0.0 0 3.0099 2 2.8643 1 0.6445 2 2.0 1 8.7358 2 13.181 1 0.0829 2 4.9901 2 3.0 2 0.1964 2 13.262 2 0.6444 2 1.3995 2 0.7928 2 1.4456 2 2.5508 1 0.2596 2 1.0648 2 15.0682 2 0.0397 2)
Average genome size in population (length): 83.335
Average program size in population (points): 84.335
Average percent parens in population: 0.012
Minimum age in population: 36.90058740973473
Maximum age in population: 41.05389723181725
Average age in population: 39.01791135764122
Median age in population: 39.03279411792755
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.208
Error (vector) diversity:			 0.212
Behavioral diversity:				 0.212
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 54607075
--- Timings ---
Current time: 1529614913991 milliseconds
Total Time:         114.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.9 seconds, 33.1%
Fitness Testing:     59.5 seconds, 51.9%
Report:              17.1 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 46273.32099999999
Test mean error for best: 23.13666
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 132.5241713519
Correct output: 14.755435921   | Program output: 0.5482140206  
Correct output: 21.3583337919  | Program output: -1.0          
Correct output: 76.8145408742  | Program output: -1.0          
Correct output: 2.9888110989   | Program output: -14.2184108014
Correct output: -50.135719703  | Program output: -1.0          
Correct output: 78.5646212622  | Program output: 75.3573993619 
Correct output: 66.7190026342  | Program output: 44.5117807338 
Correct output: 9.7358427867   | Program output: -1.0          
Correct output: 22.7793630647  | Program output: -1.0          
Correct output: -43.5414748403 | Program output: -1.0          
Correct output: 156.0099057627 | Program output: 128.8026838623
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 113.8560405418
Correct output: 171.737997407  | Program output: 132.5307755067
Correct output: 44.3556039838  | Program output: 75.1483820835 
Correct output: -40.9542965608 | Program output: -30.1615184612
Correct output: -28.6497177653 | Program output: -27.8569396657
Correct output: -17.2771991531 | Program output: -1.0          
Correct output: 93.1658910647  | Program output: 96.9586691643 
Correct output: 12.6449981755  | Program output: 30.4377762751 
Correct output: 37.0251741292  | Program output: 2.8179522288  
Correct output: -23.9317722741 | Program output: -1.0          
Correct output: -34.1282563958 | Program output: -17.3354782962
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction in1} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_swap} {:instruction float_mult})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 53.792778099653454 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop integer_mult integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items in1 float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup float_swap float_mult)
Errors: [57.0 3 17.7928 10 14.2072 11 22.3583 11 77.8145 11 17.2072 11 49.1357 10 3.2072 10 22.2072 10 10.7358 12 23.7794 11 42.5415 11 27.2072 9 4.0 2 28.7928 12 39.2072 9 30.7928 10 10.7928 10 0.7928 9 16.2772 11 3.7928 7 17.7928 10 34.2072 10 22.9318 12 16.7928 11]
Total: 854.367
Mean: 17.08734
Genome size: 77
Size: 78
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3031.631839499995
Median total errors in population: 865.9296999999999
Error averages by case: (144.46376420000027 4.804 105.42129170000125 9.591 102.0165282999989 11.212 112.50364140000217 9.985 139.6048938999982 9.803 107.64169169999879 11.855 130.10615779999964 10.371 94.8060669999991 9.391 111.30596589999858 10.628 99.42036549999939 10.474 109.6905341999998 10.041 130.63898780000218 11.066 119.21615089999855 10.959 89.43189890000002 3.902 109.89907670000129 10.187 130.31837989999838 8.81 108.6950641000013 10.717 102.31861460000083 10.191 97.07703820000074 9.606 102.65971269999882 11.261 96.62204430000082 9.256 100.8669636000011 10.631 120.11893749999857 11.351 114.81072910000138 11.881 104.57233960000093 9.432)
Error minima by case: (36.8653 2 0.2596 3 10.5336 3 16.6213 1 0.0 0 1.9888 2 8.6445 1 0.4764 2 12.3635 8 0.4966 1 18.0423 1 1.9171 2 3.9901 2 3.0 2 0.1964 2 12.262 2 0.3556 2 5.0397 2 0.7928 2 2.0397 2 2.5508 1 0.2596 2 1.0648 3 4.0793 2 0.0397 2)
Average genome size in population (length): 83.375
Average program size in population (points): 84.375
Average percent parens in population: 0.012
Minimum age in population: 38.40033945441246
Maximum age in population: 42.64647664874792
Average age in population: 40.41254661168903
Median age in population: 40.41067597642541
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.21
Error (vector) diversity:			 0.213
Behavioral diversity:				 0.213
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 56719575
--- Timings ---
Current time: 1529614918294 milliseconds
Total Time:         119.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.3 seconds, 33.0%
Fitness Testing:     61.8 seconds, 51.9%
Report:              17.7 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 44447.81179999998
Test mean error for best: 22.22391
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 134.086875333 
Correct output: 14.755435921   | Program output: 2.1109180016  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: -0.1854591258 
Correct output: 2.9888110989   | Program output: -12.6557068204
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 76.9201033429 
Correct output: 66.7190026342  | Program output: 46.0744847148 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 130.3653878434
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.4187445228
Correct output: 171.737997407  | Program output: 134.0934794877
Correct output: 44.3556039838  | Program output: 76.7110860645 
Correct output: -40.9542965608 | Program output: -28.5988144801
Correct output: -28.6497177653 | Program output: -26.2942356847
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.5213731454 
Correct output: 12.6449981755  | Program output: 32.0004802561 
Correct output: 37.0251741292  | Program output: 4.3806562099  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -15.7727743151
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction -45.14410243647322} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_inc float_dup_times float_dup_times float_mult integer_yankdup integer_dup -45.14410243647322 float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times)
Errors: [57.0 3 19.3555 10 12.6445 11 22.0 12 77.0 10 15.6445 12 50.0 1 1.6445 10 20.6445 10 10.0 12 23.0 11 43.0 2 25.6445 12 4.0 2 30.3555 11 37.6445 9 32.3555 12 12.3555 11 2.3555 10 17.0 2 5.3555 10 19.3555 10 32.6445 11 23.0 2 18.3555 10]
Total: 828.3555
Mean: 16.56711
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3331.6835471999952
Median total errors in population: 865.9296999999999
Error averages by case: (157.56648890000025 5.022 117.97322200000153 9.543 111.64998359999866 11.31 124.29314980000217 10.166 150.86374159999943 9.88 119.92969679999864 11.985 141.1215681000002 9.997 108.25835519999862 9.323 123.43837679999842 10.779 111.14955419999895 10.591 121.4654790999998 10.114 141.90871680000132 10.735 133.4072498999984 10.805 99.92541040000009 4.034 121.99230180000144 10.124 144.43073879999835 8.988 120.33411840000151 10.434 114.79737630000079 10.139 110.55481420000078 9.612 114.37463819999898 10.903 110.4967082000009 9.168 112.26052400000137 10.751 130.06711859999842 11.359 126.24506230000148 11.435 116.50415320000079 9.478)
Error minima by case: (55.0 2 0.0397 3 1.4083 3 16.6213 1 0.0 0 1.5192 2 8.6445 1 0.6445 2 3.4808 8 1.7755 1 2.181 1 1.9171 2 4.9901 2 3.0 2 5.5518 2 1.3849 2 0.6444 2 1.9543 1 0.7928 2 2.0397 2 1.8501 1 0.0397 2 1.0648 3 4.0793 2 0.0397 2)
Average genome size in population (length): 85.43
Average program size in population (points): 86.43
Average percent parens in population: 0.012
Minimum age in population: 39.543565928936
Maximum age in population: 43.66153175383806
Average age in population: 41.82485999557003
Median age in population: 41.87571297213435
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.865
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.865
Total error diversity:				 0.252
Error (vector) diversity:			 0.257
Behavioral diversity:				 0.257
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 58887625
--- Timings ---
Current time: 1529614922888 milliseconds
Total Time:         123.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.7 seconds, 32.9%
Fitness Testing:     64.3 seconds, 52.1%
Report:              18.4 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 44447.81179999998
Test mean error for best: 22.22391
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 134.086875333 
Correct output: 14.755435921   | Program output: 2.1109180016  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: -0.1854591258 
Correct output: 2.9888110989   | Program output: -12.6557068204
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 76.9201033429 
Correct output: 66.7190026342  | Program output: 46.0744847148 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 130.3653878434
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.4187445228
Correct output: 171.737997407  | Program output: 134.0934794877
Correct output: 44.3556039838  | Program output: 76.7110860645 
Correct output: -40.9542965608 | Program output: -28.5988144801
Correct output: -28.6497177653 | Program output: -26.2942356847
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.5213731454 
Correct output: 12.6449981755  | Program output: 32.0004802561 
Correct output: 37.0251741292  | Program output: 4.3806562099  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -15.7727743151
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_inc} {:instruction float_stackdepth} {:instruction float_dup_times})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div integer_yankdup float_div float_div float_flush float_stackdepth integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_inc float_stackdepth float_dup_times)
Errors: [57.0 3 19.3555 10 12.6445 11 22.0 12 77.0 10 15.6445 12 50.0 1 1.6445 10 20.6445 10 10.0 12 23.0 11 43.0 2 25.6445 12 4.0 2 30.3555 11 37.6445 9 32.3555 12 12.3555 11 2.3555 10 17.0 2 5.3555 10 19.3555 10 32.6445 11 23.0 2 18.3555 10]
Total: 828.3555
Mean: 16.56711
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3572.535969899995
Median total errors in population: 866.42965
Error averages by case: (167.69551570000021 4.871 123.81191610000126 9.356 124.14741389999871 11.266 138.29877120000154 10.148 159.70490599999974 9.682 129.21601889999891 11.936 153.30042980000096 9.526 119.91225429999884 9.344 133.64297829999873 10.759 124.91208179999924 10.319 134.76156790000002 9.91 155.5806602000006 10.174 143.1508009999987 10.712 108.85053540000015 4.363 127.9583075000012 10.173 154.0408485999986 9.32 126.66113820000123 10.125 120.29761440000031 9.96 117.32361000000019 9.419 127.52857629999919 10.406 117.65882970000041 9.058 118.18335590000116 10.569 141.92245339999866 11.295 140.4767039000008 10.73 120.70268150000024 9.375)
Error minima by case: (36.8653 2 0.0397 3 2.8814 4 1.6445 1 0.0 0 0.8034 2 1.0397 1 0.0682 2 4.8002 4 3.1162 1 3.0858 1 6.5811 2 3.9901 2 3.0 2 6.1489 2 12.262 2 0.3556 2 5.0397 1 0.3555 2 0.2874 1 1.9537 1 0.0397 2 1.7656 2 3.7654 2 0.0397 2)
Average genome size in population (length): 89.031
Average program size in population (points): 90.031
Average percent parens in population: 0.011
Minimum age in population: 40.66611135005951
Maximum age in population: 45.18337646499276
Average age in population: 43.16630698742718
Median age in population: 43.18917957413942
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.873
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.873
Total error diversity:				 0.297
Error (vector) diversity:			 0.307
Behavioral diversity:				 0.309
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 61151175
--- Timings ---
Current time: 1529614927441 milliseconds
Total Time:         128.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.1 seconds, 32.8%
Fitness Testing:     66.7 seconds, 52.1%
Report:              19.2 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 44037.07990000003
Test mean error for best: 22.01854
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 132.5241713519
Correct output: 14.755435921   | Program output: 0.5482140206  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: -0.1854591258 
Correct output: 2.9888110989   | Program output: -14.2184108014
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 75.3573993619 
Correct output: 66.7190026342  | Program output: 44.5117807338 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 128.8026838623
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 113.8560405418
Correct output: 171.737997407  | Program output: 132.5307755067
Correct output: 44.3556039838  | Program output: 75.1483820835 
Correct output: -40.9542965608 | Program output: -30.1615184612
Correct output: -28.6497177653 | Program output: -27.8569396657
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 96.9586691643 
Correct output: 12.6449981755  | Program output: 30.4377762751 
Correct output: 37.0251741292  | Program output: 2.8179522288  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -17.3354782962
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction tagged_919} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_inc 53.792778099653454 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup tagged_919 float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times)
Errors: [57.0 3 17.7928 10 14.2072 11 22.0 12 77.0 10 17.2072 11 50.0 1 3.2072 10 22.2072 10 10.0 12 23.0 11 43.0 2 27.2072 9 4.0 2 28.7928 12 39.2072 9 30.7928 10 10.7928 10 0.7928 9 17.0 2 3.7928 7 17.7928 10 34.2072 10 23.0 2 16.7928 11]
Total: 816.7927999999999
Mean: 16.335855
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3374.6138201999956
Median total errors in population: 865.9296999999999
Error averages by case: (158.70638540000016 4.835 118.76732820000056 9.302 120.27086979999937 11.059 125.12270430000156 10.115 151.24353209999944 9.648 124.2055998999994 11.786 141.76992280000024 9.289 112.2814128999995 9.392 126.76404089999932 10.673 111.94323689999935 10.292 122.00358669999984 9.804 143.2417707000009 10.044 135.04077509999937 10.167 99.62309490000007 4.18 123.3121699000005 10.306 145.93798549999963 9.227 121.56656590000054 9.894 117.03401290000014 9.857 112.80849540000018 9.173 115.14213109999912 10.198 110.97070620000024 8.695 113.87209110000049 10.5 136.80808249999936 11.198 127.80465160000092 10.507 118.6716675000001 9.56)
Error minima by case: (46.8653 2 0.0397 3 8.1885 8 1.6445 1 0.0 0 0.9512 8 2.8643 1 0.0682 2 3.5283 8 2.5619 1 3.0858 1 0.0829 2 1.4994 2 2.0 2 0.1964 2 6.0432 2 0.3556 2 1.1712 1 0.2072 2 1.4456 2 2.7928 1 0.0397 2 1.0648 8 4.0793 2 0.0397 2)
Average genome size in population (length): 90.148
Average program size in population (points): 91.148
Average percent parens in population: 0.011
Minimum age in population: 41.66611135005951
Maximum age in population: 46.29706451576203
Average age in population: 44.51850161171891
Median age in population: 44.51938861049712
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.306
Error (vector) diversity:			 0.312
Behavioral diversity:				 0.313
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 63441650
--- Timings ---
Current time: 1529614932180 milliseconds
Total Time:         132.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.4 seconds, 32.7%
Fitness Testing:     69.3 seconds, 52.2%
Report:              19.9 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 44037.07990000003
Test mean error for best: 22.01854
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 132.5241713519
Correct output: 14.755435921   | Program output: 0.5482140206  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: -0.1854591258 
Correct output: 2.9888110989   | Program output: -14.2184108014
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 75.3573993619 
Correct output: 66.7190026342  | Program output: 44.5117807338 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 128.8026838623
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 113.8560405418
Correct output: 171.737997407  | Program output: 132.5307755067
Correct output: 44.3556039838  | Program output: 75.1483820835 
Correct output: -40.9542965608 | Program output: -30.1615184612
Correct output: -28.6497177653 | Program output: -27.8569396657
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 96.9586691643 
Correct output: 12.6449981755  | Program output: 30.4377762751 
Correct output: 37.0251741292  | Program output: 2.8179522288  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -17.3354782962
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush 36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove float_dup_items integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 53.792778099653454 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 17.7928 10 14.2072 11 22.0 12 77.0 10 17.2072 11 50.0 1 3.2072 10 22.2072 10 10.0 12 23.0 11 43.0 2 27.2072 9 4.0 2 28.7928 12 39.2072 9 30.7928 10 10.7928 10 0.7928 9 17.0 2 3.7928 7 17.7928 10 34.2072 10 23.0 2 16.7928 11]
Total: 816.7927999999999
Mean: 16.335855
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3384.050253700002
Median total errors in population: 865.9296999999999
Error averages by case: (164.71732690000013 4.876 121.26544210000037 9.348 116.35703849999959 11.135 125.56947990000124 10.05 144.3207281999996 9.391 124.60258659999973 11.688 140.8831675000004 8.676 111.68789769999962 9.369 126.67990939999966 10.709 112.77969239999943 10.157 123.31683519999991 9.822 144.31359340000043 9.393 136.31825189999978 9.939 102.31492920000011 4.18 124.75828300000023 10.31 147.21642069999982 8.852 123.00035790000031 9.939 117.67040310000016 9.782 112.32769250000014 9.062 116.1170305999995 9.569 111.60303780000034 8.377 116.32310160000033 10.597 134.84051529999974 11.188 129.1093829000008 9.764 120.2061494000002 9.578)
Error minima by case: (36.8653 2 0.0397 2 8.4251 3 1.6445 1 0.0 0 1.0052 2 2.8643 1 0.0903 2 0.8559 4 2.5619 1 5.7794 1 0.0829 2 4.9901 2 0.3135 2 0.8036 2 13.262 2 0.6444 2 1.9543 1 0.2072 2 1.0397 2 1.9965 1 0.0397 2 0.7656 2 3.0793 2 0.0397 2)
Average genome size in population (length): 93.041
Average program size in population (points): 94.041
Average percent parens in population: 0.011
Minimum age in population: 43.70420783758163
Maximum age in population: 47.99580927565694
Average age in population: 45.86928635004628
Median age in population: 45.88594197481871
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.856
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.856
Total error diversity:				 0.295
Error (vector) diversity:			 0.298
Behavioral diversity:				 0.299
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 65802875
--- Timings ---
Current time: 1529614936877 milliseconds
Total Time:         137.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.8 seconds, 32.6%
Fitness Testing:     71.8 seconds, 52.2%
Report:              20.7 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 43808.56630000004
Test mean error for best: 21.90428
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -95.8652845137
Correct output: 114.7313932523 | Program output: 131.5241713519
Correct output: 14.755435921   | Program output: -0.4517859794 
Correct output: 21.3583337919  | Program output: -1.6416662081 
Correct output: 76.8145408742  | Program output: -1.1854591258 
Correct output: 2.9888110989   | Program output: -15.2184108014
Correct output: -50.135719703  | Program output: -1.135719703  
Correct output: 78.5646212622  | Program output: 74.3573993619 
Correct output: 66.7190026342  | Program output: 43.5117807338 
Correct output: 9.7358427867   | Program output: -1.2641572133 
Correct output: 22.7793630647  | Program output: -1.2206369353 
Correct output: -43.5414748403 | Program output: -1.5414748403 
Correct output: 156.0099057627 | Program output: 127.8026838623
Correct output: -48.6689485349 | Program output: -53.6689485349
Correct output: 85.0632624421  | Program output: 112.8560405418
Correct output: 171.737997407  | Program output: 131.5307755067
Correct output: 44.3556039838  | Program output: 74.1483820835 
Correct output: -40.9542965608 | Program output: -31.1615184612
Correct output: -28.6497177653 | Program output: -28.8569396657
Correct output: -17.2771991531 | Program output: -1.2771991531 
Correct output: 93.1658910647  | Program output: 95.9586691643 
Correct output: 12.6449981755  | Program output: 29.4377762751 
Correct output: 37.0251741292  | Program output: 1.8179522288  
Correct output: -23.9317722741 | Program output: -1.9317722741 
Correct output: -34.1282563958 | Program output: -18.3354782962
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction tagged_919} {:instruction float_dup_times} {:instruction in2} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_max} {:instruction float_mult} {:instruction float_rot} {:instruction float_dup_times})
Best program: (36.25961346587397 in1 integer_fromfloat integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_inc 53.792778099653454 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup integer_swap integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup integer_dup tagged_919 float_dup_times in2 float_flush integer_mod integer_max float_mult float_rot float_dup_times)
Errors: [56.0 2 16.7928 10 15.2072 9 23.0 11 78.0 10 18.2072 11 49.0 2 4.2072 10 23.2072 10 11.0 12 24.0 11 42.0 2 28.2072 9 5.0 2 27.7928 12 40.2072 8 29.7928 9 9.7928 11 0.2072 8 16.0 1 2.7928 7 16.7928 10 35.2072 10 22.0 2 15.7928 11]
Total: 810.2071999999998
Mean: 16.204144
Genome size: 115
Size: 116
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3644.5661038000044
Median total errors in population: 915.7775
Error averages by case: (186.56249070000015 5.033 128.00183940000073 9.667 126.10327889999931 11.311 143.15385340000034 10.218 159.78529520000006 9.242 128.87585309999932 11.93 156.41907410000024 7.431 117.78828779999931 9.632 133.69395389999926 10.868 128.59650479999985 10.097 139.53664110000003 9.897 160.65406820000013 8.082 142.1821311999993 10.473 111.24437010000003 4.524 132.16603240000063 10.478 153.05989039999932 8.942 130.24540280000073 10.431 123.76135180000075 10.204 117.9052293000007 9.531 131.95940549999995 8.282 118.23811030000073 8.856 122.83936840000072 10.815 143.09024589999933 11.396 145.78528390000022 8.313 127.51314120000066 9.752)
Error minima by case: (55.0 2 0.2596 3 1.7554 8 1.6445 1 0.0 0 1.9928 8 4.2198 1 0.0903 2 4.0813 8 2.5619 1 12.4803 1 0.0829 2 3.9901 2 0.3135 2 5.1061 2 12.262 2 0.3556 2 6.0397 1 0.2072 2 1.4456 1 2.7928 1 0.2596 2 1.0648 7 9.7044 2 0.0397 2)
Average genome size in population (length): 101.087
Average program size in population (points): 102.087
Average percent parens in population: 0.010
Minimum age in population: 44.70420783758163
Maximum age in population: 49.32051777513698
Average age in population: 47.23156579770125
Median age in population: 47.23374595632777
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.885
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.885
Total error diversity:				 0.306
Error (vector) diversity:			 0.312
Behavioral diversity:				 0.314
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 68373275
--- Timings ---
Current time: 1529614941858 milliseconds
Total Time:         142.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.1 seconds, 32.4%
Fitness Testing:     74.5 seconds, 52.3%
Report:              21.6 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 44327.81179999998
Test mean error for best: 22.16391
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 134.086875333 
Correct output: 14.755435921   | Program output: 2.1109180016  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.6557068204
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 76.9201033429 
Correct output: 66.7190026342  | Program output: 46.0744847148 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 130.3653878434
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.4187445228
Correct output: 171.737997407  | Program output: 134.0934794877
Correct output: 44.3556039838  | Program output: 76.7110860645 
Correct output: -40.9542965608 | Program output: -28.5988144801
Correct output: -28.6497177653 | Program output: -26.2942356847
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.5213731454 
Correct output: 12.6449981755  | Program output: 32.0004802561 
Correct output: 37.0251741292  | Program output: 4.3806562099  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -15.7727743151
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction integer_dec} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction tag_integer_867} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 integer_dec integer_shove integer_yankdup tag_integer_867 in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div integer_min integer_min float_sub float_dup 53.792778099653454 in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 19.3555 10 12.6445 11 22.0 12 1.0 1 15.6445 12 50.0 1 1.6445 10 20.6445 10 10.0 12 23.0 11 43.0 2 25.6445 12 4.0 2 30.3555 11 37.6445 9 32.3555 12 12.3555 11 2.3555 10 17.0 2 5.3555 10 19.3555 10 32.6445 11 23.0 2 18.3555 10]
Total: 743.3555
Mean: 14.86711
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3406.914918900001
Median total errors in population: 907.1352000000002
Error averages by case: (180.8576762000001 4.872 119.87504010000053 9.554 116.02508459999949 11.119 131.16787710000028 10.333 149.17970289999997 9.245 119.16839229999954 11.724 145.3814341000001 6.403 110.10883299999948 9.641 124.3983690999995 10.676 116.61214309999994 10.14 127.61831740000005 9.839 148.98994010000018 7.081 133.4700333999994 10.214 107.24202210000001 4.307 124.54399670000046 10.548 144.36702899999955 8.937 122.84961460000055 10.284 116.27208910000049 10.008 110.23034940000042 9.262 120.84779340000004 7.227 110.69914970000045 8.615 114.28174280000046 10.579 132.16906389999946 11.174 134.22757900000016 7.152 117.7216458000004 9.676)
Error minima by case: (37.8653 2 0.2596 3 0.2295 8 0.2194 1 0.0 0 0.0112 7 3.6571 1 0.0903 2 6.281 7 0.1861 1 1.6404 1 0.0829 2 4.9901 2 0.7592 2 6.4668 2 13.262 2 0.6444 2 0.9543 1 0.2072 2 1.4456 1 2.7928 1 0.2596 2 0.2375 7 4.4808 2 0.0397 2)
Average genome size in population (length): 107.192
Average program size in population (points): 108.192
Average percent parens in population: 0.009
Minimum age in population: 46.26823005825281
Maximum age in population: 50.60021018714178
Average age in population: 48.62928026607737
Median age in population: 48.67859300365672
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.888
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.888
Total error diversity:				 0.319
Error (vector) diversity:			 0.328
Behavioral diversity:				 0.331
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 71104075
--- Timings ---
Current time: 1529614947298 milliseconds
Total Time:         147.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.5 seconds, 32.2%
Fitness Testing:     77.6 seconds, 52.5%
Report:              22.5 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 44439.67960000002
Test mean error for best: 22.21984
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 134.086875333 
Correct output: 14.755435921   | Program output: 2.1109180016  
Correct output: 21.3583337919  | Program output: -27.3526303695
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.6557068204
Correct output: -50.135719703  | Program output: -41.4912017837
Correct output: 78.5646212622  | Program output: 76.9201033429 
Correct output: 66.7190026342  | Program output: 46.0744847148 
Correct output: 9.7358427867   | Program output: -6.619639294  
Correct output: 22.7793630647  | Program output: -43.9316010966
Correct output: -43.5414748403 | Program output: -8.8969569209 
Correct output: 156.0099057627 | Program output: 130.3653878434
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.4187445228
Correct output: 171.737997407  | Program output: 134.0934794877
Correct output: 44.3556039838  | Program output: 76.7110860645 
Correct output: -40.9542965608 | Program output: -28.5988144801
Correct output: -28.6497177653 | Program output: -26.2942356847
Correct output: -17.2771991531 | Program output: -33.6326812337
Correct output: 93.1658910647  | Program output: 98.5213731454 
Correct output: 12.6449981755  | Program output: 32.0004802561 
Correct output: 37.0251741292  | Program output: 4.3806562099  
Correct output: -23.9317722741 | Program output: -2.2872543548 
Correct output: -34.1282563958 | Program output: -15.7727743151
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction integer_dec} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction tag_integer_867} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 integer_dec integer_shove integer_yankdup tag_integer_867 in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div integer_min integer_min float_sub float_dup 53.792778099653454 in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 19.3555 10 12.6445 11 48.711 8 1.0 1 15.6445 12 8.6445 10 1.6445 10 20.6445 10 16.3555 12 66.711 11 34.6445 11 25.6445 12 4.0 2 30.3555 11 37.6445 9 32.3555 12 12.3555 11 2.3555 10 16.3555 11 5.3555 10 19.3555 10 32.6445 11 21.6445 10 18.3555 10]
Total: 799.422
Mean: 15.98844
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3249.3788286999993
Median total errors in population: 910.7568000000001
Error averages by case: (177.66439520000014 4.788 113.89194829999983 9.557 106.80631320000006 11.079 128.03835510000008 10.352 145.22671879999982 9.332 111.80305150000012 11.5 139.47245159999989 6.342 102.22801079999999 9.612 119.11249620000025 10.649 113.98936889999989 10.056 124.31593789999995 9.838 145.57340239999988 7.055 126.67281510000035 9.514 96.11808789999998 4.349 118.72081559999964 10.8 138.0760998000005 8.908 117.02234019999969 9.839 106.32011019999989 9.69 99.25705340000003 8.88 115.5065458999999 7.186 101.31734869999994 7.899 109.82192909999983 10.612 126.10898660000035 10.934 130.94535049999996 7.035 109.64789579999987 9.915)
Error minima by case: (39.8653 2 0.2596 3 1.7554 8 1.0903 1 0.0 0 2.9888 1 2.6571 1 0.6445 2 6.281 7 0.5619 1 6.8062 1 1.4407 2 4.9901 2 2.3135 2 0.1964 2 13.262 2 0.6444 2 1.534 1 0.2072 2 1.5544 1 2.5508 1 0.2596 9 0.7656 8 4.0793 2 0.0397 2)
Average genome size in population (length): 110.157
Average program size in population (points): 111.157
Average percent parens in population: 0.009
Minimum age in population: 47.26823005825281
Maximum age in population: 52.08221045916434
Average age in population: 50.06733694317198
Median age in population: 50.13262358176871
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.902
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.902
Total error diversity:				 0.338
Error (vector) diversity:			 0.348
Behavioral diversity:				 0.349
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 73917850
--- Timings ---
Current time: 1529614952923 milliseconds
Total Time:         153.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.9 seconds, 31.9%
Fitness Testing:     80.7 seconds, 52.7%
Report:              23.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 44439.67960000002
Test mean error for best: 22.21984
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 134.086875333 
Correct output: 14.755435921   | Program output: 2.1109180016  
Correct output: 21.3583337919  | Program output: -27.3526303695
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.6557068204
Correct output: -50.135719703  | Program output: -41.4912017837
Correct output: 78.5646212622  | Program output: 76.9201033429 
Correct output: 66.7190026342  | Program output: 46.0744847148 
Correct output: 9.7358427867   | Program output: -6.619639294  
Correct output: 22.7793630647  | Program output: -43.9316010966
Correct output: -43.5414748403 | Program output: -8.8969569209 
Correct output: 156.0099057627 | Program output: 130.3653878434
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.4187445228
Correct output: 171.737997407  | Program output: 134.0934794877
Correct output: 44.3556039838  | Program output: 76.7110860645 
Correct output: -40.9542965608 | Program output: -28.5988144801
Correct output: -28.6497177653 | Program output: -26.2942356847
Correct output: -17.2771991531 | Program output: -33.6326812337
Correct output: 93.1658910647  | Program output: 98.5213731454 
Correct output: 12.6449981755  | Program output: 32.0004802561 
Correct output: 37.0251741292  | Program output: 4.3806562099  
Correct output: -23.9317722741 | Program output: -2.2872543548 
Correct output: -34.1282563958 | Program output: -15.7727743151
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction integer_dec} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction tag_integer_867} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 integer_dec integer_shove integer_yankdup tag_integer_867 in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div integer_min integer_min float_sub float_dup 53.792778099653454 in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 19.3555 10 12.6445 11 48.711 8 1.0 1 15.6445 12 8.6445 10 1.6445 10 20.6445 10 16.3555 12 66.711 11 34.6445 11 25.6445 12 4.0 2 30.3555 11 37.6445 9 32.3555 12 12.3555 11 2.3555 10 16.3555 11 5.3555 10 19.3555 10 32.6445 11 21.6445 10 18.3555 10]
Total: 799.422
Mean: 15.98844
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2892.6549021999977
Median total errors in population: 859.21675
Error averages by case: (161.44215050000014 4.641 97.84866609999969 9.627 96.65361170000027 11.117 111.89411510000004 10.288 128.0553820999999 9.198 102.71032710000046 11.342 125.82513129999987 6.065 90.72319960000013 9.535 105.76475860000055 10.632 97.11897329999992 10.102 108.41033039999994 9.698 130.12370269999988 6.831 114.1503493000008 8.971 78.4890952 3.874 103.25515089999949 10.922 125.17528580000081 8.745 102.2446968999995 9.445 94.2231866999998 9.556 87.97456259999994 8.756 100.60425809999988 6.914 87.18348369999993 7.234 95.12145809999971 10.649 114.29987690000077 10.727 114.99302559999992 6.727 96.8251238999997 9.949)
Error minima by case: (37.8653 2 0.0397 2 4.2072 7 1.9828 1 0.0 0 1.9188 8 2.8424 1 0.6445 2 2.281 8 4.6789 1 3.4039 1 0.0829 2 2.9901 2 2.0 2 5.5518 2 11.262 2 0.6444 2 1.9543 1 0.2072 2 1.0397 1 1.2843 1 0.0397 2 0.7656 7 3.0793 2 0.0397 2)
Average genome size in population (length): 111.537
Average program size in population (points): 112.537
Average percent parens in population: 0.009
Minimum age in population: 49.12277136126067
Maximum age in population: 53.44883950386429
Average age in population: 51.47233829233609
Median age in population: 51.51105389039731
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.89
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.89
Total error diversity:				 0.309
Error (vector) diversity:			 0.314
Behavioral diversity:				 0.316
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 76771750
--- Timings ---
Current time: 1529614958434 milliseconds
Total Time:         158.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.3 seconds, 31.6%
Fitness Testing:     83.9 seconds, 52.9%
Report:              24.5 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 44439.67960000002
Test mean error for best: 22.21984
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 134.086875333 
Correct output: 14.755435921   | Program output: 2.1109180016  
Correct output: 21.3583337919  | Program output: -27.3526303695
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.6557068204
Correct output: -50.135719703  | Program output: -41.4912017837
Correct output: 78.5646212622  | Program output: 76.9201033429 
Correct output: 66.7190026342  | Program output: 46.0744847148 
Correct output: 9.7358427867   | Program output: -6.619639294  
Correct output: 22.7793630647  | Program output: -43.9316010966
Correct output: -43.5414748403 | Program output: -8.8969569209 
Correct output: 156.0099057627 | Program output: 130.3653878434
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.4187445228
Correct output: 171.737997407  | Program output: 134.0934794877
Correct output: 44.3556039838  | Program output: 76.7110860645 
Correct output: -40.9542965608 | Program output: -28.5988144801
Correct output: -28.6497177653 | Program output: -26.2942356847
Correct output: -17.2771991531 | Program output: -33.6326812337
Correct output: 93.1658910647  | Program output: 98.5213731454 
Correct output: 12.6449981755  | Program output: 32.0004802561 
Correct output: 37.0251741292  | Program output: 4.3806562099  
Correct output: -23.9317722741 | Program output: -2.2872543548 
Correct output: -34.1282563958 | Program output: -15.7727743151
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction integer_dec} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction tag_integer_867} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 integer_dec integer_shove integer_yankdup tag_integer_867 in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div integer_min integer_min float_sub float_dup 53.792778099653454 in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 19.3555 10 12.6445 11 48.711 8 1.0 1 15.6445 12 8.6445 10 1.6445 10 20.6445 10 16.3555 12 66.711 11 34.6445 11 25.6445 12 4.0 2 30.3555 11 37.6445 9 32.3555 12 12.3555 11 2.3555 10 16.3555 11 5.3555 10 19.3555 10 32.6445 11 21.6445 10 18.3555 10]
Total: 799.422
Mean: 15.98844
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 2896.5450538999985
Median total errors in population: 908.6475
Error averages by case: (160.67958960000016 4.502 100.10334699999974 9.651 96.54525860000014 10.726 115.3512105 9.77 129.0079762999998 8.881 97.87555940000026 11.109 125.87523509999981 6.591 92.64839900000007 9.45 102.76689610000027 10.487 98.7269396999999 9.669 110.87445809999986 9.312 132.4746661999999 7.267 116.20387220000072 8.913 81.49956449999998 3.936 104.33334179999964 10.757 127.39743040000073 8.63 101.86125669999976 9.243 91.99714789999985 9.588 85.70715080000008 8.625 101.14670869999986 7.334 90.12469169999996 7.201 91.56757699999986 10.532 108.90960830000047 10.568 118.57680629999994 7.173 94.45336199999984 9.922)
Error minima by case: (53.0 2 6.4718 3 0.2295 8 1.8689 1 0.0 0 1.6094 8 4.2198 1 1.0903 2 4.8002 7 0.5713 1 8.7171 1 0.0829 2 4.9901 2 1.3135 2 1.1964 2 2.9476 2 0.6444 2 1.8842 1 0.2072 2 4.93 1 0.2072 1 2.9995 2 0.7656 8 1.7246 1 14.3022 2)
Average genome size in population (length): 111.584
Average program size in population (points): 112.584
Average percent parens in population: 0.009
Minimum age in population: 50.12277136126067
Maximum age in population: 54.91279381986533
Average age in population: 52.84686576394502
Median age in population: 52.92695644085325
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.916
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.916
Total error diversity:				 0.337
Error (vector) diversity:			 0.342
Behavioral diversity:				 0.347
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 79631750
--- Timings ---
Current time: 1529614963953 milliseconds
Total Time:         164.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.6 seconds, 31.4%
Fitness Testing:     87.1 seconds, 53.0%
Report:              25.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 44439.67960000002
Test mean error for best: 22.21984
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 134.086875333 
Correct output: 14.755435921   | Program output: 2.1109180016  
Correct output: 21.3583337919  | Program output: -27.3526303695
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.6557068204
Correct output: -50.135719703  | Program output: -41.4912017837
Correct output: 78.5646212622  | Program output: 76.9201033429 
Correct output: 66.7190026342  | Program output: 46.0744847148 
Correct output: 9.7358427867   | Program output: -6.619639294  
Correct output: 22.7793630647  | Program output: -43.9316010966
Correct output: -43.5414748403 | Program output: -8.8969569209 
Correct output: 156.0099057627 | Program output: 130.3653878434
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.4187445228
Correct output: 171.737997407  | Program output: 134.0934794877
Correct output: 44.3556039838  | Program output: 76.7110860645 
Correct output: -40.9542965608 | Program output: -28.5988144801
Correct output: -28.6497177653 | Program output: -26.2942356847
Correct output: -17.2771991531 | Program output: -33.6326812337
Correct output: 93.1658910647  | Program output: 98.5213731454 
Correct output: 12.6449981755  | Program output: 32.0004802561 
Correct output: 37.0251741292  | Program output: 4.3806562099  
Correct output: -23.9317722741 | Program output: -2.2872543548 
Correct output: -34.1282563958 | Program output: -15.7727743151
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction float_flush} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_dup_items} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction float_sub} {:instruction float_dup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 55.355482080682805} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_flush} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 float_flush integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 integer_dup_items tag_float_737 integer_min integer_min float_sub float_inc float_sub float_dup 53.792778099653454 in1 float_add tag_float_737 integer_min integer_min float_sub float_dup 55.355482080682805 in1 float_add tag_float_737 float_max integer_yankdup float_div integer_flush float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 19.3555 10 12.6445 11 48.711 8 1.0 1 15.6445 12 8.6445 10 1.6445 10 20.6445 10 16.3555 12 66.711 11 34.6445 11 25.6445 12 4.0 2 30.3555 11 37.6445 9 32.3555 12 12.3555 11 2.3555 10 16.3555 11 5.3555 10 19.3555 10 32.6445 11 21.6445 10 18.3555 10]
Total: 799.422
Mean: 15.98844
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3482.0991026999995
Median total errors in population: 906.5496
Error averages by case: (182.03464400000018 4.525 127.13498459999914 9.895 120.84814870000076 10.404 130.68279290000007 9.871 150.07817829999982 8.98 124.73443500000111 11.26 142.33140459999984 6.54 119.2853082000007 9.637 132.2320625000009 10.609 115.44080049999994 9.901 128.17282279999995 9.472 146.96151629999991 7.117 141.3094280000012 9.291 106.5747031 4.129 131.4785385999989 10.791 152.29719220000115 8.771 129.279975799999 9.4 118.57043909999923 10.015 112.05434900000007 8.832 119.10974719999992 7.033 116.01028579999938 7.549 120.3556085999993 10.712 138.84353080000116 10.662 132.48401139999996 7.025 121.21919469999915 10.154)
Error minima by case: (37.8653 2 0.7404 2 6.7116 8 0.1087 1 0.0 0 1.9888 7 2.6571 1 0.6445 2 3.8002 7 3.6789 1 1.3124 1 4.5415 1 4.9901 2 3.0 2 10.2596 2 7.0 1 0.6444 2 1.9543 1 0.2072 2 14.0 1 0.7928 1 0.7404 2 1.7656 8 15.0682 1 0.7404 2)
Average genome size in population (length): 112.604
Average program size in population (points): 113.604
Average percent parens in population: 0.009
Minimum age in population: 51.12277136126067
Maximum age in population: 56.22267887022463
Average age in population: 54.1474641474296
Median age in population: 54.20440018369482
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.915
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.355
Error (vector) diversity:			 0.366
Behavioral diversity:				 0.366
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 82523100
--- Timings ---
Current time: 1529614969474 milliseconds
Total Time:         169.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.0 seconds, 31.2%
Fitness Testing:     90.2 seconds, 53.1%
Report:              26.5 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 43708.32939999993
Test mean error for best: 21.85416
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 132.5241713519
Correct output: 14.755435921   | Program output: 0.5482140206  
Correct output: 21.3583337919  | Program output: -24.2272224074
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -14.2184108014
Correct output: -50.135719703  | Program output: -39.9284978026
Correct output: 78.5646212622  | Program output: 75.3573993619 
Correct output: 66.7190026342  | Program output: 44.5117807338 
Correct output: 9.7358427867   | Program output: -5.056935313  
Correct output: 22.7793630647  | Program output: -40.8061931346
Correct output: -43.5414748403 | Program output: -7.3342529399 
Correct output: 156.0099057627 | Program output: 128.8026838623
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 113.8560405418
Correct output: 171.737997407  | Program output: 132.5307755067
Correct output: 44.3556039838  | Program output: 75.1483820835 
Correct output: -40.9542965608 | Program output: -30.1615184612
Correct output: -28.6497177653 | Program output: -27.8569396657
Correct output: -17.2771991531 | Program output: -32.0699772527
Correct output: 93.1658910647  | Program output: 96.9586691643 
Correct output: 12.6449981755  | Program output: 30.4377762751 
Correct output: 37.0251741292  | Program output: 2.8179522288  
Correct output: -23.9317722741 | Program output: -53.5173284734
Correct output: -34.1282563958 | Program output: -17.3354782962
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_sin} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_flush} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup in1 integer_shove integer_yankdup integer_dup_items in1 float_sin integer_min integer_min float_sub float_inc 53.792778099653454 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup integer_swap integer_fromfloat in2 integer_max tagged_729 float_flush integer_yankdup float_div integer_flush float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 17.7928 10 14.2072 11 45.5856 12 1.0 1 17.2072 11 10.2072 10 3.2072 10 22.2072 10 14.7928 11 63.5856 11 36.2072 12 27.2072 9 4.0 2 28.7928 12 39.2072 9 30.7928 10 10.7928 10 0.7928 9 14.7928 11 3.7928 7 17.7928 10 34.2072 10 29.5856 8 16.7928 11]
Total: 791.5496000000003
Mean: 15.830992
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3431.8921816000006
Median total errors in population: 907.1352000000002
Error averages by case: (180.03142470000014 4.587 124.3017797999994 9.955 115.10011720000045 10.273 136.08592480000016 9.75 146.7172834999997 8.709 118.89605990000092 11.374 143.92978029999986 7.099 112.3622031000005 9.555 125.23110300000072 10.585 120.3525392999999 9.92 133.67789429999993 9.564 150.28926579999987 7.55 134.94123760000087 9.538 99.58331560000002 4.12 129.13922609999912 10.571 146.01129890000107 9.013 126.91183999999932 9.49 116.74844619999945 10.069 108.8854662000001 8.883 122.39170849999995 7.49 112.97416609999954 7.78 115.60709119999945 10.75 131.51430780000078 10.665 137.05783629999988 7.505 118.24686539999931 10.109)
Error minima by case: (17.0 2 0.2596 2 1.2663 8 0.8689 1 0.0 0 1.8993 3 2.7928 1 1.0393 2 8.281 7 2.511 1 12.7928 1 2.9171 2 4.9901 2 3.0 2 1.8151 2 13.262 2 0.6444 2 4.0945 1 0.2072 1 2.93 1 0.7928 1 0.2596 9 1.7656 8 1.0 1 0.5654 1)
Average genome size in population (length): 113.204
Average program size in population (points): 114.204
Average percent parens in population: 0.009
Minimum age in population: 52.47186137037352
Maximum age in population: 57.52770246307045
Average age in population: 55.65032542033562
Median age in population: 55.68049918468023
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.93
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.93
Total error diversity:				 0.389
Error (vector) diversity:			 0.398
Behavioral diversity:				 0.398
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 85430400
--- Timings ---
Current time: 1529614975027 milliseconds
Total Time:         175.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.4 seconds, 31.0%
Fitness Testing:     93.4 seconds, 53.2%
Report:              27.5 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 46217.987699999954
Test mean error for best: 23.10899
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.2227508321
Correct output: 14.755435921   | Program output: 1.2467935008  
Correct output: 21.3583337919  | Program output: -0.1503086283 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.5198313213
Correct output: -50.135719703  | Program output: -0.6443621232 
Correct output: 78.5646212622  | Program output: 76.055978842  
Correct output: 66.7190026342  | Program output: 45.210360214  
Correct output: 9.7358427867   | Program output: -0.7727996335 
Correct output: 22.7793630647  | Program output: -0.7292793555 
Correct output: -43.5414748403 | Program output: -0.0501172605 
Correct output: 156.0099057627 | Program output: 129.5012633425
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 114.5546200219
Correct output: 171.737997407  | Program output: 133.2293549868
Correct output: 44.3556039838  | Program output: 75.8469615636 
Correct output: -40.9542965608 | Program output: -29.462938981 
Correct output: -28.6497177653 | Program output: -27.1583601855
Correct output: -17.2771991531 | Program output: -0.7858415733 
Correct output: 93.1658910647  | Program output: 97.6572486445 
Correct output: 12.6449981755  | Program output: 31.1363557553 
Correct output: 37.0251741292  | Program output: 3.516531709   
Correct output: -23.9317722741 | Program output: -0.4404146943 
Correct output: -34.1282563958 | Program output: -16.636898816 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_dup} {:instruction 54.491357579802106} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_rot} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min in1 integer_shove integer_yankdup tag_float_737 integer_min integer_min float_sub float_dup 54.491357579802106 in1 float_add tag_float_737 float_max integer_rot float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 18.4914 11 13.5086 9 21.5086 10 1.0 1 16.5086 11 49.4914 10 2.5086 10 21.5086 9 10.5086 11 23.5086 10 43.4914 9 26.5086 10 4.0 2 29.4914 10 38.5086 11 31.4914 11 11.4914 10 1.4914 10 16.4914 9 4.4914 8 18.4914 10 33.5086 9 23.4914 11 17.4914 11]
Total: 761.9828
Mean: 15.239656
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3758.1909044999998
Median total errors in population: 940.2071999999998
Error averages by case: (192.30801770000016 4.976 138.7834797999997 9.888 131.6942241000001 10.346 144.55307170000003 9.289 152.4960977999999 7.784 134.90489420000068 11.428 149.30749579999969 7.813 125.70436910000012 9.343 139.87864690000023 10.462 128.57640520000018 9.642 143.17786489999992 9.316 158.7896051999997 8.25 149.88611570000046 9.921 116.59208749999999 4.429 142.3757932999996 10.041 160.68178230000035 9.263 139.32075519999964 9.662 133.60354819999966 9.933 127.94020640000042 9.15 129.49107100000018 8.256 127.73501439999986 8.097 132.25177139999974 10.752 149.01314150000036 10.605 145.44801549999966 8.226 136.93442969999973 9.871)
Error minima by case: (38.8653 2 0.2596 2 1.2663 8 1.0393 1 0.0 0 0.9231 3 4.6571 1 0.6445 2 5.4773 8 1.511 1 13.7928 1 0.0829 1 4.9901 2 1.8762 2 6.2989 2 6.0 1 0.6444 2 0.0457 1 0.0393 2 1.4456 1 0.7928 1 0.2596 2 1.7656 8 1.7246 1 0.2596 2)
Average genome size in population (length): 117.074
Average program size in population (points): 118.074
Average percent parens in population: 0.009
Minimum age in population: 54.06664824372274
Maximum age in population: 58.86430273996848
Average age in population: 57.00687534177597
Median age in population: 57.02008735020536
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.924
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.924
Total error diversity:				 0.407
Error (vector) diversity:			 0.414
Behavioral diversity:				 0.415
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 88436000
--- Timings ---
Current time: 1529614980680 milliseconds
Total Time:         181.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.8 seconds, 30.8%
Fitness Testing:     96.6 seconds, 53.4%
Report:              28.5 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 45802.27390000008
Test mean error for best: 22.90114
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 132.5241713519
Correct output: 14.755435921   | Program output: 0.5482140206  
Correct output: 21.3583337919  | Program output: -0.8488881085 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -14.2184108014
Correct output: -50.135719703  | Program output: -0.3429416033 
Correct output: 78.5646212622  | Program output: 75.3573993619 
Correct output: 66.7190026342  | Program output: 44.5117807338 
Correct output: 9.7358427867   | Program output: -0.4713791136 
Correct output: 22.7793630647  | Program output: -0.4278588356 
Correct output: -43.5414748403 | Program output: -0.7486967406 
Correct output: 156.0099057627 | Program output: 128.8026838623
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 113.8560405418
Correct output: 171.737997407  | Program output: 132.5307755067
Correct output: 44.3556039838  | Program output: 75.1483820835 
Correct output: -40.9542965608 | Program output: -30.1615184612
Correct output: -28.6497177653 | Program output: -27.8569396657
Correct output: -17.2771991531 | Program output: -0.4844210534 
Correct output: 93.1658910647  | Program output: 96.9586691643 
Correct output: 12.6449981755  | Program output: 30.4377762751 
Correct output: 37.0251741292  | Program output: 2.8179522288  
Correct output: -23.9317722741 | Program output: -0.1389941744 
Correct output: -34.1282563958 | Program output: -17.3354782962
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_min} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction tagged_950} {:instruction float_dup_times} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_div} {:instruction integer_flush} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction float_stackdepth} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_min integer_dup_items in1 float_add tag_float_737 integer_min integer_min integer_inc float_dup 53.792778099653454 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_yankdup 53.792778099653454 in1 float_add tag_float_737 tagged_950 float_dup_times float_sub float_mod float_sub float_mod integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_div integer_flush float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 float_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup float_stackdepth print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 17.7928 10 14.2072 11 22.2072 11 1.0 1 17.2072 11 49.7928 9 3.2072 10 22.2072 10 10.2072 11 23.2072 11 42.7928 9 27.2072 9 4.0 2 28.7928 12 39.2072 9 30.7928 10 10.7928 10 0.7928 9 16.7928 10 3.7928 7 17.7928 10 34.2072 10 23.7928 9 16.7928 11]
Total: 760.5856000000001
Mean: 15.211712
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4212.164720199999
Median total errors in population: 1002.144
Error averages by case: (199.32782510000024 5.339 158.64261620000008 9.87 147.37831109999973 10.672 168.96087340000034 9.379 170.69050060000012 7.2 151.93798039999987 11.735 168.51111989999958 8.715 141.82392069999975 9.235 155.33521709999982 10.583 149.9677024000002 9.888 167.9078544000003 9.682 178.64995079999957 9.145 167.5415036 10.216 129.3828943000001 4.654 161.35792840000022 9.838 178.42286650000003 9.429 157.23152410000017 9.936 151.81909600000031 10.02 145.8865984000005 9.382 152.3920009000004 9.268 147.26280800000035 8.4 148.18982970000022 10.929 161.14687679999994 10.79 165.1220358999996 9.122 154.0378855000002 9.81)
Error minima by case: (21.7404 2 4.4152 3 1.2663 8 1.6445 1 0.0 0 0.9888 3 4.2198 1 0.6445 2 6.281 8 1.7404 1 5.7404 1 0.0829 2 1.9901 2 0.1776 2 3.9891 2 10.262 2 0.6444 2 1.9543 1 0.0393 2 1.4456 1 1.7928 1 2.9995 2 1.7656 8 3.253 2 0.8545 2)
Average genome size in population (length): 122.199
Average program size in population (points): 123.199
Average percent parens in population: 0.008
Minimum age in population: 56.03660950595076
Maximum age in population: 60.42654245677932
Average age in population: 58.37066044851278
Median age in population: 58.41565306780649
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.939
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.939
Total error diversity:				 0.42
Error (vector) diversity:			 0.433
Behavioral diversity:				 0.433
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 91575750
--- Timings ---
Current time: 1529614986578 milliseconds
Total Time:         186.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.2 seconds, 30.6%
Fitness Testing:    100.1 seconds, 53.6%
Report:              29.5 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 40799.75100000005
Test mean error for best: 20.39988
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 132.5241713519
Correct output: 14.755435921   | Program output: 0.5482140206  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -14.2184108014
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 75.3573993619 
Correct output: 66.7190026342  | Program output: 44.5117807338 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 128.8026838623
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 113.8560405418
Correct output: 171.737997407  | Program output: 132.5307755067
Correct output: 44.3556039838  | Program output: 75.1483820835 
Correct output: -40.9542965608 | Program output: -30.1615184612
Correct output: -28.6497177653 | Program output: -27.8569396657
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 96.9586691643 
Correct output: 12.6449981755  | Program output: 30.4377762751 
Correct output: 37.0251741292  | Program output: 2.8179522288  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -17.3354782962
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_pop} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_994} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 integer_pop integer_min integer_min float_sub float_inc 53.792778099653454 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_994 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items integer_rot integer_mult float_dup_times integer_dup_items integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 17.7928 10 14.2072 11 22.0 12 1.0 1 17.2072 11 50.0 1 3.2072 10 22.2072 10 10.0 12 23.0 11 43.0 2 27.2072 9 4.0 2 28.7928 12 39.2072 9 30.7928 10 10.7928 10 0.7928 9 17.0 2 3.7928 7 17.7928 10 34.2072 10 23.0 2 16.7928 11]
Total: 731.7927999999999
Mean: 14.635856
Genome size: 151
Size: 152
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3566.4132494999985
Median total errors in population: 976.5602
Error averages by case: (177.66300690000028 5.289 132.85612060000045 9.753 124.27917779999954 10.797 142.48921400000012 9.031 140.16023919999998 6.058 126.5402369999998 11.652 135.68927329999974 9.584 117.06545629999958 9.219 133.9453677999995 10.513 122.4046135000003 9.578 142.8849422 9.525 150.05812039999972 10.018 145.5411425999997 10.338 113.12928549999998 4.515 135.59264190000036 9.855 156.53933869999955 9.219 130.94882350000037 10.131 121.47833140000037 9.836 115.79435290000043 9.289 122.70606440000046 10.098 119.71364950000059 8.542 121.44444300000045 10.757 141.50042729999961 10.851 138.2616248999998 9.89 123.90635490000028 9.483)
Error minima by case: (35.1347 2 0.2596 2 1.2663 3 1.6445 1 0.0 0 1.8993 2 1.8643 1 0.6445 2 8.281 1 3.3211 1 3.1503 1 0.0829 2 1.3684 2 2.4747 2 2.9891 2 3.2712 2 0.3556 2 1.9543 1 0.0393 2 1.4456 1 1.7928 1 0.2596 2 0.7656 3 0.0317 2 0.7404 2)
Average genome size in population (length): 128.633
Average program size in population (points): 129.633
Average percent parens in population: 0.008
Minimum age in population: 57.56280560392042
Maximum age in population: 61.54615512823966
Average age in population: 59.67130559110474
Median age in population: 59.69083878413858
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.422
Error (vector) diversity:			 0.431
Behavioral diversity:				 0.431
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 94889300
--- Timings ---
Current time: 1529614992721 milliseconds
Total Time:         192.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.6 seconds, 30.4%
Fitness Testing:    103.7 seconds, 53.7%
Report:              30.6 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 43739.18120000002
Test mean error for best: 21.86959
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction integer_add} {:instruction float_yank} {:instruction float_yankdup} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_add in1 float_rot integer_mult float_rot float_yank integer_add float_yank float_yankdup integer_mult integer_sub float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 18.9607 9 13.0393 9 22.0 12 1.0 1 16.0393 13 50.0 1 2.0393 7 21.0393 9 10.0 12 23.0 11 43.0 2 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 718.9606999999999
Mean: 14.379214
Genome size: 152
Size: 153
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3843.318268099998
Median total errors in population: 941.9607
Error averages by case: (182.51595220000038 5.543 144.05704470000038 9.789 135.07377429999949 10.82 153.11649210000041 9.085 133.9648771999999 5.089 139.70040719999977 11.683 146.82759969999978 10.139 131.13377249999957 9.257 145.65399619999957 10.486 133.48615940000028 9.568 154.36277590000032 9.596 160.78068719999987 10.579 157.26441669999977 10.272 120.65294380000005 4.428 147.80389290000033 9.908 168.0807688999998 9.215 144.09518820000034 10.12 135.58542470000032 9.894 130.1435332000003 9.346 134.2012137000004 10.632 134.0410563000005 8.47 136.5911551000004 10.731 151.50512099999963 10.784 148.83577609999975 10.406 138.43923890000028 9.565)
Error minima by case: (54.0 2 0.2596 3 6.9607 8 1.6445 1 0.0 0 2.1037 7 1.2514 1 0.6445 2 12.3635 8 4.7878 2 3.1503 1 0.0829 2 3.9901 2 2.1448 2 0.8036 2 12.262 2 0.3556 2 1.9543 2 0.0393 2 0.5978 1 1.4914 1 0.2596 8 1.186 8 4.8925 2 0.7404 1)
Average genome size in population (length): 135.687
Average program size in population (points): 136.687
Average percent parens in population: 0.007
Minimum age in population: 58.8371435196841
Maximum age in population: 62.97265384886691
Average age in population: 61.03430700487232
Median age in population: 61.06669774075499
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.421
Error (vector) diversity:			 0.43
Behavioral diversity:				 0.431
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 98397500
--- Timings ---
Current time: 1529614998994 milliseconds
Total Time:         199.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.0 seconds, 30.1%
Fitness Testing:    107.4 seconds, 53.9%
Report:              31.8 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 40733.34450000003
Test mean error for best: 20.36667
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min in1 integer_shove integer_yankdup in1 float_add tag_float_737 integer_min integer_min float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_dup_times float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items integer_rot integer_mult float_dup_times integer_dup_items integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 18.9607 9 13.0393 9 22.0 12 1.0 1 16.0393 13 50.0 1 2.0393 7 21.0393 9 10.0 12 23.0 11 43.0 2 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 718.9606999999999
Mean: 14.379214
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3374.9763798999993
Median total errors in population: 918.133
Error averages by case: (167.82885760000033 5.302 121.95854050000013 9.708 112.24324709999986 10.746 138.80092870000024 9.61 118.82045959999986 5.008 119.54168290000014 11.727 136.3890052999999 10.216 108.07518989999987 9.164 124.17379179999988 10.427 121.0493323999998 9.67 139.54137390000005 9.782 147.55166469999995 10.596 133.9207935000001 10.132 99.73708919999997 4.307 126.36679389999989 9.835 144.9687352 9.311 123.61846149999992 10.006 115.1305388 9.681 108.71745340000007 9.126 121.58685570000009 10.697 109.92612440000019 8.218 115.96616630000008 10.713 130.72630940000008 10.551 135.41000509999995 10.543 118.34097909999993 9.51)
Error minima by case: (37.8653 2 0.2596 2 4.2072 7 2.0393 1 0.0 0 1.7604 7 1.8643 1 0.6445 2 4.8002 8 4.9803 2 6.6056 1 0.0829 2 4.9901 2 2.0 2 0.1964 2 3.2712 1 0.6444 2 0.9543 1 0.0393 2 1.4456 1 0.5325 1 0.2596 8 1.7656 8 3.7246 2 0.2596 2)
Average genome size in population (length): 138.891
Average program size in population (points): 139.891
Average percent parens in population: 0.007
Minimum age in population: 60.46553925419539
Maximum age in population: 64.24457623239539
Average age in population: 62.38268266378946
Median age in population: 62.45925976612426
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.426
Error (vector) diversity:			 0.434
Behavioral diversity:				 0.434
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 101993525
--- Timings ---
Current time: 1529615005300 milliseconds
Total Time:         205.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.4 seconds, 29.8%
Fitness Testing:    111.2 seconds, 54.1%
Report:              32.9 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 40733.34450000003
Test mean error for best: 20.36667
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -0.135719703  
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min in1 integer_shove integer_yankdup in1 float_add tag_float_737 integer_min integer_min float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_dup_times float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items integer_rot integer_mult float_dup_times integer_dup_items integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 18.9607 9 13.0393 9 22.0 12 1.0 1 16.0393 13 50.0 1 2.0393 7 21.0393 9 10.0 12 23.0 11 43.0 2 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 718.9606999999999
Mean: 14.379214
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3625.2065166000025
Median total errors in population: 916.133
Error averages by case: (175.75240430000042 5.54 137.07483039999963 9.785 128.0897525000003 10.687 139.05178190000046 9.564 120.52785670000003 4.724 132.71051640000059 11.717 141.76592709999983 10.167 121.89372610000025 9.094 137.26378280000037 10.418 121.94540649999995 9.413 137.76353680000034 9.526 151.1645712999998 10.499 148.27485430000056 9.874 116.22162519999998 4.379 140.60020439999948 9.837 159.45009520000056 9.495 136.9656581999995 9.776 129.36123409999962 9.648 122.87636599999962 9.079 123.0275723999996 10.669 124.6870432999997 7.999 130.0547694999996 10.727 144.5172609000005 10.394 138.6754283999999 10.464 132.3403118999995 9.675)
Error minima by case: (56.0 2 0.2596 3 2.701 7 1.6445 1 0.0 0 1.7482 7 4.825 1 0.6445 2 2.281 8 0.7404 2 0.1503 1 0.0829 2 3.9901 2 0.3311 2 0.8036 2 12.262 2 0.3556 2 4.0521 1 0.0393 2 1.4456 1 1.1585 1 0.2596 8 0.7656 8 3.7246 2 0.2596 1)
Average genome size in population (length): 140.341
Average program size in population (points): 141.341
Average percent parens in population: 0.007
Minimum age in population: 61.60574647444992
Maximum age in population: 65.72668564272999
Average age in population: 63.73767661704756
Median age in population: 63.8023912195456
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.95
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.95
Total error diversity:				 0.415
Error (vector) diversity:			 0.424
Behavioral diversity:				 0.424
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 105632425
--- Timings ---
Current time: 1529615011625 milliseconds
Total Time:         212.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.8 seconds, 29.6%
Fitness Testing:    115.1 seconds, 54.3%
Report:              34.0 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 39903.44180000004
Test mean error for best: 19.95172
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 132.5241713519
Correct output: 14.755435921   | Program output: 0.5482140206  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -14.2184108014
Correct output: -50.135719703  | Program output: -40.9284978026
Correct output: 78.5646212622  | Program output: 75.3573993619 
Correct output: 66.7190026342  | Program output: 44.5117807338 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 128.8026838623
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 113.8560405418
Correct output: 171.737997407  | Program output: 132.5307755067
Correct output: 44.3556039838  | Program output: 75.1483820835 
Correct output: -40.9542965608 | Program output: -30.1615184612
Correct output: -28.6497177653 | Program output: -27.8569396657
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 96.9586691643 
Correct output: 12.6449981755  | Program output: 30.4377762751 
Correct output: 37.0251741292  | Program output: 2.8179522288  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -17.3354782962
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction integer_flush} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_max} {:instruction float_sub} {:instruction float_inc} {:instruction 53.792778099653454} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dec} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 integer_flush integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_max float_sub float_inc 53.792778099653454 in1 float_add tag_float_737 float_max integer_yankdup float_div float_dec float_div float_div float_flush float_dec float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 17.7928 10 14.2072 11 22.0 12 1.0 1 17.2072 11 9.2072 9 3.2072 10 22.2072 10 10.0 12 23.0 11 43.0 2 27.2072 9 4.0 2 28.7928 12 39.2072 9 30.7928 10 10.7928 10 0.7928 9 17.0 2 3.7928 7 17.7928 10 34.2072 10 23.0 2 16.7928 11]
Total: 699.0
Mean: 13.98
Genome size: 153
Size: 154
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 2970.3533706999997
Median total errors in population: 932.1069000000001
Error averages by case: (148.67329350000023 4.957 107.75205939999954 9.498 100.90561510000006 10.622 116.71528490000048 9.476 95.62545109999992 4.298 106.24747000000025 11.689 124.6191080999996 9.508 94.6119981999997 8.737 110.87955850000046 10.322 99.21447129999993 9.261 112.78961630000026 9.223 131.2361321999996 9.889 123.1930319000007 9.47 91.31547190000003 4.02 111.79423839999937 9.506 133.32946890000082 9.336 107.28867649999951 9.379 99.40393609999997 9.308 93.81522020000034 8.724 101.59110689999987 10.191 96.13578850000023 7.539 98.91283789999994 10.656 120.0829571000006 10.213 117.16061089999963 9.926 101.97896689999979 9.333)
Error minima by case: (33.1347 2 0.2596 3 2.2446 7 2.0393 1 0.0 0 1.9888 7 6.6445 1 0.6445 2 4.4205 8 0.7223 1 4.7404 1 0.0829 2 4.9901 2 0.1405 2 4.2989 2 8.1986 2 0.6444 2 0.5147 2 0.2072 2 1.4456 1 1.8585 1 0.2596 8 1.7656 8 1.139 2 0.7404 2)
Average genome size in population (length): 141.762
Average program size in population (points): 142.762
Average percent parens in population: 0.007
Minimum age in population: 62.72054802330626
Maximum age in population: 67.07351029378745
Average age in population: 65.05405742883256
Median age in population: 65.08407642864145
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.437
Error (vector) diversity:			 0.444
Behavioral diversity:				 0.446
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 109312750
--- Timings ---
Current time: 1529615017867 milliseconds
Total Time:         218.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.1 seconds, 29.4%
Fitness Testing:    118.9 seconds, 54.5%
Report:              35.0 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 39624.80590000001
Test mean error for best: 19.81240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -42.0964246635
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 float_add tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 18.9607 9 13.0393 9 22.0 12 1.0 1 16.0393 13 8.0393 11 2.0393 7 21.0393 9 10.0 12 23.0 11 43.0 2 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 686.9999999999999
Mean: 13.74
Genome size: 148
Size: 149
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3119.4298220999976
Median total errors in population: 892.2914000000002
Error averages by case: (152.82263290000017 4.948 111.87024379999951 9.365 107.22480580000038 10.615 120.64769930000045 9.523 107.57658680000003 4.43 113.57078740000063 11.621 131.5665188999996 8.722 99.13147580000023 8.674 116.16047520000052 10.321 104.75187920000005 9.245 116.55164060000024 9.111 137.91909529999973 9.247 127.59364150000073 9.233 94.69987560000003 4.045 115.70572709999928 9.468 135.9995467000006 9.11 113.2231507999993 9.208 109.18267589999951 9.158 103.83666719999957 8.564 107.74497589999967 9.529 102.77854959999983 7.325 107.87157889999953 10.645 125.43862340000068 10.221 123.45889759999977 9.335 111.13907089999944 9.3)
Error minima by case: (37.8653 2 0.2596 2 10.3232 3 2.0393 1 0.0 0 1.9888 2 1.3238 1 0.6445 2 2.7961 2 8.7358 1 0.2114 1 0.9171 2 4.7009 2 0.7082 2 0.1964 2 9.7812 2 0.6444 2 0.9981 1 0.2072 2 1.7621 2 2.7928 1 0.2596 2 1.4259 3 1.0 1 0.7404 2)
Average genome size in population (length): 144.457
Average program size in population (points): 145.457
Average percent parens in population: 0.007
Minimum age in population: 64.02113130375949
Maximum age in population: 68.3926409082371
Average age in population: 66.49941789763174
Median age in population: 66.55990681458246
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.958
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.958
Total error diversity:				 0.419
Error (vector) diversity:			 0.425
Behavioral diversity:				 0.425
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 113063825
--- Timings ---
Current time: 1529615024108 milliseconds
Total Time:         224.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.5 seconds, 29.2%
Fitness Testing:    122.7 seconds, 54.7%
Report:              36.1 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 39624.80590000001
Test mean error for best: 19.81240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -42.0964246635
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 float_add tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_yankdup float_mult integer_yankdup)
Errors: [57.0 3 18.9607 9 13.0393 9 22.0 12 1.0 1 16.0393 13 8.0393 11 2.0393 7 21.0393 9 10.0 12 23.0 11 43.0 2 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 686.9999999999999
Mean: 13.74
Genome size: 148
Size: 149
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3058.376264399999
Median total errors in population: 874.65295
Error averages by case: (157.87914960000035 5.275 107.87654379999933 9.477 102.98535000000055 10.53 120.55270650000031 9.783 97.5104903999999 4.255 109.39395450000087 11.806 132.49405639999958 8.026 97.45545800000038 8.661 112.13219600000079 10.239 105.66664659999994 9.543 116.55195090000007 9.313 138.45070549999963 8.553 123.14981360000104 9.541 103.57997459999997 4.216 112.69546129999905 9.344 134.22101870000105 9.568 110.6606216999991 9.334 102.30288339999927 9.319 95.92293459999951 8.741 108.49597779999965 8.871 97.10808469999957 7.458 99.77584229999938 10.652 121.96504590000093 10.018 124.03046449999967 8.644 104.85293309999922 9.499)
Error minima by case: (55.0 2 0.2596 2 0.7554 2 2.0393 1 0.0 0 2.9888 1 4.825 1 1.0393 2 2.0 1 0.4287 1 13.9607 1 9.9962 2 4.9901 2 0.3311 2 5.4668 2 13.262 2 0.6444 2 0.9543 1 0.2072 2 1.0019 1 2.1263 1 0.2596 2 0.7656 2 3.0038 2 0.2596 2)
Average genome size in population (length): 146.121
Average program size in population (points): 147.121
Average percent parens in population: 0.007
Minimum age in population: 65.02113130375949
Maximum age in population: 69.61389016787297
Average age in population: 67.81616532744624
Median age in population: 67.84865041362659
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.398
Error (vector) diversity:			 0.402
Behavioral diversity:				 0.403
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 116859500
--- Timings ---
Current time: 1529615030471 milliseconds
Total Time:         230.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.9 seconds, 29.0%
Fitness Testing:    126.6 seconds, 54.9%
Report:              37.1 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 39624.80590000001
Test mean error for best: 19.81240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -42.0964246635
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 37.623740726381975} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_pop} {:instruction integer_min} {:instruction integer_min} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (37.623740726381975 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 in1 integer_shove integer_yankdup integer_dup_items in1 integer_pop integer_min integer_min float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_yankdup float_mult integer_yankdup)
Errors: [57.0 3 18.9607 9 13.0393 9 22.0 12 1.0 1 16.0393 13 8.0393 11 2.0393 7 21.0393 9 10.0 12 23.0 11 43.0 2 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 686.9999999999999
Mean: 13.74
Genome size: 154
Size: 155
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3283.186040499998
Median total errors in population: 907.1352000000002
Error averages by case: (166.77547560000022 5.198 117.15642529999936 9.466 110.26578960000049 10.357 128.06350510000033 9.824 109.35255530000002 4.359 122.55080530000083 12.043 140.57039789999982 7.518 101.84627660000032 8.325 118.69038050000061 10.173 115.0073954999999 9.571 123.5870476000001 9.318 147.53746829999977 7.833 130.6109678000009 9.611 105.8451427 4.075 121.64294709999915 8.903 141.38375970000095 9.852 117.82834989999934 9.269 117.02650789999933 9.268 111.40774539999953 8.699 118.51514889999963 8.029 105.39683519999966 7.449 110.67417449999951 10.652 131.17216460000085 9.848 133.63907389999977 7.868 119.82270029999921 9.309)
Error minima by case: (55.0 2 0.2596 3 6.9607 9 2.0393 1 0.0 0 0.468 8 1.3042 1 0.6445 2 0.8559 8 4.0393 1 3.6616 1 4.5415 2 4.9901 2 0.7082 2 0.1964 2 13.262 2 0.6444 2 1.9543 1 0.2072 2 0.4022 1 0.1089 1 0.2596 2 13.0393 8 1.9711 2 0.2596 2)
Average genome size in population (length): 148.712
Average program size in population (points): 149.712
Average percent parens in population: 0.007
Minimum age in population: 66.71262275413943
Maximum age in population: 70.89843200882792
Average age in population: 69.18043932674749
Median age in population: 69.22514154519284
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.967
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.386
Error (vector) diversity:			 0.394
Behavioral diversity:				 0.394
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 120726400
--- Timings ---
Current time: 1529615036808 milliseconds
Total Time:         237.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.4 seconds, 28.8%
Fitness Testing:    130.5 seconds, 55.0%
Report:              38.2 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 39624.80590000001
Test mean error for best: 19.81240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -42.0964246635
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 37.623740726381975} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_pop} {:instruction integer_min} {:instruction integer_min} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction float_mult} {:instruction float_dup_times})
Best program: (37.623740726381975 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 in1 integer_shove integer_yankdup integer_dup_items in1 integer_pop integer_min integer_min float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_yankdup float_mult float_dup_times)
Errors: [57.0 3 18.9607 9 13.0393 9 22.0 12 1.0 1 16.0393 13 8.0393 11 2.0393 7 21.0393 9 10.0 12 23.0 11 43.0 2 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 686.9999999999999
Mean: 13.74
Genome size: 154
Size: 155
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3098.6637660999986
Median total errors in population: 937.0393
Error averages by case: (159.0385980000003 5.043 112.4732330999996 9.207 108.51514290000043 10.182 119.14939030000029 9.626 103.07722960000002 4.3 111.76778500000071 12.133 128.82898459999996 7.697 101.32077120000038 7.906 117.16752780000067 10.092 105.28086469999994 9.54 115.20002860000007 9.244 137.2666478999999 7.583 128.62993100000094 9.446 93.85794559999998 4.09 117.03897539999915 8.241 139.77267040000106 9.842 113.07353449999945 8.926 105.25168169999952 8.923 99.41011449999964 8.371 107.78063809999983 7.807 103.22825449999968 7.3 103.90230429999964 10.666 125.55711500000088 9.731 122.77459449999982 7.604 106.84380289999945 8.956)
Error minima by case: (37.8653 2 0.2596 2 4.3801 3 2.0393 1 0.0 0 2.152 2 2.6571 1 1.0393 2 4.8002 1 3.6789 1 1.142 1 4.5415 2 4.9901 2 0.6689 2 0.1964 2 13.262 2 0.6444 2 1.9543 1 0.2072 2 0.5978 1 2.7928 1 0.2596 2 0.7656 3 1.0 1 0.5275 2)
Average genome size in population (length): 150.521
Average program size in population (points): 151.521
Average percent parens in population: 0.007
Minimum age in population: 68.2456857417962
Maximum age in population: 72.24781975204274
Average age in population: 70.54621104656715
Median age in population: 70.5728061606899
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.421
Error (vector) diversity:			 0.431
Behavioral diversity:				 0.433
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 124642175
--- Timings ---
Current time: 1529615043361 milliseconds
Total Time:         243.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.8 seconds, 28.6%
Fitness Testing:    134.6 seconds, 55.2%
Report:              39.2 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 39624.80590000001
Test mean error for best: 19.81240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -42.0964246635
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_mult} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_864} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 36.25961346587397 in1 integer_yankdup integer_dup_items float_mult float_add tag_float_737 integer_min in1 integer_shove integer_yankdup in1 float_add tag_float_737 integer_min integer_min float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_inc 54.9607049605322 in1 float_add integer_min float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_dup_times float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times float_dup_times integer_dup_items integer_rot integer_mult float_dup_times integer_dup_items integer_yankdup float_div float_div float_swap float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_864 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 18.9607 9 13.0393 9 22.0 12 1.0 1 16.0393 13 8.0393 11 2.0393 7 21.0393 9 10.0 12 23.0 11 43.0 2 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 686.9999999999999
Mean: 13.74
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3612.8133255999996
Median total errors in population: 893.3035
Error averages by case: (176.7427406000002 5.039 133.24694199999908 9.229 124.57423240000084 10.147 141.58778780000026 9.826 120.8488188 4.547 133.68261030000104 12.241 148.36788639999995 8.25 118.16528380000068 7.86 134.34088580000096 10.079 126.92755679999979 9.683 138.03672570000012 9.424 158.74609159999994 7.574 146.22499740000112 9.544 120.65032219999999 4.175 137.42949299999898 8.177 157.0463156000013 9.958 133.042215999999 8.969 129.33701829999896 9.141 123.76911939999907 8.566 129.84826459999962 7.785 121.13283349999928 7.333 123.96515129999918 10.684 143.707582200001 9.661 144.7034581 7.615 132.06799199999892 9.114)
Error minima by case: (36.8653 2 0.2596 2 0.2295 8 2.0393 1 0.0 0 1.0052 7 2.4918 1 1.0393 2 6.281 8 3.8544 1 3.6616 1 0.0829 2 3.9901 2 3.0 2 5.2989 2 4.2712 2 0.3556 2 0.5067 1 0.0393 2 0.4022 1 2.7928 1 0.2596 7 0.7656 8 3.8925 2 0.2596 2)
Average genome size in population (length): 150.779
Average program size in population (points): 151.779
Average percent parens in population: 0.007
Minimum age in population: 69.871351593914
Maximum age in population: 73.97567358896623
Average age in population: 71.90259957748893
Median age in population: 71.92016124806621
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.389
Error (vector) diversity:			 0.404
Behavioral diversity:				 0.406
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 128560800
--- Timings ---
Current time: 1529615049859 milliseconds
Total Time:         250.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        71.2 seconds, 28.5%
Fitness Testing:    138.5 seconds, 55.4%
Report:              40.2 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 39624.80590000001
Test mean error for best: 19.81240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: -0.6416662081 
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -42.0964246635
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: -0.2641572133 
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -0.5414748403 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_inc} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dec} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_inc tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_dec float_div float_div float_flush float_dec float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_add in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [57.0 3 18.9607 9 13.0393 9 22.0 12 1.0 1 16.0393 13 8.0393 11 2.0393 7 21.0393 9 10.0 12 23.0 11 43.0 2 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 686.9999999999999
Mean: 13.74
Genome size: 158
Size: 159
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3274.358378899999
Median total errors in population: 941.9607
Error averages by case: (161.7111567000003 5.127 116.31400029999944 9.178 113.3279340000005 10.143 128.57860100000025 9.623 114.40090559999994 4.521 121.34436990000077 12.284 134.67864739999996 9.081 104.01249540000009 7.828 120.67799330000058 10.086 113.60893819999981 9.55 125.17312310000001 9.216 147.23598739999997 7.823 128.71884300000067 9.492 108.60544640000005 4.144 120.34478349999918 8.116 139.7507895000008 9.89 117.88648829999936 8.915 115.00439709999928 9.075 109.37377999999951 8.563 120.30851269999975 8.129 104.61392869999982 7.321 111.36473899999943 10.702 130.42820580000063 9.644 134.17032999999995 7.846 117.37498259999914 9.052)
Error minima by case: (36.8653 2 0.2596 3 3.9051 8 3.2072 1 0.0 0 1.7482 8 0.3179 1 0.1987 2 6.281 8 0.4287 1 2.6616 1 0.0829 2 3.9901 2 1.7082 2 0.8036 2 12.262 2 0.3556 2 0.9981 1 0.2072 2 0.4022 1 2.7928 1 0.2596 9 0.4014 8 4.4808 2 0.2596 2)
Average genome size in population (length): 152.518
Average program size in population (points): 153.518
Average percent parens in population: 0.007
Minimum age in population: 70.871351593914
Maximum age in population: 75.40963168842697
Average age in population: 73.19493090809908
Median age in population: 73.19986596416467
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.398
Error (vector) diversity:			 0.41
Behavioral diversity:				 0.41
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 132517000
--- Timings ---
Current time: 1529615056717 milliseconds
Total Time:         256.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        72.6 seconds, 28.3%
Fitness Testing:    142.8 seconds, 55.6%
Report:              41.4 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 39530.46440000001
Test mean error for best: 19.76523
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -95.8652845137
Correct output: 114.7313932523 | Program output: 132.6920982128
Correct output: 14.755435921   | Program output: 0.7161408815  
Correct output: 21.3583337919  | Program output: -1.6416662081 
Correct output: 76.8145408742  | Program output: 74.8145408742 
Correct output: 2.9888110989   | Program output: -14.0504839405
Correct output: -50.135719703  | Program output: -43.0964246635
Correct output: 78.5646212622  | Program output: 75.5253262228 
Correct output: 66.7190026342  | Program output: 44.6797075947 
Correct output: 9.7358427867   | Program output: -1.2641572133 
Correct output: 22.7793630647  | Program output: -1.2206369353 
Correct output: -43.5414748403 | Program output: -1.5414748403 
Correct output: 156.0099057627 | Program output: 128.9706107232
Correct output: -48.6689485349 | Program output: -53.6689485349
Correct output: 85.0632624421  | Program output: 114.0239674026
Correct output: 171.737997407  | Program output: 132.6987023675
Correct output: 44.3556039838  | Program output: 75.3163089443 
Correct output: -40.9542965608 | Program output: -29.9935916003
Correct output: -28.6497177653 | Program output: -27.6890128048
Correct output: -17.2771991531 | Program output: -1.2771991531 
Correct output: 93.1658910647  | Program output: 97.1265960252 
Correct output: 12.6449981755  | Program output: 30.605703136  
Correct output: 37.0251741292  | Program output: 2.9858790897  
Correct output: -23.9317722741 | Program output: -1.9317722741 
Correct output: -34.1282563958 | Program output: -17.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 float_add tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_yankdup in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [56.0 2 17.9607 9 14.0393 10 23.0 11 2.0 1 17.0393 13 7.0393 11 3.0393 7 22.0393 9 11.0 12 24.0 11 42.0 2 27.0393 10 5.0 2 28.9607 8 39.0393 11 30.9607 9 10.9607 9 0.9607 8 16.0 1 3.9607 7 17.9607 10 34.0393 9 22.0 2 16.9607 9]
Total: 685.9999999999999
Mean: 13.72
Genome size: 156
Size: 157
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3331.2104470999984
Median total errors in population: 941.9607
Error averages by case: (165.34950150000034 5.427 119.14375459999924 9.15 115.55461250000067 10.121 131.10536390000036 9.759 114.38476289999984 4.378 122.50265690000093 12.345 132.62340700000036 9.909 107.34596360000064 7.75 125.43895350000098 10.069 116.41992859999962 9.613 127.47123640000007 9.351 147.54580510000008 7.979 132.71882130000125 9.541 106.326761 4.145 123.15081399999893 8.013 143.75512950000126 9.978 121.18715119999901 8.916 117.80997089999919 9.058 112.09481099999934 8.529 119.8326972999996 8.292 109.13896199999945 7.285 115.83257499999927 10.7 133.38832670000122 9.619 134.2310681000001 8.022 119.91741259999914 8.991)
Error minima by case: (56.0 2 0.2596 2 7.0 2 2.0393 1 0.0 0 1.6094 9 3.6571 1 0.3959 2 1.0 1 1.511 1 4.4834 1 0.0829 2 4.9901 1 1.3311 2 2.022 2 13.262 2 0.6444 2 0.0457 1 0.2072 2 0.7404 1 2.0722 1 0.2596 2 0.4014 2 4.0669 2 0.7404 2)
Average genome size in population (length): 154.231
Average program size in population (points): 155.231
Average percent parens in population: 0.006
Minimum age in population: 72.28073467273262
Maximum age in population: 76.63652642975626
Average age in population: 74.4896959181124
Median age in population: 74.51016068930792
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.393
Error (vector) diversity:			 0.41
Behavioral diversity:				 0.413
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 136512325
--- Timings ---
Current time: 1529615063400 milliseconds
Total Time:         263.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        74.0 seconds, 28.1%
Fitness Testing:    147.0 seconds, 55.7%
Report:              42.6 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 39318.36580000003
Test mean error for best: 19.65918
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -95.8652845137
Correct output: 114.7313932523 | Program output: 132.6920982128
Correct output: 14.755435921   | Program output: 0.7161408815  
Correct output: 21.3583337919  | Program output: -1.6416662081 
Correct output: 76.8145408742  | Program output: 74.8145408742 
Correct output: 2.9888110989   | Program output: -14.0504839405
Correct output: -50.135719703  | Program output: -43.0964246635
Correct output: 78.5646212622  | Program output: 75.5253262228 
Correct output: 66.7190026342  | Program output: 44.6797075947 
Correct output: 9.7358427867   | Program output: -1.2641572133 
Correct output: 22.7793630647  | Program output: -1.2206369353 
Correct output: -43.5414748403 | Program output: -1.5414748403 
Correct output: 156.0099057627 | Program output: 128.9706107232
Correct output: -48.6689485349 | Program output: -53.6689485349
Correct output: 85.0632624421  | Program output: 114.0239674026
Correct output: 171.737997407  | Program output: 132.6987023675
Correct output: 44.3556039838  | Program output: 75.3163089443 
Correct output: -40.9542965608 | Program output: -29.9935916003
Correct output: -28.6497177653 | Program output: -27.6890128048
Correct output: -17.2771991531 | Program output: -1.2771991531 
Correct output: 93.1658910647  | Program output: 97.1265960252 
Correct output: 12.6449981755  | Program output: 30.605703136  
Correct output: 37.0251741292  | Program output: 2.9858790897  
Correct output: -23.9317722741 | Program output: -1.9317722741 
Correct output: -34.1282563958 | Program output: -17.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 37.623740726381975} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction print_integer} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (37.623740726381975 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 print_integer float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_inc 54.9607049605322 in1 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup integer_dup integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [56.0 2 17.9607 9 14.0393 10 23.0 11 2.0 1 17.0393 13 7.0393 11 3.0393 7 22.0393 9 11.0 12 24.0 11 42.0 2 27.0393 10 5.0 2 28.9607 8 39.0393 11 30.9607 9 10.9607 9 0.9607 8 16.0 1 3.9607 7 17.9607 10 34.0393 9 22.0 2 16.9607 9]
Total: 685.9999999999999
Mean: 13.72
Genome size: 165
Size: 166
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3280.9518386000004
Median total errors in population: 925.98035
Error averages by case: (160.5859351000003 5.452 120.75116879999953 9.296 109.5656498000004 10.077 127.81064580000024 10.079 104.89567959999995 4.525 121.43886420000071 12.425 129.14293370000024 10.387 107.59504160000033 7.743 122.63839090000074 10.055 113.50545069999986 9.909 124.44218489999997 9.625 146.0286005 7.635 133.27619930000102 9.67 103.83807250000008 4.101 124.48329289999909 7.956 144.34222640000098 10.196 121.36810139999936 9.032 114.78726239999942 9.185 110.49953329999956 8.641 118.86979639999986 7.987 109.68699269999973 7.42 114.47980389999954 10.769 129.27385120000093 9.536 130.88075559999993 7.746 118.24340499999943 9.075)
Error minima by case: (55.0 2 0.2596 3 3.9457 8 0.665 1 0.0 0 1.7482 8 2.907 1 1.0393 2 6.281 8 0.4287 1 2.0768 1 0.0829 2 3.9901 2 0.7082 2 0.1964 2 1.7797 2 0.3556 2 1.9543 1 0.2072 2 0.0898 1 2.7928 1 0.2596 9 0.7656 8 3.7246 2 0.7404 2)
Average genome size in population (length): 155.194
Average program size in population (points): 156.194
Average percent parens in population: 0.006
Minimum age in population: 73.34331779535013
Maximum age in population: 77.99940622267567
Average age in population: 75.7938168388754
Median age in population: 75.82720484379963
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.447
Error (vector) diversity:			 0.452
Behavioral diversity:				 0.456
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 140527100
--- Timings ---
Current time: 1529615070082 milliseconds
Total Time:         270.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        75.4 seconds, 27.9%
Fitness Testing:    151.1 seconds, 55.9%
Report:              43.6 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 39530.46440000001
Test mean error for best: 19.76523
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -95.8652845137
Correct output: 114.7313932523 | Program output: 132.6920982128
Correct output: 14.755435921   | Program output: 0.7161408815  
Correct output: 21.3583337919  | Program output: -1.6416662081 
Correct output: 76.8145408742  | Program output: 74.8145408742 
Correct output: 2.9888110989   | Program output: -14.0504839405
Correct output: -50.135719703  | Program output: -43.0964246635
Correct output: 78.5646212622  | Program output: 75.5253262228 
Correct output: 66.7190026342  | Program output: 44.6797075947 
Correct output: 9.7358427867   | Program output: -1.2641572133 
Correct output: 22.7793630647  | Program output: -1.2206369353 
Correct output: -43.5414748403 | Program output: -1.5414748403 
Correct output: 156.0099057627 | Program output: 128.9706107232
Correct output: -48.6689485349 | Program output: -53.6689485349
Correct output: 85.0632624421  | Program output: 114.0239674026
Correct output: 171.737997407  | Program output: 132.6987023675
Correct output: 44.3556039838  | Program output: 75.3163089443 
Correct output: -40.9542965608 | Program output: -29.9935916003
Correct output: -28.6497177653 | Program output: -27.6890128048
Correct output: -17.2771991531 | Program output: -1.2771991531 
Correct output: 93.1658910647  | Program output: 97.1265960252 
Correct output: 12.6449981755  | Program output: 30.605703136  
Correct output: 37.0251741292  | Program output: 2.9858790897  
Correct output: -23.9317722741 | Program output: -1.9317722741 
Correct output: -34.1282563958 | Program output: -17.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 float_add tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_yankdup in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [56.0 2 17.9607 9 14.0393 10 23.0 11 2.0 1 17.0393 13 7.0393 11 3.0393 7 22.0393 9 11.0 12 24.0 11 42.0 2 27.0393 10 5.0 2 28.9607 8 39.0393 11 30.9607 9 10.9607 9 0.9607 8 16.0 1 3.9607 7 17.9607 10 34.0393 9 22.0 2 16.9607 9]
Total: 685.9999999999999
Mean: 13.72
Genome size: 156
Size: 157
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3389.5120347
Median total errors in population: 893.6607999999999
Error averages by case: (170.75625310000032 5.23 123.4143063999993 9.335 116.59596690000043 10.004 131.72319040000025 10.018 110.41557679999995 4.532 125.49292380000101 12.504 130.19998340000035 10.892 110.64836670000045 7.7 125.8324924000008 9.993 117.25079429999985 9.951 128.09172120000005 9.557 148.77441709999994 7.638 137.6357460000011 9.804 117.77728869999999 4.155 127.49984229999899 7.866 147.60609180000108 10.345 124.94840359999915 9.046 120.05502159999931 9.114 114.01996779999958 8.521 120.95833239999978 8.029 112.00939959999965 7.472 117.39248109999957 10.719 134.39376760000104 9.45 134.31749330000002 7.768 122.99320639999918 9.066)
Error minima by case: (55.0 2 0.2596 3 3.8599 3 2.0393 1 0.0 0 2.2072 5 3.6571 1 0.0393 2 5.281 2 0.2596 1 1.0043 1 0.0829 2 1.0492 2 2.0 2 6.1571 2 9.7812 2 0.3556 2 1.9543 2 0.0307 1 1.4456 1 1.9456 1 0.2596 4 0.2344 5 15.0682 2 0.7404 2)
Average genome size in population (length): 155.979
Average program size in population (points): 156.979
Average percent parens in population: 0.006
Minimum age in population: 74.34331779535013
Maximum age in population: 79.05360314004427
Average age in population: 77.14251436259872
Median age in population: 77.1692475684687
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.403
Error (vector) diversity:			 0.413
Behavioral diversity:				 0.414
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 144560625
--- Timings ---
Current time: 1529615076560 milliseconds
Total Time:         276.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        76.9 seconds, 27.8%
Fitness Testing:    155.2 seconds, 56.0%
Report:              44.8 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 39650.888800000015
Test mean error for best: 19.82544
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -96.8652845137
Correct output: 114.7313932523 | Program output: 131.6920982128
Correct output: 14.755435921   | Program output: -0.2838591185 
Correct output: 21.3583337919  | Program output: -2.6416662081 
Correct output: 76.8145408742  | Program output: 73.8145408742 
Correct output: 2.9888110989   | Program output: -15.0504839405
Correct output: -50.135719703  | Program output: -44.0964246635
Correct output: 78.5646212622  | Program output: 74.5253262228 
Correct output: 66.7190026342  | Program output: 43.6797075947 
Correct output: 9.7358427867   | Program output: -2.2641572133 
Correct output: 22.7793630647  | Program output: -2.2206369353 
Correct output: -43.5414748403 | Program output: -2.5414748403 
Correct output: 156.0099057627 | Program output: 127.9706107232
Correct output: -48.6689485349 | Program output: -54.6689485349
Correct output: 85.0632624421  | Program output: 113.0239674026
Correct output: 171.737997407  | Program output: 131.6987023675
Correct output: 44.3556039838  | Program output: 74.3163089443 
Correct output: -40.9542965608 | Program output: -30.9935916003
Correct output: -28.6497177653 | Program output: -28.6890128048
Correct output: -17.2771991531 | Program output: -2.2771991531 
Correct output: 93.1658910647  | Program output: 96.1265960252 
Correct output: 12.6449981755  | Program output: 29.605703136  
Correct output: 37.0251741292  | Program output: 1.9858790897  
Correct output: -23.9317722741 | Program output: -2.9317722741 
Correct output: -34.1282563958 | Program output: -18.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_1036} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction tagged_460} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_min} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod 88 float_mod float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_1036 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 tagged_460 integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dec integer_pop integer_stackdepth integer_rot float_dup in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_min integer_yankdup)
Errors: [55.0 3 16.9607 9 15.0393 10 24.0 12 3.0 1 18.0393 13 6.0393 11 4.0393 7 23.0393 9 12.0 12 25.0 10 41.0 2 28.0393 10 6.0 2 27.9607 8 40.0393 10 29.9607 8 9.9607 8 0.0393 7 15.0 2 2.9607 7 16.9607 10 35.0393 9 21.0 1 15.9607 9]
Total: 682.0785999999999
Mean: 13.641572
Genome size: 164
Size: 165
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3652.9108299000004
Median total errors in population: 941.9607
Error averages by case: (178.13006260000034 5.476 135.80606069999934 9.134 130.42992980000056 10.023 141.81727310000022 9.768 118.28132619999998 4.533 138.01383590000066 12.5 137.46316330000042 11.117 120.92206290000057 7.49 140.98380650000064 10.054 125.91560059999985 9.687 138.13006189999993 9.367 157.10991320000005 7.644 148.43508250000087 9.604 120.74221379999997 4.281 138.82474279999917 7.607 159.36343610000105 10.101 133.49141749999933 8.816 132.52720659999937 9.024 126.88652969999943 8.47 130.3444497999998 7.98 124.98287069999954 7.344 131.03848429999948 10.767 147.85109280000074 9.578 143.17037659999994 7.755 135.17382999999933 8.956)
Error minima by case: (17.1347 2 0.2596 2 3.0393 1 2.0393 1 0.0 0 1.9888 1 2.825 1 1.0393 1 2.1691 1 3.511 1 12.9607 1 0.0 0 2.0099 2 1.014 2 0.8036 2 9.738 1 0.6444 1 0.9543 1 0.0393 1 0.0898 1 1.9456 1 0.2596 2 0.7656 2 3.5815 1 0.7404 2)
Average genome size in population (length): 155.074
Average program size in population (points): 156.074
Average percent parens in population: 0.006
Minimum age in population: 75.34331779535013
Maximum age in population: 80.3347396664926
Average age in population: 78.4732923331816
Median age in population: 78.49576738742367
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.401
Error (vector) diversity:			 0.415
Behavioral diversity:				 0.417
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 148568300
--- Timings ---
Current time: 1529615083224 milliseconds
Total Time:         283.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        78.3 seconds, 27.6%
Fitness Testing:    159.3 seconds, 56.2%
Report:              45.7 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 39650.888800000015
Test mean error for best: 19.82544
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -96.8652845137
Correct output: 114.7313932523 | Program output: 131.6920982128
Correct output: 14.755435921   | Program output: -0.2838591185 
Correct output: 21.3583337919  | Program output: -2.6416662081 
Correct output: 76.8145408742  | Program output: 73.8145408742 
Correct output: 2.9888110989   | Program output: -15.0504839405
Correct output: -50.135719703  | Program output: -44.0964246635
Correct output: 78.5646212622  | Program output: 74.5253262228 
Correct output: 66.7190026342  | Program output: 43.6797075947 
Correct output: 9.7358427867   | Program output: -2.2641572133 
Correct output: 22.7793630647  | Program output: -2.2206369353 
Correct output: -43.5414748403 | Program output: -2.5414748403 
Correct output: 156.0099057627 | Program output: 127.9706107232
Correct output: -48.6689485349 | Program output: -54.6689485349
Correct output: 85.0632624421  | Program output: 113.0239674026
Correct output: 171.737997407  | Program output: 131.6987023675
Correct output: 44.3556039838  | Program output: 74.3163089443 
Correct output: -40.9542965608 | Program output: -30.9935916003
Correct output: -28.6497177653 | Program output: -28.6890128048
Correct output: -17.2771991531 | Program output: -2.2771991531 
Correct output: 93.1658910647  | Program output: 96.1265960252 
Correct output: 12.6449981755  | Program output: 29.605703136  
Correct output: 37.0251741292  | Program output: 1.9858790897  
Correct output: -23.9317722741 | Program output: -2.9317722741 
Correct output: -34.1282563958 | Program output: -18.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_1036} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction tagged_460} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_min} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod 88 float_mod float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_1036 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 tagged_460 integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dec integer_pop integer_stackdepth integer_rot float_dup in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_min integer_yankdup)
Errors: [55.0 3 16.9607 9 15.0393 10 24.0 12 3.0 1 18.0393 13 6.0393 11 4.0393 7 23.0393 9 12.0 12 25.0 10 41.0 2 28.0393 10 6.0 2 27.9607 8 40.0393 10 29.9607 8 9.9607 8 0.0393 7 15.0 2 2.9607 7 16.9607 10 35.0393 9 21.0 1 15.9607 9]
Total: 682.0785999999999
Mean: 13.641572
Genome size: 164
Size: 165
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3351.2917929999994
Median total errors in population: 940.4607
Error averages by case: (166.11088200000037 5.361 122.57600789999955 9.14 115.13832510000034 9.94 132.20961090000029 9.564 109.31033479999996 4.446 121.79863280000068 12.495 130.1869066000003 10.997 110.0300572000002 7.474 125.19525380000049 9.941 115.95547289999986 9.546 128.08101750000012 9.189 149.61978459999986 7.671 135.80187810000086 9.681 110.47031690000006 4.241 126.44164859999925 7.6 146.75932470000092 10.187 123.80652709999937 8.886 117.4240523999994 8.911 111.60818629999955 8.358 122.31061999999984 8.083 112.29670239999977 7.359 114.41701339999958 10.685 133.78588600000083 9.48 133.86258599999996 7.867 120.08276499999938 8.91)
Error minima by case: (37.8653 2 0.2596 3 3.0393 9 2.0393 1 0.0 0 2.0959 8 4.825 1 0.8242 2 12.7583 8 0.4287 1 12.4803 1 0.9171 2 3.9901 2 1.0 1 0.1964 2 12.262 2 0.3556 2 0.9543 1 0.0393 2 0.0898 1 2.9607 1 0.2596 8 0.7656 8 4.8925 1 0.7404 2)
Average genome size in population (length): 155.493
Average program size in population (points): 156.493
Average percent parens in population: 0.006
Minimum age in population: 77.64179098540531
Maximum age in population: 82.1126395365459
Average age in population: 79.77999694625967
Median age in population: 79.79272201204294
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.963
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.963
Total error diversity:				 0.396
Error (vector) diversity:			 0.421
Behavioral diversity:				 0.422
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 152587100
--- Timings ---
Current time: 1529615089829 milliseconds
Total Time:         290.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        79.7 seconds, 27.5%
Fitness Testing:    163.4 seconds, 56.3%
Report:              46.9 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 39650.888800000015
Test mean error for best: 19.82544
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -96.8652845137
Correct output: 114.7313932523 | Program output: 131.6920982128
Correct output: 14.755435921   | Program output: -0.2838591185 
Correct output: 21.3583337919  | Program output: -2.6416662081 
Correct output: 76.8145408742  | Program output: 73.8145408742 
Correct output: 2.9888110989   | Program output: -15.0504839405
Correct output: -50.135719703  | Program output: -44.0964246635
Correct output: 78.5646212622  | Program output: 74.5253262228 
Correct output: 66.7190026342  | Program output: 43.6797075947 
Correct output: 9.7358427867   | Program output: -2.2641572133 
Correct output: 22.7793630647  | Program output: -2.2206369353 
Correct output: -43.5414748403 | Program output: -2.5414748403 
Correct output: 156.0099057627 | Program output: 127.9706107232
Correct output: -48.6689485349 | Program output: -54.6689485349
Correct output: 85.0632624421  | Program output: 113.0239674026
Correct output: 171.737997407  | Program output: 131.6987023675
Correct output: 44.3556039838  | Program output: 74.3163089443 
Correct output: -40.9542965608 | Program output: -30.9935916003
Correct output: -28.6497177653 | Program output: -28.6890128048
Correct output: -17.2771991531 | Program output: -2.2771991531 
Correct output: 93.1658910647  | Program output: 96.1265960252 
Correct output: 12.6449981755  | Program output: 29.605703136  
Correct output: 37.0251741292  | Program output: 1.9858790897  
Correct output: -23.9317722741 | Program output: -2.9317722741 
Correct output: -34.1282563958 | Program output: -18.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_shove} {:instruction 55} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_1036} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction in2} {:instruction tagged_460} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction in1} {:instruction float_rot} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_min} {:instruction integer_yankdup})
Best program: (36.25961346587397 integer_dec float_rot integer_shove 55 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items float_pop float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div integer_dup_times float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_dup_items -52 integer_yankdup float_mod integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_1036 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_shove in2 tagged_460 integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dec integer_pop integer_stackdepth integer_rot float_dup in1 float_rot integer_mult float_rot float_yank -39 float_max float_dec integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_min integer_yankdup)
Errors: [55.0 3 16.9607 9 15.0393 10 24.0 12 3.0 1 18.0393 13 6.0393 11 4.0393 7 23.0393 9 12.0 12 25.0 10 41.0 2 28.0393 10 6.0 2 27.9607 8 40.0393 10 29.9607 8 9.9607 8 0.0393 7 15.0 2 2.9607 7 16.9607 10 35.0393 9 21.0 1 15.9607 9]
Total: 682.0785999999999
Mean: 13.641572
Genome size: 167
Size: 168
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3272.9837373999994
Median total errors in population: 922.82025
Error averages by case: (157.55368190000027 5.095 118.92347259999964 8.962 114.14739020000013 10.002 128.64514970000025 9.297 103.86924189999995 4.101 119.96242490000037 12.465 126.36346500000016 10.934 104.10843550000006 7.346 122.3197423000003 9.921 114.50709069999995 9.289 125.02928500000006 8.957 146.33624969999994 7.751 131.2575422000005 9.529 111.51179960000002 4.156 122.85586909999945 7.551 142.36345890000084 10.068 119.26406479999967 8.713 116.01036029999965 8.86 108.64510329999995 8.287 118.87668339999996 8.105 108.42770189999992 7.217 115.78665619999971 10.657 132.77395690000057 9.507 131.78249619999994 7.832 118.35241519999965 8.708)
Error minima by case: (54.0 2 0.2596 2 3.4438 7 1.0393 1 0.0 0 2.0959 6 3.825 1 0.8242 2 4.8002 8 0.5713 1 1.7996 1 0.9171 2 2.9901 1 0.1405 2 2.4323 2 8.0 1 0.3556 2 6.7404 2 0.0393 1 0.7404 1 1.9456 1 0.2596 8 0.7656 2 2.3042 1 0.7404 2)
Average genome size in population (length): 157.198
Average program size in population (points): 158.198
Average percent parens in population: 0.006
Minimum age in population: 78.87791896316327
Maximum age in population: 83.10674885118232
Average age in population: 81.0590174654299
Median age in population: 81.11918860591292
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.423
Error (vector) diversity:			 0.441
Behavioral diversity:				 0.442
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 156650700
--- Timings ---
Current time: 1529615096466 milliseconds
Total Time:         296.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        81.1 seconds, 27.3%
Fitness Testing:    167.5 seconds, 56.4%
Report:              48.0 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 39384.52730000002
Test mean error for best: 19.69226
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -8.5021798008 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -32.2379041136
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -1.8924772346 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction float_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 float_add tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_yankdup in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot float_inc float_rot float_yank -39 float_max float_dec float_yank integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth)
Errors: [58.0 3 18.9607 9 13.0393 9 21.0 2 0.0 0 16.0393 13 10.0393 10 2.0393 7 21.0393 9 9.0 1 22.0 2 35.0393 8 26.0393 10 3.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 14.9607 8 4.9607 7 18.9607 10 33.0393 8 22.0393 8 17.9607 9]
Total: 660.0392999999999
Mean: 13.200786
Genome size: 157
Size: 158
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3324.052210699999
Median total errors in population: 941.9607
Error averages by case: (164.73403420000028 5.305 120.95082389999925 9.12 118.02035590000067 10.06 128.06322730000034 9.024 104.03835699999993 4.012 123.70108560000092 12.443 126.75121520000039 11.236 109.4310281000007 7.543 125.9657523000008 9.944 113.2340830999998 9.095 124.23728970000016 8.789 146.01043799999988 8.064 135.04233900000108 9.667 108.02238409999995 4.355 124.39158749999899 7.758 146.23695010000108 10.193 123.05254029999911 8.881 119.65033709999923 9.088 113.48473769999926 8.537 117.72979249999977 8.384 110.56332619999941 7.423 117.11692219999928 10.665 134.6273280000011 9.644 130.13453149999995 8.151 122.49574419999917 8.985)
Error minima by case: (55.0 2 0.2596 2 6.0 2 1.0393 1 0.0 0 1.9888 1 2.4918 1 1.0393 2 2.0 1 1.4287 1 8.3192 1 0.0829 1 2.0099 2 2.0 2 0.0545 2 9.738 2 0.3556 2 0.9543 1 0.0158 1 0.0 1 1.9456 1 0.2596 2 0.2344 2 14.0682 1 0.2596 2)
Average genome size in population (length): 158.478
Average program size in population (points): 159.478
Average percent parens in population: 0.006
Minimum age in population: 80.09320066202368
Maximum age in population: 84.38344019462203
Average age in population: 82.35971826011946
Median age in population: 82.3775724578101
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.426
Error (vector) diversity:			 0.449
Behavioral diversity:				 0.451
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 160746400
--- Timings ---
Current time: 1529615103049 milliseconds
Total Time:         303.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        82.5 seconds, 27.2%
Fitness Testing:    171.7 seconds, 56.6%
Report:              49.2 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 39384.52730000002
Test mean error for best: 19.69226
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -8.5021798008 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -32.2379041136
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -1.8924772346 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_fromfloat} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction float_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_fromfloat tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_yankdup float_dup_items integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot float_inc float_rot float_yank -39 float_max float_dec float_yank integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth)
Errors: [58.0 3 18.9607 9 13.0393 9 21.0 2 0.0 0 16.0393 13 10.0393 10 2.0393 7 21.0393 9 9.0 1 22.0 2 35.0393 8 26.0393 10 3.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 14.9607 8 4.9607 7 18.9607 10 33.0393 8 22.0393 8 17.9607 9]
Total: 660.0392999999999
Mean: 13.200786
Genome size: 157
Size: 158
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3153.032815999999
Median total errors in population: 941.9607
Error averages by case: (162.38079310000032 5.175 112.81611429999926 8.886 111.7146764000008 10.121 120.30730430000008 8.35 104.19352559999999 3.997 118.12407200000102 12.4 117.04688270000028 11.191 101.97405520000036 7.321 121.14508460000089 9.853 106.19205829999984 8.418 115.83961519999995 8.175 139.24015319999984 8.445 126.25308600000096 9.504 112.01545860000002 4.207 115.76676929999903 7.618 138.38640550000102 10.038 114.19788499999909 8.716 110.58309559999914 8.847 105.75395179999933 8.293 110.24763209999982 8.713 101.78070939999964 7.195 107.85359309999939 10.588 128.48698730000098 9.692 124.42263079999985 8.478 113.37827659999907 8.711)
Error minima by case: (55.0 2 0.2596 3 7.0 2 1.0393 1 0.0 0 1.9888 8 3.3451 1 0.0393 2 1.0 1 1.511 1 4.6616 1 0.0829 2 3.9329 2 2.0 2 0.0545 2 5.4391 2 0.3556 2 4.7139 1 0.0393 2 0.7453 1 1.9607 1 0.2596 2 0.2344 2 5.8925 1 0.7404 2)
Average genome size in population (length): 158.79
Average program size in population (points): 159.79
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 85.57529709934805
Average age in population: 83.6298868860025
Median age in population: 83.76671227656486
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.456
Error (vector) diversity:			 0.481
Behavioral diversity:				 0.482
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 164847225
--- Timings ---
Current time: 1529615109626 milliseconds
Total Time:         310.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        83.9 seconds, 27.1%
Fitness Testing:    175.9 seconds, 56.7%
Report:              50.1 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 39384.52730000002
Test mean error for best: 19.69226
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -8.5021798008 
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -32.2379041136
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -1.8924772346 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_rot} {:instruction float_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_yank} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 float_add tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_yankdup in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_rot float_inc float_rot float_yank -39 float_max float_dec float_yank integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth)
Errors: [58.0 3 18.9607 9 13.0393 9 21.0 2 0.0 0 16.0393 13 10.0393 10 2.0393 7 21.0393 9 9.0 1 22.0 2 35.0393 8 26.0393 10 3.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 14.9607 8 4.9607 7 18.9607 10 33.0393 8 22.0393 8 17.9607 9]
Total: 660.0392999999999
Mean: 13.200786
Genome size: 157
Size: 158
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3113.681996599999
Median total errors in population: 941.9607
Error averages by case: (159.83233600000028 5.375 113.29394839999935 8.733 108.45399890000039 10.143 121.4824390000003 7.767 100.12129429999989 3.899 113.8817736000006 12.288 117.26191650000025 11.088 102.02467420000016 7.187 117.55476050000073 9.763 104.47746499999994 7.83 116.21886370000001 7.7 137.60958299999996 8.965 127.30125720000075 9.396 99.06064540000004 4.223 117.49864809999929 7.571 138.4094164000009 9.906 115.68142439999937 8.507 109.15311269999967 8.793 103.81339769999977 8.204 107.15797549999999 9.178 103.83224979999984 7.112 108.1682602999997 10.468 125.81976700000071 9.721 122.9980189999999 8.84 111.40276999999952 8.515)
Error minima by case: (38.8653 2 0.2596 2 3.7646 2 0.6943 1 0.0 0 1.9888 1 2.825 1 0.6077 2 1.0 1 0.2408 1 0.7267 1 0.9171 2 4.9901 1 0.4414 2 6.1571 2 13.262 2 0.6444 2 6.0521 2 0.0393 2 0.7404 1 1.9456 1 0.2596 2 1.7656 2 2.9318 1 0.7404 2)
Average genome size in population (length): 159.237
Average program size in population (points): 160.237
Average percent parens in population: 0.006
Minimum age in population: 82.92446649305595
Maximum age in population: 87.11486349096438
Average age in population: 85.09832752601079
Median age in population: 85.15316448545283
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.476
Error (vector) diversity:			 0.505
Behavioral diversity:				 0.506
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 168960525
--- Timings ---
Current time: 1529615116204 milliseconds
Total Time:         316.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        85.3 seconds, 26.9%
Fitness Testing:    180.1 seconds, 56.9%
Report:              51.1 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 42925.89419999998
Test mean error for best: 21.46295
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_inc} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_inc in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3546.675262099999
Median total errors in population: 945.9607
Error averages by case: (166.54970800000044 5.528 128.7980889999994 8.943 130.0511980000006 10.29 140.55421920000023 7.422 114.5205448999999 3.651 128.68591980000076 12.43 138.18987110000023 11.313 117.3383670000003 7.468 142.18235060000086 9.902 124.4966252999998 7.442 135.93290650000003 7.395 157.06803739999992 9.463 143.00834970000085 9.628 113.710026 4.56 131.58955589999923 7.89 154.07858990000105 10.099 129.98543839999934 8.759 122.94544999999967 9.029 117.33116599999967 8.476 126.76598559999981 9.744 118.17104439999967 7.379 132.20712939999933 10.586 146.947966400001 9.931 144.3538443999999 9.273 125.7118791999993 8.9)
Error minima by case: (3.8653 2 0.2596 2 4.0393 4 1.0393 1 0.0 0 2.0393 8 3.825 1 1.0393 2 1.55 8 0.4287 1 2.3868 1 0.0829 2 4.9901 2 0.7082 1 7.1571 2 6.0 1 0.6444 2 1.9543 2 0.0393 2 0.2596 1 0.9456 1 0.2596 8 1.7656 8 5.4808 1 0.2596 2)
Average genome size in population (length): 159.571
Average program size in population (points): 160.571
Average percent parens in population: 0.006
Minimum age in population: 83.96596178539453
Maximum age in population: 88.38869321515539
Average age in population: 86.47545513183086
Median age in population: 86.52346574979116
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.486
Error (vector) diversity:			 0.515
Behavioral diversity:				 0.516
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 173081650
--- Timings ---
Current time: 1529615122953 milliseconds
Total Time:         323.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        86.7 seconds, 26.8%
Fitness Testing:    184.3 seconds, 57.0%
Report:              52.1 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 42925.89419999998
Test mean error for best: 21.46295
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_inc} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_inc in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3741.1507084000004
Median total errors in population: 941.9607
Error averages by case: (176.4875470000003 5.521 135.52626859999924 8.983 139.81535290000076 10.327 146.16292600000006 7.353 119.8581323999999 3.775 144.2473950000008 12.447 139.76733980000043 11.42 122.86588880000036 7.465 145.0094261000008 9.98 130.39158669999978 7.388 141.55367649999994 7.349 162.34984309999993 9.69 149.0494991000011 9.644 123.975479 4.312 139.58279939999915 7.938 159.858566100001 10.093 137.08974039999922 8.776 138.9559029999993 9.055 132.70756119999953 8.512 132.2179501999997 10.005 125.02848339999966 7.426 136.40972559999932 10.646 156.15942540000103 10.013 148.17893239999987 9.56 141.23626029999917 8.987)
Error minima by case: (37.8653 2 0.2596 2 5.9607 2 1.0393 1 0.0 0 1.0393 1 0.825 1 0.0393 2 6.281 2 1.4287 1 10.9607 1 0.9171 1 3.9901 2 1.7082 2 6.1571 2 12.262 2 0.3556 2 5.7404 2 0.0393 1 1.7404 1 1.9456 1 0.2596 2 0.2344 2 0.0 0 0.2596 2)
Average genome size in population (length): 159.45
Average program size in population (points): 160.45
Average percent parens in population: 0.006
Minimum age in population: 85.33924204237238
Maximum age in population: 89.88241214905226
Average age in population: 87.78244597327162
Median age in population: 87.80920741493757
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.485
Error (vector) diversity:			 0.518
Behavioral diversity:				 0.519
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 177199825
--- Timings ---
Current time: 1529615129680 milliseconds
Total Time:         329.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        88.1 seconds, 26.7%
Fitness Testing:    188.4 seconds, 57.1%
Report:              53.3 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 42925.89419999998
Test mean error for best: 21.46295
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_inc} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_inc in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3516.2376576000006
Median total errors in population: 945.4607
Error averages by case: (170.89024710000032 5.354 124.43396159999907 8.866 121.04019510000094 10.278 142.5640599 7.286 122.77567049999993 3.828 131.12269890000113 12.397 140.6803659000005 11.308 113.2355984000009 7.412 131.25988010000103 9.835 127.51072789999961 7.284 138.31672989999998 7.279 159.05061929999982 9.677 138.7133801000011 9.559 115.68715660000007 4.272 128.54265379999885 7.83 149.80783750000128 10.003 126.53697349999896 8.712 125.65983959999899 8.916 120.07918329999917 8.309 129.82348879999952 10.012 113.14887979999914 7.308 120.3375903999991 10.523 136.63121400000105 9.901 145.60540359999993 9.531 128.3343019999989 8.769)
Error minima by case: (54.0 2 0.2596 3 3.0393 7 1.0393 1 0.0 0 0.0 0 3.825 1 0.9371 1 6.281 7 0.4287 1 0.4439 1 0.0829 1 3.9901 2 2.0 2 6.7367 2 12.262 2 0.3556 2 5.7844 2 0.0393 2 0.0 0 1.9607 1 0.0963 9 0.2344 7 3.6083 1 0.1082 1)
Average genome size in population (length): 159.529
Average program size in population (points): 160.529
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 91.18647689039733
Average age in population: 89.11311263094697
Median age in population: 89.24965698614702
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.497
Error (vector) diversity:			 0.541
Behavioral diversity:				 0.542
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 181317375
--- Timings ---
Current time: 1529615136429 milliseconds
Total Time:         336.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        89.5 seconds, 26.6%
Fitness Testing:    192.6 seconds, 57.2%
Report:              54.4 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 42925.89419999998
Test mean error for best: 21.46295
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_inc} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_inc in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3278.0410870000005
Median total errors in population: 939.0393
Error averages by case: (162.11058650000035 5.48 120.2479869999993 8.795 114.10170600000055 10.236 126.35046500000023 6.844 107.37559149999993 3.386 122.8845352000009 12.403 123.25918020000037 11.332 104.88983740000032 7.288 123.21619090000073 9.784 111.57411279999988 6.71 122.82434740000002 6.894 143.50909500000006 9.789 132.9061239000011 9.541 104.48664 4.319 124.2509859999991 7.782 143.9513420000012 10.013 120.00591559999931 8.625 120.44911339999926 8.907 114.86136979999968 8.318 115.19336229999986 10.133 109.53378629999972 7.269 114.26571369999962 10.481 130.65457830000094 9.874 129.28694750000005 9.629 123.2475732999992 8.772)
Error minima by case: (36.8653 2 0.2596 2 3.0393 8 2.0393 1 0.0 0 1.0393 8 2.4918 1 0.0629 2 10.7583 2 0.5713 1 4.6132 1 0.0829 1 3.9901 2 0.6689 2 11.2596 2 12.262 2 0.3556 2 0.9543 2 0.0393 2 0.4456 1 0.9607 1 0.2596 2 0.7656 8 3.3155 1 0.7404 2)
Average genome size in population (length): 159.659
Average program size in population (points): 160.659
Average percent parens in population: 0.006
Minimum age in population: 88.12245239648082
Maximum age in population: 92.35499707083927
Average age in population: 90.54951890159023
Median age in population: 90.59228280874606
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.5
Error (vector) diversity:			 0.536
Behavioral diversity:				 0.537
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 185436475
--- Timings ---
Current time: 1529615143218 milliseconds
Total Time:         343.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        90.9 seconds, 26.5%
Fitness Testing:    196.8 seconds, 57.3%
Report:              55.5 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 42929.89419999998
Test mean error for best: 21.46495
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_inc} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_inc in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3510.4974689000005
Median total errors in population: 947.1750500000002
Error averages by case: (175.0992238000004 5.596 130.78335409999931 8.784 125.73889230000051 10.2 130.40413170000022 6.4 111.9000131 3.317 134.2537410000009 12.238 131.28441290000035 11.318 118.78110730000057 7.382 136.4917616000007 9.814 115.18208829999978 6.276 125.84561940000002 6.41 148.98899920000028 9.911 145.80750220000104 9.509 115.79354090000001 4.268 133.9562449999992 7.734 156.62571490000104 9.863 130.00876209999925 8.587 129.52432679999927 8.905 123.99496749999955 8.393 121.60187809999967 10.367 120.19788069999943 7.298 127.00614919999937 10.499 142.735263600001 9.882 136.42038820000025 9.765 130.6095049999992 8.746)
Error minima by case: (36.8653 2 0.2596 3 3.0393 2 3.0393 1 0.0 0 0.2456 1 2.825 1 0.0393 1 0.719 2 0.5713 1 11.4803 1 0.0829 1 3.9901 2 2.0 2 1.776 2 0.7797 2 0.224 2 3.0521 2 0.0393 2 0.7404 1 0.9607 1 0.2596 2 0.2344 2 5.4808 1 0.2596 1)
Average genome size in population (length): 159.712
Average program size in population (points): 160.712
Average percent parens in population: 0.006
Minimum age in population: 89.4402533677588
Maximum age in population: 93.8755790291249
Average age in population: 91.9357343977318
Median age in population: 91.97335988071143
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.503
Error (vector) diversity:			 0.543
Behavioral diversity:				 0.544
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 189554275
--- Timings ---
Current time: 1529615149955 milliseconds
Total Time:         350.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        92.3 seconds, 26.4%
Fitness Testing:    200.9 seconds, 57.4%
Report:              56.8 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 42929.89419999998
Test mean error for best: 21.46495
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_inc} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_max} {:instruction float_mod} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_inc in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_mod float_max float_mod integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 165
Size: 166
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3662.601902000001
Median total errors in population: 945.9607
Error averages by case: (182.5142553000004 5.554 132.77300039999906 9.014 129.27869210000082 10.222 143.74872560000026 6.449 123.36844239999994 3.408 138.40728780000117 12.37 140.61395930000046 11.486 118.3616315000008 7.54 139.15201420000102 9.818 127.99903469999975 6.346 139.1802956 6.479 159.32043190000022 9.946 146.1460305000011 9.695 129.105124 4.422 136.29058599999885 7.922 157.1127642000012 10.094 131.52749929999894 8.79 131.51976929999898 8.821 126.93570909999943 8.292 131.69584109999943 10.445 121.59163169999917 7.482 132.9141840999991 10.53 147.34536870000116 9.843 147.11489990000018 9.811 134.9747232999989 8.831)
Error minima by case: (52.0 2 0.2596 3 3.0393 8 0.6381 1 0.0 0 1.0052 7 3.825 1 0.0393 1 4.1826 2 0.489 1 0.6616 1 0.0829 1 3.9901 2 0.0225 1 9.2596 2 12.262 2 0.3556 2 0.0457 1 0.0393 1 0.2596 1 0.9607 1 0.2596 2 0.2344 7 5.4808 1 0.6237 2)
Average genome size in population (length): 159.683
Average program size in population (points): 160.683
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 95.29093224213932
Average age in population: 93.14795257905395
Median age in population: 93.26645410902374
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.52
Error (vector) diversity:			 0.553
Behavioral diversity:				 0.553
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 193670925
--- Timings ---
Current time: 1529615156523 milliseconds
Total Time:         356.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        93.7 seconds, 26.3%
Fitness Testing:    205.0 seconds, 57.5%
Report:              57.9 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 42925.89419999998
Test mean error for best: 21.46295
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_954} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_mod} {:instruction float_div} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_sub} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_rot integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_954 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup float_mod float_div float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_sub tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3505.4118066000005
Median total errors in population: 950.18045
Error averages by case: (177.0001872000004 5.704 126.1072799999993 8.805 127.2989209000007 10.202 133.97455880000027 5.68 107.84400949999986 2.972 138.42260850000096 12.328 132.44181640000028 11.328 112.16554350000057 7.392 130.47070160000084 9.805 118.88986839999971 5.538 129.96427819999997 5.827 150.83389420000032 10.184 139.37229520000122 9.534 117.7046705 4.18 129.84334739999906 7.707 150.34783940000128 9.986 126.43871899999918 8.677 133.39240199999924 8.824 127.9897060999996 8.275 123.93284949999956 10.761 113.5913565999995 7.286 126.82947399999935 10.495 144.67065690000126 9.859 139.76920930000017 10.124 135.86261349999918 8.78)
Error minima by case: (36.8653 2 0.2596 2 2.0393 2 0.0393 1 0.0 0 1.9888 1 2.825 1 0.092 1 2.8002 2 0.5713 1 10.7317 1 0.0829 1 3.9901 1 2.0 2 1.776 2 8.0 1 0.224 1 0.9543 2 0.0393 2 1.0 1 0.4186 1 0.2596 2 0.2344 2 5.4808 1 0.7404 1)
Average genome size in population (length): 160.371
Average program size in population (points): 161.371
Average percent parens in population: 0.006
Minimum age in population: 91.74636639419683
Maximum age in population: 96.4137587485463
Average age in population: 94.46330695834637
Median age in population: 94.52316944648227
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.513
Error (vector) diversity:			 0.55
Behavioral diversity:				 0.551
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 197802525
--- Timings ---
Current time: 1529615163167 milliseconds
Total Time:         363.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        95.1 seconds, 26.2%
Fitness Testing:    209.1 seconds, 57.5%
Report:              59.1 seconds, 16.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 42929.89419999998
Test mean error for best: 21.46495
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_552} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (float_dup_items integer_min integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add integer_dup_times integer_min integer_min float_sub float_inc 54.9607049605322 in1 float_add tag_float_552 float_max integer_yankdup integer_dec float_swap float_mult float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 tag_float_737 float_max integer_yankdup float_div float_div integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 165
Size: 166
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3812.972639300001
Median total errors in population: 945.9607
Error averages by case: (185.93247890000035 5.633 137.73107639999904 9.042 136.4930061000009 10.174 152.2349141000002 5.923 123.02943629999993 3.257 144.6103554000011 12.282 149.09426120000057 11.426 126.54460830000079 7.643 143.88978040000106 9.787 135.8412624999996 5.633 148.02607169999985 6.078 166.5835696000004 10.362 149.71012310000123 9.768 124.4848313 4.379 141.45343509999887 7.948 160.5564386000013 10.205 141.35797429999892 8.927 141.18460139999894 9.092 135.37081369999916 8.571 140.50849849999926 11.039 127.44490249999922 7.57 134.64990689999917 10.527 154.18717780000128 9.812 154.09360630000032 10.375 143.5245088999988 8.982)
Error minima by case: (54.0 2 1.2596 2 8.7554 2 1.0393 1 0.0 0 1.9888 2 0.825 2 0.0393 2 6.281 2 0.511 1 2.4845 1 0.0 0 3.9901 2 2.0 2 4.6341 2 12.262 2 0.3556 2 5.7404 1 0.0393 2 0.4456 1 1.9607 1 0.2596 2 0.2344 2 3.8925 1 0.2596 2)
Average genome size in population (length): 160.165
Average program size in population (points): 161.165
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 97.9175800470312
Average age in population: 95.61337478787037
Median age in population: 95.76938360510592
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.53
Error (vector) diversity:			 0.561
Behavioral diversity:				 0.562
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 201927950
--- Timings ---
Current time: 1529615169735 milliseconds
Total Time:         369.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        96.5 seconds, 26.1%
Fitness Testing:    213.1 seconds, 57.6%
Report:              60.2 seconds, 16.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 42902.02559999998
Test mean error for best: 21.45101
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_fromfloat} {:instruction tag_float_767} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction 33.73667578654145} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_1036} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_fromfloat tag_float_767 integer_yankdup integer_dup_items 33.73667578654145 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod 88 float_mod float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_1036 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 167
Size: 168
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3406.4687036
Median total errors in population: 918.35905
Error averages by case: (174.54237850000032 5.614 123.11992249999933 8.742 122.63944210000055 10.149 130.21890460000034 5.316 116.96493029999988 2.92 130.32403050000096 12.201 130.06524920000035 11.337 111.04954710000052 7.442 128.2334219000008 9.648 115.68855219999979 5.045 126.85476069999999 5.51 143.33754240000036 10.439 135.92225820000095 9.524 107.71652800000005 4.04 126.83792129999911 7.75 146.9344363000011 10.001 125.44933189999917 8.737 126.12255789999922 8.853 120.27035599999941 8.275 120.11701589999953 11.223 112.60025639999951 7.325 120.32317279999933 10.372 139.54320110000094 9.853 133.22600510000026 10.532 128.77198069999915 8.747)
Error minima by case: (43.8653 2 0.2596 2 3.0393 2 3.0393 1 0.0 0 1.9888 1 2.825 1 0.0393 2 1.0 1 0.5713 1 12.0933 1 0.0829 2 3.9901 1 1.0 1 3.7165 2 12.262 2 0.3556 2 6.7404 1 0.0393 1 0.4456 1 1.9607 1 0.2596 2 0.4014 2 1.1593 1 0.7404 2)
Average genome size in population (length): 160.554
Average program size in population (points): 161.554
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 99.3737408086176
Average age in population: 96.74377974169106
Median age in population: 96.9063947888452
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.489
Error (vector) diversity:			 0.523
Behavioral diversity:				 0.524
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 206066825
--- Timings ---
Current time: 1529615176400 milliseconds
Total Time:         376.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        97.9 seconds, 26.0%
Fitness Testing:    217.1 seconds, 57.7%
Report:              61.4 seconds, 16.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 43292.54259999997
Test mean error for best: 21.64627
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_shove} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_inc} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_pop} {:instruction float_sub} {:instruction float_mod} {:instruction float_min} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_mult in1 integer_dec integer_yankdup integer_dup_items in1 float_shove tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_inc in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 integer_pop float_sub float_mod float_min float_yankdup float_dup_times integer_max integer_rot integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_dup integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float integer_dup_times float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3698.099687600001
Median total errors in population: 983.42275
Error averages by case: (181.7622075000004 5.777 138.39932749999898 8.996 131.88988700000084 10.364 141.92563460000017 5.485 123.84468029999987 3.129 135.57665480000122 12.198 142.12312170000058 11.498 128.68151760000086 7.75 143.0704542000013 9.837 126.44882729999966 5.281 137.6452222 5.701 154.24985250000037 10.673 153.64548730000155 9.759 115.28207539999995 4.444 140.25570879999856 8.133 164.60492280000156 10.124 140.14420139999856 8.974 132.7756300999989 9.11 127.30897209999902 8.63 130.85952119999945 11.755 129.27791479999922 7.662 133.084789499999 10.528 150.22787740000135 10.16 143.87468700000022 10.945 135.25251259999882 8.975)
Error minima by case: (35.8653 2 0.2596 2 4.5772 8 3.0393 1 0.0 0 1.4955 8 2.825 1 0.0393 2 6.281 8 0.4424 1 3.142 2 0.0829 2 3.9901 2 0.2918 1 11.2596 2 0.9607 2 0.3556 1 3.7263 1 0.0393 1 0.4456 1 2.4884 1 0.2596 1 0.7656 8 3.8925 1 0.2596 1)
Average genome size in population (length): 162.615
Average program size in population (points): 163.615
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 100.191910897769
Average age in population: 98.02594109116642
Median age in population: 98.16172818481819
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.495
Error (vector) diversity:			 0.525
Behavioral diversity:				 0.526
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 210262600
--- Timings ---
Current time: 1529615183097 milliseconds
Total Time:         383.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        99.4 seconds, 25.9%
Fitness Testing:    221.2 seconds, 57.7%
Report:              62.6 seconds, 16.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 39104.468300000015
Test mean error for best: 19.55223
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction in1} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_1036} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min 54.9607049605322 in1 float_add float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod 88 float_mod float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth in1 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_1036 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 163
Size: 164
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3480.2175185
Median total errors in population: 974.4449499999998
Error averages by case: (173.35470420000036 5.642 128.13458929999908 8.619 128.02391260000078 10.279 133.00971950000027 5.25 112.69383989999989 3.123 127.80004140000116 11.952 133.92291500000033 11.508 113.89524750000076 7.433 136.40387170000102 9.597 118.04356119999966 5.101 128.4637378 5.482 145.26434020000036 10.745 141.24689900000124 9.438 113.52441830000004 4.382 130.91836769999878 7.858 152.21946580000133 9.866 126.85916739999891 8.672 125.11000839999896 8.897 119.42635049999905 8.455 123.30114809999945 12.009 117.05138119999924 7.373 127.54092679999917 10.33 147.29277320000108 10.107 137.87271860000018 11.081 126.89241319999887 8.752)
Error minima by case: (37.8653 2 1.2596 2 0.0 0 4.0393 1 0.0 0 0.0 0 2.825 1 0.721 2 4.8002 2 0.5713 1 7.2973 1 0.0829 2 3.9901 2 0.0 0 12.2596 2 12.262 2 0.3556 1 0.0 0 0.0 0 0.7621 1 2.7167 1 2.1868 2 0.0 0 3.8925 1 0.0 0)
Average genome size in population (length): 164.582
Average program size in population (points): 165.582
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 101.6257025059216
Average age in population: 99.30994398652744
Median age in population: 99.43838770517115
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.514
Error (vector) diversity:			 0.542
Behavioral diversity:				 0.543
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 214511725
--- Timings ---
Current time: 1529615190212 milliseconds
Total Time:         390.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       100.8 seconds, 25.8%
Fitness Testing:    225.6 seconds, 57.8%
Report:              63.7 seconds, 16.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 42599.149400000024
Test mean error for best: 21.29957
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -44.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction 37.623740726381975} {:instruction in1} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_pop} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_973} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_flush} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 37.623740726381975 in1 in1 integer_dec integer_yankdup integer_dup_items float_dup integer_fromfloat tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div integer_pop float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_973 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_inc integer_rot float_dup_times integer_flush -52 float_add integer_fromfloat float_yankdup float_dup_items integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 0.9171 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 640.9170999999999
Mean: 12.818342
Genome size: 179
Size: 180
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3611.6726165999994
Median total errors in population: 883.9685999999999
Error averages by case: (174.93948190000035 5.484 134.29673649999913 8.712 128.75750970000058 10.331 140.8964259000002 5.224 111.4812759999999 2.675 135.584482600001 12.154 138.13893750000034 11.476 120.88155030000053 7.552 137.87743600000093 9.504 124.53236149999971 5.019 137.04389239999995 5.496 149.14053880000034 10.796 145.9000561000011 9.727 117.005992 4.344 138.72468329999901 8.049 156.82938310000108 10.193 136.63788399999893 8.891 132.80309419999912 9.134 125.89717559999937 8.55 129.20137119999964 12.039 124.27029849999941 7.53 131.14471279999935 10.228 149.025731200001 10.048 142.7102593000002 11.12 134.70034619999905 8.975)
Error minima by case: (55.0 2 0.2633 3 9.3232 3 20.0 1 0.0 0 1.0505 2 1.4918 1 0.0393 2 7.281 2 0.5713 1 15.3352 2 0.0829 2 3.9901 2 1.2918 2 4.6341 2 12.262 2 0.3556 2 1.9543 2 0.0393 2 0.7621 1 2.9607 1 0.2633 2 0.2344 3 0.0289 1 0.2596 2)
Average genome size in population (length): 165.982
Average program size in population (points): 166.982
Average percent parens in population: 0.006
Minimum age in population: 98.20719817705077
Maximum age in population: 102.8960079939955
Average age in population: 100.7185314925477
Median age in population: 100.7591962698198
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.964
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.964
Total error diversity:				 0.457
Error (vector) diversity:			 0.481
Behavioral diversity:				 0.482
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 218797450
--- Timings ---
Current time: 1529615197110 milliseconds
Total Time:         397.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       102.2 seconds, 25.7%
Fitness Testing:    229.9 seconds, 57.9%
Report:              65.1 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 42599.149400000024
Test mean error for best: 21.29957
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -44.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction 37.623740726381975} {:instruction in1} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_pop} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_973} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_flush} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 37.623740726381975 in1 in1 integer_dec integer_yankdup integer_dup_items float_dup integer_fromfloat tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div integer_pop float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_973 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_inc integer_rot float_dup_times integer_flush -52 float_add integer_fromfloat float_yankdup float_dup_items integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot in2 integer_dup_items integer_dup_items float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 0.9171 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 640.9170999999999
Mean: 12.818342
Genome size: 179
Size: 180
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3289.942374499999
Median total errors in population: 932.1944000000001
Error averages by case: (166.6386403000004 5.609 121.0312657999995 8.524 122.3429704000006 10.345 120.27713110000053 5.333 103.07562259999985 2.703 123.084668500001 11.949 122.20479220000024 11.334 112.26131050000045 7.5 127.69901430000064 9.327 105.98207749999978 4.957 116.68135619999995 5.526 129.4093690000004 10.819 133.88668420000093 9.56 99.99516150000005 4.333 124.3961439999992 8.008 145.197054700001 10.046 127.26080809999921 8.814 123.54231009999906 9.006 118.3140006999992 8.481 110.87159899999963 12.155 112.31474319999967 7.433 119.55083539999946 10.082 141.42283000000108 10.038 124.73843590000014 11.287 125.58954929999894 9.005)
Error minima by case: (36.8653 2 0.2633 3 0.2446 2 3.0393 1 0.0 0 1.9778 1 0.3214 7 0.0393 2 5.8002 2 2.511 1 3.6616 1 0.0829 8 3.9901 2 0.2918 2 8.1571 2 12.262 2 0.3556 2 1.9543 1 0.9408 2 0.4456 2 0.0544 1 0.2633 2 0.5986 2 1.9318 2 0.2596 2)
Average genome size in population (length): 167.013
Average program size in population (points): 168.013
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 103.9736154842126
Average age in population: 101.9094746364669
Median age in population: 102.0127956565743
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.464
Error (vector) diversity:			 0.486
Behavioral diversity:				 0.487
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 223112900
--- Timings ---
Current time: 1529615204259 milliseconds
Total Time:         404.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       103.7 seconds, 25.7%
Fitness Testing:    234.3 seconds, 57.9%
Report:              66.2 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 42839.58729999996
Test mean error for best: 21.41979
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -53.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction in1} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction in1} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_1036} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_dec} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction print_integer} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -74} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times})
Best program: (36.25961346587397 in1 float_add integer_dup_times integer_min integer_min float_sub in1 integer_dup_times integer_shove integer_yankdup integer_yankdup in1 float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 float_dup_times integer_dup_items float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_1036 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_dec in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 integer_rot integer_rot float_dup_times integer_dup_items print_integer float_add integer_fromfloat float_yankdup float_dup_items integer_dup_items integer_dup_items integer_rot float_yank float_min integer_dec float_rot in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -74 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_flush print_float float_stackdepth float_stackdepth float_dup_times)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 10.4192 9 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 648.4191999999998
Mean: 12.968384
Genome size: 163
Size: 164
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3389.181157300001
Median total errors in population: 954.3132
Error averages by case: (166.15208830000032 5.576 128.12001389999955 8.507 119.0208973000003 10.419 123.3016836000003 5.052 111.37456189999995 2.735 128.99981250000044 11.901 129.9985948000001 11.509 112.94568490000027 7.429 131.3227347000004 9.39 109.14620599999992 4.794 118.39406209999999 5.259 139.31770710000038 10.943 140.85588080000073 9.518 111.82514420000003 4.473 130.97789779999937 8.014 151.90510280000078 9.979 125.80341219999946 8.714 126.61874379999952 8.985 121.01474039999962 8.531 113.80390559999978 12.434 117.08623699999971 7.411 120.94751599999958 10.129 138.23993150000047 10.182 130.99980570000014 11.475 128.7617923999995 8.888)
Error minima by case: (36.8653 1 0.2596 3 2.0393 7 2.8199 1 0.0 0 0.6247 8 3.825 8 0.0393 2 4.0678 2 1.0 1 4.2409 2 0.0829 8 3.9901 2 1.014 2 1.7066 2 12.262 2 0.3556 2 5.7404 2 0.9437 2 1.4456 2 3.9437 1 0.2596 2 0.4014 7 0.0682 2 0.2596 2)
Average genome size in population (length): 168.564
Average program size in population (points): 169.564
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 105.9507305824624
Average age in population: 103.2637450494447
Median age in population: 103.4106245158277
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.463
Error (vector) diversity:			 0.48
Behavioral diversity:				 0.481
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 227470500
--- Timings ---
Current time: 1529615211210 milliseconds
Total Time:         411.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       105.2 seconds, 25.6%
Fitness Testing:    238.6 seconds, 58.0%
Report:              67.5 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times float_frominteger float_yankdup integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3576.903610900001
Median total errors in population: 945.9607
Error averages by case: (177.26917780000034 5.486 132.26409929999915 8.425 128.5950067000008 10.489 131.5811651000005 5.339 110.51339909999976 2.805 143.05376750000104 12.007 132.11138930000033 11.473 121.60109780000063 7.372 138.93969940000082 9.412 116.91549169999969 5.091 127.9774474 5.564 141.2167633000006 10.917 144.7603533000011 9.463 119.26873470000007 4.277 136.71748939999895 7.997 156.7053345000012 9.975 133.70510759999902 8.682 139.46342229999908 8.923 133.95869899999911 8.395 121.96393179999959 12.413 122.31462099999943 7.321 128.67283669999924 10.147 147.3256948000012 10.183 135.37621870000027 11.478 142.10566269999904 8.893)
Error minima by case: (56.0 1 1.2596 3 2.0393 2 1.3583 1 0.0 0 1.9888 8 3.5179 8 0.0393 2 1.6349 2 0.5713 1 2.7794 1 0.0829 1 3.9901 2 0.1405 2 12.2596 2 12.262 2 0.3556 2 1.0927 2 1.279 2 0.6533 2 4.279 1 1.2596 2 0.4014 2 0.0682 1 0.2596 2)
Average genome size in population (length): 168.527
Average program size in population (points): 169.527
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 106.4442026040949
Average age in population: 104.5686447728969
Median age in population: 104.7114939074746
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.466
Error (vector) diversity:			 0.483
Behavioral diversity:				 0.484
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 231832525
--- Timings ---
Current time: 1529615218211 milliseconds
Total Time:         418.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       106.6 seconds, 25.5%
Fitness Testing:    243.1 seconds, 58.1%
Report:              68.7 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 42898.70270000002
Test mean error for best: 21.44935
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -41.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -44.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 37.623740726381975} {:instruction 36.25961346587397} {:instruction integer_dec} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction -33} {:instruction float_add} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_flush} {:instruction print_integer} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_dup} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (37.623740726381975 36.25961346587397 integer_dec integer_shove integer_yankdup 36.25961346587397 in1 integer_flush in1 integer_dec integer_yankdup integer_dup_items -33 float_add tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 integer_min integer_flush float_add tag_float_737 integer_min integer_flush print_integer float_inc 54.9607049605322 in1 float_add tag_float_737 float_frominteger integer_yankdup integer_max integer_rot integer_stackdepth float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_dup tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items in1 float_yankdup integer_mult float_rot float_yank -52 integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_pop float_sub integer_dup_times float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_rot float_dup integer_flush print_float float_stackdepth float_stackdepth float_dup_times float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 21.0 2 0.0 0 15.0393 12 9.0393 11 1.0393 7 20.0393 8 9.0 1 22.0 2 0.9171 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 640.9170999999999
Mean: 12.818342
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3662.854003700001
Median total errors in population: 945.9607
Error averages by case: (169.3393742000003 5.495 140.29413569999923 8.551 134.37762880000037 10.595 132.0758922000004 5.38 112.25135009999984 2.928 142.40900190000076 11.977 136.1874193000003 11.618 127.3933343000005 7.521 147.81955540000098 9.525 116.02841999999966 5.133 127.4230220999999 5.603 145.42270230000045 11.01 153.2877554000011 9.625 118.42439650000007 4.555 143.58944979999916 8.137 164.0939101000011 10.115 141.22031039999908 8.843 139.5415769999994 8.973 134.17817469999932 8.48 120.51943139999966 12.512 130.4143915999995 7.461 138.5078931999994 10.202 154.093648500001 10.329 136.99689890000008 11.591 141.88832989999932 8.917)
Error minima by case: (56.0 2 1.0009 3 11.0393 8 3.0393 1 0.0 0 0.1476 1 3.825 8 0.0393 2 7.281 2 0.2048 1 12.9607 2 0.0829 8 2.9901 2 2.0 2 12.0009 2 4.0655 2 0.3556 2 5.0521 2 1.279 2 0.7621 8 3.8341 1 0.5407 2 0.2344 7 5.8925 7 9.0E-4 2)
Average genome size in population (length): 168.739
Average program size in population (points): 169.739
Average percent parens in population: 0.006
Minimum age in population: 103.8939584689329
Maximum age in population: 107.8003566117311
Average age in population: 106.0641310773952
Median age in population: 106.1063031524164
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.454
Error (vector) diversity:			 0.472
Behavioral diversity:				 0.473
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 236203850
--- Timings ---
Current time: 1529615225323 milliseconds
Total Time:         425.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.0 seconds, 25.4%
Fitness Testing:    247.5 seconds, 58.2%
Report:              69.8 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times float_frominteger float_yankdup integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3859.3934319
Median total errors in population: 945.9607
Error averages by case: (191.10106990000025 5.562 142.79763949999932 8.586 140.63222580000067 10.561 141.77313110000023 5.306 121.84599079999974 2.921 157.84977850000087 11.948 143.15469040000033 11.52 131.28810880000069 7.563 149.63426520000078 9.369 126.83309529999968 4.998 137.37202389999993 5.512 148.86907610000048 10.897 155.1038537000009 9.626 126.70503090000008 4.556 145.59302949999926 8.175 165.93967470000092 10.111 144.15719619999925 8.819 156.36243979999932 9.047 150.89192379999935 8.591 131.5708966999996 12.442 133.00906419999944 7.512 140.4089793999993 10.111 157.10046490000093 10.199 146.56703740000006 11.52 158.28674539999932 9.094)
Error minima by case: (7.8653 2 1.0009 3 2.0393 2 3.0393 1 0.0 0 1.2606 1 3.825 1 0.0355 2 3.4773 2 2.511 1 9.142 1 0.0829 2 3.9901 2 0.014 2 4.6872 2 7.6978 2 0.3556 2 5.7404 2 1.9607 2 1.4456 2 1.9456 1 1.0009 2 0.5986 2 3.7554 2 9.0E-4 2)
Average genome size in population (length): 170.113
Average program size in population (points): 171.113
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 109.3104305888222
Average age in population: 106.9982221914292
Median age in population: 107.4639389906279
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.442
Error (vector) diversity:			 0.451
Behavioral diversity:				 0.453
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 240612975
--- Timings ---
Current time: 1529615232298 milliseconds
Total Time:         432.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.4 seconds, 25.3%
Fitness Testing:    251.9 seconds, 58.2%
Report:              71.1 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_min} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction in2} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction integer_div} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_flush} {:instruction print_float} {:instruction integer_yankdup})
Best program: (integer_flush 36.25961346587397 in1 integer_shove integer_min 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 float_add tag_float_737 integer_min integer_min 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_mod in2 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 integer_div float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_rot integer_dec integer_flush print_float integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 164
Size: 165
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3923.9810614000007
Median total errors in population: 929.7409
Error averages by case: (185.6843801000003 5.459 152.57724809999877 8.729 145.654686500001 10.564 142.14156880000036 5.46 124.10774889999978 2.885 149.57973350000128 11.966 144.32347810000053 11.547 139.2125880000011 7.742 157.09674360000128 9.376 127.97418749999966 5.162 138.3888673 5.663 149.97224820000073 10.998 164.38505500000142 9.831 129.81920800000006 4.641 155.6555102999989 8.353 175.05610230000147 10.284 153.7181207999989 9.026 147.9556484999989 9.134 141.89821619999884 8.644 132.11809039999974 12.58 141.37085799999898 7.67 150.0116081999989 10.143 162.3637149000013 10.166 145.69037010000008 11.654 150.38808009999886 9.16)
Error minima by case: (56.0 2 1.0009 3 3.7357 2 1.0 1 0.0 0 1.9888 1 3.825 1 0.0393 2 3.2773 2 2.511 1 2.0 1 0.0829 2 3.9901 2 0.014 2 9.7367 2 12.262 2 0.3556 2 1.9543 2 1.7814 2 1.4456 2 4.7814 1 1.0009 2 0.2344 2 0.0682 2 9.0E-4 2)
Average genome size in population (length): 169.786
Average program size in population (points): 170.786
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 110.7041733253286
Average age in population: 108.2112342781837
Median age in population: 108.797005463237
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.967
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.429
Error (vector) diversity:			 0.436
Behavioral diversity:				 0.438
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 245016975
--- Timings ---
Current time: 1529615239457 milliseconds
Total Time:         439.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.8 seconds, 25.2%
Fitness Testing:    256.4 seconds, 58.3%
Report:              72.2 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_cos} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times float_frominteger float_yankdup integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_cos float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 3853.629072300002
Median total errors in population: 936.61735
Error averages by case: (193.86367260000026 5.386 147.23665489999888 8.62 140.28264950000076 10.52 144.72485990000013 5.256 129.8081216999997 2.9 147.66530320000112 11.877 144.9692319000004 11.525 131.8707820000008 7.641 146.39748520000106 9.269 128.56629529999958 4.99 140.78874529999985 5.406 150.93522610000065 10.896 158.8304836000013 9.723 121.62634270000004 4.465 150.49632629999877 8.211 169.75743610000134 10.202 145.981879799999 8.914 146.05615379999904 9.094 139.41907959999907 8.594 133.70486799999964 12.433 135.37731799999926 7.555 138.95243009999908 10.039 155.85251030000114 10.15 147.25459840000005 11.527 148.87361799999894 9.144)
Error minima by case: (56.0 2 0.2633 3 0.4734 8 3.0393 1 0.0 0 1.9888 8 7.1894 7 0.0393 2 1.8559 2 0.2642 1 10.5842 2 0.0829 4 3.9901 2 0.7082 2 10.7367 2 12.262 2 0.3556 2 4.3763 2 1.9607 2 1.4456 2 3.4685 2 0.2633 2 0.4014 2 8.5266 1 9.0E-4 2)
Average genome size in population (length): 170.07
Average program size in population (points): 171.07
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 112.1315369980885
Average age in population: 109.5858938164221
Median age in population: 110.0369203913554
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.412
Error (vector) diversity:			 0.421
Behavioral diversity:				 0.422
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 249429710
--- Timings ---
Current time: 1529615246718 milliseconds
Total Time:         446.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.2 seconds, 25.1%
Fitness Testing:    261.0 seconds, 58.4%
Report:              73.4 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_yankdup} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_1036} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction integer_div} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_flush} {:instruction print_float} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 integer_yankdup tag_float_737 integer_min integer_min 54.9607049605322 in1 float_add float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod 88 float_mod float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_1036 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 integer_div float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_rot integer_dec integer_flush print_float integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3901.4406427000013
Median total errors in population: 951.6454
Error averages by case: (183.9782930000003 5.557 151.2574476999989 8.632 139.46663580000055 10.579 142.66274030000017 5.001 124.48766399999982 2.89 152.2159728000009 11.893 146.01442990000038 11.571 138.34459830000068 7.63 151.75042780000103 9.441 128.3556027999997 4.837 138.22496220000002 5.237 155.20057820000034 11.029 163.6013176000012 9.664 121.52760480000005 4.846 153.526926399999 8.25 174.43063380000126 10.105 151.69513559999913 8.869 151.37348549999908 9.02 145.44747039999902 8.521 133.32605879999977 12.528 139.57278479999934 7.572 142.89053299999915 10.172 157.194060700001 10.254 148.10496999999995 11.58 152.16330849999906 8.949)
Error minima by case: (35.8653 2 1.0009 2 2.0393 2 3.0393 1 0.0 0 1.9739 1 3.825 7 0.0393 2 5.8002 2 0.5713 1 11.9607 2 0.0829 1 1.9901 1 0.014 2 1.5894 2 10.262 2 0.3556 2 5.7404 2 1.9607 2 1.3784 2 2.8341 1 1.0009 1 0.2344 2 0.0682 1 9.0E-4 2)
Average genome size in population (length): 170.049
Average program size in population (points): 171.049
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 113.1668757364222
Average age in population: 110.7350866995768
Median age in population: 111.3232360296212
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.43
Error (vector) diversity:			 0.442
Behavioral diversity:				 0.443
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 253842585
--- Timings ---
Current time: 1529615254009 milliseconds
Total Time:         454.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.7 seconds, 25.0%
Fitness Testing:    265.5 seconds, 58.5%
Report:              74.8 seconds, 16.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_yankdup} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_1036} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction integer_div} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_flush} {:instruction print_float} {:instruction integer_yankdup})
Best program: (36.25961346587397 in1 integer_shove integer_yankdup 36.25961346587397 in1 integer_shove integer_yankdup integer_dup_items in1 integer_yankdup tag_float_737 integer_min integer_min 54.9607049605322 in1 float_add float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod 88 float_mod float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_1036 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 integer_div float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_rot integer_dec integer_flush print_float integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4526.384146700001
Median total errors in population: 945.9607
Error averages by case: (204.3733311000002 5.653 175.2920053999987 8.744 167.9287647000009 10.68 166.49421980000005 5.537 151.72700659999992 3.328 179.56245380000115 11.976 166.90154750000062 11.669 162.6492697000011 7.744 178.66231190000116 9.525 150.96906189999967 5.361 161.83550569999989 5.756 175.5695960000005 11.168 186.79979340000125 9.798 148.4354857 4.778 178.6950680999989 8.392 197.3083703000013 10.245 176.86698549999895 9.004 176.83247989999884 9.242 171.35977309999896 8.734 156.71038279999985 12.617 166.03228299999893 7.702 170.68069819999883 10.226 184.86192920000116 10.37 171.43072349999983 11.665 179.25709989999888 9.234)
Error minima by case: (36.8653 2 1.2596 2 5.7613 8 6.3583 1 0.0 0 1.9888 1 2.5315 1 0.8106 2 2.4318 2 0.7417 1 7.7794 1 0.0829 2 2.9901 2 0.014 2 4.3266 2 11.262 2 0.3556 2 2.9543 2 1.5298 2 1.4456 2 3.4685 1 1.2596 1 0.5986 2 1.9318 2 0.2596 2)
Average genome size in population (length): 169.387
Average program size in population (points): 170.387
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 114.8258246477297
Average age in population: 111.3247651933662
Median age in population: 112.584649338993
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.423
Error (vector) diversity:			 0.433
Behavioral diversity:				 0.438
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 258235535
--- Timings ---
Current time: 1529615260880 milliseconds
Total Time:         461.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       115.0 seconds, 25.0%
Fitness Testing:    269.7 seconds, 58.5%
Report:              76.1 seconds, 16.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_cos} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_669} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times float_frominteger float_yankdup float_flush float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_cos float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_669 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4193.814519700002
Median total errors in population: 970.1057000000001
Error averages by case: (197.68842110000026 5.65 168.0556753999988 8.513 153.88427400000086 10.643 151.5317635000001 5.241 128.30507149999977 2.984 161.116196200001 11.958 151.42305890000063 11.608 156.84228620000096 7.483 169.45416500000132 9.53 136.52584049999965 5.049 146.82510569999988 5.485 160.70787300000038 11.072 181.4818174000015 9.531 130.37211560000003 4.618 170.72020069999874 8.137 192.38912670000144 9.968 168.3603641999988 8.738 156.07607149999913 8.862 151.54730159999912 8.419 140.14958219999977 12.586 158.64949059999913 7.448 160.40510629999895 10.234 172.6150540000014 10.37 156.00275349999984 11.638 158.07580439999907 8.845)
Error minima by case: (56.0 2 1.0009 3 0.2446 2 3.0393 1 0.0 0 1.8845 8 3.7858 2 0.0393 2 5.281 2 0.5713 1 14.3112 2 0.0829 8 3.528 1 0.014 2 4.1768 2 12.262 2 0.1246 2 3.3763 2 1.5298 2 0.3763 1 3.9259 2 1.0009 2 0.5986 7 19.6981 7 9.0E-4 2)
Average genome size in population (length): 169.096
Average program size in population (points): 170.096
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 115.7353798690798
Average age in population: 112.4791615290742
Median age in population: 113.8959887366874
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.441
Error (vector) diversity:			 0.45
Behavioral diversity:				 0.452
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 262621635
--- Timings ---
Current time: 1529615267990 milliseconds
Total Time:         468.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.5 seconds, 24.9%
Fitness Testing:    274.1 seconds, 58.6%
Report:              77.4 seconds, 16.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_shove} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_sub} {:instruction float_max} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_sub} {:instruction tagged_950} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_yankdup integer_dup_items in1 float_sub float_add tag_float_737 float_shove integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max float_add tag_float_737 float_max float_sub float_mod float_sub float_yankdup float_sub float_mod float_dup_times float_tan float_sub float_max float_stackdepth integer_yankdup float_dup integer_pop float_sub float_flush float_sub tagged_950 -52 integer_yankdup float_dup integer_yankdup float_div float_dup_times integer_max tagged_729 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_yankdup float_dup integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat float_stackdepth float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4218.174309200001
Median total errors in population: 1013.60025
Error averages by case: (203.47242840000044 5.724 163.87729339999876 8.526 155.1606524000007 10.566 151.56844430000004 5.248 138.90597399999973 3.061 164.98689660000116 11.728 151.94729820000055 11.513 153.97982620000116 7.588 168.7769787000013 9.389 135.92463849999956 5.152 146.94933809999984 5.535 162.57522100000048 11.054 177.51921200000143 9.529 138.3612330000001 4.656 166.21148009999888 8.129 189.2705246000013 9.963 164.89171399999896 8.793 163.171411199999 8.975 157.89791379999897 8.611 138.3361777999997 12.541 155.08299199999908 7.484 158.32883559999885 10.124 174.8742926000012 10.305 156.18354309999995 11.601 165.07598959999905 9.049)
Error minima by case: (36.8653 2 1.0009 2 2.0393 2 1.0 1 0.0 0 1.9888 1 2.825 8 0.0393 2 1.0 1 5.0393 1 2.0 1 0.0829 8 2.9901 1 0.014 1 9.2399 2 11.262 2 0.3556 2 1.9543 2 0.9607 2 1.1173 2 1.1373 2 1.0009 2 0.7656 2 13.9168 1 9.0E-4 2)
Average genome size in population (length): 170.802
Average program size in population (points): 171.802
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 117.2251075251302
Average age in population: 114.1911502668561
Median age in population: 115.1826174216346
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.447
Error (vector) diversity:			 0.45
Behavioral diversity:				 0.453
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 267050910
--- Timings ---
Current time: 1529615275065 milliseconds
Total Time:         475.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.9 seconds, 24.8%
Fitness Testing:    278.5 seconds, 58.6%
Report:              78.7 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction float_mod} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction tagged_52} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_cos} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 float_mod integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min tagged_52 integer_min float_sub float_add tag_float_737 float_mult in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times float_frominteger float_yankdup integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_cos float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4373.8814918
Median total errors in population: 959.0686499999999
Error averages by case: (217.8303403000005 6.318 167.98583319999858 8.637 155.62234060000097 10.685 164.57687790000017 5.61 153.21268039999984 3.422 164.53623650000142 11.935 163.38764700000058 11.592 155.6631950000011 7.631 165.9375528000015 9.513 150.1047195999995 5.386 160.64871729999987 5.88 173.86335000000037 11.174 181.3227744000015 9.672 154.0945647 4.952 171.62438179999882 8.276 190.87540420000153 10.128 168.99543819999883 8.894 161.9780185999988 9.121 156.0845970999988 8.665 151.9174267999998 12.578 158.56629159999895 7.583 156.97677949999877 10.233 173.91250610000137 10.405 170.81876129999995 11.682 164.3100568999988 9.063)
Error minima by case: (37.8653 2 1.0009 2 0.2446 9 3.0393 1 0.0 0 0.9888 7 2.5315 8 0.0393 2 7.1644 2 0.5713 1 7.7794 1 0.0829 8 3.9901 2 0.014 2 4.8325 2 10.7812 2 0.3556 2 1.9543 2 0.6569 2 1.1173 2 0.0077 1 1.0009 1 0.5986 7 0.9318 2 9.0E-4 2)
Average genome size in population (length): 172.964
Average program size in population (points): 173.964
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 118.3250351149674
Average age in population: 115.8823644247172
Median age in population: 116.3587753462752
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.435
Error (vector) diversity:			 0.446
Behavioral diversity:				 0.448
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 271536235
--- Timings ---
Current time: 1529615282267 milliseconds
Total Time:         482.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.3 seconds, 24.7%
Fitness Testing:    282.9 seconds, 58.7%
Report:              79.9 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 42797.907499999965
Test mean error for best: 21.39895
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times float_frominteger float_yankdup integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_yankdup float_dup_times integer_fromfloat float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_yankdup float_dup integer_pop integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4902.3697018
Median total errors in population: 945.9607
Error averages by case: (223.93665050000035 6.175 186.50013419999877 8.784 183.641218700001 10.676 187.4323176 5.814 170.0080928 3.641 189.29423060000127 11.93 187.9549636000009 11.565 174.3754450000012 7.746 189.1110401000014 9.584 174.29980359999948 5.607 184.12205859999983 6.079 195.51186340000032 11.276 198.30095820000133 9.855 167.3237888999999 5.091 189.20003539999877 8.392 208.58939440000142 10.299 187.46172749999874 9.01 185.47819169999875 9.284 180.39742219999889 8.867 177.16644239999988 12.621 177.5082708999989 7.736 183.76638759999884 10.256 199.52199620000135 10.424 191.3103724999998 11.754 188.4478951999989 9.243)
Error minima by case: (10.16 2 1.0009 2 0.2446 9 3.0393 1 0.0 0 1.5919 4 2.825 8 0.0393 2 8.3083 2 0.2048 1 7.7794 1 0.0829 2 3.9901 2 0.014 2 3.5726 2 12.262 2 0.3556 2 3.0521 2 0.815 2 0.5544 2 0.4186 2 1.0009 1 0.4664 2 19.1041 1 9.0E-4 2)
Average genome size in population (length): 173.394
Average program size in population (points): 174.394
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 120.0813949440508
Average age in population: 115.7971751885537
Median age in population: 117.6689219142621
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.418
Error (vector) diversity:			 0.426
Behavioral diversity:				 0.429
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 276031060
--- Timings ---
Current time: 1529615289230 milliseconds
Total Time:         489.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       120.8 seconds, 24.7%
Fitness Testing:    287.3 seconds, 58.7%
Report:              81.2 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 42475.877299999964
Test mean error for best: 21.23794
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_swap} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_flush} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_dec} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_cos} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_yankdup})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items float_swap integer_min tag_float_767 integer_min integer_flush integer_min float_sub float_add tag_float_737 float_mult in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod integer_dec float_mod float_sub float_yankdup float_dup_times float_frominteger float_yankdup integer_mult float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_cos float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop integer_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_sub float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth float_mult integer_yankdup)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 645.4191999999998
Mean: 12.908384
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4762.556666900002
Median total errors in population: 1005.3747999999999
Error averages by case: (221.09680050000037 6.233 184.7553769999986 8.719 173.9977667000009 10.663 180.25461739999997 5.555 161.01985659999988 3.543 184.19963640000114 11.879 179.1877562000008 11.472 172.8971055000013 7.774 182.0517151000013 9.613 164.86782999999951 5.491 177.04801159999982 5.978 186.69021130000039 11.319 197.20269980000137 9.74 163.27170959999992 5.251 187.34361699999891 8.336 207.4372719000014 10.168 184.05365619999887 8.954 182.12953259999898 9.255 176.85564919999894 8.879 168.16646319999992 12.595 176.1261209999988 7.732 174.18825139999873 10.284 191.34600820000134 10.437 181.69337969999984 11.707 183.85962279999896 9.239)
Error minima by case: (37.8653 2 1.0009 3 0.2446 8 1.0 1 0.0 0 0.9888 1 2.825 7 0.0393 2 3.528 2 0.5713 1 2.0 1 0.0829 2 3.9901 2 0.014 2 4.0171 2 12.262 2 0.3556 2 5.7404 2 0.9607 2 0.5544 8 4.0855 1 1.0009 1 0.2344 2 0.0682 8 9.0E-4 2)
Average genome size in population (length): 174.37
Average program size in population (points): 175.37
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 121.0453274536256
Average age in population: 115.6556420529763
Median age in population: 118.8915553953347
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.447
Error (vector) diversity:			 0.454
Behavioral diversity:				 0.456
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 280550560
--- Timings ---
Current time: 1529615296312 milliseconds
Total Time:         496.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.2 seconds, 24.6%
Fitness Testing:    291.7 seconds, 58.8%
Report:              82.4 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 45143.81959999996
Test mean error for best: 22.57191
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_cos} {:instruction integer_fromfloat} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction tagged_950} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_dup_items} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items float_cos integer_fromfloat tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times float_frominteger float_yankdup tagged_950 float_mod 88 float_mod integer_flush integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_dup_items float_mod float_yankdup float_dup_times integer_yankdup float_dup integer_pop float_sub float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 639.1656999999999
Mean: 12.783314
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4871.584988199999
Median total errors in population: 999.7203
Error averages by case: (232.30989810000042 6.514 181.45179669999888 8.71 179.61098280000067 10.654 186.04448479999994 5.697 165.40915369999996 3.566 190.1340472000011 11.906 191.0874268000008 11.43 168.33762860000093 7.753 188.40725190000114 9.523 172.2894024999995 5.705 182.11507489999974 6.057 196.49128180000025 11.373 193.79456980000126 9.781 165.69544149999996 5.102 184.893236199999 8.358 204.2781305000013 10.226 181.55496839999913 9.006 190.1614960999989 9.46 184.46998409999907 9.043 177.0533035 12.572 172.1298888999991 7.677 180.62937129999895 10.216 197.54979120000118 10.368 192.09330069999987 11.725 191.7930761999991 9.378)
Error minima by case: (15.0 2 1.0009 2 0.2446 2 4.0393 1 0.0 0 0.0112 6 2.5315 8 0.0393 2 2.4773 2 0.3496 1 8.602 1 0.0829 8 3.9901 1 0.014 2 0.8036 2 12.262 2 0.3556 2 1.9543 2 1.5365 2 0.4636 2 3.9607 1 1.0009 1 0.2344 2 1.9318 2 9.0E-4 2)
Average genome size in population (length): 176.159
Average program size in population (points): 177.159
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 122.2111478953206
Average age in population: 116.8376737452382
Median age in population: 120.1923154799429
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.442
Error (vector) diversity:			 0.448
Behavioral diversity:				 0.451
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 285114085
--- Timings ---
Current time: 1529615303343 milliseconds
Total Time:         503.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       123.7 seconds, 24.6%
Fitness Testing:    296.1 seconds, 58.8%
Report:              83.6 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 45143.81959999996
Test mean error for best: 22.57191
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -52.9607049605
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_cos} {:instruction integer_fromfloat} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_sub} {:instruction -25} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction tagged_950} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_dup_items} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items float_cos integer_fromfloat tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_sub -25 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_stackdepth tagged_950 float_mod float_sub float_mod float_sub float_yankdup float_dup_times float_frominteger float_yankdup tagged_950 float_mod 88 float_mod integer_flush integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_dup_items float_mod float_yankdup float_dup_times integer_yankdup float_dup integer_pop float_sub float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_min integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 9.4192 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 639.1656999999999
Mean: 12.783314
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5166.3210709
Median total errors in population: 1015.20015
Error averages by case: (241.43352820000044 6.555 196.81983359999842 8.926 191.76747280000103 10.711 194.52093269999986 5.697 186.3900614 3.881 201.2953800000013 11.968 199.94431580000108 11.471 182.58585340000135 7.933 197.87219390000146 9.68 182.43887479999958 5.72 190.93407569999982 6.096 205.57545630000033 11.419 209.01843130000162 9.966 181.52429849999993 5.33 199.57874179999877 8.536 219.35875880000162 10.345 195.0809684999989 9.15 201.0021343999988 9.451 195.59515979999875 9.075 185.75997560000008 12.688 185.55067409999867 7.905 189.92061409999852 10.371 205.34059530000155 10.452 199.8503433999998 11.803 202.5563966999988 9.477)
Error minima by case: (37.8653 2 0.6104 2 2.0393 1 1.0 1 0.0 0 1.1276 1 1.8643 2 0.0393 2 5.8002 2 1.6637 1 1.2765 1 0.0829 8 2.9901 1 0.014 1 12.0009 2 11.262 2 0.3556 2 1.9543 2 1.8218 2 0.4636 8 3.8341 1 1.0009 1 0.5986 2 1.3723 7 9.0E-4 2)
Average genome size in population (length): 176.89
Average program size in population (points): 177.89
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 123.3714953821785
Average age in population: 118.3884850243117
Median age in population: 121.5412570576684
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.458
Error (vector) diversity:			 0.464
Behavioral diversity:				 0.468
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 289694710
--- Timings ---
Current time: 1529615310381 milliseconds
Total Time:         510.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       125.1 seconds, 24.5%
Fitness Testing:    300.5 seconds, 58.9%
Report:              84.8 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 40913.08740000002
Test mean error for best: 20.45654
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_dup_times integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4726.126784400001
Median total errors in population: 945.9607
Error averages by case: (220.22061100000036 6.407 177.55411959999861 8.766 172.491300800001 10.692 178.15625709999995 5.511 158.1095361999999 3.717 190.08763160000134 11.978 183.93973840000115 11.391 164.38413300000116 7.804 180.6951939000014 9.618 164.9783464999995 5.608 175.35287299999987 5.995 189.53344810000038 11.428 189.9836762000015 9.817 163.0638809999999 5.026 180.59639449999878 8.432 200.28685110000166 10.23 177.7669591999988 9.066 187.32166069999892 9.268 182.71595559999886 8.822 169.21330260000008 12.645 165.91938269999883 7.758 171.11593349999882 10.29 189.64192490000144 10.391 182.12824589999974 11.79 189.18442729999902 9.235)
Error minima by case: (35.8653 2 0.2596 2 0.3996 1 3.2047 1 0.0 0 0.9888 1 2.825 8 0.0393 2 3.0 1 0.2898 1 10.4235 1 0.0829 8 2.9901 1 0.014 1 9.7367 2 11.262 1 0.3556 1 4.0457 1 1.2157 1 0.5544 2 3.8341 1 0.2596 1 0.2046 2 0.0682 2 9.0E-4 2)
Average genome size in population (length): 177.8
Average program size in population (points): 178.8
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 124.8059061669671
Average age in population: 119.6792417889017
Median age in population: 122.9024257197129
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.459
Error (vector) diversity:			 0.465
Behavioral diversity:				 0.468
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 294299210
--- Timings ---
Current time: 1529615317464 milliseconds
Total Time:         517.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.5 seconds, 24.4%
Fitness Testing:    304.9 seconds, 58.9%
Report:              86.0 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 40913.08740000002
Test mean error for best: 20.45654
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_dup_times integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4600.635174300001
Median total errors in population: 966.0432
Error averages by case: (208.2695984000003 5.96 171.78004589999895 8.718 172.28000200000082 10.683 177.19546000000017 5.423 151.52884369999973 3.506 181.26989770000105 11.905 174.10036980000066 11.271 161.3371826000008 7.765 181.16977740000107 9.593 163.59769179999955 5.476 173.83591849999982 5.918 185.17150690000037 11.364 184.32406010000116 9.745 154.21043889999999 4.831 174.36516939999902 8.352 194.6668455000013 10.187 174.16485859999904 9.006 178.51126719999922 9.17 173.57380619999915 8.76 162.45906669999985 12.509 162.75481799999926 7.692 171.98017669999905 10.273 188.4499637000013 10.378 179.75575259999988 11.642 180.53065599999925 9.225)
Error minima by case: (14.0 2 2.6237 2 2.0393 8 3.0393 1 0.0 0 0.9888 1 1.8641 1 0.0393 2 6.281 2 0.0 0 0.0 0 0.0829 2 2.9901 2 0.014 1 7.6238 2 11.262 2 0.3556 2 1.0521 2 1.2157 2 0.5544 1 0.4788 1 2.6237 1 0.5986 2 0.5671 1 1.1283 2)
Average genome size in population (length): 179.371
Average program size in population (points): 180.371
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 126.015014420609
Average age in population: 120.3888158111582
Median age in population: 124.1162153680884
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.433
Error (vector) diversity:			 0.438
Behavioral diversity:				 0.441
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 298943635
--- Timings ---
Current time: 1529615324572 milliseconds
Total Time:         524.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.9 seconds, 24.4%
Fitness Testing:    309.4 seconds, 59.0%
Report:              87.3 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 40913.08740000002
Test mean error for best: 20.45654
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_843} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_843 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_dup_times integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4403.126695000002
Median total errors in population: 945.9607
Error averages by case: (197.31357320000023 5.813 165.5614804999989 8.628 162.2064416000008 10.61 166.41899890000025 4.981 147.26966459999986 3.29 173.36973230000112 11.876 168.69135620000063 11.226 154.09010220000087 7.663 170.26308430000103 9.47 152.92622079999958 5.118 163.26341799999997 5.612 177.49602100000052 11.357 180.58749210000136 9.64 153.46776730000005 4.739 167.9765477999988 8.257 191.31966170000135 10.08 165.62924289999887 8.865 169.59801559999894 9.104 165.23321059999898 8.666 155.63410489999984 12.495 156.76043139999916 7.592 163.20587649999894 10.162 178.40250980000118 10.327 168.97617599999998 11.593 171.21756479999905 9.084)
Error minima by case: (14.0 2 1.2596 2 0.2446 4 3.0393 1 0.0 0 0.9511 4 0.8643 1 0.0393 1 6.719 2 1.6637 1 3.301 1 0.0829 2 3.9901 2 0.014 1 7.1571 2 2.3031 2 0.3556 2 0.9543 1 1.2157 1 0.5544 2 0.9456 1 1.2596 1 0.1925 3 2.0 1 0.2596 2)
Average genome size in population (length): 181.034
Average program size in population (points): 182.034
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 127.3440014069478
Average age in population: 121.9395582381122
Median age in population: 125.4822361260736
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.407
Error (vector) diversity:			 0.41
Behavioral diversity:				 0.413
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 303627060
--- Timings ---
Current time: 1529615331687 milliseconds
Total Time:         531.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       129.3 seconds, 24.3%
Fitness Testing:    313.8 seconds, 59.0%
Report:              88.5 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 40733.411700000026
Test mean error for best: 20.36671
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_mod} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_dup_times integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup integer_mod float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4853.183956100001
Median total errors in population: 972.9747500000001
Error averages by case: (215.8753175000001 5.857 181.7341498999986 8.777 185.2009684000012 10.637 184.6656222999999 5.341 160.5226963999999 3.308 192.97373000000132 11.855 174.21028210000102 11.15 174.41235520000134 7.814 191.2189630000014 9.573 170.24125239999955 5.475 181.99884019999982 5.921 189.1329487000006 11.289 195.37249370000146 9.818 170.93988529999987 4.972 184.61404949999886 8.429 205.8122019000014 10.211 187.9550126999989 9.005 191.3209730999987 9.25 186.1471158999988 8.839 166.3964461999999 12.46 173.7966281999989 7.73 186.81267289999866 10.247 200.71117800000135 10.392 188.2523825999998 11.655 193.59878999999881 9.262)
Error minima by case: (34.2385 2 1.2596 2 1.2446 7 1.1738 1 0.0 0 0.4421 8 2.5023 2 0.0393 2 6.1644 2 0.2898 1 2.5948 1 0.0829 2 3.9901 2 0.014 2 1.8911 2 12.262 2 0.3556 2 4.7404 2 1.2157 2 0.5544 2 0.1373 2 0.355 1 0.7656 8 2.0 1 0.2596 2)
Average genome size in population (length): 180.441
Average program size in population (points): 181.441
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 128.7655239096093
Average age in population: 123.1430217758695
Median age in population: 126.7065484118147
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.431
Error (vector) diversity:			 0.435
Behavioral diversity:				 0.437
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 308293335
--- Timings ---
Current time: 1529615338801 milliseconds
Total Time:         538.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.7 seconds, 24.3%
Fitness Testing:    318.2 seconds, 59.1%
Report:              89.8 seconds, 16.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 40733.411700000026
Test mean error for best: 20.36671
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_mod} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_dup_times integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup integer_mod float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5102.4843165
Median total errors in population: 977.826
Error averages by case: (239.81657660000036 6.235 186.3608911999988 8.851 188.023231100001 10.631 207.6617146999999 5.688 171.04294769999998 3.517 197.34446010000119 11.877 190.95314700000065 11.191 179.54465950000133 7.933 193.25535490000127 9.518 192.07641029999948 5.776 204.6039001999998 6.206 214.3697383000003 11.375 199.0921099000014 9.906 181.46711349999998 5.059 189.68893139999892 8.493 209.21735700000139 10.344 193.63949209999893 9.176 194.61226079999898 9.342 189.1841617999989 8.924 181.40928679999988 12.577 176.87833099999904 7.876 187.58690759999882 10.226 203.55055410000128 10.36 211.98781939999984 11.738 196.96595949999886 9.332)
Error minima by case: (37.8653 2 1.2596 2 2.0393 1 1.0393 1 0.0 0 0.0112 1 0.4456 8 0.0393 2 7.281 2 2.0 1 1.9237 1 0.0829 2 3.9901 2 0.014 2 0.3927 2 12.262 2 0.3556 1 0.0 0 0.0 0 0.4636 2 3.5405 2 1.2596 1 0.1925 2 0.8824 2 0.0 0)
Average genome size in population (length): 178.853
Average program size in population (points): 179.853
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 130.0518147133648
Average age in population: 123.2614716183133
Median age in population: 127.973476577219
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.449
Error (vector) diversity:			 0.45
Behavioral diversity:				 0.458
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 312919210
--- Timings ---
Current time: 1529615345847 milliseconds
Total Time:         545.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       132.2 seconds, 24.2%
Fitness Testing:    322.6 seconds, 59.1%
Report:              91.1 seconds, 16.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 44323.319499999954
Test mean error for best: 22.16166
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -52.7130005402
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -51.9607049605
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction integer_fromfloat} {:instruction tag_float_767} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction 33.73667578654145} {:instruction float_dup_items} {:instruction integer_shove} {:instruction in1} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction 36.25961346587397} {:instruction in1} {:instruction tagged_869} {:instruction integer_yankdup} {:instruction float_swap} {:instruction float_sub} {:instruction float_cos} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_mult} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_642} {:instruction float_flush} {:instruction integer_max} {:instruction tagged_922} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yankdup})
Best program: (36.25961346587397 integer_fromfloat tag_float_767 integer_yankdup integer_dup_items 33.73667578654145 float_dup_items integer_shove in1 integer_shove integer_yankdup 36.25961346587397 in1 tagged_869 integer_yankdup float_swap float_sub float_cos 54.9607049605322 in1 float_add tag_float_737 float_max integer_dup_times float_mult print_integer integer_fromfloat float_stackdepth tagged_950 float_dup_times integer_dup_items -52 integer_yankdup float_dup integer_yankdup float_div integer_dup_times integer_max tagged_642 float_flush integer_max tagged_922 float_flush float_inc tagged_950 float_dup_times integer_yankdup float_dup integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup integer_pop tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dec integer_rot float_dup_times integer_dup_items -52 integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth integer_yankdup)
Errors: [58.0 3 18.9607 9 13.0393 9 20.0 1 0.0 0 16.0393 13 2.5773 8 2.0393 7 21.0393 9 8.0 1 22.0 2 8.4192 10 26.0393 10 3.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 18.0 12 4.9607 7 18.9607 10 33.0393 8 24.0 11 17.9607 9]
Total: 634.9571999999998
Mean: 12.699144
Genome size: 180
Size: 181
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4904.9708616000025
Median total errors in population: 1018.8976
Error averages by case: (218.5076412000003 6.138 178.14462879999888 8.75 179.8750931000008 10.573 205.29673559999998 5.808 157.5290130999999 3.391 190.5134187000011 11.75 174.73553770000078 11.156 172.650578500001 7.873 187.64939660000098 9.538 189.00820389999964 5.834 201.6557367999998 6.307 209.86900970000042 11.362 191.6862053000013 9.705 176.01072639999992 5.367 180.30543569999912 8.344 202.04680050000135 10.076 184.65694229999897 9.008 190.42576129999912 9.387 185.01326469999907 9.019 163.6634615999999 12.46 170.06247809999923 7.764 179.65550029999898 10.223 195.75371860000115 10.364 207.55796449999985 11.681 191.37360859999907 9.446)
Error minima by case: (56.0 2 1.2596 2 0.2446 2 6.3583 1 0.0 0 0.5688 2 0.6786 2 0.0393 2 1.281 2 0.2642 1 1.644 1 0.0829 2 3.9901 2 0.014 1 0.478 2 12.262 2 0.3556 1 1.0498 1 1.9607 1 0.6533 2 4.8341 2 1.2596 1 0.2649 3 3.5546 2 0.2596 2)
Average genome size in population (length): 178.561
Average program size in population (points): 179.561
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 131.0060186803738
Average age in population: 123.8027582688069
Median age in population: 129.2212378294723
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.477
Error (vector) diversity:			 0.478
Behavioral diversity:				 0.485
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 317535210
--- Timings ---
Current time: 1529615352988 milliseconds
Total Time:         553.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.6 seconds, 24.2%
Fitness Testing:    327.0 seconds, 59.1%
Report:              92.3 seconds, 16.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 40913.08740000002
Test mean error for best: 20.45654
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush integer_div tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5172.226064900002
Median total errors in population: 1159.0855999999999
Error averages by case: (253.21633030000038 6.477 187.2353644999985 8.809 182.74403490000097 10.657 213.1273940999997 5.855 170.5220678 3.518 209.01039520000123 11.813 185.46886500000122 11.249 180.00789150000156 7.917 191.3201603000017 9.567 199.3307519999994 5.901 209.82302089999973 6.337 217.90225360000065 11.451 200.41972130000164 9.82 183.42458029999997 5.357 189.47469509999888 8.434 210.86462460000175 10.206 192.27561979999885 9.104 208.3134709999988 9.544 202.58516879999877 9.22 175.86011790000003 12.642 177.2503659999987 7.83 183.84765529999842 10.29 197.71030860000158 10.407 216.37347619999974 11.793 210.32172989999881 9.598)
Error minima by case: (14.0 2 1.2596 2 0.7554 8 1.0393 1 0.0 0 0.9888 8 0.6786 1 0.0393 1 7.281 2 2.4287 1 8.7794 1 0.0829 2 3.9901 2 0.014 2 9.2399 2 12.262 2 0.3556 2 5.7404 1 0.9607 2 0.5544 2 1.1373 1 1.2596 1 0.1925 7 0.0682 2 0.2596 2)
Average genome size in population (length): 179.107
Average program size in population (points): 180.107
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 132.5658137354707
Average age in population: 126.3956622416472
Median age in population: 130.6299486219417
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.478
Error (vector) diversity:			 0.484
Behavioral diversity:				 0.493
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 322166860
--- Timings ---
Current time: 1529615360081 milliseconds
Total Time:         560.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.0 seconds, 24.1%
Fitness Testing:    331.4 seconds, 59.2%
Report:              93.6 seconds, 16.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 41565.082800000026
Test mean error for best: 20.78254
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_dup_times integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup integer_mod float_dup_items float_min integer_dec integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4833.054328900002
Median total errors in population: 977.826
Error averages by case: (240.0782742000004 6.272 166.382822399999 8.704 174.6435612000008 10.597 201.41627629999988 5.784 159.28926599999988 3.19 189.13403540000112 11.848 181.69022760000087 11.12 164.45318640000082 7.864 182.37070400000107 9.419 188.7027338999995 5.856 198.6978935999998 6.215 211.79213030000042 11.322 178.4135441000012 9.747 183.72544140000005 5.487 169.4194159999989 8.345 188.70397170000123 10.229 178.9472041999989 9.151 189.0521795999991 9.48 181.92904459999903 9.069 165.6900948 12.563 156.38570889999926 7.693 176.73665229999898 10.145 188.2065738000011 10.228 203.97229639999995 11.727 191.6220897999991 9.544)
Error minima by case: (56.0 2 1.2596 2 0.2446 9 2.9383 1 0.0 0 0.4955 8 0.825 1 0.0393 2 7.281 2 0.1393 1 1.5173 1 0.0829 3 3.9901 2 0.014 1 5.9112 2 12.262 2 0.3556 2 5.7404 2 0.009 2 0.5544 2 2.1914 2 0.645 1 0.2344 7 3.5815 3 0.2596 2)
Average genome size in population (length): 179.112
Average program size in population (points): 180.112
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 133.6441409794755
Average age in population: 127.7687626979575
Median age in population: 131.8554686084007
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.47
Error (vector) diversity:			 0.479
Behavioral diversity:				 0.483
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 326798535
--- Timings ---
Current time: 1529615367164 milliseconds
Total Time:         567.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       136.4 seconds, 24.1%
Fitness Testing:    335.8 seconds, 59.2%
Report:              94.9 seconds, 16.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 40793.633200000026
Test mean error for best: 20.39682
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_mod} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush integer_div tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_min integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_mod integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5308.070351099999
Median total errors in population: 1356.6856000000002
Error averages by case: (268.0889029000004 6.498 173.42895179999877 8.809 194.57871230000094 10.613 234.22660099999973 6.278 169.04503079999986 3.64 213.19981190000138 11.828 191.86638950000102 11.22 177.00928030000122 8.037 196.3751825000015 9.55 218.34834259999946 6.203 230.87909939999972 6.63 241.69882930000023 11.409 186.72538660000146 9.809 207.9575661999999 5.765 175.28349489999874 8.442 197.31141200000155 10.199 190.4481931999988 9.174 212.91101519999867 9.667 206.68246539999853 9.327 178.53595399999995 12.587 163.3413690999991 7.799 191.6253152999988 10.23 209.33431770000152 10.335 238.8134981999994 11.824 214.77822899999865 9.704)
Error minima by case: (54.0 2 1.2633 2 2.0393 8 1.0393 1 0.0 0 0.5341 8 0.6786 5 0.0393 1 3.5094 2 2.0 1 7.1706 1 0.0829 5 3.9901 1 0.014 1 7.7915 2 8.0 1 0.3556 2 3.4239 2 1.9607 2 0.6533 4 4.8341 1 0.0384 1 0.2047 2 2.4989 5 0.2596 2)
Average genome size in population (length): 177.324
Average program size in population (points): 178.324
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 135.2315764892935
Average age in population: 128.7983202078698
Median age in population: 133.2092923235336
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.508
Error (vector) diversity:			 0.512
Behavioral diversity:				 0.52
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 331391735
--- Timings ---
Current time: 1529615374080 milliseconds
Total Time:         574.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.9 seconds, 24.0%
Fitness Testing:    340.0 seconds, 59.2%
Report:              96.2 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 40793.633200000026
Test mean error for best: 20.39682
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_mod} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush integer_div tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_min integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_mod integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5691.080988199999
Median total errors in population: 1356.6856000000002
Error averages by case: (277.3568788000002 6.567 190.5437675999985 8.887 209.74173680000118 10.651 251.6677426999998 6.413 174.52639579999982 3.711 229.97320140000144 11.8 198.60173470000115 11.29 195.31244740000167 8.075 214.62442600000173 9.579 237.53845879999952 6.408 248.88363049999964 6.793 256.6170230000005 11.389 201.29041380000166 9.879 225.56859329999995 5.797 192.07208219999873 8.503 211.65637520000163 10.277 210.57996919999874 9.283 228.93054709999873 9.702 222.6906220999986 9.365 185.8995746999999 12.676 179.0646879999989 7.876 212.7954395999983 10.263 222.5383555000016 10.385 253.8575343999995 11.843 231.55334959999874 9.784)
Error minima by case: (55.0 2 1.2633 2 2.0393 1 3.0393 1 0.0 0 0.9888 1 0.6786 7 0.0393 2 8.281 2 1.489 1 10.9607 1 0.074 7 2.0099 1 0.014 1 7.7915 2 8.0 1 0.3556 2 4.2933 1 1.5575 2 0.4636 8 2.1659 2 1.2596 1 0.1925 2 5.8925 7 0.2596 1)
Average genome size in population (length): 176.898
Average program size in population (points): 177.898
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 136.6898980810285
Average age in population: 130.7147375142047
Median age in population: 134.488737560028
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.483
Error (vector) diversity:			 0.486
Behavioral diversity:				 0.494
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 335973885
--- Timings ---
Current time: 1529615381027 milliseconds
Total Time:         581.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.3 seconds, 24.0%
Fitness Testing:    344.3 seconds, 59.3%
Report:              97.4 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 40793.633200000026
Test mean error for best: 20.39682
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -40.0964246635
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_mod} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_max} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_add})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush integer_div tagged_950 float_mod float_sub float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_min integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat float_mod in2 integer_dup_items float_dup float_mod integer_add in1 float_yankdup integer_mult float_max float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add float_min integer_stackdepth integer_dup_items integer_yankdup float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_add)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 10.0393 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 636.0828999999999
Mean: 12.721658
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4984.527776700002
Median total errors in population: 1291.9877999999999
Error averages by case: (264.8191850000004 6.597 166.24634989999905 8.867 172.8163113000007 10.506 223.28621650000008 6.268 164.24910949999975 3.705 195.10944280000126 11.755 175.91484780000047 11.098 165.01301590000102 8.051 179.45773460000123 9.398 209.00304929999956 6.205 220.3849413999998 6.626 230.26438020000066 11.318 177.17585180000123 9.908 192.4435009 5.768 167.84603009999924 8.519 187.97251630000133 10.34 179.32449389999888 9.292 195.82961449999885 9.537 189.5746259999989 9.184 164.5396963999998 12.54 155.6157682999993 7.865 174.38145389999895 10.129 187.12235800000127 10.204 224.21509279999992 11.778 196.80518959999884 9.659)
Error minima by case: (54.0 2 0.8894 2 3.6588 8 0.0 0 0.0 0 1.9888 1 0.825 7 0.0393 2 1.2889 2 0.5713 1 2.0 1 0.0829 8 2.9901 2 0.014 1 1.8036 2 11.262 2 0.3556 2 3.0521 1 1.9607 1 0.4456 2 3.9607 2 0.3251 1 0.2344 7 5.9318 2 0.2596 1)
Average genome size in population (length): 177.196
Average program size in population (points): 178.196
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 137.7155280175826
Average age in population: 131.8747288433097
Median age in population: 135.8239872977006
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.517
Error (vector) diversity:			 0.52
Behavioral diversity:				 0.532
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 340565485
--- Timings ---
Current time: 1529615387931 milliseconds
Total Time:         588.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       140.7 seconds, 23.9%
Fitness Testing:    348.6 seconds, 59.3%
Report:              98.7 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 43164.81220000001
Test mean error for best: 21.58241
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -39.1661781518
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_shove} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction -52} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_dup_items} {:instruction float_mod} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add integer_yankdup integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_shove integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max float_add tag_float_737 float_max integer_yankdup integer_dup_items -52 float_mod 88 float_mod integer_flush integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_dup_items float_mod integer_dup_items float_dup_times integer_yankdup float_dup integer_pop float_sub float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 4.3753 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 635.1217999999999
Mean: 12.702436
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4775.4353513000015
Median total errors in population: 1235.6855500000001
Error averages by case: (265.4405562000003 6.288 150.79192509999902 8.589 176.97216460000092 10.446 213.90679730000005 6.235 146.7322405999999 3.282 193.59390860000127 11.73 161.06800740000023 11.096 153.13162880000095 7.817 176.14533260000124 9.259 198.67855899999947 6.142 211.88074379999972 6.615 222.09382000000042 11.239 163.36214700000116 9.647 185.1049092999999 5.389 154.10751389999905 8.252 174.01359730000115 10.147 168.46741649999896 9.08 193.08004219999884 9.5 186.78781899999885 9.123 149.02753259999977 12.459 135.88614329999942 7.528 172.88628719999883 10.032 187.44379730000145 10.104 218.3515677999998 11.721 195.1648938999989 9.596)
Error minima by case: (56.0 2 0.8894 2 2.0393 2 1.0393 1 0.0 0 0.0112 2 0.6786 7 0.0393 2 1.4808 2 2.0 1 2.7794 1 0.0829 2 1.6335 2 0.014 1 5.6341 2 10.9852 2 0.3556 2 4.7702 1 1.9607 1 0.6533 2 0.9456 1 0.3251 1 0.1925 3 2.5905 2 0.2596 2)
Average genome size in population (length): 179.203
Average program size in population (points): 180.203
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 139.0908773878839
Average age in population: 135.4889914870699
Median age in population: 137.1721546679728
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.51
Error (vector) diversity:			 0.513
Behavioral diversity:				 0.521
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 345208940
--- Timings ---
Current time: 1529615394810 milliseconds
Total Time:         595.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.1 seconds, 23.9%
Fitness Testing:    352.8 seconds, 59.3%
Report:              99.9 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 43164.81220000001
Test mean error for best: 21.58241
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -39.1661781518
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_shove} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction -52} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_dup_items} {:instruction float_mod} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add integer_yankdup integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_shove integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max float_add tag_float_737 float_max integer_yankdup integer_dup_items -52 float_mod 88 float_mod integer_flush integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_dup_items float_mod integer_dup_items float_dup_times integer_yankdup float_dup integer_pop float_sub float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 4.3753 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 635.1217999999999
Mean: 12.702436
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5715.9049488
Median total errors in population: 1391.2751000000003
Error averages by case: (285.0885608000002 6.591 193.54360439999886 8.794 204.2956654000009 10.641 247.81427659999963 6.26 175.13724979999978 3.741 223.80345500000098 11.803 197.347557000001 11.226 199.5389282000011 8.047 223.27934900000133 9.552 237.08924279999948 6.173 247.0762689999997 6.647 256.09705960000036 11.43 206.91674860000128 9.767 239.64653369999976 5.984 195.49573009999907 8.37 216.17145230000128 10.142 211.74855299999902 9.214 223.91084569999913 9.706 218.835398199999 9.491 187.21621969999998 12.66 183.58872769999905 7.79 215.37032329999857 10.271 223.9090740000014 10.361 250.08174269999947 11.872 226.61238219999908 9.757)
Error minima by case: (56.0 2 4.81 2 2.0393 7 1.0393 1 0.0 0 0.9888 1 0.221 6 0.0393 2 5.281 2 0.5713 1 12.0 1 0.0286 8 2.9901 2 0.014 1 6.9605 2 11.262 2 0.3556 2 3.9543 1 1.6497 1 0.5544 2 0.0376 2 1.2596 1 0.1925 2 10.5665 2 0.2596 2)
Average genome size in population (length): 179.055
Average program size in population (points): 180.055
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 140.3445845533596
Average age in population: 136.2162326052956
Median age in population: 138.4433059200617
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.52
Error (vector) diversity:			 0.522
Behavioral diversity:				 0.528
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 349842365
--- Timings ---
Current time: 1529615401848 milliseconds
Total Time:         601.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.5 seconds, 23.8%
Fitness Testing:    357.2 seconds, 59.3%
Report:             101.1 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 43164.81220000001
Test mean error for best: 21.58241
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -39.1661781518
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_shove} {:instruction integer_flush} {:instruction float_sub} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction -52} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_sub} {:instruction float_min} {:instruction float_pop} {:instruction integer_max} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add integer_yankdup integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_shove integer_flush float_sub float_inc 54.9607049605322 in1 float_add tag_float_737 float_max float_add tag_float_737 float_max integer_yankdup integer_dup_items -52 float_mod 88 float_mod integer_flush integer_dup_items -52 integer_yankdup float_dup float_inc tagged_950 float_mod float_max float_sub float_min float_pop integer_max integer_yankdup float_dup float_inc float_shove float_mod integer_add float_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 4.3753 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 635.1217999999999
Mean: 12.702436
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5489.715890600001
Median total errors in population: 1301.0769
Error averages by case: (260.9121454000003 6.345 187.31075009999853 8.867 199.3573059000012 10.528 245.22116519999983 6.324 168.46702499999995 3.688 218.5057734000014 11.767 187.08716820000078 11.171 187.8071050000014 8.038 205.04806790000154 9.404 234.95190839999947 6.305 240.4843400999998 6.69 254.8275963000005 11.38 198.85569200000148 9.907 208.58614749999987 5.775 190.25570929999864 8.502 209.1645193000017 10.373 201.65189019999872 9.256 219.71722899999878 9.697 211.87836079999872 9.357 175.91230429999996 12.599 174.1369026999988 7.792 200.17397639999848 10.164 211.7164957000015 10.183 250.79219819999975 11.84 221.15411429999872 9.788)
Error minima by case: (35.8653 2 4.81 2 0.2446 1 6.3583 1 0.0 0 0.9888 1 1.3134 6 0.0393 2 2.0641 2 0.2642 1 0.2083 2 0.0829 5 3.9901 2 0.014 1 4.0633 2 12.262 2 0.3556 2 11.9607 2 1.9607 2 0.5544 2 0.0077 2 2.355 1 0.2047 2 7.3241 2 3.7932 2)
Average genome size in population (length): 178.355
Average program size in population (points): 179.355
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 141.7956861673671
Average age in population: 137.041054688247
Median age in population: 139.6987765279422
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.487
Error (vector) diversity:			 0.491
Behavioral diversity:				 0.497
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 354454040
--- Timings ---
Current time: 1529615408668 milliseconds
Total Time:         608.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.9 seconds, 23.8%
Fitness Testing:    361.4 seconds, 59.4%
Report:             102.4 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 43164.81220000001
Test mean error for best: 21.58241
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -39.1661781518
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_shove} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction -52} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_sub} {:instruction float_min} {:instruction float_pop} {:instruction integer_max} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add integer_yankdup integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_shove integer_flush integer_mod float_inc 54.9607049605322 in1 float_add tag_float_737 float_max float_add tag_float_737 float_max integer_yankdup integer_dup_items -52 float_mod 88 float_mod integer_flush integer_dup_items -52 integer_yankdup float_dup float_inc tagged_950 float_mod float_max float_sub float_min float_pop integer_max integer_yankdup float_dup float_inc float_shove float_mod integer_add float_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 4.3753 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 635.1217999999999
Mean: 12.702436
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5676.229947100002
Median total errors in population: 1377.2225500000002
Error averages by case: (270.18919320000026 6.532 195.94546359999882 8.864 199.78614790000094 10.649 245.11581559999976 6.502 179.29599749999994 3.703 225.59789850000124 11.893 198.56127750000104 11.326 197.30661380000123 8.101 214.21550490000155 9.569 235.3081819999995 6.531 243.43394989999967 6.941 257.99416740000026 11.45 211.1980612000014 9.883 231.28837759999982 5.891 197.61232619999896 8.479 218.77466130000155 10.262 210.00543139999886 9.274 225.6409642999989 9.682 220.47289329999873 9.341 185.4286583 12.744 187.27465209999906 7.849 205.75301219999878 10.292 216.2187671000015 10.351 247.34251239999935 11.966 228.63441789999894 9.76)
Error minima by case: (35.1347 2 1.2596 2 4.3427 1 1.0393 1 0.0 0 0.4622 1 0.3214 7 0.0393 2 2.1763 2 2.511 1 2.7794 1 0.0829 1 2.9901 2 0.014 2 12.2596 2 11.262 2 0.3556 2 1.9543 1 1.9607 1 0.5544 2 0.0077 2 1.2596 1 0.1925 2 5.9502 2 0.2596 2)
Average genome size in population (length): 177.376
Average program size in population (points): 178.376
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 143.1068864952678
Average age in population: 136.3511017393097
Median age in population: 141.0128974522038
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.495
Error (vector) diversity:			 0.497
Behavioral diversity:				 0.506
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 359035315
--- Timings ---
Current time: 1529615415582 milliseconds
Total Time:         615.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.3 seconds, 23.8%
Fitness Testing:    365.7 seconds, 59.4%
Report:             103.6 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 43164.81220000001
Test mean error for best: 21.58241
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -39.1661781518
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_min} {:instruction tag_float_767} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mult} {:instruction in2} {:instruction float_shove} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction -52} {:instruction float_mod} {:instruction 88} {:instruction float_mod} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_max} {:instruction float_sub} {:instruction float_min} {:instruction float_pop} {:instruction integer_max} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add integer_yankdup integer_dec integer_yankdup integer_dup_items in1 integer_min tag_float_767 integer_min integer_min integer_min float_sub float_add tag_float_737 float_mult in2 float_shove integer_flush integer_mod float_inc 54.9607049605322 in1 float_add tag_float_737 float_max float_add tag_float_737 float_max integer_yankdup integer_dup_items -52 float_mod 88 float_mod integer_flush integer_dup_items -52 integer_yankdup float_dup float_inc tagged_950 float_mod float_max float_sub float_min float_pop integer_max integer_yankdup float_dup float_inc float_shove float_mod integer_add float_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 4.3753 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 635.1217999999999
Mean: 12.702436
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5448.4371551
Median total errors in population: 1392.5049000000004
Error averages by case: (276.6831896000002 6.528 178.92186019999832 8.6 202.31342030000127 10.525 236.47617039999977 6.34 166.48614219999996 3.606 223.8303080000014 11.697 181.0590709000008 11.145 191.5336264000018 7.959 205.2727733000018 9.488 226.12260809999947 6.235 234.00606369999974 6.662 247.45177990000033 11.325 191.45514180000174 9.613 211.97494799999987 5.959 180.73952469999864 8.223 201.78826640000176 10.017 204.95564099999868 9.125 225.62764019999875 9.559 219.13704459999863 9.229 168.89741229999998 12.569 168.65968779999855 7.591 200.39148159999823 10.226 215.15681450000164 10.244 240.84123829999947 11.775 224.80030089999877 9.615)
Error minima by case: (56.0 2 1.2596 2 0.7501 1 0.0 0 0.0 0 0.9888 1 0.1933 8 0.0393 2 4.281 2 0.1179 1 2.0 1 0.0829 7 3.9901 2 0.014 1 6.1571 2 12.262 2 0.3556 2 1.9543 2 1.3336 2 1.1173 8 0.0077 2 1.2596 1 0.1925 2 0.0682 8 0.2596 2)
Average genome size in population (length): 177.912
Average program size in population (points): 178.912
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 144.5665890636962
Average age in population: 139.1990996725856
Median age in population: 142.3176547990493
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.521
Error (vector) diversity:			 0.524
Behavioral diversity:				 0.533
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 363633765
--- Timings ---
Current time: 1529615422502 milliseconds
Total Time:         622.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.8 seconds, 23.7%
Fitness Testing:    370.0 seconds, 59.4%
Report:             104.8 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 43164.81220000001
Test mean error for best: 21.58241
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -39.1661781518
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction in1} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mult} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_dup_items in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush integer_div tagged_950 float_mod in1 float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mult float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat integer_dup_items float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush integer_add float_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop integer_stackdepth integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 4.3753 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 635.1217999999999
Mean: 12.702436
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5415.287029800001
Median total errors in population: 1424.396
Error averages by case: (278.2160512000003 6.648 177.4903158999985 8.794 196.04420120000108 10.575 247.29173829999993 6.762 162.63149139999993 3.872 210.10462220000133 11.822 184.90111850000156 11.185 186.8798048000015 8.113 201.63280240000157 9.511 231.10260369999952 6.654 244.43078339999977 7.032 259.4647065000006 11.397 188.67542520000157 9.798 214.22096539999984 5.92 178.63324409999888 8.42 199.1186512000015 10.2 200.9216777999988 9.267 211.80201919999877 9.695 205.56118369999865 9.38 171.7725697 12.658 169.82156869999875 7.805 196.0386573999985 10.249 209.70136000000144 10.271 248.1539992999997 11.831 213.09046859999867 9.726)
Error minima by case: (37.8653 2 1.2596 2 3.1268 1 3.6417 1 0.0 0 0.9888 1 0.2708 8 0.0393 2 1.8559 2 0.4913 1 2.2206 1 0.0829 8 3.9901 2 0.014 1 1.7576 2 12.262 2 0.3556 2 1.9543 2 0.1975 2 0.018 5 0.0077 1 1.0164 1 0.1925 2 2.3722 7 0.2596 2)
Average genome size in population (length): 176.939
Average program size in population (points): 177.939
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 145.5394712653946
Average age in population: 139.5574796357966
Median age in population: 143.6312350166092
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.536
Error (vector) diversity:			 0.538
Behavioral diversity:				 0.547
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 368208565
--- Timings ---
Current time: 1529615429400 milliseconds
Total Time:         629.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.2 seconds, 23.7%
Fitness Testing:    374.3 seconds, 59.5%
Report:             106.0 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 43164.81220000001
Test mean error for best: 21.58241
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -39.1661781518
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction in1} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mult} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_dup_items in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush integer_div tagged_950 float_mod in1 float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mult float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat integer_dup_items float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush integer_add float_yankdup float_div integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_dup_times integer_pop integer_stackdepth integer_mult float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 4.3753 11 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 635.1217999999999
Mean: 12.702436
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5447.1167787
Median total errors in population: 1356.6856000000002
Error averages by case: (265.14561500000025 6.563 178.49826949999863 8.868 210.35787060000104 10.655 235.9691293999997 6.648 175.32867499999992 3.925 224.26231000000135 11.892 183.40101840000128 11.247 187.5491808000015 8.18 206.5264406000016 9.544 220.98827509999938 6.504 233.9069401999997 6.958 239.73672030000023 11.387 190.8780574000015 9.907 211.5492013 5.686 179.989299199999 8.499 201.2116029000016 10.321 200.71281979999884 9.378 225.76067539999872 9.771 219.50594999999862 9.491 174.50485770000003 12.673 170.29230239999887 7.897 201.9147309999984 10.266 216.93475050000166 10.36 236.13347549999963 11.899 227.60661069999875 9.933)
Error minima by case: (33.8653 2 2.2298 2 2.0393 1 1.0393 1 0.0 0 0.9607 8 0.8593 1 0.0393 2 3.4773 2 2.511 1 12.9607 1 0.0829 2 1.9901 2 0.014 2 8.6865 2 10.262 2 0.3556 2 4.7702 2 1.9607 2 0.0413 1 2.8341 2 2.2298 1 0.7656 2 0.9711 2 1.2298 2)
Average genome size in population (length): 177.374
Average program size in population (points): 178.374
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 147.0450373433654
Average age in population: 141.3808184865537
Median age in population: 144.8616446080759
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.516
Error (vector) diversity:			 0.521
Behavioral diversity:				 0.529
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 372794665
--- Timings ---
Current time: 1529615436344 milliseconds
Total Time:         636.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.6 seconds, 23.7%
Fitness Testing:    378.6 seconds, 59.5%
Report:             107.2 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 43759.97120000003
Test mean error for best: 21.87999
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction integer_max} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_max} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction in1} {:instruction float_rot} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -71} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_mult} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items integer_max 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_flush integer_max float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_div float_add integer_fromfloat integer_add in2 in1 float_rot integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -71 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_mult in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dup_items integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 629.8293999999999
Mean: 12.596588
Genome size: 178
Size: 179
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5356.045033300001
Median total errors in population: 1356.6856000000002
Error averages by case: (270.4652368000002 6.517 173.7616851999985 8.756 199.98391710000132 10.561 235.84058289999967 6.401 169.72748399999986 3.648 215.99291030000145 11.789 190.46424870000146 11.148 177.65884510000154 7.962 200.02903890000164 9.448 222.64462249999934 6.264 233.16796579999968 6.747 245.56007650000035 11.339 185.69278810000162 9.8 212.66750109999995 5.825 176.82046829999862 8.398 196.24343570000164 10.271 192.55483479999847 9.215 217.1783698999987 9.679 210.92293469999862 9.337 177.87097530000003 12.632 164.9698256999987 7.723 193.23005999999836 10.181 207.51873780000176 10.227 240.42877359999952 11.817 219.2497144999987 9.715)
Error minima by case: (37.8653 2 2.2298 2 5.2446 1 3.0393 1 0.0 0 0.733 1 1.8631 7 0.0393 2 4.281 2 0.511 1 10.9573 1 0.0829 2 3.9901 2 0.014 2 13.2298 2 12.262 2 0.3556 2 4.7702 2 2.1232 2 2.0143 2 1.8341 2 1.2596 1 0.1925 2 0.9711 8 0.0406 2)
Average genome size in population (length): 176.873
Average program size in population (points): 177.873
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 148.1926573456288
Average age in population: 142.3185145091757
Median age in population: 146.1530321091828
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.499
Error (vector) diversity:			 0.501
Behavioral diversity:				 0.508
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 377369590
--- Timings ---
Current time: 1529615443246 milliseconds
Total Time:         643.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.0 seconds, 23.6%
Fitness Testing:    382.9 seconds, 59.5%
Report:             108.4 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 43759.97120000003
Test mean error for best: 21.87999
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction integer_max} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_max} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction in1} {:instruction float_rot} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -71} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_mult} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items integer_max 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_flush integer_max float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_div float_add integer_fromfloat integer_add in2 in1 float_rot integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -71 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_mult in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dup_items integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 629.8293999999999
Mean: 12.596588
Genome size: 178
Size: 179
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5703.016663
Median total errors in population: 1356.6856000000002
Error averages by case: (272.88491550000026 6.509 188.24240829999863 8.883 208.8981368000012 10.658 261.3363005999998 6.578 171.71688870000006 3.713 224.4424680000012 11.865 199.77642190000103 11.22 200.0113534000015 8.199 216.31016190000153 9.61 243.10165859999958 6.359 259.08197209999986 6.893 267.96353320000054 11.459 199.35277920000132 9.877 217.9449520999998 5.848 188.7525813999991 8.506 210.70402360000153 10.26 212.9394619999989 9.372 224.73556349999893 9.691 218.72648139999885 9.402 187.16871959999997 12.665 179.10347239999905 7.874 210.94418389999845 10.34 223.84404500000142 10.376 261.31257119999964 11.818 225.93860869999887 9.808)
Error minima by case: (54.3732 2 1.2596 3 5.2446 8 3.0393 1 0.0 0 0.9888 8 0.2708 7 0.0393 2 7.281 2 0.3648 1 3.7576 1 0.0829 8 3.9901 2 0.014 1 9.0633 2 12.262 2 0.3556 2 1.9543 2 1.3352 2 0.5201 2 3.9607 2 1.2596 1 0.2047 8 4.3074 2 0.2596 2)
Average genome size in population (length): 178.486
Average program size in population (points): 179.486
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 149.2258498139206
Average age in population: 144.1542651638458
Median age in population: 147.3559997991987
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.501
Error (vector) diversity:			 0.502
Behavioral diversity:				 0.512
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 381988515
--- Timings ---
Current time: 1529615450179 milliseconds
Total Time:         650.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.5 seconds, 23.6%
Fitness Testing:    387.2 seconds, 59.5%
Report:             109.6 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 43759.97120000003
Test mean error for best: 21.87999
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction integer_max} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_max} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction in1} {:instruction float_rot} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -71} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_mult} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items integer_max 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_flush integer_max float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_div float_add integer_fromfloat integer_add in2 in1 float_rot integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -71 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_mult in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dup_items integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 629.8293999999999
Mean: 12.596588
Genome size: 178
Size: 179
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5436.311097000001
Median total errors in population: 1283.8532
Error averages by case: (268.05432680000035 6.461 184.3013208999986 8.837 201.84272060000134 10.61 235.8998422999997 6.485 167.5040338 3.617 217.42313570000147 11.829 188.138966900001 11.222 187.32260330000145 8.058 201.74546840000156 9.484 220.6338444999994 6.326 232.4088192999998 6.801 238.3846696000009 11.336 195.93364270000154 9.87 218.8046977999999 5.678 187.12479139999857 8.484 205.95824700000153 10.285 201.21774949999855 9.279 218.3578256999987 9.696 212.34921649999865 9.331 181.13638269999987 12.612 174.3955706999987 7.836 200.1076805999984 10.198 214.76818740000152 10.294 236.1541385999997 11.745 220.1942142999988 9.775)
Error minima by case: (56.0 2 1.2596 2 1.9851 2 1.0393 1 0.0 0 0.9888 2 0.2708 7 0.0393 2 1.8559 2 0.2642 1 6.0388 1 0.0705 2 1.4672 2 0.014 1 3.5847 2 9.7391 2 0.3556 2 0.8885 2 2.9607 2 0.018 5 2.3112 1 1.2596 1 7.9607 2 3.0 1 0.2596 2)
Average genome size in population (length): 177.139
Average program size in population (points): 178.139
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 150.5523338210327
Average age in population: 143.8643936329384
Median age in population: 148.6343250686179
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.5
Error (vector) diversity:			 0.502
Behavioral diversity:				 0.514
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 386571590
--- Timings ---
Current time: 1529615457267 milliseconds
Total Time:         657.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.9 seconds, 23.6%
Fitness Testing:    391.6 seconds, 59.6%
Report:             110.8 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 45635.2513
Test mean error for best: 22.81763
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction integer_max} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_max} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction in1} {:instruction float_rot} {:instruction integer_add} {:instruction in1} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -71} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_mult} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup integer_dup_items integer_max 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_flush integer_max float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_div float_add integer_fromfloat integer_add in2 in1 float_rot integer_add in1 integer_swap integer_mult float_rot float_yank -52 float_add float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -71 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_mult in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dup_items integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 629.8293999999999
Mean: 12.596588
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5682.050512300001
Median total errors in population: 1356.6856000000002
Error averages by case: (287.0370063000005 7.032 196.69999589999847 8.942 207.9121255000012 10.633 251.9452818999996 6.381 186.1137183000001 3.819 215.38531170000138 11.821 207.33611080000128 11.265 197.72402350000152 8.105 215.45079120000162 9.585 235.35842549999953 6.245 248.67561809999987 6.766 251.50675100000072 11.448 209.10232700000165 9.935 210.22578779999986 5.962 198.84208279999888 8.549 219.15328510000177 10.334 210.4802613999988 9.331 214.3222224999987 9.877 208.29365589999864 9.567 198.20038779999993 12.598 188.3481274999988 7.912 206.9207270999984 10.296 222.43560730000155 10.347 249.5055883999996 11.787 216.74129199999874 9.797)
Error minima by case: (56.0 2 1.2633 2 2.0393 1 1.0393 1 0.0 0 0.9888 1 0.2708 8 0.0393 2 8.281 2 0.2642 1 1.6132 2 0.0829 2 3.9901 2 0.014 1 2.776 2 12.262 2 0.3556 2 3.1063 2 1.9607 2 0.018 5 4.8341 2 0.2298 1 0.2047 2 4.1978 7 0.7702 2)
Average genome size in population (length): 177.937
Average program size in population (points): 178.937
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 152.0089661516214
Average age in population: 145.8992431446803
Median age in population: 149.9667037993217
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.524
Error (vector) diversity:			 0.525
Behavioral diversity:				 0.531
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 391169990
--- Timings ---
Current time: 1529615464375 milliseconds
Total Time:         664.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.3 seconds, 23.5%
Fitness Testing:    395.9 seconds, 59.6%
Report:             112.1 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 45635.2513
Test mean error for best: 22.81763
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.6920982128
Correct output: 14.755435921   | Program output: 2.7161408815  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -53.9215547444
Correct output: 78.5646212622  | Program output: 77.5253262228 
Correct output: 66.7190026342  | Program output: 46.6797075947 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -43.4585251597
Correct output: 156.0099057627 | Program output: 130.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0239674026
Correct output: 171.737997407  | Program output: 134.6987023675
Correct output: 44.3556039838  | Program output: 77.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: 0.7228008469  
Correct output: 93.1658910647  | Program output: 99.1265960252 
Correct output: 12.6449981755  | Program output: 32.605703136  
Correct output: 37.0251741292  | Program output: 4.9858790897  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction in1} {:instruction integer_max} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_max} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction in1} {:instruction float_rot} {:instruction integer_add} {:instruction in1} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -71} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_mult} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (36.25961346587397 in1 integer_max 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_flush integer_max float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_div float_add integer_fromfloat integer_add in2 in1 float_rot integer_add in1 integer_swap integer_mult float_rot float_yank -52 float_add float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -71 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_mult in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dup_items integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [58.0 3 19.9607 8 12.0393 10 20.0 1 0.0 0 15.0393 12 3.7858 10 1.0393 7 20.0393 8 8.0 1 22.0 2 0.0829 10 25.0393 10 3.0 2 30.9607 8 37.0393 11 32.9607 9 12.9607 9 2.9607 8 18.0 12 5.9607 7 19.9607 9 32.0393 9 24.0 11 18.9607 9]
Total: 629.8293999999999
Mean: 12.596588
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5803.375290999999
Median total errors in population: 1356.6856000000002
Error averages by case: (284.77809040000034 7.063 204.50349209999837 9.091 204.79989870000114 10.737 254.1033608999998 6.392 200.17205640000003 3.975 215.9403811000013 11.942 224.94042570000138 11.266 199.0220024000016 8.151 211.10521330000174 9.709 241.13959859999963 6.259 251.19249389999976 6.74 263.46306220000105 11.553 216.6500964000017 10.101 220.0659163999999 6.17 207.50693749999874 8.681 226.2257523000017 10.477 211.82519479999877 9.365 214.93680619999867 9.863 208.84835839999857 9.52 215.52191649999995 12.684 195.18498489999868 8.026 205.1031955999984 10.403 219.39262570000164 10.495 259.15674609999974 11.832 217.60368449999882 9.698)
Error minima by case: (7.8653 2 1.2596 3 9.3232 1 2.7469 1 0.0 0 0.0112 1 0.2708 7 0.0393 2 3.4773 8 1.489 1 7.7794 1 0.0829 2 2.9901 2 0.014 1 12.2596 2 11.262 2 0.3556 2 3.5757 2 1.9607 2 0.3814 8 3.8341 2 1.2596 1 0.7107 2 1.1239 7 0.2596 2)
Average genome size in population (length): 177.594
Average program size in population (points): 178.594
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 153.3009809123616
Average age in population: 145.7082580587912
Median age in population: 151.2375313964736
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.51
Error (vector) diversity:			 0.512
Behavioral diversity:				 0.516
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 395756740
--- Timings ---
Current time: 1529615471383 milliseconds
Total Time:         671.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       157.7 seconds, 23.5%
Fitness Testing:    400.3 seconds, 59.6%
Report:             113.4 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 43296.414399999994
Test mean error for best: 21.64821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -40.1661781518
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_dup_times} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction in1} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mult} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_shove} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_dup_times 54.9607049605322 in1 float_add tag_float_623 float_max float_add tag_float_737 float_mod float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup in1 float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mult float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat float_div integer_dup_times integer_max integer_shove float_flush float_inc float_shove float_mod float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 3.3753 10 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 628.1217999999998
Mean: 12.562436
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5875.9230806000005
Median total errors in population: 1334.2723
Error averages by case: (293.0844678000005 7.437 206.55161939999869 8.907 211.90963030000097 10.673 254.76810959999983 6.53 194.4805930999999 4.093 222.70319330000123 11.811 235.27598490000102 11.209 203.20996260000123 8.091 216.79163650000135 9.698 241.9301266999996 6.312 251.69398339999972 6.838 256.8188863000011 11.517 219.57667930000144 9.81 217.07612390000008 6.36 208.43576339999888 8.49 229.7432337000015 10.148 213.3731821999989 9.202 220.19376689999874 9.754 215.15424349999859 9.455 224.27122109999965 12.512 197.27104749999887 7.882 209.9742214999986 10.351 224.38179230000136 10.496 255.97220209999983 11.75 222.3914092999988 9.564)
Error minima by case: (3.8931 2 1.2596 2 0.2446 1 3.0393 1 0.0 0 0.9888 1 0.0593 7 0.0237 2 0.7543 2 0.6352 1 1.7404 1 0.0829 2 2.9901 2 0.014 1 6.5224 2 11.262 2 0.3556 2 4.7702 2 0.1069 2 0.018 2 3.1069 2 1.2596 1 0.7656 2 0.9711 2 0.2596 2)
Average genome size in population (length): 177.543
Average program size in population (points): 178.543
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 154.9377323282459
Average age in population: 146.0115937906978
Median age in population: 152.550801184788
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.558
Error (vector) diversity:			 0.559
Behavioral diversity:				 0.563
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 400346715
--- Timings ---
Current time: 1529615478564 milliseconds
Total Time:         678.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.1 seconds, 23.4%
Fitness Testing:    404.9 seconds, 59.7%
Report:             114.6 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 43296.414399999994
Test mean error for best: 21.64821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -40.1661781518
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_dup_times} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction in1} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mult} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_shove} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_dup_times 54.9607049605322 in1 float_add tag_float_623 float_max float_add tag_float_737 float_mod float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup in1 float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mult float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_add float_dup_times integer_fromfloat float_div integer_dup_times integer_max integer_shove float_flush float_inc float_shove float_mod float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 3.3753 10 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 628.1217999999998
Mean: 12.562436
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6138.0207996
Median total errors in population: 1377.5954000000002
Error averages by case: (308.3026384000006 7.614 216.52201949999875 9.179 217.62338960000096 10.738 268.8472442 6.691 215.32922110000004 4.154 231.17080460000096 11.868 245.21725580000165 11.246 206.61407080000123 8.228 222.09730890000134 9.72 255.75155869999992 6.405 264.99501589999994 6.99 273.04044630000124 11.637 225.69215390000127 10.075 226.92130729999997 6.586 218.110559699999 8.729 236.7417692000015 10.488 220.64371809999912 9.412 232.88635029999892 10.048 226.32257579999884 9.698 235.6901353999998 12.585 204.15866729999883 8.07 217.93498529999857 10.376 229.24123150000128 10.455 270.1614589999998 11.837 235.29991299999907 9.876)
Error minima by case: (56.0 2 1.2596 2 2.0393 1 1.0393 1 0.0 0 0.9888 1 0.3212 1 0.0393 2 3.0 1 1.3648 1 12.0 2 0.0829 2 2.9901 2 0.014 1 12.2596 2 11.262 1 0.3556 1 1.9543 1 1.9607 1 0.018 2 3.8341 1 1.2596 1 0.1925 2 1.7534 2 0.2596 2)
Average genome size in population (length): 178.551
Average program size in population (points): 179.551
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 156.1079449286629
Average age in population: 149.0730685792492
Median age in population: 153.8399076832879
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.568
Error (vector) diversity:			 0.57
Behavioral diversity:				 0.573
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 404965340
--- Timings ---
Current time: 1529615485600 milliseconds
Total Time:         685.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.5 seconds, 23.4%
Fitness Testing:    409.3 seconds, 59.7%
Report:             115.8 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 43296.414399999994
Test mean error for best: 21.64821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -40.1661781518
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_dup_times} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction in1} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mult} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_shove} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_dup_times 54.9607049605322 in1 float_add tag_float_623 float_max float_add tag_float_737 float_mod float_add tag_float_737 float_max integer_yankdup float_div float_div float_yankdup integer_div tagged_950 integer_yankdup in1 float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mult float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_add float_dup_times integer_fromfloat float_div integer_dup_times integer_max integer_shove float_flush float_inc float_shove float_mod float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 integer_div float_mod float_yankdup integer_dup_items integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 3.3753 10 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 628.1217999999998
Mean: 12.562436
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6110.1108355999995
Median total errors in population: 1395.8400000000004
Error averages by case: (311.48483370000065 7.736 214.8762319999982 8.98 219.09245930000117 10.813 262.95144210000007 6.816 201.19435459999997 4.081 228.59990450000151 11.933 238.93655850000158 11.356 212.7576337000018 8.174 228.5468212000019 9.813 251.3321174999999 6.578 260.4364917999999 7.199 266.26959110000183 11.694 227.35763950000174 9.954 230.78490670000005 6.446 217.3148995999986 8.609 237.14483320000187 10.332 225.23245119999868 9.335 230.55521589999856 10.105 223.84038739999835 9.787 230.48470939999982 12.541 206.29367089999843 7.978 222.08980029999813 10.482 232.9238115000018 10.547 264.51711689999996 11.838 232.04095309999872 9.925)
Error minima by case: (57.0 3 1.2596 2 5.9014 8 1.0393 1 0.0 0 0.3 7 0.3212 1 0.0393 2 0.7543 2 0.4841 1 6.7404 2 0.0829 8 3.9901 2 0.014 1 12.2596 2 8.0 2 0.3556 2 4.7702 2 0.0792 2 0.018 2 3.9607 1 1.2596 1 2.0393 8 13.9901 2 0.2596 2)
Average genome size in population (length): 177.949
Average program size in population (points): 178.949
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 157.1748794702076
Average age in population: 149.7776246530888
Median age in population: 155.1657982708734
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.557
Error (vector) diversity:			 0.561
Behavioral diversity:				 0.566
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 409568090
--- Timings ---
Current time: 1529615492582 milliseconds
Total Time:         692.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.0 seconds, 23.4%
Fitness Testing:    413.7 seconds, 59.7%
Report:             117.0 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 44907.39929999999
Test mean error for best: 22.45370
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -44.4585251597
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.25961346587397} {:instruction integer_mult} {:instruction integer_max} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_max} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction -52} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction in1} {:instruction float_rot} {:instruction integer_add} {:instruction in1} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -71} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_mult} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (36.25961346587397 integer_mult integer_max 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_stackdepth tagged_950 float_mod float_sub integer_fromfloat in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup float_flush integer_max float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times float_dup_items -52 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dec integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_div float_add integer_fromfloat integer_add in2 in1 float_rot integer_add in1 integer_swap integer_mult float_rot float_yank -52 float_add float_rot float_yank -39 integer_rot float_dup_times integer_dup_items -52 integer_swap integer_fromfloat float_mod in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_mult float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_pop float_sub float_shove float_mod -71 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec integer_mult in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod float_dec float_dup_items integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 0.9171 11 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 626.6635999999999
Mean: 12.533272
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5986.345055300001
Median total errors in population: 1377.5022000000001
Error averages by case: (327.90964360000044 7.774 210.83827999999843 9.051 212.37220560000122 10.715 251.79040749999982 6.755 212.98602749999995 4.401 226.1830672000012 11.948 239.2204179000012 11.269 203.8839572000014 8.153 221.1673674000017 9.735 239.5552537999999 6.562 247.76807369999997 7.234 254.82885850000156 11.638 223.0294580000016 10.021 216.3571298000001 6.538 214.73072879999876 8.603 232.9011866000017 10.43 216.83324109999867 9.383 226.0881365999988 10.076 220.32135629999854 9.71 230.07092629999963 12.395 200.33034289999856 7.975 216.5173862999983 10.381 227.41617620000162 10.444 253.51965419999996 11.69 226.99377229999902 9.851)
Error minima by case: (56.0 2 0.2596 2 0.2446 1 1.0393 1 0.0 0 0.0112 1 0.3212 1 0.0393 2 1.9572 2 0.6352 1 6.7404 2 0.0829 2 1.9901 2 0.014 1 11.2596 2 10.262 2 0.3556 2 1.0457 2 1.9202 2 0.018 2 1.3799 1 0.2596 1 2.7656 2 10.3261 2 0.2596 2)
Average genome size in population (length): 179.214
Average program size in population (points): 180.214
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 158.620861699583
Average age in population: 151.926352404513
Median age in population: 156.5522525347114
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.557
Error (vector) diversity:			 0.564
Behavioral diversity:				 0.567
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 414205215
--- Timings ---
Current time: 1529615499657 milliseconds
Total Time:         699.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.4 seconds, 23.4%
Fitness Testing:    418.0 seconds, 59.7%
Report:             118.2 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 43296.414399999994
Test mean error for best: 21.64821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -40.1661781518
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_dup} {:instruction float_add} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_dup_times} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction in1} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mult} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_shove} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (integer_flush float_dup float_add in1 float_add tag_float_737 integer_dup_times 54.9607049605322 in1 float_add tag_float_623 float_max float_add tag_float_737 float_mod float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup in1 float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mult float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_add float_dup_times integer_fromfloat float_div integer_dup_times integer_max integer_shove float_flush float_inc float_shove float_mod float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 3.3753 10 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 628.1217999999998
Mean: 12.562436
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5829.5491896
Median total errors in population: 1253.1509
Error averages by case: (309.0042672000006 7.618 201.89499819999847 8.869 202.0478314000013 10.672 258.1092239000001 6.64 204.90301750000006 4.136 215.04450610000129 11.965 242.73422380000179 11.125 192.42126650000162 7.913 210.06089620000176 9.62 245.3055728999997 6.421 257.1154967999997 7.187 260.80301620000176 11.59 212.15640480000164 9.853 208.17821419999987 6.527 205.27133189999856 8.383 222.96848300000175 10.304 205.96808719999865 9.182 216.38401929999867 10.05 209.10704769999847 9.639 233.6880266999997 12.191 189.81591789999854 7.741 202.5916035999982 10.306 215.06686600000174 10.305 260.3739775 11.57 218.98289309999882 9.745)
Error minima by case: (56.0 2 0.2596 2 0.2446 1 1.3619 1 0.0 0 0.8614 8 0.3212 1 0.0393 2 5.281 2 0.2642 1 7.7794 1 0.074 4 24.0393 2 0.5724 1 11.2596 2 18.9214 2 7.1258 2 4.6947 1 1.9607 1 0.018 2 4.9607 1 0.2596 1 0.2047 2 4.6358 2 0.2596 2)
Average genome size in population (length): 180.226
Average program size in population (points): 181.226
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 159.9893702984493
Average age in population: 154.9849285317044
Median age in population: 157.8575892124661
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.574
Error (vector) diversity:			 0.583
Behavioral diversity:				 0.586
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 418870940
--- Timings ---
Current time: 1529615506762 milliseconds
Total Time:         706.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       164.8 seconds, 23.3%
Fitness Testing:    422.5 seconds, 59.8%
Report:             119.5 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 43296.414399999994
Test mean error for best: 21.64821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -40.1661781518
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_flush} {:instruction integer_shove} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction -76.38982785840062} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction tag_float_737} {:instruction integer_min} {:instruction integer_min} {:instruction 54.9607049605322} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction in2} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_dup_items} {:instruction float_mod} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_flush integer_shove integer_dec integer_yankdup integer_dec float_add tag_float_737 integer_min integer_min integer_fromfloat -76.38982785840062 integer_min integer_min integer_min integer_min tag_float_737 integer_min integer_min 54.9607049605322 integer_flush integer_dup_items in2 54.9607049605322 in1 float_add tag_float_737 float_dup_times integer_dup_items -52 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_div float_flush float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 integer_dup_items float_mod float_dup float_dup_times integer_yankdup float_dup integer_pop float_sub integer_rot integer_dup_times integer_max tagged_729 float_flush float_inc float_shove float_mod float_max float_yankdup integer_swap integer_fromfloat integer_yankdup float_dup_times float_mult integer_yankdup integer_rot integer_pop integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 3.3753 10 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 628.1217999999998
Mean: 12.562436
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5624.344402799998
Median total errors in population: 1244.49735
Error averages by case: (301.7365881000006 7.653 184.89027869999856 8.861 192.56554800000117 10.613 257.50378229999995 6.45 180.58172809999994 3.984 208.78747380000146 11.903 236.62891250000143 11.171 184.41945620000152 7.944 204.33620700000174 9.626 243.8405004999999 6.257 253.9936077999999 7.056 260.3974209000017 11.574 197.9792538000016 9.815 209.30331000000004 6.288 187.78833779999843 8.33 208.1055584000016 10.265 197.95849439999856 9.212 207.7254878999985 9.946 202.09838079999847 9.586 225.2134241999997 12.169 175.34425639999867 7.693 196.8019474999983 10.331 209.91592800000177 10.238 258.38537090000005 11.57 209.84314879999866 9.665)
Error minima by case: (7.8653 3 1.2596 2 2.0393 8 1.0 1 0.0 0 0.9888 8 0.3212 1 0.0393 2 7.9393 2 0.3648 1 1.0 2 0.0829 8 3.9901 2 0.5724 1 12.2596 2 12.262 2 0.3556 2 1.9543 2 0.9607 2 0.018 2 2.8341 1 1.2596 1 0.2047 7 4.6358 2 0.2596 2)
Average genome size in population (length): 178.784
Average program size in population (points): 179.784
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 160.9940757090405
Average age in population: 156.1713160791531
Median age in population: 159.2586506629511
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.573
Error (vector) diversity:			 0.578
Behavioral diversity:				 0.579
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 423502915
--- Timings ---
Current time: 1529615513997 milliseconds
Total Time:         713.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.3 seconds, 23.3%
Fitness Testing:    426.9 seconds, 59.8%
Report:             120.7 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 43300.13459999999
Test mean error for best: 21.65007
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -53.6836351268
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -40.1661781518
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup} {:instruction float_add} {:instruction tag_integer_838} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_dup_items} {:instruction float_mod} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_div} {:instruction float_dec} {:instruction integer_max} {:instruction tagged_729} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_cos} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (integer_flush in1 integer_dec integer_dup_items in1 float_add tag_float_737 integer_dup_items in1 float_add tag_float_737 integer_flush 54.9607049605322 in1 float_add tag_float_623 float_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mod float_dup float_add tag_integer_838 integer_fromfloat float_swap float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_stackdepth integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 integer_dup_items float_mod float_dup float_dup_times integer_pop float_dup integer_pop float_sub float_div float_dec integer_max tagged_729 integer_fromfloat float_inc float_shove float_mod integer_rot float_yankdup float_dec integer_fromfloat integer_yankdup float_dup_times float_dec integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_cos integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 3.5479 10 2.0393 7 21.0393 9 9.0 1 23.0 11 3.3753 10 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 626.8838999999998
Mean: 12.537678
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4940.745056499999
Median total errors in population: 1188.3793999999998
Error averages by case: (283.7307522000005 7.36 161.20065339999888 8.797 156.80678410000078 10.517 230.4747128999999 6.486 162.5247168999999 4.054 175.97742980000115 11.921 221.37385560000152 11.06 154.19079510000094 7.678 172.29362340000128 9.5 219.64552019999996 6.218 226.17716140000007 7.216 238.2237444000019 11.422 174.44997660000138 9.7 162.44803140000005 5.805 164.00385829999885 8.178 186.29079370000153 10.216 167.38598539999893 9.023 175.31448689999885 9.805 168.93834869999876 9.408 209.8851461999995 11.836 153.11094859999918 7.545 164.70206769999882 10.193 173.6426640000013 10.146 235.33826210000024 11.287 177.82673749999893 9.417)
Error minima by case: (57.0 3 1.2596 2 7.378 8 1.7469 1 0.0 0 0.8038 1 0.2426 1 0.0393 2 8.281 2 0.3648 1 4.5325 2 0.0829 7 3.9901 2 1.0 1 3.6622 2 12.262 2 0.3556 2 4.7702 2 1.4915 2 0.0103 2 1.7816 1 1.2596 1 0.2047 8 4.6358 2 0.2596 2)
Average genome size in population (length): 178.647
Average program size in population (points): 179.647
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 162.4886451332578
Average age in population: 157.4631433618032
Median age in population: 160.5239409592555
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.583
Error (vector) diversity:			 0.593
Behavioral diversity:				 0.597
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 428127990
--- Timings ---
Current time: 1529615521178 milliseconds
Total Time:         721.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.7 seconds, 23.3%
Fitness Testing:    431.3 seconds, 59.8%
Report:             122.1 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 43300.13459999999
Test mean error for best: 21.65007
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -53.6836351268
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -40.1661781518
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_dup_items} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup} {:instruction float_add} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_yank} {:instruction float_mod} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_div} {:instruction float_dec} {:instruction integer_max} {:instruction tagged_729} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_shove} {:instruction integer_mult} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_cos} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (integer_flush in1 integer_dec integer_dup_items in1 float_add tag_float_737 integer_dup_items in1 float_add tag_float_737 integer_flush 54.9607049605322 in1 float_add tag_float_623 float_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mod float_dup float_add integer_yank integer_fromfloat float_swap float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_stackdepth integer_mult float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_yank float_mod float_dup float_dup_times integer_pop float_dup integer_pop float_sub float_div float_dec integer_max tagged_729 integer_fromfloat float_inc float_shove integer_mult integer_rot float_yankdup float_dec integer_fromfloat integer_yankdup float_dup_times float_dec integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_cos integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 3.5479 10 2.0393 7 21.0393 9 9.0 1 23.0 11 3.3753 10 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 626.8838999999998
Mean: 12.537678
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5032.7685944999985
Median total errors in population: 1208.8713
Error averages by case: (281.29777870000055 7.599 175.41408339999867 9.05 171.63314470000105 10.465 219.40854589999992 6.316 167.82559429999998 4.238 181.7775096000009 11.894 214.03819850000113 10.993 164.48392690000122 7.939 178.9284884000013 9.652 205.4682784999998 6.072 217.2794987999998 7.297 223.05055590000157 11.333 187.34944050000124 9.894 176.66575279999986 6.182 177.64708009999904 8.314 196.55408710000137 10.343 177.3085196999991 9.182 180.607673399999 9.819 174.70595869999883 9.442 204.98126399999978 11.54 166.25003789999883 7.81 173.38647839999868 10.318 185.9540123000013 10.133 221.54169480000016 11.037 182.92699119999907 9.422)
Error minima by case: (3.1019 3 2.2298 2 2.0104 1 1.1019 1 0.0 0 0.9888 1 0.0593 1 0.0393 2 6.281 2 0.6352 1 0.2709 2 0.0829 8 0.097 2 0.014 1 9.6882 2 10.262 2 0.3556 2 3.0521 2 0.9607 2 0.018 1 1.5856 1 1.2596 1 0.1925 2 0.1462 2 0.2596 2)
Average genome size in population (length): 178.043
Average program size in population (points): 179.043
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 163.7234769665415
Average age in population: 158.2535373055547
Median age in population: 161.8260918821275
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.608
Error (vector) diversity:			 0.618
Behavioral diversity:				 0.62
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 432732340
--- Timings ---
Current time: 1529615528299 milliseconds
Total Time:         728.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.1 seconds, 23.2%
Fitness Testing:    435.8 seconds, 59.8%
Report:             123.4 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 43515.1442
Test mean error for best: 21.75757
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3071375881
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_652} {:instruction integer_flush} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_mod} {:instruction float_max} {:instruction float_sub} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_swap} {:instruction float_yankdup} {:instruction integer_mult} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_610} {:instruction float_flush} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_mod} {:instruction float_flush} {:instruction float_rot} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_847} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.036398746348404} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_652 integer_flush 54.9607049605322 in1 float_add tag_float_623 float_max float_add tag_float_737 float_mod float_sub float_yankdup float_swap integer_max float_yankdup integer_yankdup float_div float_div float_mod float_max float_sub print_float integer_fromfloat integer_swap float_yankdup integer_mult in2 integer_inc integer_rot integer_mult in2 integer_dup_items integer_fromfloat in2 integer_max tagged_610 float_flush integer_add float_yankdup float_div integer_dup_times integer_max integer_mod float_flush float_rot float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 integer_div float_mod float_yankdup integer_dup_items integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_847 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.036398746348404 in2 integer_dup_items float_dup float_rot float_yank float_min integer_yankdup integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 1.2343 9 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 624.9807999999998
Mean: 12.499616
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4925.040396999998
Median total errors in population: 1084.7379
Error averages by case: (274.66073230000063 7.455 166.56508109999874 8.91 169.2762037000012 10.275 214.04580779999995 6.083 168.3640824999999 4.092 185.29861340000133 11.972 202.97463630000058 10.857 159.34662130000132 7.757 176.22065290000148 9.519 200.9627123 5.751 210.1143123999999 7.578 216.8369691000014 11.288 180.51603460000132 9.737 171.4480147 5.832 169.94101499999877 7.981 190.0392926000013 10.197 171.66784309999886 9.052 184.13188489999877 9.764 177.78901919999868 9.311 195.18706869999966 10.829 156.28474809999884 7.562 172.25433429999862 10.233 185.5303095000015 9.89 216.86758670000023 10.415 186.93382049999892 9.443)
Error minima by case: (57.0 2 2.2298 2 5.9154 1 0.4636 1 0.0 0 0.9888 1 0.3212 1 0.0393 2 4.281 2 0.3211 1 13.9393 2 0.1176 2 2.9901 2 0.5724 1 11.0393 2 11.262 2 0.3556 2 10.9607 1 0.9607 1 0.018 2 2.5364 1 0.2596 1 0.2047 2 7.0387 2 16.9607 2)
Average genome size in population (length): 178.46
Average program size in population (points): 179.46
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 164.9535379087006
Average age in population: 159.6971766890432
Median age in population: 163.146695588288
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.574
Error (vector) diversity:			 0.581
Behavioral diversity:				 0.584
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 437342115
--- Timings ---
Current time: 1529615535306 milliseconds
Total Time:         735.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.6 seconds, 23.2%
Fitness Testing:    440.2 seconds, 59.8%
Report:             124.6 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 43190.6254
Test mean error for best: 21.59531
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.2497098495
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_div} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_cos} {:instruction float_mod} {:instruction float_dup} {:instruction float_add} {:instruction tag_integer_838} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction print_float} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_div float_div float_div float_flush integer_div tagged_950 float_mod float_mod float_dup_times float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_cos float_mod float_dup float_add tag_integer_838 integer_fromfloat float_swap float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_stackdepth integer_mult float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod print_float float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 4.2918 9 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 628.0382999999998
Mean: 12.560766
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4927.191092799999
Median total errors in population: 1104.7867
Error averages by case: (287.7002895000006 7.276 168.35628679999857 9.17 165.1961903000011 10.273 208.26356839999997 6.142 168.28034389999996 4.45 189.94661090000156 12.015 199.03682920000088 10.865 156.93465430000126 7.785 177.21634070000138 9.765 196.39248259999988 5.712 206.55951189999985 8.078 212.5003149000018 11.291 182.4624368000016 9.849 170.28879210000014 5.749 171.8922914999987 8.034 192.07480430000166 10.306 170.1509697999988 9.108 189.77268739999843 9.84 183.76692139999835 9.473 190.5501875999995 10.292 158.92976729999873 7.626 169.42961299999854 10.457 183.31450150000157 9.833 213.2795555 9.884 192.1701411999986 9.452)
Error minima by case: (7.8653 2 0.2596 2 3.0393 1 0.2531 1 0.0 0 0.9888 8 1.3212 1 0.9107 1 1.3708 2 0.556 1 2.2206 1 0.1176 2 3.9901 2 0.4379 1 11.2596 2 12.262 2 0.3556 2 5.9543 2 0.2373 2 0.018 1 2.5364 1 0.2596 1 11.0471 2 4.0531 2 0.7404 2)
Average genome size in population (length): 179.318
Average program size in population (points): 180.318
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 166.4652264491355
Average age in population: 161.8064042673375
Median age in population: 164.4607530822675
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.577
Error (vector) diversity:			 0.589
Behavioral diversity:				 0.591
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 441972240
--- Timings ---
Current time: 1529615542332 milliseconds
Total Time:         742.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.0 seconds, 23.2%
Fitness Testing:    444.6 seconds, 59.9%
Report:             125.8 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 43120.34240000001
Test mean error for best: 21.56017
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.2497098495
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_div} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_cos} {:instruction float_mod} {:instruction float_dup} {:instruction float_add} {:instruction tag_integer_838} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction print_float} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_div float_div float_div float_flush integer_div tagged_950 float_mod float_mod float_dup_times float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_cos float_mod float_dup float_add tag_integer_838 integer_fromfloat float_swap float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_stackdepth integer_mult float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items print_float float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot integer_dup_items float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 4.2918 9 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 628.0382999999998
Mean: 12.560766
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5260.639286899999
Median total errors in population: 1276.74865
Error averages by case: (288.1004321000006 7.302 181.27426779999846 9.215 179.24072060000125 10.225 231.79643039999993 6.703 179.6026561999999 4.865 191.0527369000014 12.203 224.74493820000114 10.933 173.72613470000152 7.756 185.52210400000175 9.911 218.46303139999975 6.197 230.02894369999967 8.875 234.312110600002 11.237 193.2002165000016 9.824 183.14010660000008 6.128 184.5496291999986 7.917 204.41780240000182 10.256 186.86833899999857 9.095 188.9958768999986 9.919 182.84291829999853 9.515 220.4427549999994 9.919 172.97587949999865 7.615 177.91610669999835 10.586 193.42870770000178 9.833 237.07339680000004 9.6 191.77804569999873 9.516)
Error minima by case: (35.8653 2 0.2596 2 4.0 1 2.0393 1 0.0 0 0.9888 1 0.3212 1 0.0393 2 4.0 1 0.3648 1 11.9701 2 0.1043 2 4.9901 2 0.4276 1 11.2596 2 13.262 2 0.6444 2 1.9543 2 0.9607 2 0.018 1 2.9607 1 0.2596 1 2.2757 2 5.3074 2 0.7404 2)
Average genome size in population (length): 179.147
Average program size in population (points): 180.147
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 167.7314974549387
Average age in population: 162.229480073461
Median age in population: 165.6965546488064
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.574
Error (vector) diversity:			 0.586
Behavioral diversity:				 0.589
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 446596340
--- Timings ---
Current time: 1529615549350 milliseconds
Total Time:         749.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.4 seconds, 23.1%
Fitness Testing:    449.1 seconds, 59.9%
Report:             127.0 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 43190.6254
Test mean error for best: 21.59531
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -13.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.2497098495
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -28.9935916003
Correct output: -28.6497177653 | Program output: -26.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_dup_times} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_668} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction in1} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mult} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction integer_min} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_add} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_max} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_dup_times 54.9607049605322 in1 float_add tag_float_623 float_max float_add tag_float_737 float_mod float_add tag_float_668 float_max integer_yankdup float_div float_div float_yankdup integer_div tagged_950 integer_yankdup in1 float_dup_times float_inc integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mult float_max float_add float_min integer_fromfloat integer_yankdup float_dup integer_pop float_sub float_flush integer_min tagged_950 integer_mult float_mod float_add integer_mult float_stackdepth integer_mult float_max float_dec integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 1.0 1 16.0393 13 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 4.2918 9 26.0393 10 4.0 2 29.9607 7 38.0393 11 31.9607 9 11.9607 9 1.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 17.9607 9]
Total: 628.0382999999998
Mean: 12.560766
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5409.069312199998
Median total errors in population: 1272.8404
Error averages by case: (290.8301527000006 7.514 186.07514659999882 9.306 184.99735120000113 10.142 234.56211389999996 6.902 186.1812386999999 4.905 205.75996080000138 12.216 222.2452840000012 10.869 178.6188104000014 7.901 196.86177730000148 10.045 218.61688829999997 6.342 233.2869636000001 9.407 232.2216312000018 11.194 198.6080404000015 9.8 188.9269769 6.077 189.58080409999874 7.874 208.8919381000016 10.186 191.49382769999895 9.138 205.8166252999986 9.846 199.7350575999985 9.41 215.0755663999998 9.412 178.8159924999988 7.665 188.8638829999985 10.737 201.25449610000157 9.766 237.81442450000006 9.326 208.4013608999987 9.553)
Error minima by case: (52.8653 2 0.2596 2 7.9607 8 1.7469 1 0.0 0 0.0112 8 0.2206 1 0.0393 2 10.5606 2 0.4841 1 2.0265 1 0.1176 2 2.9901 2 0.2918 1 2.3298 2 11.262 2 0.3556 2 6.7404 2 0.9607 2 0.018 1 3.8341 1 0.2596 1 1.7656 8 8.9704 2 0.7404 2)
Average genome size in population (length): 179.171
Average program size in population (points): 180.171
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 169.1548088115244
Average age in population: 162.0626159465408
Median age in population: 166.9090734611567
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.582
Error (vector) diversity:			 0.59
Behavioral diversity:				 0.595
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 451216540
--- Timings ---
Current time: 1529615556383 milliseconds
Total Time:         756.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.8 seconds, 23.1%
Fitness Testing:    453.5 seconds, 59.9%
Report:             128.1 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 43041.638799999986
Test mean error for best: 21.52082
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.6920982128
Correct output: 14.755435921   | Program output: 1.7161408815  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -12.0504839405
Correct output: -50.135719703  | Program output: -54.9215547444
Correct output: 78.5646212622  | Program output: 76.5253262228 
Correct output: 66.7190026342  | Program output: 45.6797075947 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -40.1661781518
Correct output: 156.0099057627 | Program output: 129.9706107232
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 115.0239674026
Correct output: 171.737997407  | Program output: 133.6987023675
Correct output: 44.3556039838  | Program output: 76.3163089443 
Correct output: -40.9542965608 | Program output: -27.9935916003
Correct output: -28.6497177653 | Program output: -25.6890128048
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1265960252 
Correct output: 12.6449981755  | Program output: 31.605703136  
Correct output: 37.0251741292  | Program output: 3.9858790897  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -15.1675514353
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction in1} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_662} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_970} {:instruction float_mod} {:instruction float_dup_items} {:instruction integer_flush} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_mod} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.10687846449335} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_stackdepth})
Best program: (integer_flush in1 integer_dec integer_yankdup float_inc 54.9607049605322 in1 float_add tag_float_737 float_max integer_yankdup float_div float_inc 54.9607049605322 in1 float_add tag_float_662 float_max integer_yankdup float_stackdepth tagged_970 float_mod float_dup_items integer_flush float_sub float_yankdup integer_fromfloat float_yank float_dup integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_stackdepth integer_mult float_mod in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_min integer_swap print_float integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 integer_div float_mod float_yankdup integer_dup_items integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.10687846449335 in2 integer_dup_items float_dup float_rot float_yank float_min integer_yankdup integer_add in1 float_yankdup integer_inc float_rot float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank float_dec float_max integer_dup_times integer_pop integer_stackdepth integer_mult float_dup integer_flush print_float float_stackdepth float_stackdepth float_stackdepth)
Errors: [57.0 3 18.9607 9 13.0393 9 21.0 2 0.0 0 15.0393 12 4.7858 10 2.0393 7 21.0393 9 9.0 1 23.0 11 3.3753 10 26.0393 10 3.0 2 29.9607 7 38.0393 11 31.9607 9 12.9607 9 2.9607 8 17.0 2 4.9607 7 18.9607 10 33.0393 8 23.0 2 18.9607 9]
Total: 626.1217999999998
Mean: 12.522436
Genome size: 171
Size: 172
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4951.368561799998
Median total errors in population: 1191.73085
Error averages by case: (285.71433820000055 7.479 167.33154039999891 9.325 163.28743250000116 10.108 219.4466570999998 6.792 180.4741046000001 4.935 173.35693570000126 12.248 220.5545161000013 10.794 156.2383179000011 7.887 174.4957994000013 10.025 207.63731730000015 6.201 220.09372820000007 9.689 224.2783938000018 11.069 180.24823410000133 9.836 170.53200199999992 5.913 169.61392529999867 7.819 190.79403770000133 10.241 168.65699609999876 9.169 171.3948836999989 9.842 165.33688069999883 9.418 213.0606710999996 9.003 159.48164059999894 7.664 166.73351509999864 10.692 179.30165830000138 9.689 225.20745910000008 8.81 173.9725767999989 9.477)
Error minima by case: (32.0 2 5.81 2 3.0393 2 2.0393 1 0.0 0 0.8264 8 0.3212 1 0.0393 2 2.8156 2 0.3648 1 14.9607 1 0.0361 7 4.9901 2 0.1462 2 0.0633 2 13.262 2 0.6444 2 0.9543 2 0.9607 2 0.018 1 2.9607 1 2.3943 2 6.4501 8 7.0387 2 5.8717 2)
Average genome size in population (length): 179.906
Average program size in population (points): 180.906
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 170.4354077920601
Average age in population: 163.182300920796
Median age in population: 168.1396083489998
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.573
Error (vector) diversity:			 0.579
Behavioral diversity:				 0.584
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 455853790
--- Timings ---
Current time: 1529615563292 milliseconds
Total Time:         763.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.2 seconds, 23.1%
Fitness Testing:    457.8 seconds, 60.0%
Report:             129.4 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 42956.154199999946
Test mean error for best: 21.47808
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup} {:instruction float_add} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -40} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mod float_dup float_add integer_yank float_stackdepth integer_mult float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_flush integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_stackdepth integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat integer_yank integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -40 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_dec float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5116.032500499999
Median total errors in population: 1203.3331
Error averages by case: (296.30702830000064 7.557 179.04987509999899 9.36 173.6834135000009 10.069 212.77077090000012 6.729 183.792486 5.203 191.74987420000102 12.224 212.4761458000012 10.774 168.30072890000113 7.874 187.4716942000013 10.074 197.53559249999984 6.149 210.32043209999986 9.825 216.49391310000118 11.064 193.71139320000134 9.826 179.5890066000001 6.116 181.03695139999888 7.833 204.2095127000015 10.218 179.30729139999906 9.178 192.87360069999926 9.841 186.31186359999896 9.416 200.47720299999963 8.943 168.95017089999897 7.651 176.34271379999873 10.737 189.22655270000138 9.661 215.40631259999995 8.83 193.86297329999923 9.623)
Error minima by case: (56.0 2 7.4718 3 0.7554 2 2.1957 1 0.0 0 0.9861 2 0.2206 1 0.6871 2 7.281 2 0.3648 1 3.6167 2 0.0785 2 3.9901 2 0.2918 2 0.1964 2 12.262 2 0.3556 2 10.9607 2 0.9607 2 0.018 1 3.9607 1 7.496 2 0.4983 3 17.8055 2 16.9607 2)
Average genome size in population (length): 180.102
Average program size in population (points): 181.102
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 171.8574183848777
Average age in population: 164.6536398687042
Median age in population: 169.4131917778475
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.599
Error (vector) diversity:			 0.603
Behavioral diversity:				 0.607
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 460492115
--- Timings ---
Current time: 1529615570323 milliseconds
Total Time:         770.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       177.6 seconds, 23.1%
Fitness Testing:    462.2 seconds, 60.0%
Report:             130.5 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 42956.154199999946
Test mean error for best: 21.47808
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup} {:instruction float_add} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -40} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mod float_dup float_add integer_yank float_stackdepth integer_mult float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_flush integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_stackdepth integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat integer_yank integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -40 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_dec float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4750.950357799997
Median total errors in population: 1260.81085
Error averages by case: (278.99536620000083 7.616 156.551029899999 9.114 157.86603430000088 10.033 211.70650519999998 6.602 162.52202179999986 5.232 175.98205530000126 12.083 206.200676700001 10.673 148.73120710000114 7.669 169.33938700000144 10.041 197.47365719999982 5.99 210.9879432 9.798 212.10546660000114 10.953 171.13085490000142 9.614 154.72497620000013 5.952 158.77688089999876 7.621 181.8850822000015 9.995 160.2256804999989 8.943 173.76865229999868 9.802 168.79928779999884 9.438 198.01572619999962 8.72 147.51875369999902 7.438 160.97725239999878 10.756 174.20217780000146 9.649 214.8088109 8.604 176.0478714999989 9.271)
Error minima by case: (56.0 2 5.81 3 0.7554 2 0.4636 1 0.0 0 1.77 2 0.2206 1 0.6871 1 4.4773 2 1.0 1 16.0397 2 0.1176 2 2.9901 2 0.4379 2 12.0 2 11.262 2 0.3556 2 6.7404 2 0.9607 2 0.1134 2 3.8341 1 2.3943 2 0.7656 3 4.498 2 0.7404 2)
Average genome size in population (length): 180.385
Average program size in population (points): 181.385
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 172.4438405901131
Average age in population: 167.0096450115401
Median age in population: 170.6199094505683
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.602
Error (vector) diversity:			 0.605
Behavioral diversity:				 0.607
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 465136940
--- Timings ---
Current time: 1529615577493 milliseconds
Total Time:         777.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.1 seconds, 23.0%
Fitness Testing:    466.7 seconds, 60.0%
Report:             131.7 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 42883.651899999946
Test mean error for best: 21.44183
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup} {:instruction float_add} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_sub} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -40} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod float_mod float_dup float_add integer_yank float_stackdepth integer_mult float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_flush integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_stackdepth integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat integer_yank integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_sub float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -40 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_dec float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4921.850806399997
Median total errors in population: 1250.1557
Error averages by case: (284.04265130000067 7.591 166.57248629999873 9.222 165.33014000000105 10.048 218.63537279999997 6.84 174.12613429999985 5.314 174.4048471000013 12.028 210.63438180000114 10.717 159.30178750000124 7.727 176.0811866000015 10.074 203.9830342999999 6.189 215.43597319999995 9.828 219.5667157000012 10.976 180.41383690000146 9.707 170.0121439 6.283 168.33795179999876 7.692 191.93664920000168 10.071 169.49189559999877 9.008 174.50303339999877 9.939 168.7896102999987 9.603 204.23313739999958 8.874 157.43827999999894 7.499 165.82202609999874 10.734 182.25711490000165 9.716 220.42271039999994 8.845 176.22170559999893 9.331)
Error minima by case: (56.0 2 5.81 3 1.7616 1 0.8305 1 0.0 0 0.9888 3 0.2206 1 0.9835 2 4.6886 2 0.9999 1 11.9607 1 0.1176 3 4.9901 2 0.4379 2 23.0633 2 13.262 2 0.6444 2 10.4868 2 0.4868 2 0.2647 1 3.4868 1 3.3943 2 11.9497 3 7.6458 2 16.4868 2)
Average genome size in population (length): 180.523
Average program size in population (points): 181.523
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 173.726143310988
Average age in population: 169.1303240790538
Median age in population: 171.8710272558987
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.607
Error (vector) diversity:			 0.61
Behavioral diversity:				 0.613
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 469785040
--- Timings ---
Current time: 1529615584585 milliseconds
Total Time:         784.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.5 seconds, 23.0%
Fitness Testing:    471.2 seconds, 60.0%
Report:             132.9 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 43285.83349999996
Test mean error for best: 21.64292
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod tagged_950 integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_dup_times integer_pop integer_stackdepth integer_mult integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4692.512145299999
Median total errors in population: 1114.4918
Error averages by case: (273.68777770000065 7.345 152.44086309999886 9.076 157.22836930000096 10.021 209.5062791000003 6.412 170.13098949999986 5.267 166.86914300000123 12.18 211.29858900000093 10.692 141.04013760000092 7.506 164.42618320000122 10.065 198.69215829999987 5.831 209.0702521999999 9.787 213.11470290000122 10.953 165.80226230000144 9.604 164.27785260000013 5.823 155.68070949999887 7.563 176.4925921000015 10.065 154.99184779999896 8.853 164.23908809999892 9.769 158.34642109999888 9.332 206.92112629999988 8.624 143.07673979999913 7.344 156.75290859999902 10.711 173.91999510000142 9.647 217.32802549999994 8.549 167.00513159999886 9.153)
Error minima by case: (27.1347 2 5.81 3 0.2446 8 0.0393 1 0.0 0 0.7476 8 0.2206 1 1.0393 2 2.9186 2 0.9066 1 10.8847 1 0.1176 2 4.9901 2 1.014 2 12.4981 2 13.262 2 0.6444 2 4.6338 2 0.9607 2 0.1134 1 3.9607 1 3.3943 2 5.9748 8 0.0289 2 2.1922 2)
Average genome size in population (length): 180.515
Average program size in population (points): 181.515
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 175.092513934666
Average age in population: 171.4248061975874
Median age in population: 173.186588472229
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.579
Error (vector) diversity:			 0.583
Behavioral diversity:				 0.585
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 474432565
--- Timings ---
Current time: 1529615591636 milliseconds
Total Time:         791.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.0 seconds, 23.0%
Fitness Testing:    475.6 seconds, 60.1%
Report:             134.1 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 43886.280699999974
Test mean error for best: 21.94314
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_add} {:instruction float_inc} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_shove} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction 9} {:instruction float_yank} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -41} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_add float_inc 54.9607049605322 in1 float_add tag_float_737 integer_div tagged_950 float_mod float_mod float_dup_times float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_fromfloat float_div integer_dup_times integer_max integer_shove float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc 9 float_yank -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -41 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_dup float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 179
Size: 180
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4518.165186099998
Median total errors in population: 1117.6694499999999
Error averages by case: (240.75007830000075 7.17 151.25195829999885 9.101 153.19263090000092 10.047 201.81810760000008 6.301 147.49896549999994 5.12 159.6924887000012 12.098 200.09533210000086 10.75 144.71711010000084 7.574 166.77404050000123 10.132 188.35676459999985 5.692 199.78425060000004 9.677 200.94411850000114 10.985 165.42994050000127 9.608 155.63551840000008 5.918 154.17689249999876 7.602 176.06655750000138 10.016 157.21171579999884 8.869 157.90644629999917 9.929 151.59679859999915 9.562 192.18805819999972 8.691 142.92319049999924 7.377 156.7912816999988 10.792 169.0153081000013 9.731 203.21777069999985 8.542 160.41586159999918 9.43)
Error minima by case: (56.0 2 17.9607 3 11.0393 8 0.8305 1 0.0 0 1.779 8 0.2206 1 0.9835 2 7.281 7 0.0934 1 14.1069 2 0.1174 7 3.9901 2 0.3311 2 13.0468 2 5.8819 2 0.3556 2 0.9543 2 0.9607 2 0.1173 1 3.9607 1 3.3943 7 2.7656 8 15.4308 2 5.8717 2)
Average genome size in population (length): 178.817
Average program size in population (points): 179.817
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 176.4049936791495
Average age in population: 170.9582714337738
Median age in population: 174.4609446140418
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.555
Error (vector) diversity:			 0.563
Behavioral diversity:				 0.566
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 479035711
--- Timings ---
Current time: 1529615598641 milliseconds
Total Time:         798.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.4 seconds, 23.0%
Fitness Testing:    480.0 seconds, 60.1%
Report:             135.3 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 43175.90229999995
Test mean error for best: 21.58795
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_670} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_flush} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_shove})
Best program: (integer_pop float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat integer_stackdepth float_dup float_dup_times integer_yankdup float_dup integer_pop float_sub float_div integer_dup_times integer_max tagged_670 float_flush float_inc float_shove float_mod float_max float_yankdup float_dec integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_flush float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_shove)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 181
Size: 182
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4910.966246799998
Median total errors in population: 1264.3241500000001
Error averages by case: (283.4541752000007 7.655 167.63443469999882 9.245 157.95389840000092 10.013 219.96159679999997 6.834 172.5791532999999 5.511 174.0435713000012 11.941 220.06168900000108 10.607 156.5784696000011 7.786 172.0599092000011 10.18 208.45161979999978 6.214 217.66172559999987 9.979 223.5364365000011 10.927 181.74189070000125 9.682 157.56007560000012 5.972 169.67692059999885 7.837 192.26510890000134 9.997 167.42519249999884 9.002 171.17169789999892 9.935 167.01258399999875 9.568 212.1491900999996 8.841 157.23181479999903 7.635 162.46280259999892 10.806 174.15503700000122 9.844 225.46216469999987 8.728 174.47208799999905 9.464)
Error minima by case: (28.1347 2 5.81 2 0.7554 1 0.1695 1 0.0 0 0.9888 1 0.2206 1 0.9835 2 4.0 1 0.3022 1 4.7401 1 0.0785 2 3.9901 2 0.7082 2 20.0618 2 12.262 2 0.3556 2 0.5984 2 0.9607 2 0.1134 1 3.9607 1 0.287 1 1.4983 2 15.4308 2 2.9047 2)
Average genome size in population (length): 178.012
Average program size in population (points): 179.012
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 177.6148468170247
Average age in population: 172.2347090300395
Median age in population: 175.7679077487789
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.603
Error (vector) diversity:			 0.607
Behavioral diversity:				 0.61
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 483618536
--- Timings ---
Current time: 1529615605957 milliseconds
Total Time:         806.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       184.8 seconds, 22.9%
Fitness Testing:    484.6 seconds, 60.1%
Report:             136.5 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 43175.90229999995
Test mean error for best: 21.58795
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_670} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_flush} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_shove})
Best program: (integer_pop float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat integer_stackdepth float_dup float_dup_times integer_yankdup float_dup integer_pop float_sub float_div integer_dup_times integer_max tagged_670 float_flush float_inc float_shove float_mod float_max float_yankdup float_dec integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_flush float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_shove)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 181
Size: 182
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4856.979934799998
Median total errors in population: 1118.2714500000002
Error averages by case: (276.2009263000008 7.393 164.30518039999873 9.239 162.54439320000114 9.894 217.22347570000017 6.582 170.89546309999994 5.39 170.2933599000013 11.771 217.93965110000084 10.421 152.17895590000106 7.827 171.8322167000013 10.106 203.45141399999983 5.996 216.22695779999992 9.934 221.0082105000011 10.897 178.93396450000145 9.814 165.28505559999996 5.935 167.58239249999875 7.969 189.57979670000148 10.139 163.7399776999988 9.029 167.24316949999883 9.999 160.64700519999872 9.571 210.32896909999965 8.535 153.0749069999989 7.742 162.0776743999988 10.693 178.67292110000142 9.743 223.21503169999983 8.469 169.861865199999 9.549)
Error minima by case: (56.0 2 17.7013 3 0.7554 1 0.1955 1 0.0 0 0.1425 1 0.2206 1 0.9835 2 2.8729 2 0.9066 1 8.7794 1 0.1174 2 4.9901 2 0.3127 2 24.0 2 13.262 2 0.6444 2 1.1091 1 0.7013 1 0.181 1 3.7013 1 1.355 2 10.9856 2 1.8538 1 0.1899 2)
Average genome size in population (length): 177.984
Average program size in population (points): 178.984
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 178.8787511088432
Average age in population: 173.6249144044701
Median age in population: 176.9925923108596
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.604
Error (vector) diversity:			 0.616
Behavioral diversity:				 0.619
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 488204011
--- Timings ---
Current time: 1529615613263 milliseconds
Total Time:         813.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.2 seconds, 22.9%
Fitness Testing:    489.2 seconds, 60.1%
Report:             137.8 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 42885.92699999995
Test mean error for best: 21.44296
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction in1} {:instruction float_dup_times} {:instruction integer_min} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction float_max} {:instruction float_add} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_mod} {:instruction float_dup} {:instruction float_add} {:instruction tag_integer_838} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction float_dup} {:instruction integer_pop} {:instruction float_min} {:instruction float_tan} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_886} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_inc float_div float_div float_flush integer_div integer_div tagged_950 float_mod in1 float_dup_times integer_min in2 integer_max float_mod float_mod float_max float_add float_min integer_fromfloat integer_yankdup integer_flush float_dec integer_flush integer_dup_items -52 integer_yankdup float_dup integer_pop float_sub float_mod float_dup float_add tag_integer_838 integer_fromfloat float_swap float_dup integer_pop float_min float_tan print_float integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_886 float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot integer_dup_items float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4479.309402199998
Median total errors in population: 1108.224
Error averages by case: (279.6801042000006 7.181 148.85490089999897 9.078 146.06961290000083 9.877 197.09001120000013 6.37 160.57626639999992 5.097 156.544988400001 11.689 196.10639460000056 10.382 136.39357080000093 7.675 155.51514150000108 10.182 184.64316909999988 5.711 197.74406719999985 9.945 201.04172680000104 10.87 162.73464950000115 9.608 153.81029840000014 5.778 151.44143439999894 7.827 173.39963950000126 9.911 148.657027899999 8.886 157.23562229999905 9.917 150.59857289999908 9.487 191.24269459999965 8.406 137.5374495999992 7.646 147.38825949999907 10.718 162.27011750000113 9.884 202.82256709999996 8.344 159.922114999999 9.52)
Error minima by case: (15.0 2 17.9607 2 9.856 1 0.8305 1 0.0 0 1.0393 8 0.2206 1 0.0393 2 8.281 2 1.9066 1 13.9607 1 0.1176 2 3.9901 2 0.5418 2 24.0 2 12.262 2 0.3556 2 2.0521 2 0.7013 2 0.5598 1 3.9607 1 2.3943 1 16.9355 8 3.526 2 2.7932 2)
Average genome size in population (length): 178.628
Average program size in population (points): 179.628
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 180.4613266375563
Average age in population: 175.845467130881
Median age in population: 178.3576017676623
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.589
Error (vector) diversity:			 0.594
Behavioral diversity:				 0.599
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 492807811
--- Timings ---
Current time: 1529615620220 milliseconds
Total Time:         820.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       187.6 seconds, 22.9%
Fitness Testing:    493.6 seconds, 60.2%
Report:             139.1 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 42885.92699999995
Test mean error for best: 21.44296
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_951} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_dup_items} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction float_mod} {:instruction integer_yank} {:instruction float_add} {:instruction integer_yank} {:instruction integer_dup_times} {:instruction integer_max} {:instruction tagged_670} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_flush} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_886} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 54.9607049605322 in1 float_add tag_float_623 integer_dup_items integer_flush tag_float_737 tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_inc float_div float_div float_flush integer_div tagged_951 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max float_add tag_float_737 float_dup_items float_sub float_pop integer_fromfloat float_tan integer_fromfloat float_cos integer_stackdepth float_tan integer_fromfloat in2 integer_max float_mod float_mod integer_yank float_add integer_yank integer_dup_times integer_max tagged_670 float_flush float_inc float_shove float_mod float_max float_yankdup float_dec integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_flush float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_886 float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot integer_dup_items float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth integer_min integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4733.536338399999
Median total errors in population: 1184.3821
Error averages by case: (271.81929240000085 7.747 155.96080029999897 9.169 156.13120050000077 9.88 211.2061522999999 6.489 164.40299569999996 5.065 169.03348900000108 11.508 211.45289370000077 10.418 147.38518330000093 7.846 166.72215470000114 10.311 200.50649779999983 5.862 210.71738199999996 9.931 216.86771380000118 11.035 171.47616000000124 9.674 162.08145010000013 6.056 157.569796499999 8.059 182.1293594000013 9.89 158.83391839999902 8.954 167.98652819999904 10.14 161.8770878999989 9.807 201.24024629999982 8.533 146.60587059999912 7.84 158.23048739999905 10.78 172.18563040000126 10.103 217.4208544999999 8.489 170.40819319999912 9.699)
Error minima by case: (15.0 2 0.5268 2 0.2446 1 0.8305 1 0.0 0 0.0112 8 0.3321 1 0.9835 2 1.281 2 0.0934 1 0.4269 1 0.1174 2 3.9901 2 0.2918 1 11.5268 2 7.0 1 0.3556 2 6.4732 2 0.0976 2 0.1134 1 3.6079 1 0.0317 1 0.9748 8 4.6204 2 0.4732 2)
Average genome size in population (length): 178.062
Average program size in population (points): 179.062
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 181.9262848837216
Average age in population: 176.5828530864032
Median age in population: 179.6190628303439
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.639
Error (vector) diversity:			 0.648
Behavioral diversity:				 0.65
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 497394886
--- Timings ---
Current time: 1529615627160 milliseconds
Total Time:         827.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.1 seconds, 22.9%
Fitness Testing:    497.9 seconds, 60.2%
Report:             140.2 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 42885.92699999995
Test mean error for best: 21.44296
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction print_integer} {:instruction float_max} {:instruction float_add} {:instruction integer_dup} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction tagged_545} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_shove} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_614} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yank} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 print_integer float_max float_add integer_dup float_mod float_add tag_float_737 integer_yankdup integer_yankdup tagged_545 float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max float_add tag_float_737 float_yankdup float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod tagged_950 integer_mult float_mod float_yankdup float_dup_times integer_rot float_div integer_dup_times integer_max integer_shove integer_mod float_inc float_inc integer_div float_mod float_max integer_swap float_dup_times integer_shove integer_yankdup float_yankdup integer_fromfloat integer_fromfloat integer_pop integer_fromfloat in2 float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_614 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat integer_yank integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot integer_dup_items float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4676.285116999998
Median total errors in population: 1217.55485
Error averages by case: (270.4629792000007 7.443 151.6294365999992 8.938 155.1493408000007 9.856 216.21893529999994 6.65 170.6909821999998 5.08 157.36326390000087 11.286 213.77077040000052 10.376 144.45636210000077 7.642 162.36727600000089 10.353 205.44164279999987 6.057 215.3955225 9.746 219.1044059000009 10.947 167.4023209000011 9.406 157.5478964000001 5.953 153.74729219999912 7.84 177.31364190000107 9.591 156.01558749999913 8.719 155.9571249999992 10.082 149.69888339999923 9.745 207.30299139999983 8.836 142.69744349999937 7.658 153.81716159999914 10.824 170.84101490000108 10.156 222.04628529999985 8.757 158.31555529999918 9.59)
Error minima by case: (6.6742 2 0.5268 3 0.2446 1 0.0393 1 0.0 0 0.9888 2 0.3321 1 0.9835 2 1.8559 2 0.2696 1 1.7794 2 0.1174 2 4.9901 2 0.7082 1 11.5268 2 13.262 2 0.6444 2 1.9543 2 0.9607 2 0.2462 1 3.0165 1 0.5268 3 14.8089 2 6.5087 2 0.4732 2)
Average genome size in population (length): 176.444
Average program size in population (points): 177.444
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 183.2661283103644
Average age in population: 176.9666856671025
Median age in population: 180.9483034412229
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.633
Error (vector) diversity:			 0.643
Behavioral diversity:				 0.646
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 501940836
--- Timings ---
Current time: 1529615634047 milliseconds
Total Time:         834.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.5 seconds, 22.8%
Fitness Testing:    502.2 seconds, 60.2%
Report:             141.4 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 43285.83349999996
Test mean error for best: 21.64292
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod tagged_950 integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop integer_dup_items integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4892.9797137
Median total errors in population: 1199.98225
Error averages by case: (273.0556550000008 7.665 161.8484323999989 8.949 161.91819430000066 9.797 229.00395419999995 6.797 171.6621478 5.078 169.01994940000097 11.066 221.57075000000017 10.306 152.14154920000112 7.729 168.43552850000128 10.445 215.58957829999989 6.089 225.6057739 9.826 229.90808110000106 11.039 176.85370440000125 9.456 165.35707930000004 5.991 164.40766729999896 8.104 186.5712482000014 9.552 164.44466319999907 8.744 167.1001792999991 10.201 160.946566199999 9.863 214.6772302999997 8.907 151.74933159999892 7.93 159.43721709999886 10.809 177.31829530000115 10.332 232.1214619999999 8.849 168.99847539999925 9.713)
Error minima by case: (2.4349 2 0.5268 3 0.7554 1 0.8863 1 0.0 0 0.0112 1 0.2206 1 0.1344 2 4.281 2 0.5448 1 8.7794 1 0.1176 7 4.9901 2 0.0278 1 0.6742 2 13.262 2 0.6444 2 0.9543 2 0.9607 2 0.1134 2 3.9607 1 0.5268 2 3.8857 2 5.9704 2 0.4732 2)
Average genome size in population (length): 177.33
Average program size in population (points): 178.33
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 184.1644682038955
Average age in population: 178.914874501751
Median age in population: 182.3148915023849
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.622
Error (vector) diversity:			 0.631
Behavioral diversity:				 0.633
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 506510811
--- Timings ---
Current time: 1529615641162 milliseconds
Total Time:         841.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       191.8 seconds, 22.8%
Fitness Testing:    506.6 seconds, 60.2%
Report:             142.6 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 43285.83349999996
Test mean error for best: 21.64292
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_swap} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max integer_swap tagged_950 integer_mult float_dup_times integer_dup_items float_pop float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4683.768029099999
Median total errors in population: 1167.61155
Error averages by case: (263.32519880000063 7.439 156.46832989999882 8.811 155.86936840000092 9.626 208.5782371000002 6.666 158.1906562 5.243 171.93594690000097 10.679 202.06865739999964 9.977 145.26796840000108 7.698 166.55060940000104 10.445 197.30979680000002 6.121 204.03646799999999 9.904 209.9914311000007 10.899 171.36286620000126 9.304 161.34457510000013 5.921 157.920302999999 8.128 182.2227201000013 9.359 157.25177379999897 8.586 171.0628861999991 10.221 164.99337039999892 9.918 194.7148584999996 8.53 145.86309719999898 7.931 158.6222838999989 10.734 172.07530460000132 10.4 211.97709819999992 8.503 173.90022349999913 9.821)
Error minima by case: (13.0 2 17.9607 2 0.7554 1 0.8863 1 0.0 0 0.0112 1 0.2206 1 0.4354 2 8.281 2 0.481 1 8.7794 2 0.1174 2 3.7774 2 0.5724 1 6.0633 2 16.9214 2 3.4466 2 0.9543 2 0.9607 2 0.1173 1 3.9607 1 1.355 1 3.8839 2 0.9896 1 1.8626 2)
Average genome size in population (length): 177.748
Average program size in population (points): 178.748
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 185.7065433925742
Average age in population: 181.5340976423459
Median age in population: 183.6737121733218
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.645
Error (vector) diversity:			 0.652
Behavioral diversity:				 0.655
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 511090636
--- Timings ---
Current time: 1529615648227 milliseconds
Total Time:         848.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.3 seconds, 22.8%
Fitness Testing:    511.1 seconds, 60.2%
Report:             143.9 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 43285.83349999996
Test mean error for best: 21.64292
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_swap} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup integer_inc float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max integer_swap tagged_950 integer_mult float_dup_times integer_dup_items float_pop float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4438.565831699997
Median total errors in population: 1192.5142999999998
Error averages by case: (266.2594560000008 7.607 140.6432491999992 8.533 141.60315260000073 9.577 208.11479920000002 6.751 143.35013219999982 5.166 158.04066420000086 10.495 204.83763319999963 9.694 131.11937610000075 7.478 152.3672849000009 10.482 196.63294389999996 6.071 205.4578237000001 9.92 208.90887290000086 10.856 155.8706014000011 9.0 145.4374063000002 5.707 142.86488069999902 7.962 166.76489220000116 9.009 142.62320969999908 8.321 156.50265479999922 10.275 150.56895059999928 9.961 199.54919919999972 8.464 132.2273863999993 7.778 143.1935833999992 10.646 156.52437270000098 10.561 211.65156299999987 8.445 159.07674319999919 9.616)
Error minima by case: (13.0 2 17.0165 2 0.2446 1 0.0165 1 0.0 0 1.0 1 0.3321 1 0.4597 2 4.0 1 0.3648 1 2.1067 1 0.1174 2 4.9901 1 1.6689 2 0.9367 2 13.262 2 0.6444 2 1.9543 2 0.7621 2 0.0576 1 3.0165 1 2.355 1 9.029 2 2.6184 2 4.8717 2)
Average genome size in population (length): 177.433
Average program size in population (points): 178.433
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 186.8076313888721
Average age in population: 181.4341958674781
Median age in population: 184.9650181482811
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.606
Error (vector) diversity:			 0.616
Behavioral diversity:				 0.618
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 515659486
--- Timings ---
Current time: 1529615655220 milliseconds
Total Time:         855.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       194.6 seconds, 22.8%
Fitness Testing:    515.5 seconds, 60.3%
Report:             145.1 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 42885.92699999995
Test mean error for best: 21.44296
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 54.9607049605322} {:instruction integer_flush} {:instruction 54.9607049605322} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_min} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_mod} {:instruction integer_swap} {:instruction float_yankdup} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_sub} {:instruction float_div} {:instruction integer_dup_times} {:instruction float_max} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_dup} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 54.9607049605322 integer_flush 54.9607049605322 in1 float_add tag_float_623 integer_min integer_flush tag_float_737 tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush in2 float_dup_times float_frominteger float_yankdup float_mod integer_swap float_yankdup integer_dec integer_yankdup float_dup integer_pop float_sub float_div integer_dup_times float_max in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod integer_yank float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_yankdup in2 integer_max tagged_729 float_flush float_dup tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot integer_dup_items float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 176
Size: 177
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4516.109585099998
Median total errors in population: 1150.7035
Error averages by case: (259.5306939000007 7.316 152.54771459999918 8.777 146.35615260000057 9.575 207.3070607000001 6.748 152.55087969999994 5.143 153.19559830000068 10.435 204.80972039999938 9.849 138.8604994000008 7.765 155.25599140000085 10.611 195.177608 5.964 206.77884269999998 10.128 209.63524040000095 10.946 166.48647270000097 9.272 151.15919430000022 5.991 155.27267429999918 8.35 177.38015730000112 9.184 151.14569459999927 8.552 152.68729589999924 10.443 146.49014629999917 10.066 198.67247689999968 8.488 141.57258959999933 8.128 146.1873887999993 10.782 159.45866640000088 10.667 210.72782299999977 8.509 155.2920028999993 9.882)
Error minima by case: (51.8653 2 17.7621 2 2.9835 1 0.0165 1 0.0 0 0.9888 9 0.2206 1 0.9835 2 8.281 2 0.0934 1 2.6148 1 0.0799 7 4.9901 2 0.6525 2 5.0877 2 13.262 2 0.6444 2 0.9543 2 0.7621 2 0.0576 1 3.7621 1 2.3943 1 11.631 8 1.4644 2 5.8717 2)
Average genome size in population (length): 177.955
Average program size in population (points): 178.955
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 188.7065111997014
Average age in population: 182.6557576429272
Median age in population: 186.1928512243068
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.617
Error (vector) diversity:			 0.627
Behavioral diversity:				 0.63
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 520239161
--- Timings ---
Current time: 1529615662172 milliseconds
Total Time:         862.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.1 seconds, 22.7%
Fitness Testing:    519.9 seconds, 60.3%
Report:             146.3 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 43229.66989999995
Test mean error for best: 21.61483
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction float_add} {:instruction tag_float_705} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction tagged_970} {:instruction float_mod} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_sin} {:instruction tag_float_737} {:instruction float_div} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction integer_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_rot} {:instruction integer_flush} {:instruction float_sub} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_886} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 float_max 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush float_add tag_float_705 float_max integer_yankdup float_stackdepth tagged_970 float_mod integer_mult float_stackdepth integer_mult float_mod float_yankdup integer_fromfloat in2 integer_max float_sin tag_float_737 float_div float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod integer_dup float_sub integer_inc float_sub float_frominteger integer_max integer_min integer_shove float_inc float_shove float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_shove integer_rot integer_flush float_sub integer_mult float_stackdepth tagged_950 float_mod float_mod float_yankdup integer_div integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_886 float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 623.0214
Mean: 12.460428
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4324.665294499999
Median total errors in population: 1130.37405
Error averages by case: (256.8633270000006 7.225 140.75109369999907 8.691 141.2870324000009 9.385 198.0672913 6.654 143.32006279999985 5.204 149.6654482000011 10.198 197.47262139999927 9.609 130.06100260000088 7.679 148.18033480000088 10.571 186.26474269999997 5.944 196.88888639999993 10.081 202.42550620000085 10.653 154.52245310000112 9.25 142.2656631000001 5.741 143.27076439999894 8.309 165.6621779000011 9.11 143.32462649999897 8.501 148.25720609999925 10.41 141.90981199999914 10.046 190.6625749999997 8.278 130.38089829999925 8.098 142.16893819999916 10.694 156.50504310000105 10.581 204.53736729999977 8.251 150.96641999999918 9.821)
Error minima by case: (56.0 2 16.7621 2 11.9835 1 0.0165 1 0.0 0 1.9888 8 0.3321 1 0.9835 2 5.8461 2 0.4822 1 2.3581 2 0.0785 2 4.9901 2 0.8962 2 1.5407 2 13.262 2 0.6444 2 2.1079 2 0.177 2 0.0576 1 2.7621 1 9.6796 1 8.4697 7 7.2173 2 15.7621 2)
Average genome size in population (length): 179.394
Average program size in population (points): 180.394
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 189.5864056601715
Average age in population: 185.3514302205374
Median age in population: 187.4413006881578
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.602
Error (vector) diversity:			 0.606
Behavioral diversity:				 0.607
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 524854361
--- Timings ---
Current time: 1529615669185 milliseconds
Total Time:         869.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       197.5 seconds, 22.7%
Fitness Testing:    524.4 seconds, 60.3%
Report:             147.4 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 48894.96379999997
Test mean error for best: 24.44748
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -50.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_dec} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_dup} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 integer_dec tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add integer_rot integer_yankdup float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_yankdup float_dup in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod integer_yankdup integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_dup_items integer_mod integer_swap float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup integer_flush integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 2.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0214
Mean: 12.420428
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4998.280705799999
Median total errors in population: 1208.3710999999998
Error averages by case: (288.15243850000087 7.676 166.16713389999896 8.842 168.20417130000084 9.607 225.93993550000005 7.075 173.59898639999997 5.509 176.430479400001 10.291 223.94611989999922 9.836 155.142641900001 7.841 175.86590720000112 10.771 217.20799250000002 6.396 224.23686390000012 10.207 229.26761710000073 10.862 180.3846255000011 9.354 166.00714159999993 6.059 168.15097609999907 8.513 191.13309050000126 9.189 166.98926139999904 8.574 175.31472849999926 10.507 169.22106269999915 10.163 217.02269109999963 8.779 157.9051527999991 8.228 166.62464619999903 10.882 182.6666116000012 10.813 230.2098659999998 8.681 177.82556429999926 10.01)
Error minima by case: (56.0 2 17.4625 3 10.2116 1 0.8863 1 0.0 0 0.9888 2 0.2206 1 0.4024 2 1.7956 2 1.9066 1 2.012 1 0.1174 2 4.9901 2 0.3437 2 20.1399 2 13.262 2 0.6444 2 0.9543 2 0.4625 2 0.1134 1 3.4625 1 3.3385 2 15.0401 3 7.2173 2 3.1283 2)
Average genome size in population (length): 179.097
Average program size in population (points): 180.097
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 190.8365960932462
Average age in population: 185.0444317611949
Median age in population: 188.6428633777612
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.616
Error (vector) diversity:			 0.621
Behavioral diversity:				 0.625
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 529457911
--- Timings ---
Current time: 1529615676611 milliseconds
Total Time:         876.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.9 seconds, 22.7%
Fitness Testing:    529.0 seconds, 60.3%
Report:             148.6 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 48894.96379999997
Test mean error for best: 24.44748
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -50.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_dec} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_dup} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 integer_dec tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add integer_rot integer_yankdup float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_yankdup float_dup in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_mod integer_yankdup integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_dup_items integer_mod integer_swap float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup integer_flush integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 2.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0214
Mean: 12.420428
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4411.749051699999
Median total errors in population: 1113.66745
Error averages by case: (252.21624870000062 7.036 147.6910545999989 8.599 139.65811720000073 9.427 205.53131990000008 6.492 144.90542859999982 5.256 154.72226930000107 10.069 197.2291149999991 9.6 133.03739150000095 7.666 148.78911890000103 10.638 191.87241990000004 5.766 204.59136290000015 10.064 203.63548500000059 10.584 161.26470200000122 9.11 149.48553240000018 5.889 149.89512179999892 8.329 172.26493090000125 8.954 146.208061399999 8.379 153.49953559999923 10.404 147.00347109999925 10.042 191.22560189999973 8.205 136.74852409999914 8.063 143.20588619999904 10.739 156.03704350000095 10.71 206.77483729999997 8.176 156.15847199999916 9.901)
Error minima by case: (55.0 2 17.0165 2 0.2446 1 0.0165 1 0.0 0 1.9886 1 0.3321 1 0.9499 2 2.1842 1 0.9066 1 7.7794 1 0.1174 2 8.0 2 2.0 2 4.1983 2 20.0 1 6.1815 1 0.9543 1 0.4625 1 0.0576 1 3.0165 1 2.355 2 1.1489 2 4.9705 2 5.8717 2)
Average genome size in population (length): 179.03
Average program size in population (points): 180.03
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 191.930537008178
Average age in population: 186.4239028509287
Median age in population: 189.8648394411041
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.592
Error (vector) diversity:			 0.595
Behavioral diversity:				 0.598
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 534062311
--- Timings ---
Current time: 1529615683979 milliseconds
Total Time:         884.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       200.3 seconds, 22.7%
Fitness Testing:    533.6 seconds, 60.4%
Report:             149.9 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 48894.96379999997
Test mean error for best: 24.44748
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -50.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_dec} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 integer_dec tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add integer_rot integer_yankdup float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_yankdup float_dup in2 integer_inc float_dup_items integer_mult float_dup_times integer_dup_items integer_mod integer_yankdup integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_dup_items integer_mod integer_swap float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup integer_flush integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 2.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0214
Mean: 12.420428
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4721.766848699998
Median total errors in population: 1127.8289499999996
Error averages by case: (271.5524910000007 7.256 154.93111349999907 8.685 154.45431430000073 9.418 219.6432907000002 6.68 159.29789379999997 5.327 161.5212025000009 10.042 219.62793299999893 9.655 142.9306839000009 7.666 164.44272560000104 10.668 207.36871680000002 5.956 218.9522145000001 10.177 224.03590290000065 10.615 168.0798699000011 9.206 156.10536790000006 5.947 157.48984819999896 8.367 178.95969610000122 9.05 156.70070439999907 8.453 160.05098599999928 10.472 153.5323623999993 10.058 212.25439619999958 8.373 145.76311709999928 8.129 155.246418299999 10.718 169.89974200000123 10.702 226.4738417999998 8.335 162.55901589999914 9.938)
Error minima by case: (15.0 2 4.8337 3 7.0165 1 0.8863 1 0.0 0 0.9888 1 0.3321 1 0.1275 2 3.3708 8 0.9066 1 4.7326 1 0.3684 2 24.1275 2 0.3437 2 12.0633 2 36.1275 2 9.5792 2 8.0583 2 1.0165 2 0.1173 1 4.0165 1 4.634 2 14.0 2 1.6403 2 2.9047 2)
Average genome size in population (length): 178.879
Average program size in population (points): 179.879
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 193.0532879857222
Average age in population: 187.104203890902
Median age in population: 191.1216347523942
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.583
Error (vector) diversity:			 0.59
Behavioral diversity:				 0.595
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 538662861
--- Timings ---
Current time: 1529615691428 milliseconds
Total Time:         891.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.7 seconds, 22.6%
Fitness Testing:    538.3 seconds, 60.4%
Report:             151.3 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 48894.96379999997
Test mean error for best: 24.44748
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -50.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_dec} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 integer_dec tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_flush tag_float_737 integer_swap float_max float_add integer_rot integer_yankdup float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_yankdup float_dup in2 integer_inc float_dup_items integer_mult float_dup_times integer_dup_items integer_mod integer_yankdup integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_dup_items integer_mod integer_swap float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot float_yankdup integer_flush integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 2.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0214
Mean: 12.420428
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4856.377310699999
Median total errors in population: 1082.0157
Error averages by case: (261.8225241000007 7.273 159.4106070999991 8.694 161.62501610000075 9.425 222.72994590000022 6.697 176.33426139999995 5.479 175.2998894000009 10.044 210.70486399999908 9.605 150.7145322000008 7.858 167.25565730000102 10.71 209.92836599999993 5.952 222.01581809999996 10.163 223.95207340000061 10.657 173.47040180000104 9.249 170.4964909 6.26 162.03500809999895 8.419 184.24682870000106 9.044 163.59175909999905 8.541 174.90122979999921 10.441 169.19046989999904 10.044 207.3744821999996 8.302 148.63019159999928 8.204 160.58365379999907 10.792 175.18391320000106 10.777 226.50442759999984 8.319 177.33789899999925 10.088)
Error minima by case: (56.0 2 17.0165 3 0.7554 4 0.8863 1 0.0 0 1.0959 9 0.2199 1 0.0027 2 3.7251 4 1.9066 1 10.0165 1 0.1802 6 24.0027 2 2.0 2 14.6192 2 17.033 2 9.6051 2 0.9543 2 0.0165 2 0.0123 1 3.0165 1 3.355 3 12.9497 3 9.4287 1 2.414 2)
Average genome size in population (length): 178.243
Average program size in population (points): 179.243
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 194.2935124372162
Average age in population: 187.4371344213358
Median age in population: 192.4480249225202
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.568
Error (vector) diversity:			 0.577
Behavioral diversity:				 0.581
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 543246511
--- Timings ---
Current time: 1529615698445 milliseconds
Total Time:         898.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       203.1 seconds, 22.6%
Fitness Testing:    542.7 seconds, 60.4%
Report:             152.6 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 43364.80529999995
Test mean error for best: 21.68240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_yank} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_838} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_inc} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_sin} {:instruction tag_float_737} {:instruction float_div} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_pop in1 float_add tag_float_737 float_yank 55.016479005958544 in1 float_add integer_flush tag_float_737 integer_swap float_max float_add tag_float_838 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div integer_inc integer_div tagged_950 float_mod float_sub float_yankdup integer_fromfloat in2 integer_max float_sin tag_float_737 float_div float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod integer_dup float_sub integer_inc float_sub float_frominteger integer_max integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_mod float_yankdup integer_dup_items integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 181
Size: 182
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5174.160344499998
Median total errors in population: 1153.0274
Error averages by case: (279.1586814000007 7.253 175.43430469999902 8.828 169.41062180000074 9.473 232.23099910000016 6.606 180.63147430000006 5.189 184.0652537000009 10.043 233.758160799999 9.735 162.5922269000011 7.852 183.8273864000012 10.72 220.0373038 5.88 229.72676700000002 10.018 237.1747227000006 10.671 190.0129266000012 9.347 174.33988900000028 6.198 178.207944999999 8.524 200.67855330000134 9.105 174.42483299999898 8.562 186.79275799999903 10.483 180.4825714999989 10.125 227.4965950999996 8.477 165.23817589999913 8.3 175.08999449999897 10.799 185.59891220000125 10.799 238.86958649999985 8.462 187.37670129999913 10.054)
Error minima by case: (56.0 2 17.0165 2 4.0 1 0.8863 1 0.0 0 0.7882 1 0.3321 1 0.9835 2 4.0 1 0.0934 1 14.0165 2 0.1802 2 4.9901 2 1.0 1 12.4981 2 13.262 2 0.6444 2 10.9918 2 0.9918 2 0.2234 1 3.0165 1 2.2861 1 11.9497 2 3.9483 1 16.9918 2)
Average genome size in population (length): 179.223
Average program size in population (points): 180.223
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 195.8883034889993
Average age in population: 190.9126099172016
Median age in population: 193.7539349377592
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.569
Error (vector) diversity:			 0.573
Behavioral diversity:				 0.578
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 547855211
--- Timings ---
Current time: 1529615705580 milliseconds
Total Time:         905.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       204.6 seconds, 22.6%
Fitness Testing:    547.2 seconds, 60.4%
Report:             153.8 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 42839.421699999955
Test mean error for best: 21.41971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -43.4556970758
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_857} {:instruction float_mod} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction tagged_950} {:instruction integer_div} {:instruction in1} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -53} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 54.51789304793291} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_pop tag_float_737 integer_swap float_max float_add tag_float_857 float_mod tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat integer_div integer_fromfloat in2 integer_max float_mod tagged_950 integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod tagged_950 integer_div in1 integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -53 float_add integer_fromfloat 54.51789304793291 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min in1 float_rot integer_swap float_rot float_yank -39 integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 0.0858 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 619.927
Mean: 12.39854
Genome size: 178
Size: 179
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4350.252202799999
Median total errors in population: 1176.67625
Error averages by case: (273.9733982000006 7.337 145.46449369999914 8.646 144.72587690000069 9.313 191.00375610000012 6.42 152.45199849999995 5.018 149.68056670000107 9.966 190.97926929999917 9.52 135.49279300000072 7.735 151.32734370000088 10.627 177.31938229999977 5.747 187.03061869999996 9.908 194.81720900000025 10.599 160.074685100001 9.184 149.98654040000014 5.837 147.80076139999898 8.372 171.02083240000113 9.006 147.94639309999909 8.418 149.2267364999992 10.33 142.83148829999925 9.953 182.0105675999999 8.347 136.55957479999927 8.155 142.4764412999992 10.705 160.041919100001 10.703 196.16719299999963 8.333 151.75736369999908 9.906)
Error minima by case: (56.0 2 15.4081 2 9.2116 2 0.8863 1 0.0 0 0.9888 8 0.3321 1 0.9835 2 4.6597 2 0.8967 1 1.7464 1 0.074 6 4.9901 2 0.8962 2 0.0633 2 13.262 2 0.6444 2 0.9543 2 1.0165 2 0.0576 1 3.0165 1 10.2586 2 8.703 8 0.7942 2 4.9047 2)
Average genome size in population (length): 178.619
Average program size in population (points): 179.619
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 197.1659737328629
Average age in population: 190.8301250224951
Median age in population: 194.9502693954857
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.59
Error (vector) diversity:			 0.594
Behavioral diversity:				 0.6
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 552451511
--- Timings ---
Current time: 1529615712846 milliseconds
Total Time:         913.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.0 seconds, 22.6%
Fitness Testing:    551.8 seconds, 60.4%
Report:             155.0 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 42839.421699999955
Test mean error for best: 21.41971
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -43.4556970758
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_857} {:instruction float_mod} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction tagged_950} {:instruction integer_div} {:instruction in1} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_rot} {:instruction tagged_950} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -53} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 54.51789304793291} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 float_max integer_pop tag_float_737 integer_swap float_max float_add tag_float_857 float_mod tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat integer_div integer_fromfloat in2 integer_max float_mod tagged_950 integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod tagged_950 integer_div in1 integer_rot integer_mult float_dup_times integer_dup_items integer_mod float_flush float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_rot tagged_950 float_sub float_sub float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -53 float_add integer_fromfloat 54.51789304793291 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min in1 float_rot integer_swap float_rot float_yank -39 integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 0.0858 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 619.927
Mean: 12.39854
Genome size: 178
Size: 179
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4712.853425399998
Median total errors in population: 1199.1297
Error averages by case: (287.8457216000007 7.407 162.4871405999988 8.721 162.15216220000082 9.359 197.17162950000022 6.422 162.6665147 5.068 171.81770420000103 9.936 196.27654979999923 9.444 153.04501050000113 7.771 168.84380330000124 10.642 182.40672149999995 5.692 194.33214620000004 9.957 202.93493510000042 10.601 176.3003264000011 9.251 168.9792996 6.14 163.49377279999894 8.421 186.9938003000013 9.038 165.09268329999904 8.48 170.97598079999926 10.444 165.32319289999901 10.006 188.20188869999976 8.266 154.36870469999906 8.212 161.97730439999904 10.707 173.47548780000122 10.701 203.65111659999968 8.171 173.21982789999933 9.963)
Error minima by case: (56.0 2 18.0165 3 7.2957 2 3.3404 1 0.0 0 0.9888 8 0.3321 1 0.1013 2 4.1603 2 0.8967 1 1.9194 1 0.0858 7 4.9901 2 0.2011 2 22.5045 2 13.262 2 0.6444 2 0.9543 1 0.6552 2 0.0576 1 4.0165 1 0.645 2 0.9748 8 9.4287 2 2.9047 2)
Average genome size in population (length): 178.098
Average program size in population (points): 179.098
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 198.3971930805906
Average age in population: 191.9473397757754
Median age in population: 196.3089511996631
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.564
Error (vector) diversity:			 0.568
Behavioral diversity:				 0.574
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 557033611
--- Timings ---
Current time: 1529615720202 milliseconds
Total Time:         920.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       207.5 seconds, 22.5%
Fitness Testing:    556.4 seconds, 60.5%
Report:             156.2 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 43849.362599999964
Test mean error for best: 21.92468
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -50.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction integer_dec} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction float_div} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_min} {:instruction float_tan} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_inc} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (integer_yankdup in1 float_add tag_float_623 integer_dup_items integer_flush tag_float_737 tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max integer_dec tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_inc float_frominteger float_div float_flush integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat float_cos integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_inc float_shove float_mod float_min float_tan float_max float_yankdup float_dup_times float_dup_times integer_fromfloat integer_yankdup integer_rot integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot in2 integer_max integer_max float_yankdup float_dup_times integer_fromfloat float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_inc in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot integer_dup_items float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float float_stackdepth float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 2.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0214
Mean: 12.420428
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4814.201033199996
Median total errors in population: 1300.85925
Error averages by case: (276.6637575000007 7.278 159.41704189999905 8.506 163.30344180000074 9.425 218.97236799999993 6.381 145.9991601 4.825 172.69473470000096 9.968 213.3314474999991 9.587 151.34162490000102 7.635 174.5096031000011 10.673 204.37688079999995 5.639 216.45856170000005 9.887 219.93170420000047 10.579 173.66118740000115 8.983 165.8645369000001 5.939 161.07158919999898 8.201 184.03945220000128 8.749 163.73899789999905 8.289 171.33162789999915 10.439 165.47246679999907 10.086 205.3738526999996 8.37 152.83417799999924 8.016 165.59635119999902 10.742 177.59484510000127 10.764 220.44292869999978 8.321 173.1366929999992 9.76)
Error minima by case: (38.8653 2 10.7644 2 8.0719 2 0.8863 1 0.0 0 0.9888 8 0.3321 1 0.0165 2 4.8461 2 0.8967 1 8.6103 1 0.5757 2 4.9901 2 0.8962 2 3.0962 2 7.0 1 0.6444 2 9.8698 2 1.0165 2 0.2234 1 4.0165 1 3.3385 2 12.6069 8 1.0682 2 1.9047 2)
Average genome size in population (length): 178.434
Average program size in population (points): 179.434
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 199.6352446398273
Average age in population: 194.5777086997588
Median age in population: 197.5540994060955
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.565
Error (vector) diversity:			 0.571
Behavioral diversity:				 0.575
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 561621311
--- Timings ---
Current time: 1529615727125 milliseconds
Total Time:         927.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.9 seconds, 22.5%
Fitness Testing:    560.8 seconds, 60.5%
Report:             157.5 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 48817.76799999996
Test mean error for best: 24.40888
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -50.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_838} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_inc} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_max} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_cos} {:instruction in1} {:instruction float_dup} {:instruction float_add} {:instruction tag_integer_838} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction float_dup} {:instruction float_rot} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction float_dec} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush integer_yankdup integer_swap float_max float_add tag_float_838 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div integer_inc integer_div tagged_950 float_mod float_sub float_yankdup integer_fromfloat in2 integer_max integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times float_max float_tan integer_fromfloat in2 integer_max float_cos in1 float_dup float_add tag_integer_838 integer_fromfloat float_swap float_dup float_rot float_sub integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_mod integer_dup_items integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat integer_add integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec float_dec in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 2.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0214
Mean: 12.420428
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4941.175643199999
Median total errors in population: 1260.2310000000002
Error averages by case: (284.5218132000006 7.249 173.9577145999992 8.736 165.6040057000007 9.398 211.1888291000001 6.678 169.19079009999996 5.021 177.64424650000092 9.941 215.36350809999925 9.714 159.96633820000093 7.794 178.07920710000093 10.668 198.2002804 5.922 209.66614530000007 9.859 218.40937820000045 10.649 186.690060100001 9.263 162.47760900000014 6.015 175.83599439999895 8.421 196.95691340000118 9.021 172.77160309999908 8.485 176.92101789999919 10.49 170.60474209999907 10.073 207.9122212999996 8.504 164.17101669999911 8.208 167.0783417999992 10.723 180.031666000001 10.716 218.8123932999997 8.559 179.04080759999923 9.972)
Error minima by case: (56.0 2 16.7314 2 0.2446 2 0.8863 1 0.0 0 1.9888 2 0.3321 1 0.0165 2 6.281 2 0.0934 1 7.7794 1 0.1439 2 4.9901 2 2.0 2 7.4175 2 13.262 2 0.6444 2 11.0047 2 1.0047 2 0.2234 1 2.6803 1 2.355 3 13.9748 3 0.0682 2 10.1283 2)
Average genome size in population (length): 176.897
Average program size in population (points): 177.897
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 201.1884007334126
Average age in population: 192.7508234711612
Median age in population: 198.7891950413132
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.563
Error (vector) diversity:			 0.565
Behavioral diversity:				 0.569
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 566165286
--- Timings ---
Current time: 1529615734087 milliseconds
Total Time:         934.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       210.3 seconds, 22.5%
Fitness Testing:    565.1 seconds, 60.5%
Report:             158.7 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 48817.76799999996
Test mean error for best: 24.40888
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -50.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_838} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_inc} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_max} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_cos} {:instruction in1} {:instruction float_dup} {:instruction float_add} {:instruction tag_integer_838} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction float_dup} {:instruction float_rot} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction float_dec} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush integer_yankdup integer_swap float_max float_add tag_float_838 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_div float_div integer_inc integer_div tagged_950 float_mod float_sub float_yankdup integer_fromfloat in2 integer_max integer_mult float_dup_times integer_dup_items integer_mod float_flush float_inc float_shove float_mod float_max integer_swap float_dup_times float_max float_tan integer_fromfloat in2 integer_max float_cos in1 float_dup float_add tag_integer_838 integer_fromfloat float_swap float_dup float_rot float_sub integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_mod integer_dup_items integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat integer_add integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec float_dec in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 2.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0214
Mean: 12.420428
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5051.163122699999
Median total errors in population: 1156.7046
Error averages by case: (283.27271240000067 7.431 177.71550319999906 8.676 168.8979515000008 9.516 216.4412746000002 6.544 177.83695130000004 5.456 179.048444100001 10.05 217.7254555999991 9.577 165.5681974000011 7.72 179.91278690000107 10.764 203.1709983 5.669 214.6003030000001 9.873 221.73330330000022 10.643 191.86149750000115 9.212 179.57649840000016 6.151 180.1145733999989 8.413 202.25806470000114 8.996 178.2243662999988 8.43 178.02726069999918 10.526 171.22057259999906 10.105 212.60819339999964 8.346 167.26002989999913 8.17 173.98520479999905 10.81 184.46258930000116 10.799 225.50507359999992 8.39 179.92331649999923 9.945)
Error minima by case: (56.0 2 5.6984 2 2.9835 2 0.0165 1 0.0 0 0.9888 2 0.3321 1 0.0165 2 5.0165 2 5.8424 1 0.5947 1 0.2137 7 0.4448 2 0.6689 2 13.9835 2 7.0 1 0.6444 2 0.9543 2 1.0165 2 0.5625 1 0.5904 1 3.3385 1 13.6511 3 0.5031 2 5.8717 2)
Average genome size in population (length): 177.653
Average program size in population (points): 178.653
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 202.2502605596743
Average age in population: 195.4000769401276
Median age in population: 200.2001402818362
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.579
Error (vector) diversity:			 0.58
Behavioral diversity:				 0.586
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 570729611
--- Timings ---
Current time: 1529615740994 milliseconds
Total Time:         941.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       211.7 seconds, 22.5%
Fitness Testing:    569.4 seconds, 60.5%
Report:             159.9 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 48817.76799999996
Test mean error for best: 24.40888
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -39.3612579403
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -50.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_swap} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction integer_max} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 56.56511261565714} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction float_dec} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction 15} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 float_tan integer_shove tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush float_pop integer_fromfloat float_dup integer_fromfloat in2 integer_max integer_swap integer_fromfloat in2 float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup integer_dup_items float_pop float_flush integer_mult float_dup_times integer_dup_items integer_mod float_flush integer_shove integer_yankdup float_dup integer_pop integer_fromfloat integer_yankdup float_dup_times float_pop integer_yankdup integer_rot integer_mod integer_dup_items integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_fromfloat integer_add integer_max integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 56.56511261565714 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec float_dec in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min integer_dec 15 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 4.1802 8 25.9835 9 2.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0214
Mean: 12.420428
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4696.545459999997
Median total errors in population: 1073.96445
Error averages by case: (267.6972720000007 7.375 156.87354469999912 8.723 153.1869925000007 9.3 209.6475153 6.576 170.45648419999998 5.195 163.58981070000104 9.932 215.0510080999991 9.45 145.87668240000085 7.748 162.97633730000092 10.64 196.2962548999999 5.801 210.21133579999997 10.087 216.20683120000015 10.602 170.17149900000103 9.271 158.8053520000001 5.981 159.49524779999896 8.452 180.9464560000011 9.058 159.01334809999904 8.499 162.41872099999924 10.459 155.59691479999918 10.026 209.34648099999959 8.245 147.69748649999926 8.269 154.96413759999913 10.708 166.85830180000107 10.686 218.84583979999985 8.343 164.83360549999927 10.056)
Error minima by case: (56.0 2 17.0165 3 2.9835 2 0.8863 1 0.0 0 0.9888 8 0.3321 1 0.0165 2 7.281 2 0.2642 1 8.7636 1 0.1802 6 0.4448 2 1.7989 2 23.0 2 10.738 2 9.6609 2 0.9543 2 0.6619 2 0.0576 1 3.0165 1 2.645 2 3.0499 8 4.3749 2 4.8429 2)
Average genome size in population (length): 177.949
Average program size in population (points): 178.949
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 203.5727700002937
Average age in population: 198.3340739377723
Median age in population: 201.5777037534701
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.576
Error (vector) diversity:			 0.582
Behavioral diversity:				 0.584
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 575305511
--- Timings ---
Current time: 1529615748064 milliseconds
Total Time:         948.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       213.2 seconds, 22.5%
Fitness Testing:    573.8 seconds, 60.5%
Report:             161.1 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 42925.64839999995
Test mean error for best: 21.46282
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_swap} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction 35.47905287238251} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_tan} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_mod} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_yankdup float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max integer_swap tagged_950 integer_mult float_dup_times integer_dup_items float_pop float_flush float_tan float_shove float_mod float_max integer_swap float_dup_times 35.47905287238251 integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot float_mod integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_tan in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_yankdup integer_add integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot integer_mod -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4599.935472299998
Median total errors in population: 1151.3182999999997
Error averages by case: (268.8366463000007 7.29 158.48227289999897 8.615 151.32740340000078 9.32 194.3214598999998 6.577 167.2850239999999 5.219 163.16039020000105 9.884 194.95699019999938 9.513 147.23537410000102 7.739 165.68779850000115 10.652 180.75584329999987 5.782 193.66691270000004 9.736 205.08757909999994 10.666 171.85943570000117 9.162 162.62314969999989 5.545 160.8394995999989 8.376 182.47708670000114 8.943 159.91557059999906 8.433 162.6332776999991 10.405 155.97453809999902 9.981 189.81475779999988 8.373 148.13872749999922 8.169 156.65368959999893 10.71 168.8010013000011 10.688 206.00918999999973 8.406 165.28885339999903 9.919)
Error minima by case: (56.0 2 17.0165 2 7.0165 8 0.8863 1 0.0 0 0.9523 8 0.3321 1 0.0165 2 7.281 8 0.377 1 10.0165 1 0.0785 2 4.9901 2 1.0054 2 24.0 1 7.0 1 0.6444 2 8.7937 2 1.0165 2 0.0576 1 3.0165 1 2.3943 8 1.0326 8 3.0682 2 1.9677 2)
Average genome size in population (length): 177.321
Average program size in population (points): 178.321
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 204.7751345326148
Average age in population: 198.5723179532174
Median age in population: 202.8345761940395
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.585
Error (vector) diversity:			 0.593
Behavioral diversity:				 0.599
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 579863086
--- Timings ---
Current time: 1529615754977 milliseconds
Total Time:         955.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       214.6 seconds, 22.5%
Fitness Testing:    578.1 seconds, 60.5%
Report:             162.3 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 43364.80529999995
Test mean error for best: 21.68240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_yank} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction float_add} {:instruction tag_float_705} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_inc} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_div} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_mod} {:instruction float_add} {:instruction integer_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_max} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_cos} {:instruction in1} {:instruction integer_yank} {:instruction float_add} {:instruction tag_integer_838} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction float_dup} {:instruction float_rot} {:instruction float_sub} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_min} {:instruction in2} {:instruction integer_yank} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_pop in1 float_add tag_float_737 float_yank 55.016479005958544 in1 float_add float_add tag_float_705 float_max integer_yankdup float_div float_div integer_inc integer_div tagged_950 float_mod float_sub float_yankdup integer_fromfloat in2 integer_max tagged_950 float_mod float_sub float_div integer_fromfloat in2 integer_max integer_pop float_sub float_flush float_stackdepth tagged_950 integer_mult float_mod float_add integer_max integer_swap float_dup_times float_max float_tan integer_fromfloat in2 integer_max float_cos in1 integer_yank float_add tag_integer_838 integer_fromfloat float_swap float_dup float_rot float_sub integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_mod float_yankdup integer_dup_items integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_min in2 integer_yank tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4846.778500899998
Median total errors in population: 1202.54045
Error averages by case: (275.0397141000008 7.465 169.37339199999892 8.765 155.35491210000083 9.393 218.78021630000003 6.666 161.12764689999997 5.37 167.67469740000118 9.975 219.81467559999925 9.535 156.255397600001 7.873 169.07991680000103 10.685 204.93102669999988 5.985 215.73696760000007 9.901 223.2923745 10.779 182.5338662000012 9.273 155.14557560000003 5.553 171.11474939999894 8.495 193.22968310000132 9.036 168.4684159999989 8.533 166.25680919999894 10.356 159.2982294999989 9.999 210.6240373999994 8.469 158.18082149999907 8.275 162.52468159999904 10.75 171.39013840000106 10.747 222.65953099999987 8.556 168.59402439999903 9.863)
Error minima by case: (55.0 2 5.2686 3 2.9835 2 0.6024 1 0.0 0 0.0112 2 0.3321 1 0.9835 2 1.2841 2 0.9066 1 9.679 1 0.1439 2 4.9901 2 0.014 2 13.0 2 13.262 2 0.6444 2 5.985 2 0.0165 2 0.0576 1 3.9607 1 3.3385 2 2.5461 8 0.8941 2 7.2395 2)
Average genome size in population (length): 176.934
Average program size in population (points): 177.934
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 206.3426545772107
Average age in population: 199.1952325467845
Median age in population: 204.0898183074709
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.597
Error (vector) diversity:			 0.604
Behavioral diversity:				 0.607
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 584411511
--- Timings ---
Current time: 1529615761974 milliseconds
Total Time:         962.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.0 seconds, 22.5%
Fitness Testing:    582.4 seconds, 60.5%
Report:             163.5 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 43196.05969999994
Test mean error for best: 21.59803
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_add} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction float_div} {:instruction float_div} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_sin} {:instruction tag_float_737} {:instruction float_div} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_dec integer_fromfloat tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup integer_yankdup float_yankdup integer_fromfloat float_add float_div float_flush integer_div float_div float_div integer_shove integer_fromfloat in2 integer_max float_sin tag_float_737 float_div float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod integer_dup float_sub integer_inc float_sub float_frominteger integer_max integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_mod float_yankdup float_shove integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_fromfloat integer_inc integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_shove float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5163.969325199999
Median total errors in population: 1187.7721
Error averages by case: (276.23134930000066 7.286 177.19844559999902 8.841 173.58655450000074 9.455 231.40305829999994 6.817 175.8472294999999 5.707 181.36657050000096 10.047 230.08483389999924 9.669 169.136608300001 7.981 183.20066370000106 10.75 217.63841829999993 6.041 227.18688939999998 10.11 236.93217759999982 10.85 189.73009760000102 9.36 175.62425470000017 5.984 179.55275359999894 8.563 200.2452886000011 9.13 182.9770329999991 8.646 180.19229109999907 10.5 173.49802649999904 10.133 226.95352519999958 8.354 167.9121703999992 8.358 175.24574159999923 10.827 189.07380760000106 10.758 238.23755889999993 8.426 182.17997749999915 10.141)
Error minima by case: (55.0 2 17.0165 3 0.7554 2 0.0165 1 0.0 0 0.5648 8 1.1357 1 0.3748 2 3.8595 2 0.3579 1 10.4481 1 0.5757 2 24.3748 2 2.0 2 7.4942 2 36.3748 2 8.7573 2 10.0165 2 0.0165 2 0.0749 1 0.6084 1 1.355 2 12.6069 8 7.9454 2 3.9047 2)
Average genome size in population (length): 178.188
Average program size in population (points): 179.188
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 207.6398938652415
Average age in population: 201.6150158722181
Median age in population: 205.4028783205052
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.557
Error (vector) diversity:			 0.563
Behavioral diversity:				 0.567
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 588992611
--- Timings ---
Current time: 1529615769156 milliseconds
Total Time:         969.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       217.4 seconds, 22.4%
Fitness Testing:    586.9 seconds, 60.6%
Report:             164.7 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 43196.05969999994
Test mean error for best: 21.59803
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction float_add} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_add} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction float_div} {:instruction float_div} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_sin} {:instruction tag_float_737} {:instruction float_div} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_flush float_add integer_stackdepth integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_dec integer_fromfloat tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup integer_yankdup float_yankdup integer_fromfloat float_add float_div float_flush integer_div float_div float_div integer_shove integer_fromfloat in2 integer_max float_sin tag_float_737 float_div float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod integer_dup float_sub integer_inc float_sub float_frominteger integer_max integer_min float_flush float_inc float_shove float_dup_times float_dup_times integer_dup_items integer_mod float_flush float_inc integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_mod float_yankdup float_shove integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_fromfloat integer_inc integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_shove float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4507.570509299999
Median total errors in population: 1104.7375499999998
Error averages by case: (271.8366924000006 7.203 152.4202039999993 8.669 145.0322036000006 9.272 204.27590349999997 6.628 159.97464269999983 5.463 154.84846330000082 9.884 205.47772029999936 9.475 135.10203080000065 7.815 154.1816525000008 10.622 190.64208079999992 5.838 202.92350609999994 10.144 211.6796161999995 10.751 163.64898320000094 9.193 153.4605802 5.456 153.99074849999928 8.423 174.511623900001 9.009 148.28617329999932 8.463 153.01707799999932 10.299 145.42590559999942 9.925 198.6727956999998 8.108 139.30457529999936 8.219 145.83460659999926 10.675 159.76837940000078 10.638 209.70032579999997 8.214 155.19801759999922 9.97)
Error minima by case: (56.0 2 5.6984 2 0.7554 2 0.0165 1 0.0 0 0.9888 2 0.3321 1 0.2856 2 1.3037 2 0.2312 1 7.7794 1 0.1439 2 1.0099 2 0.3311 2 3.3257 2 9.738 2 0.6444 2 4.0457 2 0.2726 2 0.0749 1 2.1659 1 0.5253 1 15.0567 3 1.4644 2 1.9047 2)
Average genome size in population (length): 177.267
Average program size in population (points): 178.267
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 208.675640335677
Average age in population: 201.7039465253522
Median age in population: 206.7057972758149
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.562
Error (vector) diversity:			 0.566
Behavioral diversity:				 0.572
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 593554193
--- Timings ---
Current time: 1529615776204 milliseconds
Total Time:         976.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       218.8 seconds, 22.4%
Fitness Testing:    591.3 seconds, 60.6%
Report:             166.1 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 43256.798499999946
Test mean error for best: 21.62840
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_yank} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_838} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_max} {:instruction float_add} {:instruction float_div} {:instruction integer_inc} {:instruction integer_div} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_sin} {:instruction tag_float_737} {:instruction float_div} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction float_shove} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_mod} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_pop in1 float_add tag_float_737 float_yank 55.016479005958544 in1 float_add integer_flush tag_float_737 integer_swap float_max float_add tag_float_838 float_mod float_add tag_float_737 integer_yankdup integer_yankdup float_max float_add float_div integer_inc integer_div tagged_950 float_mod float_sub float_yankdup integer_fromfloat in2 integer_max float_sin tag_float_737 float_div float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod integer_dup float_sub integer_inc float_sub float_frominteger float_shove integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_frominteger float_stackdepth tagged_950 float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_max integer_swap integer_yankdup integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_mod in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5353.494238699997
Median total errors in population: 1212.3283499999998
Error averages by case: (301.61360230000054 7.474 184.57986719999892 8.721 174.42462430000086 9.406 242.46879649999977 6.894 188.85446159999992 5.818 185.00543470000116 9.937 240.59286609999927 9.68 173.24982460000112 7.883 187.1257045000011 10.75 229.09381019999978 6.111 241.69603290000006 10.159 243.05132349999923 10.905 197.7875299000012 9.3 189.06190090000013 5.615 187.040140799999 8.493 208.0540627000012 9.051 185.65615009999888 8.535 184.6497382999989 10.577 178.45845689999896 10.205 233.52196999999967 8.379 173.83739599999896 8.299 178.51157829999892 10.769 190.3940761000011 10.761 245.3970497 8.453 187.17784059999903 10.015)
Error minima by case: (55.0 2 17.0165 2 0.7554 1 3.8528 1 0.0 0 0.9888 1 0.0724 1 0.7978 2 8.281 2 1.9066 1 6.767 1 0.1439 2 4.9901 2 2.2699 2 24.0 2 13.262 2 0.6444 2 10.5624 2 0.5624 2 0.2234 1 3.0165 1 1.0891 1 12.9835 2 0.9318 2 11.1283 2)
Average genome size in population (length): 179.319
Average program size in population (points): 180.319
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 209.8723102306185
Average age in population: 204.647721249286
Median age in population: 207.994315564968
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.556
Error (vector) diversity:			 0.561
Behavioral diversity:				 0.565
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 598168018
--- Timings ---
Current time: 1529615783183 milliseconds
Total Time:         983.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       220.2 seconds, 22.4%
Fitness Testing:    595.7 seconds, 60.6%
Report:             167.3 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 37233.21979999996
Test mean error for best: 18.61661
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -41.524515714 
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_swap} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction integer_dec} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_frominteger} {:instruction float_div} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_min} {:instruction float_tan} {:instruction float_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_cos} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.483483728824275} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction integer_yank})
Best program: (float_stackdepth in1 float_add tag_float_623 integer_dup_items integer_flush tag_float_737 tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_swap tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max integer_dec tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_inc float_frominteger float_div float_flush integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat float_cos integer_inc integer_rot integer_mult integer_dup_times integer_dup_items float_inc float_shove float_mod float_min float_tan float_max float_yankdup float_dup_times float_dup_times integer_fromfloat integer_yankdup integer_rot float_stackdepth tagged_950 float_div float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_cos in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.483483728824275 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup integer_inc float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot integer_dup_items float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_flush print_float integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 2.017 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.8582
Mean: 12.417164
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5371.362065199998
Median total errors in population: 1329.64615
Error averages by case: (313.6531582000006 7.899 191.196643699999 8.795 172.6604242000008 9.486 240.39440849999986 7.052 191.42001439999984 6.269 181.10604590000108 10.04 235.69714849999934 9.673 178.29257860000112 7.934 188.09560040000102 10.806 230.104606 6.196 237.48078320000008 10.216 241.193702199999 10.994 205.46696240000122 9.323 182.44754070000002 5.935 193.40025569999904 8.554 215.87029640000117 9.056 188.81536769999892 8.54 179.89886099999896 10.532 174.222912399999 10.179 231.0496753999998 8.38 181.15322229999916 8.352 178.51796529999902 10.854 189.2556999000011 10.834 243.42284469999993 8.496 182.22934749999908 9.921)
Error minima by case: (55.0 2 5.5677 2 0.2446 1 0.0393 1 0.0 0 0.9888 1 0.0724 1 0.7978 2 4.281 2 2.1468 1 4.6344 1 0.1439 8 16.6676 2 0.5871 2 14.0633 2 17.0983 2 0.9834 2 3.1079 2 0.9607 2 0.3149 1 3.9607 1 2.355 1 0.9748 2 6.6785 2 16.9607 2)
Average genome size in population (length): 177.121
Average program size in population (points): 178.121
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 211.3258303688981
Average age in population: 202.190383267284
Median age in population: 209.2798005666877
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.562
Error (vector) diversity:			 0.567
Behavioral diversity:				 0.577
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 602728043
--- Timings ---
Current time: 1529615790230 milliseconds
Total Time:         990.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       221.7 seconds, 22.4%
Fitness Testing:    600.2 seconds, 60.6%
Report:             168.5 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 43256.798499999946
Test mean error for best: 21.62840
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_fromfloat} {:instruction float_div} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_yank} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction integer_div} {:instruction float_inc} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 17} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_add} {:instruction float_dup} {:instruction integer_flush} {:instruction print_float} {:instruction float_sin} {:instruction float_stackdepth} {:instruction integer_yank})
Best program: (float_dec float_add tag_float_737 float_max 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush float_max integer_flush tag_float_737 integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 integer_fromfloat float_div float_yankdup float_mod float_mod float_add tag_float_737 float_tan integer_yank tagged_950 integer_yankdup float_sub integer_dup_items integer_mod integer_div float_inc float_shove float_mod float_max integer_swap float_dup_times integer_fromfloat integer_yankdup float_dup_times float_sub integer_inc float_sub float_frominteger integer_max integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_swap integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 17 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_add float_dup integer_flush print_float float_sin float_stackdepth integer_yank)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5504.039211299997
Median total errors in population: 1260.2310000000002
Error averages by case: (303.07584260000056 7.534 190.1920974999989 8.717 183.58068260000078 9.391 251.22241279999974 6.798 196.23012429999997 5.859 189.97280300000097 9.917 247.59098819999934 9.623 176.53932210000113 7.845 193.2775860000011 10.716 240.6588057000001 6.018 250.00418189999988 10.082 251.0070049999992 10.928 202.5999042000011 9.23 197.33952920000002 5.683 192.38066649999905 8.422 213.65799130000116 8.967 187.9584801999991 8.455 188.44842639999888 10.487 182.92432389999888 10.129 240.38766819999964 8.302 178.340131699999 8.256 184.2377091999989 10.769 197.54368710000114 10.741 253.1285034 8.385 190.51533829999906 9.971)
Error minima by case: (15.0 2 5.5677 2 2.9835 8 0.0393 1 0.0 0 1.0052 7 0.0724 1 0.9835 2 4.5215 2 1.3898 1 9.1717 1 0.1483 2 1.9281 2 0.6525 1 24.0 2 7.0 1 0.6444 2 0.9543 2 1.0165 2 0.3149 1 3.2261 1 3.3385 1 2.273 2 5.1079 2 2.9047 2)
Average genome size in population (length): 179.43
Average program size in population (points): 180.43
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 212.6448398400783
Average age in population: 207.2222775365919
Median age in population: 210.5915666959146
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.534
Error (vector) diversity:			 0.537
Behavioral diversity:				 0.542
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 607343268
--- Timings ---
Current time: 1529615797497 milliseconds
Total Time:         997.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.1 seconds, 22.4%
Fitness Testing:    604.8 seconds, 60.6%
Report:             169.6 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 43256.798499999946
Test mean error for best: 21.62840
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction float_min} {:instruction float_div} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_yank} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction integer_max} {:instruction integer_swap} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_max} {:instruction float_pop} {:instruction -27} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush float_min float_div float_yankdup float_mod float_mod float_add tag_float_737 float_tan integer_yank tagged_950 integer_yankdup integer_max integer_swap tagged_950 integer_mult float_dup_times integer_dup_items float_pop float_flush float_tan float_shove float_mod float_max float_pop -27 integer_mult float_stackdepth tagged_950 float_mod float_mod float_yankdup float_swap integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_yankdup integer_pop float_sub integer_div float_stackdepth tagged_950 float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5479.416910299998
Median total errors in population: 1247.5389
Error averages by case: (301.2331739000007 7.91 191.60312309999878 8.855 183.8260446000009 9.399 239.59631029999997 7.049 205.83354459999993 5.986 190.06807580000103 9.93 241.7703046999994 9.599 181.53579470000128 8.032 195.7071393000012 10.716 226.15887260000005 6.217 238.13866520000002 10.138 243.28696539999936 11.021 204.76397000000114 9.382 194.81573340000006 5.814 194.15820599999913 8.58 214.84085470000136 9.1 194.0859975999992 8.625 188.87331919999906 10.621 182.511265999999 10.224 232.4742402999994 8.513 183.59760949999898 8.45 188.2860949999989 10.787 199.12782990000096 10.756 247.42398220000027 8.622 191.2227922999991 10.151)
Error minima by case: (56.0 2 17.0165 2 4.116 1 4.447 1 0.0 0 1.1276 1 0.0724 1 0.4874 1 1.232 2 2.384 1 14.3843 1 0.1439 2 4.9901 2 0.5871 2 7.6464 2 13.262 1 0.6444 2 11.0165 2 1.0165 2 0.2863 1 3.0165 1 2.3385 2 0.1385 2 1.9403 2 2.9047 2)
Average genome size in population (length): 177.988
Average program size in population (points): 178.988
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 214.0335188461861
Average age in population: 205.381198449448
Median age in population: 211.8219074188784
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.527
Error (vector) diversity:			 0.53
Behavioral diversity:				 0.535
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 611921718
--- Timings ---
Current time: 1529615804499 milliseconds
Total Time:        1004.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       224.5 seconds, 22.3%
Fitness Testing:    609.2 seconds, 60.6%
Report:             170.9 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 43256.798499999946
Test mean error for best: 21.62840
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction float_min} {:instruction float_div} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction float_div} {:instruction float_div} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_swap} {:instruction float_sin} {:instruction tag_float_737} {:instruction float_div} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush float_min float_div float_yankdup float_mod float_mod float_add tag_float_737 float_div float_flush integer_div float_div float_div integer_div integer_fromfloat in2 float_swap float_sin tag_float_737 float_div float_sub float_pop integer_fromfloat float_tan float_max in2 integer_max float_mod integer_dup float_flush integer_inc float_sub float_frominteger integer_max integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5345.389136299998
Median total errors in population: 1229.3116999999997
Error averages by case: (314.8250211000006 7.669 182.6000184999988 8.677 177.35616990000088 9.352 235.9864602999998 6.869 190.0250255999999 5.688 186.21930770000108 9.928 240.91483789999916 9.514 172.81858600000112 7.804 189.1027253000012 10.738 221.90966989999995 5.995 233.52189039999996 10.116 243.97927129999903 10.976 194.89004360000126 9.218 184.30001309999994 5.425 186.186451199999 8.43 205.33828270000132 9.022 186.8787667999989 8.448 185.73081339999902 10.464 179.5553927999991 10.058 230.5391963999996 8.27 172.928900699999 8.248 183.17045069999884 10.804 193.0677898000011 10.718 245.55895760000016 8.349 187.2830935999991 9.922)
Error minima by case: (56.0 2 4.6984 2 0.2446 7 0.9105 1 0.0 0 0.568 8 0.0724 1 0.9835 2 1.328 2 2.384 1 6.7794 1 0.1439 2 4.9901 2 3.0 2 4.7392 2 13.262 2 0.6444 2 9.7298 2 0.0816 2 0.0749 1 0.5904 1 2.3385 2 1.5461 7 7.9454 1 2.9047 2)
Average genome size in population (length): 177.098
Average program size in population (points): 178.098
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 214.96776466561
Average age in population: 206.8997686251959
Median age in population: 213.0756607453355
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.518
Error (vector) diversity:			 0.525
Behavioral diversity:				 0.533
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 616478543
--- Timings ---
Current time: 1529615811470 milliseconds
Total Time:        1011.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.9 seconds, 22.3%
Fitness Testing:    613.6 seconds, 60.7%
Report:             172.1 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 42856.481199999944
Test mean error for best: 21.42824
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction -69} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_838} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_950} {:instruction integer_min} {:instruction float_sub} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_min} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction 67.4255464489666} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_tan} {:instruction in2} {:instruction integer_max} {:instruction tagged_668} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_tan} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_mod} {:instruction -53} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -40} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction -41} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 -69 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat print_float integer_yankdup integer_swap float_max float_add tag_float_838 integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_flush integer_div tagged_950 integer_min float_sub float_yankdup integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_min integer_div float_mod float_yankdup integer_dup_items integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times 67.4255464489666 integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_tan in2 integer_max tagged_668 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_yankdup integer_add integer_rot float_yankdup float_dup_times integer_dup_items integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat float_mod float_yankdup float_dup_times in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_tan in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times integer_yankdup integer_add integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot integer_mod -53 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -40 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod -41 float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5063.296020399999
Median total errors in population: 1110.7917499999999
Error averages by case: (295.19033550000063 7.5 178.15133839999896 8.688 170.2969132000007 9.322 220.80222079999973 6.699 172.10622819999992 5.279 176.29705390000115 9.88 217.70342159999942 9.445 166.14119940000094 7.832 183.28760960000088 10.658 208.4042653999998 5.812 218.5812023 9.978 220.2299491999988 10.902 190.8012769000012 9.235 179.98015469999996 5.631 181.03047259999906 8.437 201.260164500001 8.992 179.27573809999902 8.443 174.78233059999909 10.486 168.62465679999906 10.104 210.63923069999973 8.175 167.54516039999922 8.265 175.1577025999991 10.71 186.625588100001 10.666 223.28768780000001 8.328 177.61911909999907 10.008)
Error minima by case: (56.0 2 5.6984 2 0.2446 2 0.9105 1 0.0 0 0.9888 5 0.0724 1 0.5976 1 6.0 2 0.5208 1 4.2206 2 0.0924 3 4.9901 2 0.0909 2 0.9367 2 13.262 2 0.6444 2 3.1079 2 1.0165 2 0.3149 1 3.8341 1 2.355 1 2.5461 8 0.9318 2 2.4963 2)
Average genome size in population (length): 177.809
Average program size in population (points): 178.809
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 216.3910207545674
Average age in population: 208.5914141245741
Median age in population: 214.3882988485168
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.536
Error (vector) diversity:			 0.54
Behavioral diversity:				 0.544
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 621052843
--- Timings ---
Current time: 1529615818380 milliseconds
Total Time:        1018.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       227.3 seconds, 22.3%
Fitness Testing:    617.9 seconds, 60.7%
Report:             173.2 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 43364.80529999995
Test mean error for best: 21.68240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_yank} {:instruction 55.016479005958544} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_rot} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_pop} {:instruction print_float} {:instruction float_dup_times} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_yank} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_sub} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_737 float_yank 55.016479005958544 tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_rot float_max integer_swap float_dup_times float_pop print_float float_dup_times float_sub integer_inc float_sub float_frominteger integer_max integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat float_dup_items integer_rot float_yank integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 integer_div float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_mod float_yankdup integer_dup_items integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_sub tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 176
Size: 177
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5027.899724699998
Median total errors in population: 1181.96915
Error averages by case: (294.6273835000006 7.786 168.52298109999893 8.616 163.55388180000088 9.281 233.91533339999984 6.798 168.0070680999999 5.394 169.68222920000105 9.902 231.3763839999995 9.671 156.89737020000106 7.769 174.18544520000088 10.668 221.32053669999996 5.992 232.65492629999994 9.906 236.19637119999874 10.922 181.11405420000116 9.208 172.19947049999993 5.427 172.26647869999906 8.403 191.5895921000012 8.99 171.19873949999908 8.411 168.2925074999991 10.462 162.01701279999912 10.072 223.7567327999996 8.42 158.949022899999 8.231 168.12412789999894 10.738 179.08497620000105 10.678 237.14354099999994 8.569 170.94255789999917 9.967)
Error minima by case: (32.1347 2 5.6984 2 4.6736 8 0.0165 1 0.0 0 0.9888 8 0.0724 1 0.5071 1 4.4215 2 0.0922 1 1.025 1 0.0924 2 4.2887 2 1.6525 2 4.7388 2 7.0 1 6.1097 2 0.9543 2 0.0816 2 0.3149 1 3.0165 1 2.5631 2 1.2207 8 0.0682 1 2.9047 2)
Average genome size in population (length): 178.57
Average program size in population (points): 179.57
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 217.9303847299982
Average age in population: 211.8386742293684
Median age in population: 215.730840962572
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.543
Error (vector) diversity:			 0.55
Behavioral diversity:				 0.556
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 625643693
--- Timings ---
Current time: 1529615825321 milliseconds
Total Time:        1025.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.7 seconds, 22.3%
Fitness Testing:    622.2 seconds, 60.7%
Report:             174.5 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 43059.76669999994
Test mean error for best: 21.52988
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_yank} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction float_yankdup} {:instruction tag_float_705} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_div} {:instruction float_div} {:instruction float_yank} {:instruction tag_float_737} {:instruction integer_swap} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_add} {:instruction tag_float_623} {:instruction float_max} {:instruction float_yank} {:instruction tag_float_737} {:instruction integer_min} {:instruction float_max} {:instruction -65} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_rot} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_pop} {:instruction tagged_545} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction 66.69836965191448} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction float_flush} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_850} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_inc} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_swap} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_pop in1 float_add tag_float_737 float_yank 55.016479005958544 in1 float_add float_yankdup tag_float_705 float_max integer_yankdup float_div float_div float_div float_div float_yank tag_float_737 integer_swap tag_float_737 integer_swap float_add tag_float_623 float_max float_yank tag_float_737 integer_min float_max -65 integer_dup float_sub integer_rot tag_float_737 integer_yankdup float_pop tagged_545 float_mod float_add tag_float_737 float_tan integer_yankdup float_swap integer_fromfloat integer_inc 66.69836965191448 float_frominteger integer_max integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth float_stackdepth integer_rot integer_pop float_sub float_flush float_stackdepth tagged_950 integer_div float_mod float_yankdup integer_dup_items integer_fromfloat in2 float_stackdepth tagged_850 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max integer_inc float_flush float_inc tagged_950 float_swap float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_yank float_min in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop integer_mult integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5273.3460387
Median total errors in population: 1285.42075
Error averages by case: (297.5443472000008 7.915 183.39750849999876 8.69 172.4886105000008 9.424 239.0450924999998 6.998 195.4982639999999 5.612 177.23016290000112 9.942 235.72548359999942 9.6 170.15058440000112 7.865 186.28674290000114 10.712 227.32206769999982 6.182 239.33263409999972 10.084 240.25998619999902 10.972 196.65143780000128 9.231 179.17510560000017 5.547 186.08725489999895 8.452 207.1002683000013 8.984 182.62580089999898 8.459 176.84747219999878 10.467 170.7981473999988 10.109 228.5838071999995 8.498 172.684170699999 8.251 177.06645519999896 10.773 187.63169980000103 10.743 243.71683860000007 8.573 178.0580955999989 9.955)
Error minima by case: (56.0 2 5.5677 2 2.3835 8 0.0165 1 0.0 0 0.9888 1 0.0724 1 0.4024 2 5.0165 2 0.6718 1 0.2991 1 0.0994 2 4.9901 2 2.0 2 24.0 2 13.262 2 0.6444 2 4.9543 2 1.0165 2 1.4256 1 2.0165 1 3.3385 1 2.2244 8 10.12 2 1.8717 2)
Average genome size in population (length): 177.593
Average program size in population (points): 178.593
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 218.755187584357
Average age in population: 213.0501117621042
Median age in population: 216.9820679548561
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.531
Error (vector) diversity:			 0.535
Behavioral diversity:				 0.536
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 630207568
--- Timings ---
Current time: 1529615832271 milliseconds
Total Time:        1032.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       230.1 seconds, 22.3%
Fitness Testing:    626.7 seconds, 60.7%
Report:             175.7 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 42920.76819999995
Test mean error for best: 21.46038
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_803} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_add} {:instruction integer_div} {:instruction integer_max} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction float_div} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_yank} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction -73.47604253529767} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_inc} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_add integer_dup_times float_mod float_add tag_float_803 integer_yankdup integer_yankdup float_div float_div float_add integer_div integer_max float_sin integer_fromfloat float_div float_sub float_pop integer_fromfloat float_tan integer_fromfloat in2 integer_max float_mod integer_dup float_sub integer_inc float_frominteger integer_yank integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup integer_pop integer_fromfloat integer_yankdup -73.47604253529767 integer_fromfloat integer_yankdup integer_rot integer_pop float_frominteger integer_div float_stackdepth tagged_950 float_mod float_rot float_yankdup float_dup_times integer_fromfloat integer_div float_mod float_yankdup integer_dup_items integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_sub integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot integer_inc -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 174
Size: 175
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5233.647624299999
Median total errors in population: 1094.19985
Error averages by case: (282.1030927000007 7.656 182.65620789999895 8.713 172.35100090000086 9.373 236.1434222999998 6.461 179.1878999999999 5.523 185.73525430000103 9.927 230.9620633999994 9.579 168.38042550000097 7.878 185.99465570000098 10.674 223.2533837999999 5.707 234.46191969999992 9.795 234.8344602999987 10.951 195.1908054000012 9.299 181.89615349999997 5.391 185.99191189999905 8.499 205.87567090000118 9.038 181.429986599999 8.494 183.23599949999905 10.569 177.603113499999 10.209 225.51552949999964 8.295 171.34028009999915 8.314 178.34681149999906 10.739 186.685993100001 10.712 238.80191119999995 8.392 185.48967109999913 9.992)
Error minima by case: (56.0 2 17.0165 2 5.044 8 0.9105 1 0.0 0 0.9888 8 0.0724 1 0.9835 2 6.0 2 2.384 1 6.1282 1 0.1439 2 24.9835 2 0.3311 2 24.0 2 36.9835 2 9.3527 2 0.9543 2 0.9607 2 0.105 1 0.5904 1 3.3385 1 2.5461 8 3.433 2 2.9047 2)
Average genome size in population (length): 176.621
Average program size in population (points): 177.621
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 220.1282780391099
Average age in population: 213.7729075620565
Median age in population: 218.2479193170692
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.506
Error (vector) diversity:			 0.511
Behavioral diversity:				 0.515
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 634749068
--- Timings ---
Current time: 1529615839170 milliseconds
Total Time:        1039.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.5 seconds, 22.3%
Fitness Testing:    631.0 seconds, 60.7%
Report:             176.8 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 43068.026199999935
Test mean error for best: 21.53401
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_yank} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction float_yankdup} {:instruction tag_float_705} {:instruction float_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction float_div} {:instruction float_div} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_max} {:instruction integer_fromfloat} {:instruction float_swap} {:instruction float_dup} {:instruction float_rot} {:instruction float_sub} {:instruction float_sub} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_flush} {:instruction float_swap} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_div} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -53} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_pop in1 float_add tag_float_737 float_yank 55.016479005958544 in1 float_add float_yankdup tag_float_705 float_max integer_yankdup float_div float_div float_div float_div integer_inc integer_div integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_max integer_fromfloat float_swap float_dup float_rot float_sub float_sub integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div integer_fromfloat integer_yankdup float_dup_times float_sub integer_inc float_sub float_frominteger integer_max integer_min float_flush float_swap float_shove float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_div integer_pop integer_swap integer_pop float_sub integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -53 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5177.884527599998
Median total errors in population: 1223.2379999999998
Error averages by case: (283.5617552000006 7.587 177.89184139999892 8.718 171.46955100000082 9.403 235.56388649999977 6.858 170.85602189999994 5.37 184.08920790000104 9.965 232.77739809999935 9.597 163.98641650000096 7.907 182.00956240000102 10.699 223.64477999999988 6.005 233.44806239999983 9.929 237.7884046999986 10.899 190.65870480000126 9.256 177.82937740000008 5.663 180.4179297999991 8.518 201.0515397000011 9.036 177.27441869999916 8.496 181.61591029999894 10.403 175.81651519999895 10.017 225.44963819999944 8.493 167.37824809999918 8.324 173.525432699999 10.748 185.11550390000113 10.712 239.2437465 8.613 184.33467429999905 9.87)
Error minima by case: (6.8653 2 16.9458 2 2.9835 2 0.0165 1 0.0 0 1.907 8 0.5495 1 0.0165 2 4.3562 2 0.3579 1 14.0818 1 0.0924 2 4.9901 2 2.0 2 24.0 2 13.262 2 0.6444 2 0.9543 2 0.0542 2 0.3149 1 2.9458 1 3.3385 1 16.9355 8 3.8992 2 0.1687 2)
Average genome size in population (length): 176.221
Average program size in population (points): 177.221
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 221.582597120694
Average age in population: 214.5272803505232
Median age in population: 219.4960126518911
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.549
Error (vector) diversity:			 0.553
Behavioral diversity:				 0.555
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 639276893
--- Timings ---
Current time: 1529615846073 milliseconds
Total Time:        1046.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       232.9 seconds, 22.3%
Fitness Testing:    635.3 seconds, 60.7%
Report:             177.9 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 43364.80529999995
Test mean error for best: 21.68240
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.3277838723
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction float_frominteger} {:instruction integer_flush} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction integer_swap} {:instruction tag_integer_253} {:instruction float_add} {:instruction float_dup_times} {:instruction -55} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction integer_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_swap} {:instruction in2} {:instruction integer_max} {:instruction float_mod} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction float_frominteger} {:instruction float_shove} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.08184964965913} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_max} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 float_max 55.016479005958544 in1 float_add tag_float_623 float_frominteger integer_flush float_add tag_float_623 integer_fromfloat float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_add integer_swap tag_integer_253 float_add float_dup_times -55 float_dup_times float_pop integer_fromfloat integer_dec float_yankdup in2 float_mod float_add tag_float_737 float_tan integer_yankdup float_swap in2 integer_max float_mod integer_rot float_sub integer_inc float_sub float_frominteger float_shove integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup integer_rot float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_mod float_yankdup integer_yankdup integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items integer_fromfloat in2 integer_max tagged_729 float_flush float_inc tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_fromfloat in2 integer_max integer_rot integer_rot float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.08184964965913 in2 integer_dup_items float_dup float_rot float_yank float_max integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.2137 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 621.0549
Mean: 12.421098
Genome size: 171
Size: 172
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5123.105792399997
Median total errors in population: 1185.7223499999998
Error averages by case: (282.7436942000006 7.514 173.5364205999988 8.575 164.063464100001 9.315 242.60310729999978 7.029 174.37071889999982 5.202 175.4252000000011 9.882 236.7648616999994 9.595 162.40530460000107 7.681 174.11433520000105 10.634 228.87878550000005 6.187 237.2985921 9.858 242.03897199999903 10.979 186.21712020000118 9.116 177.03749739999995 5.493 176.6893225999989 8.343 196.91387410000118 8.912 175.1104094999989 8.339 174.06242729999877 10.459 167.96565239999885 10.084 226.85231819999956 8.456 161.52175209999902 8.152 166.89733709999902 10.674 180.10137570000109 10.636 242.89202280000006 8.686 176.92622679999891 9.874)
Error minima by case: (15.0 2 5.6984 2 0.3211 2 0.0393 1 0.0 0 0.4232 9 1.3591 1 0.9835 1 3.0 1 2.3898 1 7.7029 2 0.1439 2 14.4008 2 0.5871 2 2.4726 2 17.033 2 8.3542 2 3.1079 2 0.9346 2 0.0749 1 3.0165 1 2.4315 1 12.9835 2 1.7209 1 16.9346 2)
Average genome size in population (length): 177.054
Average program size in population (points): 178.054
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 222.9441148270928
Average age in population: 217.8268903188959
Median age in population: 220.6978093398924
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.538
Error (vector) diversity:			 0.544
Behavioral diversity:				 0.55
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 643826743
--- Timings ---
Current time: 1529615852973 milliseconds
Total Time:        1053.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.3 seconds, 22.2%
Fitness Testing:    639.6 seconds, 60.7%
Report:             179.2 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 42974.910999999986
Test mean error for best: 21.48746
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -43.6018756691
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction float_add} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_div} {:instruction float_div} {:instruction float_div} {:instruction integer_max} {:instruction tag_float_814} {:instruction tagged_947} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_pop} {:instruction in2} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_cos} {:instruction float_mod} {:instruction float_dup} {:instruction float_inc} {:instruction tag_integer_891} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup} {:instruction integer_swap} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_shove} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_swap} {:instruction float_dup_times} {:instruction 35.47905287238251} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_sin} {:instruction tagged_415} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_div} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_tan} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 54.44480375126641} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 tag_float_737 integer_flush 55.016479005958544 float_add float_add tag_float_623 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_yankdup integer_yankdup float_div float_div integer_div float_div float_div integer_max tag_float_814 tagged_947 float_mod float_mod float_dup_times float_pop in2 float_tan integer_fromfloat in2 integer_max float_cos float_mod float_dup float_inc tag_integer_891 integer_fromfloat float_pop float_dup integer_swap tagged_950 integer_mult float_dup_times integer_dup_items float_pop float_shove float_tan float_shove float_mod float_flush integer_swap float_dup_times 35.47905287238251 integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop float_sin tagged_415 float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_dup integer_div float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub integer_add float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_tan in2 integer_max tagged_729 float_flush float_inc tagged_950 float_sub float_yankdup float_dup_times float_yankdup float_dup_items integer_fromfloat in2 integer_max integer_rot integer_mod float_dup_times integer_dup_items -52 float_add float_dup_times integer_dup_items -52 float_add integer_fromfloat 54.44480375126641 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 0.0604 8 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 618.9016
Mean: 12.378032
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4867.372715499997
Median total errors in population: 1170.3075
Error averages by case: (289.3702522000005 7.505 158.04704999999913 8.615 156.5351463000007 9.275 225.3437638999999 6.687 171.94369559999984 5.349 166.9708515000009 9.843 227.56733849999938 9.617 147.39545910000078 7.798 168.50519400000084 10.679 211.35652840000006 5.841 223.246327 9.889 230.71351549999918 10.862 171.13181210000104 9.173 168.3211148 5.367 161.25966569999915 8.384 181.83155380000093 8.946 160.2559217999992 8.434 166.25980209999912 10.379 159.82601039999918 9.976 219.1639243999996 8.2 149.9152396999994 8.265 159.84082529999918 10.73 172.68628270000093 10.668 231.92166220000004 8.393 169.12277849999907 9.966)
Error minima by case: (6.8653 2 16.7269 2 3.8833 8 0.0165 1 0.0 0 0.9888 8 1.2181 1 0.4024 2 0.4549 8 1.0 1 0.2824 1 0.0604 2 1.9281 2 2.9182 2 8.9656 2 13.262 2 0.6444 2 4.1079 2 0.2731 2 0.3149 1 2.7269 1 1.8703 7 1.562 8 0.0847 2 3.9047 2)
Average genome size in population (length): 175.795
Average program size in population (points): 176.795
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 224.4532061155284
Average age in population: 219.5516394571552
Median age in population: 221.9919204915968
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.543
Error (vector) diversity:			 0.55
Behavioral diversity:				 0.555
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 648344993
--- Timings ---
Current time: 1529615859905 milliseconds
Total Time:        1060.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       235.7 seconds, 22.2%
Fitness Testing:    643.9 seconds, 60.7%
Report:             180.3 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 43252.65959999996
Test mean error for best: 21.62633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_div} {:instruction integer_div} {:instruction float_div} {:instruction float_div} {:instruction integer_max} {:instruction tag_float_814} {:instruction tagged_947} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_pop} {:instruction in2} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_cos} {:instruction float_mod} {:instruction float_dup} {:instruction float_inc} {:instruction tag_integer_891} {:instruction integer_max} {:instruction float_pop} {:instruction float_dup} {:instruction integer_swap} {:instruction tagged_950} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 float_mod float_add tag_float_737 integer_yankdup integer_yankdup integer_yankdup float_div float_div integer_div float_div float_div integer_max tag_float_814 tagged_947 float_mod float_mod float_dup_times float_pop in2 float_tan integer_fromfloat in2 integer_max float_cos float_mod float_dup float_inc tag_integer_891 integer_max float_pop float_dup integer_swap tagged_950 integer_mult float_dup_times integer_dup_items float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4938.114902599998
Median total errors in population: 1250.05685
Error averages by case: (284.97282260000065 7.64 161.530432899999 8.605 164.94866810000076 9.318 228.70785209999977 6.849 161.85528509999986 5.346 174.11316790000083 9.886 225.81682919999943 9.473 151.09763600000105 7.769 173.04124490000106 10.647 215.281513 6.035 226.48931370000003 10.034 231.25201459999874 10.826 175.07327990000107 9.125 166.21086800000003 5.256 164.42248969999906 8.323 185.7680202000011 8.906 162.6017264999991 8.374 173.33393929999906 10.446 167.18303459999905 10.119 218.41849709999963 8.217 151.7500160999991 8.144 164.72677839999906 10.714 180.92143240000092 10.651 234.3362702 8.371 175.29277009999913 9.895)
Error minima by case: (56.0 2 5.6984 2 0.2446 1 0.0165 1 0.0 0 0.9888 1 0.0342 1 0.4146 2 4.4215 2 0.0438 1 1.2206 1 0.1439 2 4.9901 2 2.9182 2 23.9697 2 7.0 1 0.6444 2 0.9543 2 0.2731 2 0.3149 1 1.2766 1 2.3385 1 10.9497 2 16.0682 2 3.9047 2)
Average genome size in population (length): 174.511
Average program size in population (points): 175.511
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 225.5530042811206
Average age in population: 220.1466164421932
Median age in population: 223.2802111991852
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.518
Error (vector) diversity:			 0.524
Behavioral diversity:				 0.53
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 652830768
--- Timings ---
Current time: 1529615866772 milliseconds
Total Time:        1067.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.1 seconds, 22.2%
Fitness Testing:    648.2 seconds, 60.8%
Report:             181.5 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 43252.65959999996
Test mean error for best: 21.62633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times integer_dup_items float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4991.359027799999
Median total errors in population: 1178.94775
Error averages by case: (277.0386591000007 7.517 175.88666149999872 8.675 161.37116100000074 9.254 221.9780512999998 6.628 177.13066289999992 5.454 174.24913610000092 9.858 218.84919579999925 9.455 158.21987560000107 7.76 175.973186500001 10.678 209.60084440000006 5.731 222.66962350000003 9.986 221.13786659999866 10.851 186.50918090000116 9.227 171.34168359999998 5.53 179.37519179999907 8.447 197.8360065000012 9.007 173.13988569999907 8.417 175.9172814999988 10.456 169.4011779999989 10.09 213.20663729999958 8.088 161.1248869999991 8.25 169.15240419999895 10.711 178.2356692000011 10.604 225.24512690000017 8.173 178.04297089999903 9.879)
Error minima by case: (55.0 2 16.7269 3 2.9835 2 3.8528 1 0.0 0 0.0112 2 0.0724 1 0.0165 2 5.0165 9 0.346 1 12.0818 1 0.097 2 4.9901 2 0.6525 2 5.0633 2 13.262 2 0.6444 2 0.9543 2 0.0165 2 0.0749 1 2.7269 1 2.3385 7 2.5461 3 6.4488 2 2.9047 2)
Average genome size in population (length): 174.416
Average program size in population (points): 175.416
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 226.5721677316086
Average age in population: 222.5609785768928
Median age in population: 224.5821501755012
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.522
Error (vector) diversity:			 0.526
Behavioral diversity:				 0.531
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 657313268
--- Timings ---
Current time: 1529615873697 milliseconds
Total Time:        1073.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       238.5 seconds, 22.2%
Fitness Testing:    652.5 seconds, 60.8%
Report:             182.7 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 43252.65959999996
Test mean error for best: 21.62633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times integer_dup_items float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5294.022380799997
Median total errors in population: 1249.9157999999998
Error averages by case: (308.15017660000063 7.615 176.81999949999886 8.667 176.13894780000084 9.373 243.3986164999998 6.934 180.64575429999988 5.225 185.21644890000096 9.954 238.13019259999953 9.576 167.172409500001 7.822 186.503947900001 10.699 231.55020439999998 6.11 241.59380400000006 10.139 244.48211119999897 10.982 191.02933130000113 9.18 182.04863530000014 5.473 179.41470309999906 8.39 201.6261420000012 8.995 179.13022049999913 8.458 182.2391223999989 10.451 176.40412369999908 10.094 232.09852569999944 8.313 168.2089959999991 8.247 177.828411199999 10.765 192.14952710000097 10.68 246.76567090000017 8.483 184.70635839999903 9.945)
Error minima by case: (53.4942 2 16.7269 2 4.3427 8 0.0165 1 0.0 0 0.9888 8 0.0317 1 0.0165 2 6.281 2 2.384 1 7.7794 2 0.097 2 3.9901 2 0.0909 2 12.0 2 12.262 2 0.3556 2 0.9543 2 0.2731 2 0.3149 1 2.7269 1 2.2322 1 16.3264 8 3.8857 2 5.8717 2)
Average genome size in population (length): 173.457
Average program size in population (points): 174.457
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 227.6718088663713
Average age in population: 222.2284426423594
Median age in population: 225.8356733779373
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.556
Error (vector) diversity:			 0.56
Behavioral diversity:				 0.563
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 661771618
--- Timings ---
Current time: 1529615880532 milliseconds
Total Time:        1080.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       239.9 seconds, 22.2%
Fitness Testing:    656.8 seconds, 60.8%
Report:             183.9 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 43252.65959999996
Test mean error for best: 21.62633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction in1} {:instruction integer_add} {:instruction tag_float_737} {:instruction float_swap} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction tagged_821} {:instruction float_add} {:instruction tag_float_838} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_pop in1 integer_add tag_float_737 float_swap 55.016479005958544 in1 float_add integer_flush tag_float_737 integer_swap tagged_821 float_add tag_float_838 integer_yank float_yankdup integer_fromfloat in2 tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times integer_dup_items float_pop float_flush float_tan float_shove integer_dup float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4840.306066499998
Median total errors in population: 1203.2390499999997
Error averages by case: (282.4694107000006 7.396 165.69775419999897 8.726 160.71354250000067 9.372 219.22767089999982 6.599 173.62868259999988 5.525 164.02679300000113 9.981 209.56192629999933 9.626 155.353103400001 7.934 173.44124560000094 10.686 202.17546409999989 5.765 217.6965661999999 10.02 214.80899859999872 10.901 179.13291330000123 9.285 164.53689909999997 5.486 167.8052235999989 8.464 189.85906910000116 9.044 167.66055449999908 8.533 165.35350929999896 10.429 158.81509549999896 10.073 204.06060269999952 8.167 156.5184768999991 8.298 165.91978969999906 10.755 175.47268570000105 10.67 218.2809426000001 8.286 168.0441463999989 10.024)
Error minima by case: (36.8653 2 1.5677 2 7.0165 1 0.6417 1 0.0 0 0.978 1 0.0342 1 0.9835 2 3.1491 2 1.3898 1 0.7794 1 0.0126 2 4.9901 2 1.3311 2 6.8687 2 13.262 2 0.6444 2 0.9543 2 0.2276 2 0.3149 1 0.4378 1 2.3385 1 1.562 2 4.4904 2 2.9047 2)
Average genome size in population (length): 172.928
Average program size in population (points): 173.928
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 229.0986974598747
Average age in population: 223.9086412530883
Median age in population: 227.1009865771443
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.575
Error (vector) diversity:			 0.578
Behavioral diversity:				 0.583
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 666218093
--- Timings ---
Current time: 1529615887394 milliseconds
Total Time:        1087.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       241.3 seconds, 22.2%
Fitness Testing:    661.0 seconds, 60.8%
Report:             185.1 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 42960.33069999997
Test mean error for best: 21.48017
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction in1} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_mod} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times in1 float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times float_mod integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5201.693556499999
Median total errors in population: 1324.8689500000003
Error averages by case: (299.40463820000053 7.699 181.20129229999895 8.574 170.9887173000007 9.472 234.5875036999998 6.77 178.81124539999988 5.292 179.23594450000084 9.954 224.21593409999934 9.765 170.91571400000097 7.712 185.71542860000085 10.774 220.5804230999999 5.908 231.98958289999996 9.974 233.1372716999987 10.876 196.1162486000011 9.084 181.6968747000001 5.378 183.27451489999916 8.286 206.6000229000011 8.841 181.07889529999923 8.301 179.3209985999992 10.385 173.56315649999922 10.076 217.4708217999997 8.279 170.28329529999917 8.065 177.749750499999 10.818 186.46095680000082 10.71 236.69808119999993 8.387 181.34524359999924 9.871)
Error minima by case: (15.0 2 3.5872 2 6.2446 8 1.9835 1 0.0 0 0.9888 7 1.3123 1 0.9835 2 5.3628 2 2.384 1 10.0165 1 0.1439 2 4.9901 2 2.9182 2 1.7745 2 13.262 2 0.6444 2 3.4128 2 1.0165 2 0.0749 1 0.4378 1 3.3385 1 13.9748 8 0.747 2 2.5872 2)
Average genome size in population (length): 173.399
Average program size in population (points): 174.399
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 230.4185734206206
Average age in population: 225.0462853590689
Median age in population: 228.3813943020438
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.544
Error (vector) diversity:			 0.549
Behavioral diversity:				 0.551
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 670677093
--- Timings ---
Current time: 1529615894317 milliseconds
Total Time:        1094.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       242.7 seconds, 22.2%
Fitness Testing:    665.3 seconds, 60.8%
Report:             186.3 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 43111.50639999996
Test mean error for best: 21.55575
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction in1} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times in1 float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5097.3519828
Median total errors in population: 1245.4008
Error averages by case: (295.41514810000075 7.611 178.37687729999882 8.701 164.1973155000009 9.447 233.5269463999998 6.892 172.69141399999992 5.35 171.69455790000106 9.982 227.13988929999923 9.573 165.6297751000011 7.827 178.97323980000098 10.793 221.7022328 6.107 230.96541019999995 10.067 235.594766799999 10.952 191.91026910000127 9.2 167.1863004 5.172 181.12669889999907 8.431 202.01679880000117 8.982 178.2489141999991 8.458 170.08910999999904 10.339 163.8636840999991 9.963 218.76858239999953 8.287 167.65795929999905 8.23 171.23169579999896 10.841 179.80335040000108 10.7 236.6842989000001 8.409 172.65874729999908 9.884)
Error minima by case: (3.8653 2 3.5872 2 2.9835 2 0.9105 1 0.0 0 0.6787 8 0.0342 1 0.9835 2 1.6968 2 1.4436 1 10.0165 1 0.1483 2 3.9901 2 1.16 2 14.5872 2 12.262 2 0.3556 2 3.4128 2 0.0165 2 0.0749 1 3.0165 1 0.645 2 6.0252 8 4.0 1 2.5872 2)
Average genome size in population (length): 174.223
Average program size in population (points): 175.223
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 232.0390204081267
Average age in population: 226.7563655885454
Median age in population: 229.6429920752806
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.564
Error (vector) diversity:			 0.575
Behavioral diversity:				 0.577
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 675160418
--- Timings ---
Current time: 1529615901208 milliseconds
Total Time:        1101.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.2 seconds, 22.2%
Fitness Testing:    669.6 seconds, 60.8%
Report:             187.5 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 43111.50639999996
Test mean error for best: 21.55575
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction in1} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times in1 float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5093.265902999998
Median total errors in population: 1180.995
Error averages by case: (297.9373136000006 7.57 175.24748879999893 8.605 160.91580700000085 9.376 235.81570419999974 6.7 174.86322479999993 5.323 170.01901760000106 9.946 232.61785169999925 9.597 163.8000547000011 7.729 178.25765580000103 10.685 222.3132737999999 5.899 234.3859283999999 10.026 239.34925469999888 10.96 188.79120170000124 9.105 168.93857199999997 5.047 177.778880699999 8.352 199.83881460000126 8.932 175.70715839999906 8.346 167.97119839999905 10.411 162.1238355999991 10.029 225.22479469999948 8.177 166.08255709999904 8.124 168.85276469999903 10.754 175.10027300000107 10.677 241.82775509999996 8.413 170.85852189999915 9.864)
Error minima by case: (15.0 2 10.1265 2 1.2446 2 2.8528 1 0.0 0 0.0112 7 1.3591 1 0.6858 2 0.8559 2 1.979 1 6.7794 1 0.0082 2 21.5264 2 0.6339 2 0.8735 2 36.6858 2 0.3556 2 10.0165 2 0.0165 2 0.2234 1 3.0165 1 1.5381 1 7.0165 3 2.2184 1 4.1283 2)
Average genome size in population (length): 175.051
Average program size in population (points): 176.051
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 232.9390292301139
Average age in population: 228.1120912009077
Median age in population: 230.8859700939681
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.522
Error (vector) diversity:			 0.529
Behavioral diversity:				 0.534
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 679665343
--- Timings ---
Current time: 1529615908393 milliseconds
Total Time:        1108.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       245.6 seconds, 22.2%
Fitness Testing:    674.1 seconds, 60.8%
Report:             188.6 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 43252.65959999996
Test mean error for best: 21.62633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction in1} {:instruction integer_add} {:instruction tag_float_737} {:instruction float_swap} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction tagged_821} {:instruction float_add} {:instruction tag_float_838} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_pop in1 integer_add tag_float_737 float_swap 55.016479005958544 in1 float_add integer_flush tag_float_737 integer_swap tagged_821 float_add tag_float_838 integer_yank float_yankdup integer_fromfloat in2 tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat float_stackdepth integer_yankdup float_dup_items integer_pop integer_max float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times integer_dup_items float_pop float_flush float_tan float_shove integer_dup float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5085.115457799998
Median total errors in population: 1260.25205
Error averages by case: (290.9652557000006 7.504 172.67138579999892 8.59 165.8280312000008 9.39 227.65350199999995 6.819 171.9497494999999 5.05 180.18895830000093 9.916 225.07874339999935 9.556 166.81749510000103 7.812 182.784259300001 10.705 214.20723609999993 6.046 228.40156299999992 10.032 230.90627649999902 10.969 186.5814519000011 9.084 174.1276277 5.322 174.65798679999912 8.313 197.32895390000115 8.879 178.36991359999914 8.404 178.4289514999991 10.341 171.53776389999908 9.999 217.59989589999958 8.304 163.53933989999908 8.146 171.97767789999898 10.749 181.795326700001 10.718 232.34588649999986 8.415 180.43022569999906 9.879)
Error minima by case: (49.3172 2 17.0165 3 1.203 8 3.8528 1 0.0 0 0.0112 8 1.3123 1 0.6825 2 8.2598 2 1.0 1 6.7794 1 0.0924 2 24.6825 2 0.6339 2 24.0 2 19.7393 2 7.4454 2 0.9543 2 0.0165 2 0.2863 1 3.0165 1 0.9074 2 16.9355 8 0.9318 1 2.9047 2)
Average genome size in population (length): 174.266
Average program size in population (points): 175.266
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 234.1968272228538
Average age in population: 227.8364325252536
Median age in population: 232.1620902620445
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.541
Error (vector) diversity:			 0.543
Behavioral diversity:				 0.548
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 684150293
--- Timings ---
Current time: 1529615915384 milliseconds
Total Time:        1115.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       247.0 seconds, 22.1%
Fitness Testing:    678.5 seconds, 60.8%
Report:             189.9 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 43252.65959999996
Test mean error for best: 21.62633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction tagged_821} {:instruction float_add} {:instruction tag_float_838} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_flush tag_float_737 integer_swap tagged_821 float_add tag_float_838 integer_yank float_yankdup integer_fromfloat in2 tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_dec float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times integer_dup_items float_pop float_flush float_tan float_shove integer_dup float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5292.373784099999
Median total errors in population: 1149.6718499999997
Error averages by case: (288.8409891000006 7.68 179.83688389999884 8.754 180.46034300000073 9.431 241.94261890000007 6.979 181.74298279999988 5.435 187.50005170000108 9.974 232.97347239999922 9.59 169.01755660000106 7.915 189.1393749000011 10.793 227.14568659999992 6.24 238.59917199999992 10.19 236.7987029999989 11.011 192.5182237000012 9.332 178.33030540000007 5.531 183.313858699999 8.53 202.94538360000132 9.082 182.67450599999904 8.515 187.824273899999 10.495 181.64277989999908 10.17 227.40939579999952 8.271 171.99109629999904 8.361 181.62310229999895 10.859 194.78708990000106 10.758 240.7472578999999 8.467 190.08667579999906 10.119)
Error minima by case: (55.0 2 5.6984 2 9.2116 8 1.8528 1 0.0 0 0.9888 8 0.4591 1 0.9835 2 3.6727 9 1.3898 1 14.0536 1 0.0458 2 4.9901 2 3.0 2 3.9952 2 13.262 2 0.6444 2 0.9543 2 0.0165 2 0.2234 1 3.5068 1 2.4764 8 0.7632 8 0.0682 2 2.7932 2)
Average genome size in population (length): 175.779
Average program size in population (points): 176.779
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 235.3883497637274
Average age in population: 230.0440037356317
Median age in population: 233.3430837976938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.539
Error (vector) diversity:			 0.541
Behavioral diversity:				 0.543
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 688672068
--- Timings ---
Current time: 1529615922314 milliseconds
Total Time:        1122.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       248.4 seconds, 22.1%
Fitness Testing:    682.8 seconds, 60.8%
Report:             191.2 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 43252.65959999996
Test mean error for best: 21.62633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction in1} {:instruction integer_add} {:instruction tag_float_737} {:instruction float_swap} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction integer_mod} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_div} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_pop in1 integer_add tag_float_737 float_swap 55.016479005958544 in1 float_add integer_flush tag_float_737 integer_swap integer_yank float_yankdup integer_fromfloat in2 tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove integer_mod float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop integer_max float_yankdup float_stackdepth tagged_950 float_mod integer_div float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times integer_dup_items float_pop float_flush float_tan float_shove integer_dup float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5117.062254999998
Median total errors in population: 1109.8159499999997
Error averages by case: (285.6476295000007 7.744 176.590688499999 8.795 167.0837115000007 9.371 233.68422719999978 6.882 183.288643 5.295 174.76040850000095 9.909 228.5370001999991 9.428 165.07458830000084 7.926 183.61746480000107 10.754 216.66403369999995 6.065 231.37250120000004 10.077 229.90336269999892 11.0 191.1591415000011 9.33 175.14820070000002 5.367 179.5349194999991 8.528 199.71869110000114 9.115 178.33739089999912 8.505 173.45732969999912 10.392 166.86028369999914 10.088 220.29495969999954 8.152 168.4600310999992 8.38 173.65108689999906 10.824 184.57069360000096 10.723 233.41486529999992 8.35 175.19740219999912 10.033)
Error minima by case: (37.8653 2 17.9607 2 0.2446 8 2.9835 1 0.0 0 0.0112 8 0.0724 1 0.4024 2 4.3562 2 0.1718 1 11.7794 1 0.0938 2 3.9901 2 0.5871 2 7.9496 2 11.0 2 0.6444 2 10.9607 2 0.9607 2 0.0749 1 3.9607 1 1.645 2 8.8975 8 2.8636 2 1.9047 2)
Average genome size in population (length): 176.652
Average program size in population (points): 177.652
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 236.4309656525902
Average age in population: 231.9544141390882
Median age in population: 234.5400721779832
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.537
Error (vector) diversity:			 0.541
Behavioral diversity:				 0.544
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 693216018
--- Timings ---
Current time: 1529615929193 milliseconds
Total Time:        1129.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       249.8 seconds, 22.1%
Fitness Testing:    687.1 seconds, 60.8%
Report:             192.4 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 43220.46639999996
Test mean error for best: 21.61023
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_add} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction float_yankdup} {:instruction float_mod} {:instruction integer_pop} {:instruction float_add} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_yank} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction integer_max} {:instruction integer_swap} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction in1} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_sub float_add float_add tag_float_737 integer_flush 55.016479005958544 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush float_yankdup float_mod integer_pop float_add tag_float_737 float_tan integer_yank tagged_950 integer_yankdup integer_max integer_swap float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times in1 float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 integer_min integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 173
Size: 174
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4956.108606599998
Median total errors in population: 1177.7469
Error averages by case: (285.10270080000066 7.781 168.32754829999888 8.702 162.13664580000062 9.335 227.47016760000005 6.844 176.20231399999994 5.315 164.3219437000009 9.871 228.85091209999922 9.443 157.72379070000113 7.879 172.17245350000104 10.725 214.20574449999978 6.074 228.22766670000007 10.161 229.86932859999885 11.005 181.66213440000112 9.218 165.54404510000012 5.214 171.3147190999991 8.485 192.2016173000013 9.034 170.2450095999992 8.455 164.1181752999991 10.453 157.4943198999992 10.114 220.9246835999996 8.233 158.83733709999905 8.281 163.76794969999912 10.791 175.388527100001 10.747 232.89510839999977 8.389 166.5337636999992 10.021)
Error minima by case: (38.8653 2 17.0809 3 3.3427 2 0.2768 1 0.0 0 0.8315 2 1.8622 1 0.5646 2 1.0898 2 1.0 1 10.0165 1 0.097 2 6.9901 2 1.0054 2 24.0 2 15.262 2 0.2003 2 2.1079 2 0.0809 2 0.2772 1 3.0809 1 1.2322 2 7.1301 3 0.9318 2 2.9047 2)
Average genome size in population (length): 177.575
Average program size in population (points): 178.575
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 237.8913319632405
Average age in population: 231.0443292288731
Median age in population: 235.7910847140121
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.519
Error (vector) diversity:			 0.523
Behavioral diversity:				 0.529
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 697783443
--- Timings ---
Current time: 1529615936124 milliseconds
Total Time:        1136.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       251.2 seconds, 22.1%
Fitness Testing:    691.4 seconds, 60.8%
Report:             193.6 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 43220.46639999996
Test mean error for best: 21.61023
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_float_737} {:instruction float_yank} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction float_yankdup} {:instruction tag_float_705} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_flush} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_pop} {:instruction tagged_545} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_swap} {:instruction float_sub} {:instruction integer_inc} {:instruction 66.69836965191448} {:instruction float_frominteger} {:instruction integer_max} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction 35.47905287238251} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (tag_float_737 float_yank 55.016479005958544 in1 float_add float_yankdup tag_float_705 integer_inc integer_div integer_fromfloat in2 integer_div integer_fromfloat in2 integer_max integer_pop tag_float_737 float_mod float_sub float_pop integer_flush float_add tag_float_737 integer_yankdup float_pop tagged_545 float_mod float_add tag_float_737 float_tan integer_yankdup float_swap float_sub integer_inc 66.69836965191448 float_frominteger integer_max integer_min float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup integer_rot integer_pop integer_fromfloat 35.47905287238251 integer_yankdup float_dup_times integer_fromfloat integer_yankdup integer_rot float_mod integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup integer_inc integer_fromfloat integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4894.100424699999
Median total errors in population: 1074.7986999999998
Error averages by case: (288.7814582000008 7.999 174.47822779999885 8.78 160.94231850000088 9.279 210.76260650000006 6.675 181.55026129999996 5.346 170.46720190000096 9.841 204.79985389999908 9.418 160.9352691000011 7.813 175.93377350000102 10.683 197.6190816999999 5.923 208.6310647000001 10.144 210.22370959999887 10.884 186.2984073000012 9.289 169.1993404 5.351 178.05468599999898 8.542 196.73488840000124 9.131 175.54431919999897 8.472 169.51949269999892 10.312 163.211584299999 9.954 198.6296674999996 8.097 163.878464099999 8.353 167.69415959999895 10.739 176.480918700001 10.686 211.88532959999964 8.16 171.9533401999989 10.02)
Error minima by case: (56.0 2 18.0165 3 4.3427 8 0.2768 1 0.0 0 0.0112 8 0.1378 1 0.0165 2 1.3708 2 1.1852 1 13.2095 2 0.0456 2 4.9901 2 1.6689 2 13.0633 2 13.262 2 0.6444 2 2.1079 2 1.0165 2 0.379 1 4.0165 1 0.645 2 7.4661 8 3.0218 2 2.9047 2)
Average genome size in population (length): 179.52
Average program size in population (points): 180.52
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 238.9483606045597
Average age in population: 234.6492180721121
Median age in population: 237.056777043581
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.519
Error (vector) diversity:			 0.519
Behavioral diversity:				 0.524
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 702399543
--- Timings ---
Current time: 1529615942937 milliseconds
Total Time:        1143.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       252.6 seconds, 22.1%
Fitness Testing:    695.7 seconds, 60.9%
Report:             194.7 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 43252.65959999996
Test mean error for best: 21.62633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction in1} {:instruction integer_add} {:instruction tag_float_737} {:instruction float_swap} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction tagged_821} {:instruction float_add} {:instruction tag_float_838} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction in2} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction integer_dup} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_pop in1 integer_add tag_float_737 float_swap 55.016479005958544 in1 float_add integer_flush tag_float_737 integer_swap tagged_821 float_add tag_float_838 integer_yank float_yankdup integer_fromfloat in2 tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add tag_float_737 float_mod float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times integer_dup_items float_pop float_flush float_tan float_shove integer_dup float_flush integer_rot integer_pop integer_dup integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4677.323778699999
Median total errors in population: 1087.4004499999996
Error averages by case: (260.904729200001 7.872 160.96595229999897 8.779 151.11064100000073 9.317 218.2671710999999 6.628 159.04697359999994 5.276 157.729117800001 9.832 210.23397599999888 9.391 145.62068060000084 7.911 162.4275439000009 10.71 202.99477969999967 5.847 215.57067819999995 10.099 216.806403899999 11.033 173.01060060000125 9.338 152.46527869999989 5.208 164.0795522999989 8.545 184.42578040000126 9.123 160.04168969999893 8.513 157.42380489999906 10.409 150.64957399999912 10.072 204.28945899999968 8.13 149.4434936999993 8.412 154.29837069999905 10.757 165.543265700001 10.677 219.6378819999999 8.315 160.02637969999898 10.116)
Error minima by case: (36.8653 2 16.7314 3 4.3427 8 0.0165 1 0.0 0 1.9538 1 0.0256 1 0.9835 2 3.352 2 1.841 1 13.035 2 0.097 2 23.9485 2 2.0185 2 4.588 2 35.9485 2 8.3073 2 10.9607 1 0.9607 2 0.3149 2 0.4378 1 2.2322 2 12.9682 2 4.6341 1 2.9047 2)
Average genome size in population (length): 179.735
Average program size in population (points): 180.735
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 240.2638268481063
Average age in population: 234.0176101065694
Median age in population: 238.2969118510692
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.511
Error (vector) diversity:			 0.513
Behavioral diversity:				 0.517
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 707018093
--- Timings ---
Current time: 1529615949909 milliseconds
Total Time:        1150.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       254.0 seconds, 22.1%
Fitness Testing:    700.1 seconds, 60.9%
Report:             195.8 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 43111.50639999996
Test mean error for best: 21.55575
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_pop} {:instruction float_dec} {:instruction float_add} {:instruction tag_float_736} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_mod} {:instruction in1} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_mult} {:instruction float_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction float_stackdepth} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_div} {:instruction float_inc} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_div} {:instruction float_dup_times} {:instruction in1} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 integer_pop float_dec float_add tag_float_736 float_max 55.016479005958544 in1 float_add tag_float_623 integer_swap integer_flush float_max integer_flush tag_float_737 integer_flush tag_float_737 integer_swap float_max float_add float_dec integer_fromfloat float_dec float_yankdup float_mod float_mod in1 integer_dup_items integer_mod float_flush float_mult float_sub integer_shove integer_mod float_stackdepth integer_div integer_mod integer_div float_inc float_shove integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_dup_times float_dup integer_div float_dup_times in1 float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times float_tan integer_rot integer_mult float_dup_items integer_max integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5097.215016299999
Median total errors in population: 1043.46465
Error averages by case: (289.2824315000008 8.097 178.22027079999893 8.803 168.99294200000077 9.321 223.6514499 6.663 183.1486682 5.51 177.95750910000098 9.86 221.18109639999878 9.384 165.60355680000114 7.937 184.0322195000012 10.69 212.29535679999992 5.903 223.81359290000015 10.187 226.77065409999864 10.989 190.0924351000012 9.359 169.92069539999994 5.43 181.61301079999905 8.558 200.5425262000013 9.153 179.62364509999904 8.521 177.57737129999907 10.489 170.95412369999912 10.155 214.79433559999944 8.098 166.66639599999903 8.392 175.89670109999898 10.752 184.96204570000108 10.743 227.96915449999972 8.211 180.22882779999907 10.219)
Error minima by case: (56.0 2 14.7051 2 3.4518 3 0.6417 1 0.0 0 0.0112 2 0.208 1 0.0938 2 5.316 2 1.7401 1 0.7794 1 0.097 3 4.9901 2 2.0 2 24.0 2 13.262 2 0.0909 2 9.5529 2 1.0165 2 0.6362 1 0.5904 1 2.2322 1 3.9748 7 3.0 2 2.9047 2)
Average genome size in population (length): 179.827
Average program size in population (points): 180.827
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 241.6392949386308
Average age in population: 234.0675966760362
Median age in population: 239.5837896737521
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.492
Error (vector) diversity:			 0.497
Behavioral diversity:				 0.502
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 711636618
--- Timings ---
Current time: 1529615956775 milliseconds
Total Time:        1157.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       255.5 seconds, 22.1%
Fitness Testing:    704.4 seconds, 60.9%
Report:             197.0 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 43219.64859999996
Test mean error for best: 21.60982
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 54.9607049605322} {:instruction float_stackdepth} {:instruction tag_float_737} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction 11.412783246326043} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_fromfloat} {:instruction float_div} {:instruction integer_swap} {:instruction float_mod} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_yank} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_inc} {:instruction float_mod} {:instruction float_sub} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction integer_sub} {:instruction float_mod} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_dup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction integer_add} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (54.9607049605322 float_stackdepth tag_float_737 float_max 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush 11.412783246326043 integer_flush tag_float_737 integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 integer_fromfloat float_div integer_swap float_mod float_mod float_add tag_float_737 float_tan integer_yank tagged_950 integer_yankdup float_sub integer_sub integer_mod integer_rot float_inc float_mod float_sub float_pop integer_fromfloat float_tan integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove integer_sub float_mod float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_div float_dup_times integer_dup_items float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_dup float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items float_cos integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup integer_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_dup_times integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank integer_add float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5452.268198899999
Median total errors in population: 1169.7765999999997
Error averages by case: (299.07211570000067 8.249 189.69633569999874 8.836 184.0596292000008 9.427 237.00607849999983 6.7 203.44571110000007 5.722 194.03263920000094 9.97 238.75722069999887 9.509 176.1072865000012 8.009 194.05440160000117 10.787 225.61334119999987 5.9 237.7935498999999 10.182 240.53933539999863 11.084 202.71120600000123 9.402 196.24847629999996 5.615 192.71826169999915 8.614 213.1251377000013 9.198 189.08285109999903 8.561 191.89258449999883 10.545 186.20877209999912 10.239 233.26626279999954 8.217 178.85122229999888 8.488 187.47203859999905 10.85 198.13114810000104 10.844 244.4908455999996 8.36 194.49474739999914 10.089)
Error minima by case: (30.1347 2 1.0587 2 0.2446 8 2.2504 1 0.0 0 0.9888 8 0.0126 1 0.4024 2 7.281 8 2.1967 1 3.1176 1 0.0862 7 4.9901 2 1.965 2 9.9413 2 13.262 2 0.6444 2 0.9543 2 1.0165 2 0.379 2 3.0165 1 1.0587 8 3.2344 8 5.4523 2 2.0587 2)
Average genome size in population (length): 178.787
Average program size in population (points): 179.787
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 243.0777188642427
Average age in population: 234.7387374857288
Median age in population: 240.8849880792079
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.494
Error (vector) diversity:			 0.5
Behavioral diversity:				 0.503
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 716227768
--- Timings ---
Current time: 1529615963653 milliseconds
Total Time:        1163.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       256.9 seconds, 22.1%
Fitness Testing:    708.7 seconds, 60.9%
Report:             198.2 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 43111.50639999996
Test mean error for best: 21.55575
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_sub} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction print_float} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_max} {:instruction float_dup_times} {:instruction in1} {:instruction float_pop} {:instruction float_flush} {:instruction float_tan} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_max} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_yankdup float_stackdepth tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_dup_times integer_max integer_pop tag_float_737 float_mod float_sub tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove print_float float_mod integer_rot integer_pop integer_fromfloat integer_yankdup float_yankdup float_stackdepth float_stackdepth float_mod float_mod float_yankdup float_dup_times integer_fromfloat integer_max float_dup_times in1 float_pop float_flush float_tan float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat float_dup_times integer_fromfloat integer_rot integer_max float_dup_items integer_max integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4788.456888999998
Median total errors in population: 1159.3372499999998
Error averages by case: (283.97889520000086 7.969 162.45065909999897 8.554 157.86188320000085 9.222 214.14883500000016 6.757 174.75449220000002 5.521 165.02050500000104 9.819 210.58087319999893 9.371 154.02275010000096 7.792 166.98081450000097 10.627 202.26748199999977 6.03 213.60956699999994 9.995 217.63191229999882 11.067 174.9275907000011 9.135 160.84422129999982 5.359 165.92378129999906 8.349 185.03389650000113 8.94 167.48289739999908 8.378 162.32024969999915 10.406 156.69951789999917 10.084 203.3402095999995 8.303 153.6011700999992 8.24 159.42623779999914 10.702 172.87865150000093 10.713 217.89217509999952 8.368 165.09962129999917 9.977)
Error minima by case: (20.7832 2 17.2813 3 3.3427 2 3.9464 1 0.0 0 1.9538 8 1.8622 1 0.9814 2 1.8559 2 0.5448 1 3.1176 1 0.097 8 24.9814 2 0.6525 2 0.0568 2 36.9814 2 7.6794 2 3.1079 2 0.2813 2 0.4085 1 3.2813 1 1.2322 2 6.9769 8 11.2878 2 2.9047 2)
Average genome size in population (length): 179.434
Average program size in population (points): 180.434
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 244.1642068074695
Average age in population: 237.5719199878769
Median age in population: 242.1639860583312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.516
Error (vector) diversity:			 0.519
Behavioral diversity:				 0.526
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 720835393
--- Timings ---
Current time: 1529615970479 milliseconds
Total Time:        1170.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       258.3 seconds, 22.1%
Fitness Testing:    712.9 seconds, 60.9%
Report:             199.4 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 43111.50639999996
Test mean error for best: 21.55575
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -0.2771991531 
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_dup} {:instruction tag_float_736} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_fromfloat} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_pop} {:instruction tagged_545} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_yankdup} {:instruction float_swap} {:instruction float_sub} {:instruction integer_inc} {:instruction tag_float_796} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_flush} {:instruction float_inc} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction -2.2502469812229577} {:instruction integer_rot} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction integer_max} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 integer_pop float_dec integer_dup tag_float_736 float_max 55.016479005958544 in1 float_add tag_float_623 integer_swap integer_flush float_max integer_flush tag_float_737 integer_flush tag_float_737 integer_fromfloat float_max integer_fromfloat float_tan integer_fromfloat integer_dup_items tag_float_623 integer_fromfloat integer_flush float_add tag_float_737 integer_yankdup float_pop tagged_545 float_mod float_add tag_float_737 float_tan integer_yankdup float_swap float_sub integer_inc tag_float_796 float_mod float_add tag_float_737 integer_yankdup float_flush float_inc float_shove float_dup_times integer_fromfloat integer_yankdup float_dup_times integer_fromfloat -2.2502469812229577 integer_rot integer_shove integer_stackdepth integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod integer_swap float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 integer_max tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 17.0 2 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 620.9612
Mean: 12.419224
Genome size: 178
Size: 179
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4927.6959232
Median total errors in population: 1231.0830999999998
Error averages by case: (312.47404890000087 8.402 171.51996629999886 8.594 162.09837270000085 9.271 209.57714070000011 6.836 175.64073210000004 5.375 171.64310230000092 9.907 210.42851059999884 9.484 159.22538490000113 7.771 177.6963025000011 10.639 198.0536894999999 6.094 210.2464297000001 9.958 215.10705289999885 11.05 184.83828200000124 9.176 170.41419689999998 5.289 174.646312799999 8.396 195.02709480000118 8.964 172.83880829999896 8.4 171.02536229999893 10.423 164.77486159999913 10.069 203.0125896999994 8.333 161.655477599999 8.276 167.58275149999906 10.694 178.24258830000113 10.708 216.42010779999973 8.544 172.827756499999 10.026)
Error minima by case: (56.0 2 10.4811 2 2.9835 3 1.9835 1 0.0 0 0.9888 2 0.0256 1 0.0165 2 0.3602 2 1.0 1 2.9493 1 0.097 7 4.9901 2 0.6525 2 0.5189 2 13.262 2 0.6444 2 10.2813 2 0.0547 2 0.4085 1 3.0165 1 1.1194 2 12.6069 3 1.4644 2 11.4811 2)
Average genome size in population (length): 178.44
Average program size in population (points): 179.44
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 245.4737082539558
Average age in population: 239.357829431877
Median age in population: 243.5060888502696
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.539
Error (vector) diversity:			 0.541
Behavioral diversity:				 0.548
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 725416143
--- Timings ---
Current time: 1529615977340 milliseconds
Total Time:        1177.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       259.7 seconds, 22.1%
Fitness Testing:    717.2 seconds, 60.9%
Report:             200.5 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 43192.66269999996
Test mean error for best: 21.59633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_max float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 integer_add integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4782.2787834
Median total errors in population: 1144.4686999999997
Error averages by case: (273.3855277000009 8.076 166.725035999999 8.749 155.46806480000083 9.375 211.34199660000004 6.74 165.9013446999999 5.517 165.8953725000012 9.901 208.261548799999 9.428 154.51546950000102 7.926 168.242737800001 10.731 199.35858049999993 5.961 210.72610580000006 10.113 215.10222959999888 11.009 179.43715120000135 9.265 160.5267459999999 5.281 169.28967199999894 8.56 189.9242997000012 9.104 167.76095689999894 8.469 165.81966609999895 10.407 159.50464629999917 10.11 201.66980339999947 8.229 154.94412189999915 8.327 160.35498619999913 10.81 170.67435410000107 10.801 217.60158659999982 8.405 168.48977869999885 10.063)
Error minima by case: (56.0 2 5.6984 2 2.9835 8 0.6417 1 0.0 0 1.0052 7 0.0256 1 0.9835 2 3.1159 2 1.0 1 0.7794 1 0.12 2 4.9901 2 2.0 2 15.2283 2 13.262 2 0.6444 2 1.9543 2 0.0165 2 0.4085 1 3.0165 1 2.2322 2 15.0252 8 1.4644 2 2.9047 2)
Average genome size in population (length): 176.317
Average program size in population (points): 177.317
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 246.7458831579215
Average age in population: 238.1586962357199
Median age in population: 244.7490628105116
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.535
Error (vector) diversity:			 0.54
Behavioral diversity:				 0.543
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 729940043
--- Timings ---
Current time: 1529615984249 milliseconds
Total Time:        1184.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       261.2 seconds, 22.1%
Fitness Testing:    721.5 seconds, 60.9%
Report:             201.6 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 43192.66269999996
Test mean error for best: 21.59633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_max float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 integer_add integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4662.505271199999
Median total errors in population: 1053.1395999999997
Error averages by case: (258.3162444000009 8.243 161.91781949999893 8.622 151.68068230000065 9.259 210.98183710000006 6.526 159.49994280000007 5.32 159.66372820000095 9.81 205.6530399999989 9.396 148.75155200000106 7.712 165.02472020000104 10.688 197.90536879999988 5.754 208.7157556000001 9.97 213.19319379999888 10.934 174.57324680000107 9.167 151.71618640000003 5.09 165.2874330999992 8.402 185.20312880000114 8.995 163.15337969999914 8.33 158.29079269999932 10.401 151.96445269999933 10.05 198.8196373999994 8.144 150.7429808999991 8.193 158.1119396999992 10.749 168.55933630000095 10.739 215.31650249999961 8.307 160.76936949999924 9.892)
Error minima by case: (56.0 2 17.0165 3 0.2446 8 0.0165 1 0.0 0 0.9888 7 0.3123 1 0.9271 2 7.316 8 2.4268 1 7.7794 1 0.0456 2 4.9901 2 2.0 2 13.5872 2 13.262 2 0.6444 2 4.1079 2 0.3687 2 0.4085 1 3.0165 1 2.2322 8 13.9682 9 4.0682 2 3.9047 2)
Average genome size in population (length): 178.501
Average program size in population (points): 179.501
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 248.2714193616596
Average age in population: 242.6307655573661
Median age in population: 246.1013774204174
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.494
Error (vector) diversity:			 0.497
Behavioral diversity:				 0.503
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 734517743
--- Timings ---
Current time: 1529615991181 milliseconds
Total Time:        1191.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       262.6 seconds, 22.0%
Fitness Testing:    725.8 seconds, 60.9%
Report:             202.8 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 42886.60409999995
Test mean error for best: 21.44330
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_flush} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_max float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 integer_add integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot integer_flush -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4927.260639099996
Median total errors in population: 1169.50545
Error averages by case: (278.266508100001 8.418 165.86512189999894 8.601 163.45081910000076 9.386 225.31916770000015 6.746 184.73087560000013 5.534 167.5237738000011 9.878 220.04971789999897 9.466 158.38737440000108 7.776 173.69144590000099 10.773 212.5734126999998 6.025 221.10985060000004 9.953 226.3604259999989 11.055 180.1419076000012 9.117 168.91030249999991 5.34 169.73062379999905 8.372 190.36841040000132 8.918 172.250017199999 8.354 164.81838769999902 10.345 159.04309209999911 10.037 210.6484250999996 8.394 156.49048889999906 8.179 163.8199705999991 10.814 179.647167800001 10.82 226.08673719999967 8.559 167.28561449999913 9.831)
Error minima by case: (5.8653 2 5.6984 3 6.7554 8 3.0 1 0.0 0 0.3777 7 0.1378 1 0.9835 2 4.316 9 2.1967 1 14.0536 1 0.0212 2 24.9835 2 3.0 2 12.7227 2 36.9835 2 9.6051 2 4.6155 2 0.3687 2 0.4085 2 2.4041 1 1.3385 7 13.9682 8 0.0682 2 1.9047 2)
Average genome size in population (length): 177.535
Average program size in population (points): 178.535
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 249.8781089657679
Average age in population: 242.1424184976095
Median age in population: 247.3477961080028
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.517
Error (vector) diversity:			 0.52
Behavioral diversity:				 0.523
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 739068168
--- Timings ---
Current time: 1529615998168 milliseconds
Total Time:        1198.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       264.0 seconds, 22.0%
Fitness Testing:    730.1 seconds, 60.9%
Report:             204.1 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 42886.60409999995
Test mean error for best: 21.44330
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_swap} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction integer_dup} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction integer_flush} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_swap float_add tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 float_mod integer_fromfloat in2 integer_max float_add integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan integer_fromfloat integer_dup_items integer_shove integer_dup float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_yankdup float_dup_items integer_pop float_sub float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot integer_flush -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4505.271940300001
Median total errors in population: 1086.9506999999999
Error averages by case: (273.4165360000009 8.246 154.03638129999908 8.535 148.31575620000072 9.331 198.9836501 6.706 163.85317070000008 5.485 156.10502390000102 9.873 191.47657099999904 9.435 141.53827020000102 7.64 159.3892171000009 10.725 183.3316024999999 5.859 197.87947350000007 9.964 198.084403699999 11.01 167.4644461000011 9.071 157.54778859999993 5.169 157.30286929999903 8.327 178.06671650000118 8.895 155.2031868999991 8.27 154.30827859999908 10.362 148.03858379999917 9.985 184.96249379999966 8.339 144.21269529999915 8.148 151.02432809999917 10.793 164.15173610000096 10.786 200.53984449999967 8.438 156.77191649999904 9.875)
Error minima by case: (53.0 2 17.0165 2 2.9835 8 0.7232 1 0.0 0 0.3777 8 0.0176 1 0.9835 2 4.316 2 0.2951 1 3.7712 1 0.0212 7 4.9901 2 0.6339 2 14.9835 2 13.262 2 0.6444 2 11.0165 2 1.0165 2 0.379 1 3.0165 1 2.2322 2 12.6069 8 11.0165 2 2.9047 2)
Average genome size in population (length): 179.004
Average program size in population (points): 180.004
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 251.0639827651131
Average age in population: 245.3235409310758
Median age in population: 248.5789109698018
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.531
Error (vector) diversity:			 0.536
Behavioral diversity:				 0.538
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 743656342
--- Timings ---
Current time: 1529616005146 milliseconds
Total Time:        1205.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       265.4 seconds, 22.0%
Fitness Testing:    734.4 seconds, 60.9%
Report:             205.3 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 43333.96289999995
Test mean error for best: 21.66698
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_pop} {:instruction float_dec} {:instruction float_add} {:instruction tag_float_736} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction float_max} {:instruction integer_fromfloat} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_711} {:instruction integer_pop} {:instruction tag_float_737} {:instruction float_dup_items} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction print_float} {:instruction float_mod} {:instruction float_min} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 integer_pop float_dec float_add tag_float_736 float_max 55.016479005958544 in1 float_add float_max integer_fromfloat integer_pop float_add integer_dup_items integer_flush tag_float_737 tag_float_807 integer_flush 55.016479005958544 in1 float_add tag_float_711 integer_pop tag_float_737 float_dup_items integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan integer_fromfloat float_dup_times integer_fromfloat integer_yankdup print_float float_mod float_min integer_swap float_shove integer_pop integer_fromfloat integer_div integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 integer_rot float_dup_times integer_dup_items integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5051.299267899999
Median total errors in population: 1177.7469
Error averages by case: (269.846817100001 8.319 173.2574972999988 8.691 167.6465626000008 9.396 234.83896450000006 6.853 188.18594400000003 5.546 170.10142280000102 9.912 216.45247009999872 9.494 165.93990380000108 7.925 182.64112980000112 10.755 219.86527679999998 6.036 232.03839300000013 10.201 231.29129289999887 11.036 186.01265550000116 9.201 166.83622099999997 5.336 175.9520492999991 8.487 196.45160360000133 9.027 178.73227909999903 8.489 170.04287099999908 10.451 163.63331389999917 10.161 211.24130919999942 8.264 165.03359599999905 8.323 172.8694923999992 10.835 183.136649300001 10.82 235.23248309999977 8.318 172.08106979999903 10.062)
Error minima by case: (37.8653 2 18.0165 2 4.3427 2 0.0165 1 0.0 0 1.6787 8 0.8483 1 0.9835 2 7.0 2 1.4367 1 7.7794 1 0.0212 2 4.9901 2 3.0 2 24.0 2 13.262 2 0.6444 2 11.0165 2 1.0165 2 0.2234 1 4.0165 1 2.2322 2 12.6069 9 4.4208 1 1.9047 2)
Average genome size in population (length): 179.084
Average program size in population (points): 180.084
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 252.0174539572203
Average age in population: 246.3299400620921
Median age in population: 249.8198542059235
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.535
Error (vector) diversity:			 0.539
Behavioral diversity:				 0.545
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 748247192
--- Timings ---
Current time: 1529616012187 milliseconds
Total Time:        1212.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       266.8 seconds, 22.0%
Fitness Testing:    738.8 seconds, 60.9%
Report:             206.6 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 43192.66269999996
Test mean error for best: 21.59633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 54.9607049605322} {:instruction float_stackdepth} {:instruction tag_float_737} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction 11.412783246326043} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_fromfloat} {:instruction float_div} {:instruction integer_swap} {:instruction float_mod} {:instruction float_mod} {:instruction float_add} {:instruction tag_float_737} {:instruction float_tan} {:instruction integer_yank} {:instruction tagged_950} {:instruction integer_yankdup} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 float_add tag_float_737 integer_flush 54.9607049605322 float_stackdepth tag_float_737 float_max 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat float_dup 11.412783246326043 integer_flush tag_float_737 integer_flush tag_float_737 integer_swap float_max float_add tag_float_737 integer_fromfloat float_div integer_swap float_mod float_mod float_add tag_float_737 float_tan integer_yank tagged_950 integer_yankdup float_sub integer_sub integer_mod integer_rot float_inc integer_fromfloat float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4835.3631332
Median total errors in population: 1039.8273999999997
Error averages by case: (273.557338800001 8.184 167.36527379999876 8.703 166.26100700000092 9.394 215.0262979 6.554 178.51929919999995 5.54 170.58104200000105 9.927 198.2053068999987 9.378 158.3024500000012 7.89 174.6506074000012 10.808 198.49905379999996 5.761 211.33520180000005 10.062 212.26163529999894 11.033 180.17818600000118 9.261 163.4369937999998 5.221 170.75459089999904 8.51 190.68517760000128 9.059 173.16943029999905 8.494 168.20013299999914 10.451 161.96804059999923 10.107 190.3765192999995 8.121 157.33421999999894 8.347 167.248994599999 10.852 181.38559810000112 10.855 214.1921287999998 8.236 171.10160629999905 10.019)
Error minima by case: (17.4067 2 17.0165 2 9.2116 8 0.0165 1 0.0 0 1.9888 8 0.1855 1 0.9835 2 6.281 8 2.1967 1 0.292 1 2.0E-4 2 2.5554 2 1.0016 2 24.0 2 9.4446 2 2.6444 2 3.1079 2 0.5418 2 0.1676 1 3.0165 1 2.3385 7 4.4446 9 12.0536 2 2.9047 2)
Average genome size in population (length): 178.01
Average program size in population (points): 179.01
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 252.9641662893695
Average age in population: 246.6011484814738
Median age in population: 251.1381803055719
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.516
Error (vector) diversity:			 0.518
Behavioral diversity:				 0.522
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 752812592
--- Timings ---
Current time: 1529616019196 milliseconds
Total Time:        1219.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       268.2 seconds, 22.0%
Fitness Testing:    743.2 seconds, 60.9%
Report:             207.8 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 43192.66269999996
Test mean error for best: 21.59633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction float_stackdepth} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_sub} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_max float_stackdepth tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_737 integer_sub integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 integer_add integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5514.069525799999
Median total errors in population: 1202.67565
Error averages by case: (294.4727316000009 8.354 198.99251959999899 8.823 189.85816580000085 9.458 238.36296800000017 6.842 185.4128025999999 5.612 198.86440600000103 9.994 235.59575399999898 9.504 185.25856020000106 7.957 199.520030500001 10.834 228.8274448 6.109 238.72009700000007 10.046 237.99809139999925 11.035 211.69442550000122 9.338 184.4541986 5.557 201.40012399999893 8.599 221.87050630000124 9.11 197.47539589999903 8.526 196.8051443999988 10.51 190.8500370999993 10.233 228.99521969999944 8.458 186.41918509999905 8.362 191.67335619999898 10.861 205.19773210000102 10.891 242.34317399999966 8.592 199.24845539999887 10.154)
Error minima by case: (30.1347 2 17.0165 2 1.2446 2 2.9835 1 0.0 0 0.0112 8 1.3123 1 0.9835 2 3.4215 2 1.9991 1 6.7794 1 0.0212 2 4.9901 2 0.3661 2 12.9834 2 7.0 1 0.6444 2 0.0457 1 0.0165 2 0.4085 1 3.0165 1 1.645 2 2.9607 9 2.0682 2 3.9047 2)
Average genome size in population (length): 177.854
Average program size in population (points): 178.854
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 254.4610844017667
Average age in population: 246.8815932978378
Median age in population: 252.4511531392447
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.525
Error (vector) diversity:			 0.53
Behavioral diversity:				 0.533
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 757371442
--- Timings ---
Current time: 1529616026107 milliseconds
Total Time:        1226.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       269.6 seconds, 22.0%
Fitness Testing:    747.4 seconds, 61.0%
Report:             209.1 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 43067.82179999995
Test mean error for best: 21.53391
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction float_stackdepth} {:instruction tag_float_737} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction in1} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_930} {:instruction integer_sub} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_max float_stackdepth tag_float_737 integer_flush integer_fromfloat in1 float_add integer_dup_items integer_flush tag_float_930 integer_sub integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 integer_add integer_fromfloat in2 integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_pop float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4803.6157204
Median total errors in population: 1074.6788999999999
Error averages by case: (271.97382390000087 8.097 163.72292589999893 8.545 156.61320600000087 9.247 213.9780756 6.656 180.94733249999996 5.572 169.47374420000114 9.854 209.56902779999902 9.315 152.75831680000093 7.705 170.4266640000011 10.706 203.86437559999973 5.995 212.7396333999998 10.101 215.3894514999987 10.866 177.38227350000116 9.126 162.08057519999994 5.1 167.48520509999904 8.369 187.46164910000118 8.934 166.18953939999903 8.324 167.23652669999896 10.314 160.85774889999914 9.927 199.91512159999957 8.232 153.67983959999907 8.191 160.64503729999907 10.752 172.91123780000112 10.762 216.50872729999983 8.249 170.95566169999896 9.911)
Error minima by case: (56.0 2 18.0165 2 0.2446 1 1.9835 1 0.0 0 1.9538 1 1.3123 1 0.9835 2 5.281 2 0.6769 1 10.0165 1 0.0212 2 19.0 2 2.0 2 9.5192 2 7.0 1 9.6051 2 11.0165 2 1.0165 2 0.2234 1 1.4166 1 2.2322 1 16.0098 2 3.2214 2 2.9047 2)
Average genome size in population (length): 177.942
Average program size in population (points): 178.942
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 255.6550152273583
Average age in population: 248.3212317408738
Median age in population: 253.6577285813932
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.529
Error (vector) diversity:			 0.531
Behavioral diversity:				 0.537
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 761933042
--- Timings ---
Current time: 1529616033082 milliseconds
Total Time:        1233.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       271.0 seconds, 22.0%
Fitness Testing:    751.8 seconds, 61.0%
Report:             210.3 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 43160.64059999995
Test mean error for best: 21.58032
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_swap} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_flush} {:instruction tagged_480} {:instruction integer_dec} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_737} {:instruction tag_float_807} {:instruction float_yank} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction float_mod} {:instruction float_mod} {:instruction float_min} {:instruction float_add} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_pop} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_mult} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (integer_swap float_add tag_float_737 integer_flush tagged_480 integer_dec float_add integer_dup_items integer_flush tag_float_737 tag_float_807 float_yank 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 float_mod float_mod float_min float_add float_shove integer_pop integer_fromfloat integer_div integer_dec float_dup_items integer_pop float_sub float_yankdup float_stackdepth tagged_950 float_mod float_mod float_yankdup float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup integer_mult integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5039.655916
Median total errors in population: 1177.7469
Error averages by case: (294.1915381000008 8.334 172.0295056999989 8.593 167.61346480000077 9.43 226.6545241 6.835 177.4338873 5.4 176.0750149000009 9.949 205.75287279999893 9.561 166.9486382000011 7.838 181.7341659000012 10.776 213.7444073000001 6.124 225.53953240000004 10.033 228.22955759999905 10.809 186.19581040000114 9.132 170.88980299999992 5.342 174.9574891999992 8.415 195.71132700000126 8.943 180.2371715999991 8.409 175.16731259999892 10.489 168.84780619999896 10.159 199.36986259999955 8.548 165.97878339999903 8.247 174.06702259999904 10.814 184.114513700001 10.834 229.12054389999992 8.498 177.51736069999907 10.022)
Error minima by case: (34.8653 2 5.6984 2 8.0719 8 2.9464 1 0.0 0 1.9538 8 0.7629 1 0.3235 2 7.281 2 3.9861 1 11.2206 1 0.0212 3 4.9901 2 2.0 2 6.8221 2 13.262 2 0.6444 2 1.0729 2 1.0165 2 0.0582 1 4.0165 1 9.1791 1 3.0252 7 0.0847 2 2.9047 2)
Average genome size in population (length): 177.581
Average program size in population (points): 178.581
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 257.0604022328109
Average age in population: 249.0444569646112
Median age in population: 254.9357353452913
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.544
Error (vector) diversity:			 0.548
Behavioral diversity:				 0.556
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 766482442
--- Timings ---
Current time: 1529616040025 milliseconds
Total Time:        1240.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       272.4 seconds, 22.0%
Fitness Testing:    756.1 seconds, 61.0%
Report:             211.5 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 43192.66269999996
Test mean error for best: 21.59633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction float_mult} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_yankdup float_mult tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_dup_times integer_max integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove float_mod float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4554.633213099998
Median total errors in population: 1085.9418499999997
Error averages by case: (259.786485900001 8.39 153.97171239999898 8.684 151.92124110000069 9.333 205.06457890000001 6.85 155.20573969999992 5.151 157.903217300001 9.888 199.18200899999903 9.456 143.9759819000009 7.892 162.40030250000086 10.724 193.26663990000003 6.222 204.63346470000002 9.995 207.50952159999886 10.656 166.88312050000116 9.222 148.21156509999997 5.298 156.799095999999 8.451 177.5188069000012 8.995 157.75840949999903 8.475 156.8269232999992 10.474 150.47505249999924 10.149 188.57645959999948 8.591 144.43740909999923 8.323 153.97039719999907 10.77 167.1902305000011 10.751 210.36161319999965 8.614 159.46223479999918 9.987)
Error minima by case: (55.0 2 17.0165 2 7.0165 2 1.9835 1 0.0 0 0.9888 8 0.7629 1 0.9835 2 4.7666 2 2.1967 1 4.4824 1 0.0212 2 4.9901 2 2.3311 2 3.6361 2 7.0 1 0.6444 2 0.9543 2 0.7574 2 0.2234 1 3.0165 1 2.355 2 8.4566 8 4.7487 2 0.1283 2)
Average genome size in population (length): 176.505
Average program size in population (points): 177.505
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 258.3287509659113
Average age in population: 249.8576573086101
Median age in population: 256.2888656157267
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.565
Error (vector) diversity:			 0.568
Behavioral diversity:				 0.574
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 771003292
--- Timings ---
Current time: 1529616046942 milliseconds
Total Time:        1247.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       273.8 seconds, 22.0%
Fitness Testing:    760.4 seconds, 61.0%
Report:             212.8 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 43333.96289999995
Test mean error for best: 21.66698
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_pop} {:instruction float_dec} {:instruction float_add} {:instruction tag_float_736} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_mod} {:instruction in1} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_mult} {:instruction float_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction float_stackdepth} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_div} {:instruction float_inc} {:instruction float_shove} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (in1 integer_pop float_dec float_add tag_float_736 float_max 55.016479005958544 in1 float_add tag_float_623 integer_swap integer_flush float_max integer_flush tag_float_737 integer_flush tag_float_737 integer_swap float_max float_add float_dec integer_fromfloat float_dec float_yankdup float_mod float_mod in1 integer_dup_items integer_mod float_flush float_mult float_sub integer_shove integer_mod float_stackdepth integer_div integer_mod integer_div float_inc float_shove integer_fromfloat integer_div float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 integer_rot float_dup_times integer_dup_items integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yankdup float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4442.697537699998
Median total errors in population: 1123.43005
Error averages by case: (269.55655610000093 8.376 152.21936479999914 8.569 138.2568435000008 9.2 207.55046540000004 6.778 165.6146179999999 5.193 143.21343970000126 9.833 198.2098707999992 9.398 137.50220940000088 7.702 151.73838930000085 10.634 194.39042989999996 6.061 205.48765569999998 9.947 208.2403173999993 10.583 164.44816350000121 9.113 144.04171699999992 5.145 155.5221443999989 8.373 175.18568500000111 8.928 151.6633387999989 8.298 143.03298629999907 10.349 135.964348399999 10.001 188.71399559999963 8.474 140.34626519999907 8.192 143.32807569999906 10.706 154.164818300001 10.683 210.28550669999976 8.408 144.9843327999989 10.092)
Error minima by case: (56.0 2 17.0165 2 0.2446 1 2.6631 1 0.0 0 0.0112 1 0.0256 1 0.3815 2 0.0124 2 1.9861 1 6.7794 1 0.0212 2 4.9901 2 0.6339 2 18.3319 2 13.262 2 0.6444 2 0.9543 2 0.0165 2 0.2234 1 3.0165 1 3.3385 1 15.0098 2 7.8986 2 2.9047 2)
Average genome size in population (length): 178.276
Average program size in population (points): 179.276
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 259.6174730785304
Average age in population: 254.7050591821667
Median age in population: 257.5490681281994
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.555
Error (vector) diversity:			 0.556
Behavioral diversity:				 0.56
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 775567192
--- Timings ---
Current time: 1529616053971 milliseconds
Total Time:        1254.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       275.2 seconds, 21.9%
Fitness Testing:    764.7 seconds, 61.0%
Report:             214.0 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 43192.66269999996
Test mean error for best: 21.59633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction float_mult} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction float_min} {:instruction print_float})
Best program: (float_yankdup float_mult tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat integer_flush tag_float_737 integer_swap float_max float_dup_times integer_max integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove integer_yankdup float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_dup_items float_dec integer_pop float_dup float_min print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4202.403644999998
Median total errors in population: 1125.9588999999996
Error averages by case: (263.24848740000095 8.263 138.50016939999915 8.441 134.45962070000078 9.253 193.1542003 6.486 147.6494156999998 5.036 141.16987470000117 9.867 193.5711167999991 9.438 128.06644810000085 7.572 144.20691520000085 10.671 178.7742531999999 5.789 190.5236842 9.751 195.9612284999993 10.48 152.74466980000113 8.974 130.3625707999999 4.793 141.296275499999 8.249 163.36216590000103 8.779 141.371802399999 8.169 138.3384549999992 10.339 132.8056745999992 9.973 182.90892479999977 8.377 130.0174161999992 8.055 135.67145259999913 10.711 150.34904230000097 10.707 196.4228699999999 8.28 141.229910899999 9.784)
Error minima by case: (56.0 2 14.9572 3 4.3427 2 1.3903 1 0.0 0 1.9888 1 0.1378 1 0.658 2 5.0165 2 1.9861 1 0.0307 1 0.0212 2 4.9901 2 2.0 2 12.0 2 13.262 2 0.6444 2 0.9543 2 1.0165 2 0.3099 1 4.0165 1 2.216 2 13.0098 2 13.038 2 4.8717 2)
Average genome size in population (length): 177.546
Average program size in population (points): 178.546
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 260.9371134630485
Average age in population: 254.3179939703017
Median age in population: 258.7298275722457
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.569
Error (vector) diversity:			 0.569
Behavioral diversity:				 0.573
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 780111592
--- Timings ---
Current time: 1529616060878 milliseconds
Total Time:        1261.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       276.6 seconds, 21.9%
Fitness Testing:    769.0 seconds, 61.0%
Report:             215.2 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 43192.66269999996
Test mean error for best: 21.59633
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -94.8652845137
Correct output: 114.7313932523 | Program output: 133.7478722583
Correct output: 14.755435921   | Program output: 1.7719149269  
Correct output: 21.3583337919  | Program output: 0.3583337919  
Correct output: 76.8145408742  | Program output: 75.8145408742 
Correct output: 2.9888110989   | Program output: -12.9947098951
Correct output: -50.135719703  | Program output: -54.9603894035
Correct output: 78.5646212622  | Program output: 76.5811002682 
Correct output: 66.7190026342  | Program output: 45.7354816401 
Correct output: 9.7358427867   | Program output: 0.7358427867  
Correct output: 22.7793630647  | Program output: -0.2206369353 
Correct output: -43.5414748403 | Program output: -42.4214450561
Correct output: 156.0099057627 | Program output: 130.0263847686
Correct output: -48.6689485349 | Program output: -52.6689485349
Correct output: 85.0632624421  | Program output: 115.0797414481
Correct output: 171.737997407  | Program output: 133.754476413 
Correct output: 44.3556039838  | Program output: 76.3720829898 
Correct output: -40.9542965608 | Program output: -28.9378175549
Correct output: -28.6497177653 | Program output: -26.6332387594
Correct output: -17.2771991531 | Program output: -17.6857207433
Correct output: 93.1658910647  | Program output: 98.1823700707 
Correct output: 12.6449981755  | Program output: 31.6614771814 
Correct output: 37.0251741292  | Program output: 4.0416531351  
Correct output: -23.9317722741 | Program output: -0.9317722741 
Correct output: -34.1282563958 | Program output: -16.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_pop} {:instruction float_dec} {:instruction float_add} {:instruction tag_float_736} {:instruction float_max} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_flush} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_add} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_mod} {:instruction in1} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_flush} {:instruction float_mult} {:instruction float_sub} {:instruction integer_shove} {:instruction integer_mod} {:instruction float_stackdepth} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_mod} {:instruction float_flush} {:instruction float_pop} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_mod} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dup} {:instruction integer_dup} {:instruction print_float})
Best program: (in1 integer_pop float_dec float_add tag_float_736 float_max 55.016479005958544 in1 float_add tag_float_623 integer_swap integer_flush float_max integer_flush tag_float_737 integer_flush tag_float_737 integer_swap float_max float_add float_dec integer_fromfloat float_dec float_yankdup float_mod float_mod in1 integer_dup_items integer_mod float_flush float_mult float_sub integer_shove integer_mod float_stackdepth integer_div integer_mod integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove float_mod float_flush float_pop integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_mod integer_pop float_dec integer_pop float_dup integer_dup print_float)
Errors: [57.0 3 19.0165 8 12.9835 8 21.0 2 1.0 1 15.9835 9 4.8247 8 1.9835 7 20.9835 10 9.0 1 23.0 11 1.12 9 25.9835 9 4.0 2 30.0165 8 37.9835 9 32.0165 8 12.0165 10 2.0165 9 0.4085 9 5.0165 8 19.0165 10 32.9835 10 23.0 2 18.0165 10]
Total: 611.3697
Mean: 12.227394
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4877.763567999999
Median total errors in population: 1197.1975999999997
Error averages by case: (273.361269800001 8.266 163.74383479999906 8.65 161.32767080000082 9.264 222.6435225999999 6.902 177.00075739999997 5.44 169.62225060000097 9.877 210.40122879999913 9.543 155.82667530000097 7.808 173.29977690000104 10.715 209.05704260000002 6.229 220.6557857 9.97 224.14783689999933 10.558 176.93363120000114 9.204 164.34923820000003 5.393 166.50286779999917 8.475 187.6124925000011 9.018 169.25018419999907 8.427 170.50276939999898 10.462 164.11677199999917 10.082 201.11595089999966 8.66 153.7954773999992 8.266 167.83839489999914 10.717 176.476953300001 10.703 224.2939156999998 8.685 172.52426829999902 10.049)
Error minima by case: (56.0 2 14.7051 2 3.6118 2 1.1152 1 0.0 0 1.1752 2 0.5238 1 0.4013 2 4.6597 2 1.6041 1 4.4121 1 0.0212 2 22.5528 2 0.6525 2 12.715 2 36.4013 2 9.13 2 10.4658 2 0.4658 2 0.0872 1 3.4658 1 2.7304 2 16.4604 2 0.0682 1 2.1722 2)
Average genome size in population (length): 178.5
Average program size in population (points): 179.5
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 262.3192836169533
Average age in population: 257.5959822792382
Median age in population: 259.9551335083041
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.994
Total error diversity:				 0.543
Error (vector) diversity:			 0.544
Behavioral diversity:				 0.55
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 784679067
--- Timings ---
Current time: 1529616067915 milliseconds
Total Time:        1268.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       278.1 seconds, 21.9%
Fitness Testing:    773.4 seconds, 61.0%
Report:             216.4 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 42997.91169999995
Test mean error for best: 21.49896
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.7478722583
Correct output: 14.755435921   | Program output: 2.7719149269  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -11.9947098951
Correct output: -50.135719703  | Program output: -53.9603894035
Correct output: 78.5646212622  | Program output: 77.5811002682 
Correct output: 66.7190026342  | Program output: 46.7354816401 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -41.4214450561
Correct output: 156.0099057627 | Program output: 131.0263847686
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0797414481
Correct output: 171.737997407  | Program output: 134.754476413 
Correct output: 44.3556039838  | Program output: 77.3720829898 
Correct output: -40.9542965608 | Program output: -27.9378175549
Correct output: -28.6497177653 | Program output: -25.6332387594
Correct output: -17.2771991531 | Program output: -16.6857207433
Correct output: 93.1658910647  | Program output: 99.1823700707 
Correct output: 12.6449981755  | Program output: 32.6614771814 
Correct output: 37.0251741292  | Program output: 5.0416531351  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction float_mult} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_pop} {:instruction print_float})
Best program: (float_yankdup float_mult tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat float_pop tag_float_737 integer_swap float_max float_dup_times integer_max integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove integer_yankdup float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_pop print_float)
Errors: [58.0 3 20.0165 7 11.9835 9 20.0 1 0.0 0 14.9835 10 3.8247 8 0.9835 7 19.9835 9 8.0 1 22.0 2 2.12 9 24.9835 9 3.0 2 31.0165 9 36.9835 9 33.0165 8 13.0165 10 3.0165 9 0.5915 10 6.0165 8 20.0165 9 31.9835 10 24.0 11 19.0165 10]
Total: 608.5527
Mean: 12.171054
Genome size: 181
Size: 182
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4468.579011999998
Median total errors in population: 1054.8303999999998
Error averages by case: (269.60001070000084 8.089 148.24843819999919 8.434 137.56441470000073 9.281 206.23953130000004 6.473 158.2616741999999 5.164 154.48625980000094 9.914 199.04851329999914 9.468 134.99975390000074 7.54 153.7553666000008 10.68 194.57967349999998 5.888 207.5936833000001 9.792 215.10534869999907 10.45 161.47388880000094 9.037 144.31508209999987 4.865 152.21217529999907 8.271 171.82625030000096 8.82 149.32306049999912 8.206 152.0007586999992 10.332 145.3021019999991 9.917 188.93443009999964 8.423 135.83819319999927 8.049 142.55883619999918 10.68 154.82179490000087 10.747 218.35847739999994 8.489 155.22229429999916 9.9)
Error minima by case: (53.0 2 18.0165 2 6.7554 2 0.0165 1 0.0 0 0.9538 8 0.0256 1 0.0165 2 4.6597 2 1.6041 1 6.5195 1 0.0212 2 4.9901 2 1.1833 2 10.787 2 13.262 2 0.6444 2 0.0457 2 1.0165 1 0.04 1 2.6843 1 3.3385 2 4.8105 8 7.3492 2 1.3578 2)
Average genome size in population (length): 177.059
Average program size in population (points): 178.059
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 263.4538239354956
Average age in population: 256.5731211530402
Median age in population: 261.2920336407017
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.53
Error (vector) diversity:			 0.533
Behavioral diversity:				 0.54
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 789208942
--- Timings ---
Current time: 1529616074892 milliseconds
Total Time:        1275.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       279.5 seconds, 21.9%
Fitness Testing:    777.8 seconds, 61.0%
Report:             217.7 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 42997.91169999995
Test mean error for best: 21.49896
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.7478722583
Correct output: 14.755435921   | Program output: 2.7719149269  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -11.9947098951
Correct output: -50.135719703  | Program output: -53.9603894035
Correct output: 78.5646212622  | Program output: 77.5811002682 
Correct output: 66.7190026342  | Program output: 46.7354816401 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -41.4214450561
Correct output: 156.0099057627 | Program output: 131.0263847686
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0797414481
Correct output: 171.737997407  | Program output: 134.754476413 
Correct output: 44.3556039838  | Program output: 77.3720829898 
Correct output: -40.9542965608 | Program output: -27.9378175549
Correct output: -28.6497177653 | Program output: -25.6332387594
Correct output: -17.2771991531 | Program output: -16.6857207433
Correct output: 93.1658910647  | Program output: 99.1823700707 
Correct output: 12.6449981755  | Program output: 32.6614771814 
Correct output: 37.0251741292  | Program output: 5.0416531351  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction tagged_580} {:instruction float_add} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction tag_float_930} {:instruction integer_sub} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction print_float} {:instruction tag_float_737} {:instruction integer_add} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_pop} {:instruction print_float})
Best program: (in1 tagged_580 float_add integer_dup_items integer_flush tag_float_930 integer_sub integer_flush 55.016479005958544 in1 float_add tag_float_623 print_float tag_float_737 integer_add float_max float_dup_times integer_max integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove integer_yankdup float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_pop print_float)
Errors: [58.0 3 20.0165 7 11.9835 9 20.0 1 0.0 0 14.9835 10 3.8247 8 0.9835 7 19.9835 9 8.0 1 22.0 2 2.12 9 24.9835 9 3.0 2 31.0165 9 36.9835 9 33.0165 8 13.0165 10 3.0165 9 0.5915 10 6.0165 8 20.0165 9 31.9835 10 24.0 11 19.0165 10]
Total: 608.5527
Mean: 12.171054
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4222.385317399997
Median total errors in population: 1043.06505
Error averages by case: (247.51455910000095 8.284 142.15110219999912 8.427 134.70296120000077 9.164 193.4578068000001 6.496 146.14270799999997 5.017 144.12270660000112 9.836 194.1906497999991 9.382 129.3878180000008 7.535 145.3703082000009 10.608 180.6292424 5.861 191.43228930000004 9.944 195.32132929999966 10.211 155.22399710000107 9.015 133.43188729999991 4.792 146.002829599999 8.283 164.80635680000108 8.83 144.22858869999905 8.201 140.95959359999912 10.472 134.3949988999993 10.095 181.80130789999956 8.282 130.34933319999925 8.049 139.06661319999907 10.64 150.94217080000092 10.633 196.7313704999999 8.246 143.84478889999906 9.875)
Error minima by case: (56.0 2 14.9572 3 2.9835 2 2.7207 1 0.0 0 0.9888 2 0.7629 1 0.0165 2 4.6597 2 0.0922 1 1.6515 1 0.0212 2 4.9901 2 2.0 2 7.2043 2 13.262 2 0.6444 2 10.4658 2 0.4658 2 0.4085 1 3.4658 1 2.2322 2 9.3078 3 13.038 2 2.9047 2)
Average genome size in population (length): 176.962
Average program size in population (points): 177.962
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 264.5662093639737
Average age in population: 259.3158470019388
Median age in population: 262.4720897825376
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.544
Error (vector) diversity:			 0.548
Behavioral diversity:				 0.549
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 793735342
--- Timings ---
Current time: 1529616081879 milliseconds
Total Time:        1282.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       280.9 seconds, 21.9%
Fitness Testing:    782.1 seconds, 61.0%
Report:             218.9 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 42997.91169999995
Test mean error for best: 21.49896
;;------------------------------
Outputs of best individual on training cases:
Correct output: -151.8652845137 | Program output: -93.8652845137
Correct output: 114.7313932523 | Program output: 134.7478722583
Correct output: 14.755435921   | Program output: 2.7719149269  
Correct output: 21.3583337919  | Program output: 1.3583337919  
Correct output: 76.8145408742  | Program output: 76.8145408742 
Correct output: 2.9888110989   | Program output: -11.9947098951
Correct output: -50.135719703  | Program output: -53.9603894035
Correct output: 78.5646212622  | Program output: 77.5811002682 
Correct output: 66.7190026342  | Program output: 46.7354816401 
Correct output: 9.7358427867   | Program output: 1.7358427867  
Correct output: 22.7793630647  | Program output: 0.7793630647  
Correct output: -43.5414748403 | Program output: -41.4214450561
Correct output: 156.0099057627 | Program output: 131.0263847686
Correct output: -48.6689485349 | Program output: -51.6689485349
Correct output: 85.0632624421  | Program output: 116.0797414481
Correct output: 171.737997407  | Program output: 134.754476413 
Correct output: 44.3556039838  | Program output: 77.3720829898 
Correct output: -40.9542965608 | Program output: -27.9378175549
Correct output: -28.6497177653 | Program output: -25.6332387594
Correct output: -17.2771991531 | Program output: -16.6857207433
Correct output: 93.1658910647  | Program output: 99.1823700707 
Correct output: 12.6449981755  | Program output: 32.6614771814 
Correct output: 37.0251741292  | Program output: 5.0416531351  
Correct output: -23.9317722741 | Program output: 0.0682277259  
Correct output: -34.1282563958 | Program output: -15.1117773899
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction float_mult} {:instruction tag_float_737} {:instruction integer_flush} {:instruction 55.016479005958544} {:instruction in1} {:instruction float_add} {:instruction tag_float_623} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction tag_float_737} {:instruction integer_swap} {:instruction float_max} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_max} {:instruction float_add} {:instruction tag_float_737} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_min} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_max} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction integer_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_stackdepth} {:instruction tagged_950} {:instruction float_mod} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_max} {:instruction in2} {:instruction -89} {:instruction tagged_729} {:instruction float_flush} {:instruction float_inc} {:instruction tagged_950} {:instruction float_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_max} {:instruction float_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_dup_items} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction 55.03501905779376} {:instruction in2} {:instruction integer_dup_items} {:instruction float_dup} {:instruction float_rot} {:instruction float_yank} {:instruction float_min} {:instruction integer_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction in1} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction -52} {:instruction float_add} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_sin} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction float_shove} {:instruction float_mod} {:instruction -72} {:instruction integer_mult} {:instruction float_frominteger} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_min} {:instruction integer_dec} {:instruction 16} {:instruction in1} {:instruction float_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction float_yank} {:instruction -39} {:instruction float_max} {:instruction integer_pop} {:instruction print_float})
Best program: (float_yankdup float_mult tag_float_737 integer_flush 55.016479005958544 in1 float_add tag_float_623 integer_fromfloat float_pop tag_float_737 integer_swap float_max float_dup_times integer_max integer_max float_add tag_float_737 integer_yankdup float_sub float_dec integer_fromfloat float_tan float_dup_times integer_fromfloat integer_yankdup integer_rot float_min integer_fromfloat integer_rot integer_pop integer_fromfloat integer_yankdup float_dup_times integer_fromfloat float_shove integer_yankdup float_flush integer_rot integer_pop float_max integer_swap float_dup_times integer_fromfloat integer_rot integer_mult float_dup_items integer_max integer_mod float_inc float_stackdepth tagged_950 float_mod integer_mod float_yankdup float_dup_times integer_fromfloat in2 float_stackdepth tagged_950 float_mod float_sub float_yankdup float_dup_times integer_fromfloat in2 integer_inc integer_rot integer_mult float_dup_times integer_dup_items float_max in2 -89 tagged_729 float_flush float_inc tagged_950 float_add float_yankdup float_dup_times integer_rot float_yankdup float_dup_times integer_fromfloat in2 integer_max float_dup integer_rot float_dup_times integer_dup_items -52 float_add integer_dup_items -52 float_add integer_fromfloat 55.03501905779376 in2 integer_dup_items float_dup float_rot float_yank float_min integer_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec integer_add in1 float_yankdup float_yank float_rot float_rot -52 float_add integer_fromfloat integer_add in2 integer_stackdepth integer_dup_items integer_yankdup float_yank float_sin integer_dec integer_add float_yankdup float_yankdup integer_mult float_rot float_yank -39 float_max float_dec float_dec integer_shove float_sub float_shove float_mod -72 integer_mult float_frominteger in2 integer_stackdepth integer_dup_items float_rot float_min integer_dec 16 in1 float_rot integer_swap float_rot float_yank -39 float_max integer_pop print_float)
Errors: [58.0 3 20.0165 7 11.9835 9 20.0 1 0.0 0 14.9835 10 3.8247 8 0.9835 7 19.9835 9 8.0 1 22.0 2 2.12 9 24.9835 9 3.0 2 31.0165 9 36.9835 9 33.0165 8 13.0165 10 3.0165 9 0.5915 10 6.0165 8 20.0165 9 31.9835 10 24.0 11 19.0165 10]
Total: 608.5527
Mean: 12.171054
Genome size: 181
Size: 182
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4053.5960442999967
Median total errors in population: 1110.4033
Error averages by case: (255.25444370000102 8.281 128.94151069999901 8.305 124.46650630000093 9.212 195.8174207 6.558 148.1686300999998 5.17 131.7634260000011 9.814 197.02724849999908 9.338 119.30037560000102 7.412 138.33484770000092 10.606 181.81378339999998 5.905 189.76674120000007 9.935 198.3565989999995 10.231 140.76656850000126 8.851 122.89905729999982 4.978 132.2588089999989 8.096 152.350971000001 8.647 133.7574962999989 8.076 128.51069269999908 10.317 122.078979699999 9.966 180.7259579999995 8.229 120.03290759999909 7.91 127.12631529999896 10.632 141.31950680000105 10.645 196.35064029999987 8.255 131.27960889999886 9.758)
Error minima by case: (56.0 2 14.7051 2 0.7554 3 2.2546 1 0.0 0 0.9888 1 0.5238 1 0.0165 2 1.8598 2 1.9861 1 6.7794 1 0.0212 2 3.1402 2 2.0 2 24.0 2 15.1402 2 9.13 2 10.8291 2 0.8291 2 0.04 1 3.8291 1 2.7304 2 10.1402 3 2.7885 2 2.9047 2)
Average genome size in population (length): 176.784
Average program size in population (points): 177.784
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 265.8254918079645
Average age in population: 260.8900850625431
Median age in population: 263.8230118269995
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.573
Error (vector) diversity:			 0.58
Behavioral diversity:				 0.583
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 798258242
--- Timings ---
Current time: 1529616088940 milliseconds
Total Time:        1289.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       282.3 seconds, 21.9%
Fitness Testing:    786.6 seconds, 61.0%
Report:             220.1 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
