Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-99.33827557196231 -91] -190.3382755719623]
Train Case:   1 | Input/Output: [[84.07372107887397 -72] 12.073721078873973]
Train Case:   2 | Input/Output: [[23.53449339031239 -34] -10.465506609687608]
Train Case:   3 | Input/Output: [[33.30497674576242 46] 79.30497674576242]
Train Case:   4 | Input/Output: [[49.381655525086416 60] 109.38165552508642]
Train Case:   5 | Input/Output: [[32.14759536447039 -15] 17.14759536447039]
Train Case:   6 | Input/Output: [[-33.89237918439794 45] 11.107620815602061]
Train Case:   7 | Input/Output: [[72.53902606816177 -51] 21.539026068161775]
Train Case:   8 | Input/Output: [[91.76283863208039 2] 93.76283863208039]
Train Case:   9 | Input/Output: [[85.29763485946106 10] 95.29763485946106]
Train Case:  10 | Input/Output: [[72.91501728996269 -76] -3.084982710037309]
Train Case:  11 | Input/Output: [[-91.04361449183271 -61] -152.04361449183273]
Train Case:  12 | Input/Output: [[94.01060629656732 96] 190.01060629656732]
Train Case:  13 | Input/Output: [[-92.99029603995383 38] -54.99029603995383]
Train Case:  14 | Input/Output: [[-25.487281555384044 86] 60.512718444615956]
Train Case:  15 | Input/Output: [[-27.82943712120985 89] 61.17056287879015]
Train Case:  16 | Input/Output: [[-37.25068438644632 -6] -43.25068438644632]
Train Case:  17 | Input/Output: [[7.273386343914851 64] 71.27338634391485]
Train Case:  18 | Input/Output: [[37.957265400401184 99] 136.95726540040118]
Train Case:  19 | Input/Output: [[-47.58387148811762 -39] -86.58387148811762]
Train Case:  20 | Input/Output: [[-50.54253649791707 70] 19.45746350208293]
Train Case:  21 | Input/Output: [[4.301451558238199 98] 102.3014515582382]
Train Case:  22 | Input/Output: [[50.93520785580884 32] 82.93520785580884]
Train Case:  23 | Input/Output: [[76.22250977325444 94] 170.22250977325444]
Train Case:  24 | Input/Output: [[76.31462703290532 16] 92.31462703290532]
Test Case:   0 | Input/Output: [[22.376522030724317 -26] -3.623477969275683]
Test Case:   1 | Input/Output: [[-27.24163951563716 5] -22.24163951563716]
Test Case:   2 | Input/Output: [[-1.327773683297309 -44] -45.32777368329731]
Test Case:   3 | Input/Output: [[88.02962451836115 -34] 54.029624518361146]
Test Case:   4 | Input/Output: [[48.320612488337815 37] 85.32061248833782]
Test Case:   5 | Input/Output: [[85.18895223086759 93] 178.18895223086759]
Test Case:   6 | Input/Output: [[-71.30266085973724 49] -22.302660859737244]
Test Case:   7 | Input/Output: [[85.87043008388326 -91] -5.129569916116736]
Test Case:   8 | Input/Output: [[58.61552599525001 -36] 22.61552599525001]
Test Case:   9 | Input/Output: [[-54.377117728945336 -49] -103.37711772894534]
Test Case:  10 | Input/Output: [[94.9314771458638 60] 154.9314771458638]
Test Case:  11 | Input/Output: [[-74.05668722235899 -77] -151.056687222359]
Test Case:  12 | Input/Output: [[81.72688814869653 83] 164.72688814869653]
Test Case:  13 | Input/Output: [[72.92789230683076 -94] -21.072107693169244]
Test Case:  14 | Input/Output: [[81.05618953297798 48] 129.05618953297798]
Test Case:  15 | Input/Output: [[66.56833760720068 -87] -20.431662392799325]
Test Case:  16 | Input/Output: [[93.01760151985977 17] 110.01760151985977]
Test Case:  17 | Input/Output: [[56.78894083222957 -78] -21.21105916777043]
Test Case:  18 | Input/Output: [[32.1378031372349 -2] 30.137803137234897]
Test Case:  19 | Input/Output: [[-0.787716706196889 -42] -42.78771670619689]
Test Case:  20 | Input/Output: [[18.292963574347397 5] 23.292963574347397]
Test Case:  21 | Input/Output: [[-41.37402708322462 -77] -118.37402708322462]
Test Case:  22 | Input/Output: [[93.48700035353173 -68] 25.487000353531727]
Test Case:  23 | Input/Output: [[15.1452020003495 38] 53.1452020003495]
Test Case:  24 | Input/Output: [[66.53196528945847 44] 110.53196528945847]
Test Case:  25 | Input/Output: [[-43.77228954124879 -79] -122.7722895412488]
Test Case:  26 | Input/Output: [[-55.83143655214786 37] -18.831436552147863]
Test Case:  27 | Input/Output: [[-53.071996166669045 -90] -143.07199616666904]
Test Case:  28 | Input/Output: [[49.45423168778612 1] 50.45423168778612]
Test Case:  29 | Input/Output: [[-77.19957615499064 44] -33.19957615499064]
Test Case:  30 | Input/Output: [[73.81252517984512 27] 100.81252517984512]
Test Case:  31 | Input/Output: [[23.614177467037962 -36] -12.385822532962038]
Test Case:  32 | Input/Output: [[-73.03313432166536 -1] -74.03313432166536]
Test Case:  33 | Input/Output: [[-36.363326277085164 -52] -88.36332627708516]
Test Case:  34 | Input/Output: [[21.96542739002392 50] 71.96542739002392]
Test Case:  35 | Input/Output: [[44.21269295723397 -34] 10.212692957233969]
Test Case:  36 | Input/Output: [[99.64614344358736 -7] 92.64614344358736]
Test Case:  37 | Input/Output: [[-1.9398519221398942 9] 7.060148077860106]
Test Case:  38 | Input/Output: [[-71.72318096896151 57] -14.723180968961515]
Test Case:  39 | Input/Output: [[42.41008678884225 -4] 38.41008678884225]
Test Case:  40 | Input/Output: [[-81.13365859090828 80] -1.1336585909082828]
Test Case:  41 | Input/Output: [[60.633810444717994 -7] 53.633810444717994]
Test Case:  42 | Input/Output: [[98.67262829218512 -29] 69.67262829218512]
Test Case:  43 | Input/Output: [[-9.26721993643784 -96] -105.26721993643784]
Test Case:  44 | Input/Output: [[-82.88165651250881 58] -24.881656512508812]
Test Case:  45 | Input/Output: [[9.101093501452226 80] 89.10109350145223]
Test Case:  46 | Input/Output: [[-21.82966182578494 13] -8.829661825784939]
Test Case:  47 | Input/Output: [[34.53070879672114 -82] -47.46929120327886]
Test Case:  48 | Input/Output: [[50.674618135848135 77] 127.67461813584814]
Test Case:  49 | Input/Output: [[-37.54112454910303 2] -35.54112454910303]
Test Case:  50 | Input/Output: [[-92.24759056524454 -31] -123.24759056524454]
Test Case:  51 | Input/Output: [[-37.83944170411404 35] -2.839441704114037]
Test Case:  52 | Input/Output: [[87.50218785680883 2] 89.50218785680883]
Test Case:  53 | Input/Output: [[50.672295367673684 -40] 10.672295367673684]
Test Case:  54 | Input/Output: [[50.698854428500596 36] 86.6988544285006]
Test Case:  55 | Input/Output: [[85.26157064252678 85] 170.26157064252678]
Test Case:  56 | Input/Output: [[70.70081278239402 -32] 38.700812782394024]
Test Case:  57 | Input/Output: [[77.80226116494416 -50] 27.802261164944156]
Test Case:  58 | Input/Output: [[-37.21426148913034 21] -16.214261489130337]
Test Case:  59 | Input/Output: [[87.07663912996028 44] 131.07663912996028]
Test Case:  60 | Input/Output: [[68.0513048437301 -32] 36.051304843730094]
Test Case:  61 | Input/Output: [[-41.06730361642583 -10] -51.06730361642583]
Test Case:  62 | Input/Output: [[-79.80474630989852 -29] -108.80474630989852]
Test Case:  63 | Input/Output: [[-35.13103828888717 -44] -79.13103828888717]
Test Case:  64 | Input/Output: [[76.64209481701118 -24] 52.642094817011184]
Test Case:  65 | Input/Output: [[-50.87272482109617 9] -41.87272482109617]
Test Case:  66 | Input/Output: [[56.448548949772004 -32] 24.448548949772004]
Test Case:  67 | Input/Output: [[-90.47497772909148 72] -18.474977729091478]
Test Case:  68 | Input/Output: [[-22.07048425330538 -93] -115.07048425330538]
Test Case:  69 | Input/Output: [[-29.73591386598811 72] 42.26408613401189]
Test Case:  70 | Input/Output: [[-82.00864641165654 32] -50.00864641165654]
Test Case:  71 | Input/Output: [[-2.7864109406582287 80] 77.21358905934177]
Test Case:  72 | Input/Output: [[52.3555863056732 96] 148.3555863056732]
Test Case:  73 | Input/Output: [[-23.817607947401285 -65] -88.81760794740129]
Test Case:  74 | Input/Output: [[-33.299506490999846 -97] -130.29950649099985]
Test Case:  75 | Input/Output: [[-46.84953528870781 -29] -75.84953528870781]
Test Case:  76 | Input/Output: [[0.48091140767903084 77] 77.48091140767903]
Test Case:  77 | Input/Output: [[6.5382251756450245 -61] -54.461774824354976]
Test Case:  78 | Input/Output: [[73.84778144887946 -87] -13.15221855112054]
Test Case:  79 | Input/Output: [[69.6217030116076 85] 154.6217030116076]
Test Case:  80 | Input/Output: [[-4.8730622734738205 -77] -81.87306227347382]
Test Case:  81 | Input/Output: [[-25.45769687321318 -80] -105.45769687321318]
Test Case:  82 | Input/Output: [[73.38515026261157 56] 129.38515026261157]
Test Case:  83 | Input/Output: [[-67.54425561795547 -18] -85.54425561795547]
Test Case:  84 | Input/Output: [[-5.6447141579334215 99] 93.35528584206658]
Test Case:  85 | Input/Output: [[-53.76461374993682 47] -6.764613749936821]
Test Case:  86 | Input/Output: [[84.11773872420576 -57] 27.117738724205765]
Test Case:  87 | Input/Output: [[-56.161909705192016 -13] -69.16190970519202]
Test Case:  88 | Input/Output: [[-63.00288111586689 61] -2.0028811158668915]
Test Case:  89 | Input/Output: [[-0.8164804897935767 82] 81.18351951020642]
Test Case:  90 | Input/Output: [[-6.52028405091886 -83] -89.52028405091886]
Test Case:  91 | Input/Output: [[-70.05166519461253 -60] -130.05166519461253]
Test Case:  92 | Input/Output: [[-37.11849372980751 -92] -129.1184937298075]
Test Case:  93 | Input/Output: [[16.05646209983 18] 34.05646209983]
Test Case:  94 | Input/Output: [[31.914545142169345 79] 110.91454514216935]
Test Case:  95 | Input/Output: [[14.992620435864652 -93] -78.00737956413535]
Test Case:  96 | Input/Output: [[61.188321882186216 44] 105.18832188218622]
Test Case:  97 | Input/Output: [[33.82133978475426 -12] 21.821339784754258]
Test Case:  98 | Input/Output: [[-83.28042236241069 -61] -144.2804223624107]
Test Case:  99 | Input/Output: [[77.63377358590515 -77] 0.6337735859051463]
Test Case: 100 | Input/Output: [[-87.7794506108574 -27] -114.7794506108574]
Test Case: 101 | Input/Output: [[-64.50360320187085 95] 30.496396798129155]
Test Case: 102 | Input/Output: [[19.300194703584623 19] 38.30019470358462]
Test Case: 103 | Input/Output: [[95.00963282629442 -46] 49.00963282629442]
Test Case: 104 | Input/Output: [[43.039536219245235 76] 119.03953621924524]
Test Case: 105 | Input/Output: [[-12.93112811041486 -58] -70.93112811041486]
Test Case: 106 | Input/Output: [[-60.28126917446779 95] 34.71873082553221]
Test Case: 107 | Input/Output: [[10.988882846504495 -60] -49.011117153495505]
Test Case: 108 | Input/Output: [[99.43677444418753 66] 165.43677444418753]
Test Case: 109 | Input/Output: [[-45.759752217418104 36] -9.759752217418104]
Test Case: 110 | Input/Output: [[-87.82640628968767 -96] -183.82640628968767]
Test Case: 111 | Input/Output: [[-37.85282681949707 67] 29.147173180502932]
Test Case: 112 | Input/Output: [[52.33493693526421 -30] 22.33493693526421]
Test Case: 113 | Input/Output: [[-67.66416810995015 5] -62.664168109950154]
Test Case: 114 | Input/Output: [[85.08070491619611 60] 145.0807049161961]
Test Case: 115 | Input/Output: [[54.82291711922389 -81] -26.177082880776112]
Test Case: 116 | Input/Output: [[-79.1894763018538 -85] -164.1894763018538]
Test Case: 117 | Input/Output: [[-57.859207069542464 66] 8.140792930457536]
Test Case: 118 | Input/Output: [[89.78747935820402 -4] 85.78747935820402]
Test Case: 119 | Input/Output: [[24.345403416497774 10] 34.345403416497774]
Test Case: 120 | Input/Output: [[37.22899381144185 69] 106.22899381144185]
Test Case: 121 | Input/Output: [[-93.47680843226397 63] -30.476808432263965]
Test Case: 122 | Input/Output: [[-18.301184293057943 96] 77.69881570694206]
Test Case: 123 | Input/Output: [[0.9709484257968768 -28] -27.029051574203123]
Test Case: 124 | Input/Output: [[92.6906160943073 -58] 34.6906160943073]
Test Case: 125 | Input/Output: [[87.79244232922989 93] 180.79244232922989]
Test Case: 126 | Input/Output: [[31.269803626717902 -16] 15.269803626717902]
Test Case: 127 | Input/Output: [[-24.085277247328435 11] -13.085277247328435]
Test Case: 128 | Input/Output: [[4.272056196917816 -22] -17.727943803082184]
Test Case: 129 | Input/Output: [[25.539867556621743 72] 97.53986755662174]
Test Case: 130 | Input/Output: [[66.987119769825 69] 135.987119769825]
Test Case: 131 | Input/Output: [[-21.50329553076351 -35] -56.50329553076351]
Test Case: 132 | Input/Output: [[-92.6317303981061 -10] -102.6317303981061]
Test Case: 133 | Input/Output: [[96.95381459603581 24] 120.95381459603581]
Test Case: 134 | Input/Output: [[-1.8488257838150446 63] 61.151174216184955]
Test Case: 135 | Input/Output: [[85.2495264720423 -78] 7.249526472042305]
Test Case: 136 | Input/Output: [[9.546345923096908 -89] -79.45365407690309]
Test Case: 137 | Input/Output: [[32.683655912692814 11] 43.683655912692814]
Test Case: 138 | Input/Output: [[-19.782173467774314 -88] -107.78217346777431]
Test Case: 139 | Input/Output: [[24.123947242491383 -14] 10.123947242491383]
Test Case: 140 | Input/Output: [[40.58795806991182 -80] -39.41204193008818]
Test Case: 141 | Input/Output: [[-2.537149818604533 -72] -74.53714981860453]
Test Case: 142 | Input/Output: [[-94.34319796915989 81] -13.343197969159888]
Test Case: 143 | Input/Output: [[-2.0450336678977834 81] 78.95496633210222]
Test Case: 144 | Input/Output: [[89.3942569351122 -19] 70.3942569351122]
Test Case: 145 | Input/Output: [[1.0846742136377827 0] 1.0846742136377827]
Test Case: 146 | Input/Output: [[-63.592501201327956 -18] -81.59250120132796]
Test Case: 147 | Input/Output: [[-2.268381816656401 -47] -49.2683818166564]
Test Case: 148 | Input/Output: [[-45.44631234165701 27] -18.446312341657013]
Test Case: 149 | Input/Output: [[-4.535160999965669 -43] -47.53516099996567]
Test Case: 150 | Input/Output: [[6.024602276377706 -84] -77.9753977236223]
Test Case: 151 | Input/Output: [[-81.77769177158373 -18] -99.77769177158373]
Test Case: 152 | Input/Output: [[2.5219566735829204 -72] -69.47804332641708]
Test Case: 153 | Input/Output: [[-99.45056770207268 3] -96.45056770207268]
Test Case: 154 | Input/Output: [[-44.59497458521125 33] -11.594974585211247]
Test Case: 155 | Input/Output: [[45.25830365706793 3] 48.25830365706793]
Test Case: 156 | Input/Output: [[51.75540380066971 40] 91.75540380066971]
Test Case: 157 | Input/Output: [[-32.39872193790143 -46] -78.39872193790143]
Test Case: 158 | Input/Output: [[17.07325120457554 -50] -32.92674879542446]
Test Case: 159 | Input/Output: [[25.516173956250412 80] 105.51617395625041]
Test Case: 160 | Input/Output: [[11.81772133155367 -28] -16.18227866844633]
Test Case: 161 | Input/Output: [[67.4480648766646 71] 138.4480648766646]
Test Case: 162 | Input/Output: [[46.774740724262756 73] 119.77474072426276]
Test Case: 163 | Input/Output: [[-31.508415068329285 20] -11.508415068329285]
Test Case: 164 | Input/Output: [[-63.34649975868396 51] -12.346499758683962]
Test Case: 165 | Input/Output: [[-6.385506745900813 68] 61.61449325409919]
Test Case: 166 | Input/Output: [[-36.07110813997851 79] 42.92889186002149]
Test Case: 167 | Input/Output: [[-63.85596934060658 49] -14.855969340606578]
Test Case: 168 | Input/Output: [[-3.443526264523939 -35] -38.44352626452394]
Test Case: 169 | Input/Output: [[8.867384788940441 25] 33.86738478894044]
Test Case: 170 | Input/Output: [[-16.41190613652661 -48] -64.41190613652661]
Test Case: 171 | Input/Output: [[76.9918843572145 -88] -11.008115642785498]
Test Case: 172 | Input/Output: [[98.29391316545679 61] 159.2939131654568]
Test Case: 173 | Input/Output: [[-31.9029095328589 -98] -129.9029095328589]
Test Case: 174 | Input/Output: [[31.29024452299592 -36] -4.70975547700408]
Test Case: 175 | Input/Output: [[10.096907507318974 58] 68.09690750731897]
Test Case: 176 | Input/Output: [[-91.17150821499804 -33] -124.17150821499804]
Test Case: 177 | Input/Output: [[-93.9605122159663 26] -67.9605122159663]
Test Case: 178 | Input/Output: [[60.95979770116722 5] 65.95979770116722]
Test Case: 179 | Input/Output: [[-68.43862046123029 -49] -117.43862046123029]
Test Case: 180 | Input/Output: [[45.47276869180513 -12] 33.47276869180513]
Test Case: 181 | Input/Output: [[-92.6891765166733 -48] -140.68917651667329]
Test Case: 182 | Input/Output: [[-87.24316699200662 73] -14.243166992006621]
Test Case: 183 | Input/Output: [[22.95463618172002 -37] -14.04536381827998]
Test Case: 184 | Input/Output: [[-23.359073029308504 11] -12.359073029308504]
Test Case: 185 | Input/Output: [[54.28688319038656 -64] -9.713116809613439]
Test Case: 186 | Input/Output: [[-99.01288248351756 14] -85.01288248351756]
Test Case: 187 | Input/Output: [[34.51048994543356 -13] 21.510489945433562]
Test Case: 188 | Input/Output: [[5.109610464330046 50] 55.109610464330046]
Test Case: 189 | Input/Output: [[10.168983160801531 7] 17.16898316080153]
Test Case: 190 | Input/Output: [[90.33228257611671 -19] 71.33228257611671]
Test Case: 191 | Input/Output: [[19.719183420246395 -45] -25.280816579753605]
Test Case: 192 | Input/Output: [[51.17222160502459 -90] -38.82777839497541]
Test Case: 193 | Input/Output: [[-14.05777355333396 47] 32.94222644666604]
Test Case: 194 | Input/Output: [[95.61646550630343 46] 141.61646550630343]
Test Case: 195 | Input/Output: [[-95.20955442846288 50] -45.20955442846288]
Test Case: 196 | Input/Output: [[89.45830002930052 3] 92.45830002930052]
Test Case: 197 | Input/Output: [[-6.610822035313049 -30] -36.61082203531305]
Test Case: 198 | Input/Output: [[50.77189139155996 40] 90.77189139155996]
Test Case: 199 | Input/Output: [[52.26220427243305 -46] 6.262204272433053]
Test Case: 200 | Input/Output: [[3.633088023379514 24] 27.633088023379514]
Test Case: 201 | Input/Output: [[-44.24551694478824 -58] -102.24551694478825]
Test Case: 202 | Input/Output: [[-64.89882807324052 -78] -142.8988280732405]
Test Case: 203 | Input/Output: [[-92.5045556172038 -12] -104.5045556172038]
Test Case: 204 | Input/Output: [[-58.219640169881835 11] -47.219640169881835]
Test Case: 205 | Input/Output: [[61.82937958935008 -66] -4.170620410649917]
Test Case: 206 | Input/Output: [[-23.235492405506548 -91] -114.23549240550655]
Test Case: 207 | Input/Output: [[-56.9149911485755 80] 23.085008851424497]
Test Case: 208 | Input/Output: [[31.525553028798072 -16] 15.525553028798072]
Test Case: 209 | Input/Output: [[77.74809184321177 12] 89.74809184321177]
Test Case: 210 | Input/Output: [[-95.74327496452801 20] -75.74327496452801]
Test Case: 211 | Input/Output: [[-42.90845815174471 -69] -111.90845815174471]
Test Case: 212 | Input/Output: [[25.32678548181873 61] 86.32678548181873]
Test Case: 213 | Input/Output: [[-12.313191687435292 -3] -15.313191687435292]
Test Case: 214 | Input/Output: [[98.88717842514788 36] 134.88717842514788]
Test Case: 215 | Input/Output: [[-54.39916056726224 76] 21.600839432737757]
Test Case: 216 | Input/Output: [[-58.45104579666285 92] 33.54895420333715]
Test Case: 217 | Input/Output: [[84.80745716707693 88] 172.80745716707693]
Test Case: 218 | Input/Output: [[-62.86204691251196 -78] -140.86204691251197]
Test Case: 219 | Input/Output: [[-92.31478586659367 23] -69.31478586659367]
Test Case: 220 | Input/Output: [[-2.9602502856850776 -92] -94.96025028568508]
Test Case: 221 | Input/Output: [[-35.48440958473324 -13] -48.48440958473324]
Test Case: 222 | Input/Output: [[-55.522561127341085 72] 16.477438872658915]
Test Case: 223 | Input/Output: [[-20.012941553395507 -96] -116.0129415533955]
Test Case: 224 | Input/Output: [[-61.391454618045024 57] -4.3914546180450245]
Test Case: 225 | Input/Output: [[21.389350965498693 50] 71.38935096549869]
Test Case: 226 | Input/Output: [[-10.955201482353544 -9] -19.955201482353544]
Test Case: 227 | Input/Output: [[8.057791437795814 90] 98.05779143779581]
Test Case: 228 | Input/Output: [[-88.16974124589201 -63] -151.169741245892]
Test Case: 229 | Input/Output: [[-86.72102278098424 2] -84.72102278098424]
Test Case: 230 | Input/Output: [[23.434321510920284 -83] -59.565678489079716]
Test Case: 231 | Input/Output: [[69.57739385218312 94] 163.57739385218312]
Test Case: 232 | Input/Output: [[41.10463052635137 -91] -49.89536947364863]
Test Case: 233 | Input/Output: [[-55.71114431359876 -42] -97.71114431359877]
Test Case: 234 | Input/Output: [[-81.19557230169616 6] -75.19557230169616]
Test Case: 235 | Input/Output: [[13.676298139512028 -60] -46.32370186048797]
Test Case: 236 | Input/Output: [[27.090888925670484 95] 122.09088892567048]
Test Case: 237 | Input/Output: [[-16.52683545015195 82] 65.47316454984805]
Test Case: 238 | Input/Output: [[9.35045349404244 68] 77.35045349404244]
Test Case: 239 | Input/Output: [[48.0021458150122 -43] 5.002145815012199]
Test Case: 240 | Input/Output: [[-11.680448404085269 -82] -93.68044840408527]
Test Case: 241 | Input/Output: [[6.75071248074353 45] 51.75071248074353]
Test Case: 242 | Input/Output: [[-16.767614336330297 75] 58.2323856636697]
Test Case: 243 | Input/Output: [[-92.53567751628277 22] -70.53567751628277]
Test Case: 244 | Input/Output: [[81.233694920396 16] 97.233694920396]
Test Case: 245 | Input/Output: [[71.33319172140963 88] 159.33319172140963]
Test Case: 246 | Input/Output: [[-56.41639523893496 -89] -145.41639523893497]
Test Case: 247 | Input/Output: [[-77.9305309582929 95] 17.069469041707094]
Test Case: 248 | Input/Output: [[-90.35601817080013 -80] -170.35601817080013]
Test Case: 249 | Input/Output: [[-44.64699072552185 70] 25.353009274478147]
Test Case: 250 | Input/Output: [[45.19572669120683 -86] -40.80427330879317]
Test Case: 251 | Input/Output: [[-20.0784608898591 20] -0.07846088985910171]
Test Case: 252 | Input/Output: [[94.57716690022446 46] 140.57716690022446]
Test Case: 253 | Input/Output: [[49.88528378192507 69] 118.88528378192507]
Test Case: 254 | Input/Output: [[-20.467160553727396 74] 53.532839446272604]
Test Case: 255 | Input/Output: [[88.20188210189372 -30] 58.201882101893716]
Test Case: 256 | Input/Output: [[-71.56268498215522 21] -50.56268498215522]
Test Case: 257 | Input/Output: [[-40.0605395477323 27] -13.060539547732297]
Test Case: 258 | Input/Output: [[-55.48405865519974 87] 31.51594134480026]
Test Case: 259 | Input/Output: [[70.12233436677266 -20] 50.12233436677266]
Test Case: 260 | Input/Output: [[-33.8364297030666 -7] -40.8364297030666]
Test Case: 261 | Input/Output: [[74.26779155822737 25] 99.26779155822737]
Test Case: 262 | Input/Output: [[23.98471906401008 86] 109.98471906401008]
Test Case: 263 | Input/Output: [[23.830786387948265 33] 56.830786387948265]
Test Case: 264 | Input/Output: [[-86.54625981669493 -100] -186.54625981669494]
Test Case: 265 | Input/Output: [[-82.35180162043147 -88] -170.35180162043147]
Test Case: 266 | Input/Output: [[-79.12897046097633 55] -24.128970460976333]
Test Case: 267 | Input/Output: [[94.84220249766338 -95] -0.1577975023366207]
Test Case: 268 | Input/Output: [[-80.13336513626406 56] -24.13336513626406]
Test Case: 269 | Input/Output: [[-31.391043590199246 80] 48.608956409800754]
Test Case: 270 | Input/Output: [[-64.37425166330203 71] 6.625748336697967]
Test Case: 271 | Input/Output: [[1.5351468712160141 -67] -65.46485312878399]
Test Case: 272 | Input/Output: [[-70.23502751620161 -5] -75.23502751620161]
Test Case: 273 | Input/Output: [[-29.206668561546564 7] -22.206668561546564]
Test Case: 274 | Input/Output: [[-62.98907373596543 -4] -66.98907373596543]
Test Case: 275 | Input/Output: [[86.67905372676427 8] 94.67905372676427]
Test Case: 276 | Input/Output: [[17.286021821123285 2] 19.286021821123285]
Test Case: 277 | Input/Output: [[39.94504494153318 75] 114.94504494153318]
Test Case: 278 | Input/Output: [[94.10079797470229 -20] 74.10079797470229]
Test Case: 279 | Input/Output: [[-92.75722215708811 -60] -152.7572221570881]
Test Case: 280 | Input/Output: [[56.04394406177718 38] 94.04394406177718]
Test Case: 281 | Input/Output: [[31.438206026838145 -6] 25.438206026838145]
Test Case: 282 | Input/Output: [[4.341863664004279 34] 38.34186366400428]
Test Case: 283 | Input/Output: [[-46.71618677419491 93] 46.28381322580509]
Test Case: 284 | Input/Output: [[69.20360024419367 -73] -3.796399755806334]
Test Case: 285 | Input/Output: [[-92.71944334333504 6] -86.71944334333504]
Test Case: 286 | Input/Output: [[-25.78057569100973 0] -25.78057569100973]
Test Case: 287 | Input/Output: [[39.331204386113 47] 86.331204386113]
Test Case: 288 | Input/Output: [[-65.61009733845569 -14] -79.61009733845569]
Test Case: 289 | Input/Output: [[14.932677880216701 87] 101.9326778802167]
Test Case: 290 | Input/Output: [[-93.26614725308274 -76] -169.26614725308275]
Test Case: 291 | Input/Output: [[-44.445949280283074 10] -34.445949280283074]
Test Case: 292 | Input/Output: [[24.69259600331364 36] 60.69259600331364]
Test Case: 293 | Input/Output: [[54.58500203159517 28] 82.58500203159517]
Test Case: 294 | Input/Output: [[-58.22660968451938 43] -15.226609684519381]
Test Case: 295 | Input/Output: [[-45.61100011570465 36] -9.611000115704648]
Test Case: 296 | Input/Output: [[-74.16090254468878 -62] -136.16090254468878]
Test Case: 297 | Input/Output: [[71.71993879050777 -60] 11.719938790507769]
Test Case: 298 | Input/Output: [[13.598049424940427 -92] -78.40195057505957]
Test Case: 299 | Input/Output: [[-41.33587742291538 -2] -43.33587742291538]
Test Case: 300 | Input/Output: [[-44.72916718970592 -2] -46.72916718970592]
Test Case: 301 | Input/Output: [[69.0937609520457 -99] -29.9062390479543]
Test Case: 302 | Input/Output: [[78.02756694020778 -78] 0.027566940207776724]
Test Case: 303 | Input/Output: [[-77.14130459031429 56] -21.14130459031429]
Test Case: 304 | Input/Output: [[-93.16130601266335 -90] -183.16130601266335]
Test Case: 305 | Input/Output: [[-57.4635451690396 -14] -71.4635451690396]
Test Case: 306 | Input/Output: [[11.229503145530046 56] 67.22950314553005]
Test Case: 307 | Input/Output: [[80.12654472096915 -35] 45.12654472096915]
Test Case: 308 | Input/Output: [[-28.85790319310115 85] 56.14209680689885]
Test Case: 309 | Input/Output: [[40.79572418131835 -97] -56.20427581868165]
Test Case: 310 | Input/Output: [[64.68846722227516 6] 70.68846722227516]
Test Case: 311 | Input/Output: [[83.18489293258432 -22] 61.18489293258432]
Test Case: 312 | Input/Output: [[25.30616983426468 74] 99.30616983426468]
Test Case: 313 | Input/Output: [[32.755621731173534 -5] 27.755621731173534]
Test Case: 314 | Input/Output: [[-89.18357426788339 98] 8.816425732116613]
Test Case: 315 | Input/Output: [[4.67449015424188 -49] -44.32550984575812]
Test Case: 316 | Input/Output: [[-16.244397612087752 46] 29.755602387912248]
Test Case: 317 | Input/Output: [[30.84471946897682 15] 45.84471946897682]
Test Case: 318 | Input/Output: [[2.190357644286962 -75] -72.80964235571304]
Test Case: 319 | Input/Output: [[-69.70287978750413 72] 2.2971202124958694]
Test Case: 320 | Input/Output: [[82.19629606022227 10] 92.19629606022227]
Test Case: 321 | Input/Output: [[26.850036558975916 51] 77.85003655897592]
Test Case: 322 | Input/Output: [[-28.104831365788627 -84] -112.10483136578863]
Test Case: 323 | Input/Output: [[44.129497934122384 -26] 18.129497934122384]
Test Case: 324 | Input/Output: [[82.2312396088193 70] 152.2312396088193]
Test Case: 325 | Input/Output: [[-33.611211918215275 95] 61.388788081784725]
Test Case: 326 | Input/Output: [[53.07583759234714 0] 53.07583759234714]
Test Case: 327 | Input/Output: [[24.789255578724976 -61] -36.210744421275024]
Test Case: 328 | Input/Output: [[43.78228064897377 -18] 25.782280648973767]
Test Case: 329 | Input/Output: [[-79.35889363127356 -78] -157.35889363127356]
Test Case: 330 | Input/Output: [[-49.51701544743523 -62] -111.51701544743523]
Test Case: 331 | Input/Output: [[20.78023677221394 99] 119.78023677221394]
Test Case: 332 | Input/Output: [[91.61248512867891 17] 108.61248512867891]
Test Case: 333 | Input/Output: [[-89.40569670260885 -91] -180.40569670260885]
Test Case: 334 | Input/Output: [[19.99238612036831 62] 81.99238612036831]
Test Case: 335 | Input/Output: [[14.945358996843794 -30] -15.054641003156206]
Test Case: 336 | Input/Output: [[25.334888810574668 38] 63.33488881057467]
Test Case: 337 | Input/Output: [[-66.35026427896364 -6] -72.35026427896364]
Test Case: 338 | Input/Output: [[70.88158922528021 -49] 21.88158922528021]
Test Case: 339 | Input/Output: [[-90.41594564172352 16] -74.41594564172352]
Test Case: 340 | Input/Output: [[-5.483340955900445 81] 75.51665904409955]
Test Case: 341 | Input/Output: [[28.380583816963906 73] 101.3805838169639]
Test Case: 342 | Input/Output: [[-44.48783124790656 48] 3.5121687520934373]
Test Case: 343 | Input/Output: [[37.817211975070876 94] 131.81721197507088]
Test Case: 344 | Input/Output: [[-79.81618354614497 85] 5.18381645385503]
Test Case: 345 | Input/Output: [[-64.15219196035322 46] -18.15219196035322]
Test Case: 346 | Input/Output: [[-76.57984772732064 -2] -78.57984772732064]
Test Case: 347 | Input/Output: [[22.76943429243157 27] 49.76943429243157]
Test Case: 348 | Input/Output: [[-36.32847859157866 14] -22.32847859157866]
Test Case: 349 | Input/Output: [[67.88044057417119 14] 81.88044057417119]
Test Case: 350 | Input/Output: [[-98.54788097315283 89] -9.547880973152829]
Test Case: 351 | Input/Output: [[53.906830516102474 -77] -23.093169483897526]
Test Case: 352 | Input/Output: [[-44.67554943343952 -89] -133.67554943343953]
Test Case: 353 | Input/Output: [[-75.48856932828599 49] -26.48856932828599]
Test Case: 354 | Input/Output: [[68.21769962732716 35] 103.21769962732716]
Test Case: 355 | Input/Output: [[-31.044937656636534 93] 61.955062343363466]
Test Case: 356 | Input/Output: [[49.88949077517168 21] 70.88949077517168]
Test Case: 357 | Input/Output: [[0.999841569061104 52] 52.999841569061104]
Test Case: 358 | Input/Output: [[62.47724121328102 -81] -18.52275878671898]
Test Case: 359 | Input/Output: [[50.821583635334235 -25] 25.821583635334235]
Test Case: 360 | Input/Output: [[-76.00735212055285 19] -57.00735212055285]
Test Case: 361 | Input/Output: [[-25.190914039581116 55] 29.809085960418884]
Test Case: 362 | Input/Output: [[-65.99976238290522 -22] -87.99976238290522]
Test Case: 363 | Input/Output: [[-92.05768065391602 91] -1.057680653916023]
Test Case: 364 | Input/Output: [[7.674226465773543 11] 18.674226465773543]
Test Case: 365 | Input/Output: [[-1.5435843630010169 -60] -61.54358436300102]
Test Case: 366 | Input/Output: [[-70.1203201369408 -23] -93.1203201369408]
Test Case: 367 | Input/Output: [[89.4306788017025 -44] 45.4306788017025]
Test Case: 368 | Input/Output: [[-30.08983929317766 3] -27.08983929317766]
Test Case: 369 | Input/Output: [[56.7742034850171 -82] -25.225796514982903]
Test Case: 370 | Input/Output: [[28.132538332642753 77] 105.13253833264275]
Test Case: 371 | Input/Output: [[76.7516543006005 37] 113.7516543006005]
Test Case: 372 | Input/Output: [[-72.88696209889349 37] -35.88696209889349]
Test Case: 373 | Input/Output: [[62.440094046786555 -78] -15.559905953213445]
Test Case: 374 | Input/Output: [[-62.57158209575773 -3] -65.57158209575772]
Test Case: 375 | Input/Output: [[73.53922579487619 -82] -8.460774205123812]
Test Case: 376 | Input/Output: [[-99.37745480945964 -23] -122.37745480945964]
Test Case: 377 | Input/Output: [[92.91698953372583 -53] 39.916989533725825]
Test Case: 378 | Input/Output: [[-79.17819668318096 37] -42.17819668318096]
Test Case: 379 | Input/Output: [[71.0910104335195 41] 112.0910104335195]
Test Case: 380 | Input/Output: [[-2.036074086540822 47] 44.96392591345918]
Test Case: 381 | Input/Output: [[-28.81709413029911 35] 6.182905869700889]
Test Case: 382 | Input/Output: [[69.48503610418038 9] 78.48503610418038]
Test Case: 383 | Input/Output: [[-84.29371776290822 -52] -136.29371776290822]
Test Case: 384 | Input/Output: [[56.97303718359851 -49] 7.973037183598507]
Test Case: 385 | Input/Output: [[-66.503836181687 45] -21.503836181687007]
Test Case: 386 | Input/Output: [[-52.39712692582974 -67] -119.39712692582974]
Test Case: 387 | Input/Output: [[34.367518644824145 -32] 2.3675186448241448]
Test Case: 388 | Input/Output: [[-8.016827929133697 -21] -29.016827929133697]
Test Case: 389 | Input/Output: [[-42.692293244514666 78] 35.307706755485334]
Test Case: 390 | Input/Output: [[-55.897821513730506 -40] -95.8978215137305]
Test Case: 391 | Input/Output: [[-80.22765508851484 -71] -151.22765508851484]
Test Case: 392 | Input/Output: [[82.86869897712288 51] 133.86869897712288]
Test Case: 393 | Input/Output: [[45.41071131655201 67] 112.41071131655201]
Test Case: 394 | Input/Output: [[-13.238815913450381 75] 61.76118408654962]
Test Case: 395 | Input/Output: [[61.62737591084252 -23] 38.62737591084252]
Test Case: 396 | Input/Output: [[-94.18421429565424 15] -79.18421429565424]
Test Case: 397 | Input/Output: [[-97.32320547178341 -8] -105.32320547178341]
Test Case: 398 | Input/Output: [[94.58181700183965 88] 182.58181700183965]
Test Case: 399 | Input/Output: [[-21.881706975450072 60] 38.11829302454993]
Test Case: 400 | Input/Output: [[94.12624398867447 -54] 40.126243988674474]
Test Case: 401 | Input/Output: [[4.140589272753246 4] 8.140589272753246]
Test Case: 402 | Input/Output: [[53.27716807651913 39] 92.27716807651913]
Test Case: 403 | Input/Output: [[52.63729130249703 63] 115.63729130249703]
Test Case: 404 | Input/Output: [[-96.4484434768384 -93] -189.4484434768384]
Test Case: 405 | Input/Output: [[69.95122914047744 -67] 2.9512291404774373]
Test Case: 406 | Input/Output: [[-97.47308344529158 -4] -101.47308344529158]
Test Case: 407 | Input/Output: [[-11.476320510874444 85] 73.52367948912556]
Test Case: 408 | Input/Output: [[86.46167848368276 66] 152.46167848368276]
Test Case: 409 | Input/Output: [[92.01458973309224 84] 176.01458973309224]
Test Case: 410 | Input/Output: [[97.60070835665545 87] 184.60070835665545]
Test Case: 411 | Input/Output: [[-80.7572691102574 -97] -177.7572691102574]
Test Case: 412 | Input/Output: [[42.643988500055485 36] 78.64398850005549]
Test Case: 413 | Input/Output: [[-43.911468322026145 -23] -66.91146832202614]
Test Case: 414 | Input/Output: [[9.037105490109099 -59] -49.9628945098909]
Test Case: 415 | Input/Output: [[6.793084373825636 -71] -64.20691562617436]
Test Case: 416 | Input/Output: [[-15.010797494120624 -56] -71.01079749412062]
Test Case: 417 | Input/Output: [[-51.718593704671 45] -6.718593704671001]
Test Case: 418 | Input/Output: [[-44.880068689527164 -100] -144.88006868952715]
Test Case: 419 | Input/Output: [[74.34830666467286 -22] 52.34830666467286]
Test Case: 420 | Input/Output: [[-61.714511656783586 90] 28.285488343216414]
Test Case: 421 | Input/Output: [[92.33570506110925 66] 158.33570506110925]
Test Case: 422 | Input/Output: [[49.8584733804193 -54] -4.141526619580702]
Test Case: 423 | Input/Output: [[-44.02653070053457 44] -0.02653070053457185]
Test Case: 424 | Input/Output: [[15.705207504640128 71] 86.70520750464013]
Test Case: 425 | Input/Output: [[-60.15978622183582 39] -21.159786221835823]
Test Case: 426 | Input/Output: [[-15.502736812687615 -95] -110.50273681268762]
Test Case: 427 | Input/Output: [[14.312909520603 -5] 9.312909520603]
Test Case: 428 | Input/Output: [[-69.97875480022853 -29] -98.97875480022853]
Test Case: 429 | Input/Output: [[74.17768645588328 26] 100.17768645588328]
Test Case: 430 | Input/Output: [[35.46449024433022 8] 43.46449024433022]
Test Case: 431 | Input/Output: [[-71.86285185631192 -67] -138.86285185631192]
Test Case: 432 | Input/Output: [[27.11788969118267 66] 93.11788969118267]
Test Case: 433 | Input/Output: [[21.69923602609201 45] 66.69923602609201]
Test Case: 434 | Input/Output: [[-85.27702559704657 49] -36.277025597046574]
Test Case: 435 | Input/Output: [[29.97394164525477 88] 117.97394164525477]
Test Case: 436 | Input/Output: [[-92.24950656681585 -23] -115.24950656681585]
Test Case: 437 | Input/Output: [[30.553999205616776 48] 78.55399920561678]
Test Case: 438 | Input/Output: [[-18.008111799324638 -47] -65.00811179932464]
Test Case: 439 | Input/Output: [[92.26082736501235 -44] 48.26082736501235]
Test Case: 440 | Input/Output: [[63.828967271864826 -59] 4.828967271864826]
Test Case: 441 | Input/Output: [[-34.40944266487982 0] -34.40944266487982]
Test Case: 442 | Input/Output: [[-86.65339721319314 -87] -173.65339721319316]
Test Case: 443 | Input/Output: [[-59.99571092326654 -11] -70.99571092326654]
Test Case: 444 | Input/Output: [[37.14108141589924 17] 54.14108141589924]
Test Case: 445 | Input/Output: [[37.75189606427321 -27] 10.751896064273211]
Test Case: 446 | Input/Output: [[65.47218119060122 87] 152.47218119060122]
Test Case: 447 | Input/Output: [[-61.77876166054328 8] -53.77876166054328]
Test Case: 448 | Input/Output: [[-26.94337982432529 -44] -70.94337982432529]
Test Case: 449 | Input/Output: [[-26.78822251854858 -78] -104.78822251854858]
Test Case: 450 | Input/Output: [[3.6687952647255173 0] 3.6687952647255173]
Test Case: 451 | Input/Output: [[21.97276069167313 96] 117.97276069167313]
Test Case: 452 | Input/Output: [[-95.93269553993512 -7] -102.93269553993512]
Test Case: 453 | Input/Output: [[-83.98859215839232 -44] -127.98859215839232]
Test Case: 454 | Input/Output: [[-83.31496357092709 38] -45.31496357092709]
Test Case: 455 | Input/Output: [[-96.6816473966237 -41] -137.6816473966237]
Test Case: 456 | Input/Output: [[-33.236217251540424 78] 44.763782748459576]
Test Case: 457 | Input/Output: [[-61.50550180895824 18] -43.50550180895824]
Test Case: 458 | Input/Output: [[-33.12957019725873 25] -8.12957019725873]
Test Case: 459 | Input/Output: [[35.71716218135538 -12] 23.717162181355377]
Test Case: 460 | Input/Output: [[76.05556433895308 51] 127.05556433895308]
Test Case: 461 | Input/Output: [[39.701200257845755 -32] 7.7012002578457555]
Test Case: 462 | Input/Output: [[25.75478089498347 -22] 3.754780894983469]
Test Case: 463 | Input/Output: [[90.11684468221722 27] 117.11684468221722]
Test Case: 464 | Input/Output: [[-40.86478442060568 -77] -117.86478442060567]
Test Case: 465 | Input/Output: [[57.26299774159776 -83] -25.737002258402242]
Test Case: 466 | Input/Output: [[62.43017670145227 33] 95.43017670145227]
Test Case: 467 | Input/Output: [[-16.951741227500207 92] 75.04825877249979]
Test Case: 468 | Input/Output: [[-59.30524084630826 10] -49.30524084630826]
Test Case: 469 | Input/Output: [[-64.74608165054562 37] -27.74608165054562]
Test Case: 470 | Input/Output: [[-36.15820463332759 61] 24.841795366672407]
Test Case: 471 | Input/Output: [[-0.4066940819070055 -42] -42.406694081907006]
Test Case: 472 | Input/Output: [[-76.04167633471462 -53] -129.04167633471462]
Test Case: 473 | Input/Output: [[8.993080929320968 -50] -41.00691907067903]
Test Case: 474 | Input/Output: [[-6.6347983813612075 -48] -54.63479838136121]
Test Case: 475 | Input/Output: [[92.57428891245664 18] 110.57428891245664]
Test Case: 476 | Input/Output: [[44.39708155183271 -83] -38.60291844816729]
Test Case: 477 | Input/Output: [[81.35390023852068 84] 165.35390023852068]
Test Case: 478 | Input/Output: [[86.71777190705586 -11] 75.71777190705586]
Test Case: 479 | Input/Output: [[12.160356747659478 66] 78.16035674765948]
Test Case: 480 | Input/Output: [[-61.18959414357512 3] -58.18959414357512]
Test Case: 481 | Input/Output: [[-95.89335377098016 -53] -148.89335377098016]
Test Case: 482 | Input/Output: [[-44.00745813552718 -66] -110.00745813552717]
Test Case: 483 | Input/Output: [[-56.42633034686391 -95] -151.4263303468639]
Test Case: 484 | Input/Output: [[-54.88341201421465 -98] -152.88341201421466]
Test Case: 485 | Input/Output: [[-18.842590177559003 -43] -61.842590177559]
Test Case: 486 | Input/Output: [[8.008809493149059 98] 106.00880949314906]
Test Case: 487 | Input/Output: [[72.82582709520022 -68] 4.825827095200225]
Test Case: 488 | Input/Output: [[98.62445228139393 -39] 59.62445228139393]
Test Case: 489 | Input/Output: [[-5.475431740743048 86] 80.52456825925695]
Test Case: 490 | Input/Output: [[27.75332236063757 84] 111.75332236063757]
Test Case: 491 | Input/Output: [[68.99881316636288 -86] -17.00118683363712]
Test Case: 492 | Input/Output: [[90.2070515997344 25] 115.2070515997344]
Test Case: 493 | Input/Output: [[-69.1407537220986 -14] -83.1407537220986]
Test Case: 494 | Input/Output: [[43.775250646926764 2] 45.775250646926764]
Test Case: 495 | Input/Output: [[84.66828362422524 -20] 64.66828362422524]
Test Case: 496 | Input/Output: [[40.302526692080534 66] 106.30252669208053]
Test Case: 497 | Input/Output: [[-67.65264347530974 -52] -119.65264347530974]
Test Case: 498 | Input/Output: [[-11.297990490723066 -67] -78.29799049072307]
Test Case: 499 | Input/Output: [[69.87307153684552 42] 111.87307153684552]
Test Case: 500 | Input/Output: [[58.197226011147876 95] 153.19722601114788]
Test Case: 501 | Input/Output: [[28.83344225891804 99] 127.83344225891804]
Test Case: 502 | Input/Output: [[-55.015638840754555 91] 35.984361159245445]
Test Case: 503 | Input/Output: [[-82.11685586523394 82] -0.1168558652339442]
Test Case: 504 | Input/Output: [[14.531443779286917 -89] -74.46855622071308]
Test Case: 505 | Input/Output: [[36.63888671595609 -80] -43.36111328404391]
Test Case: 506 | Input/Output: [[-92.82167223166557 -10] -102.82167223166557]
Test Case: 507 | Input/Output: [[45.47168587157978 11] 56.47168587157978]
Test Case: 508 | Input/Output: [[12.815161380726053 64] 76.81516138072605]
Test Case: 509 | Input/Output: [[-15.071905653919828 -33] -48.07190565391983]
Test Case: 510 | Input/Output: [[-55.35179263902379 16] -39.35179263902379]
Test Case: 511 | Input/Output: [[2.71819086499427 40] 42.71819086499427]
Test Case: 512 | Input/Output: [[54.49450321179344 28] 82.49450321179344]
Test Case: 513 | Input/Output: [[-69.94490852319903 11] -58.94490852319903]
Test Case: 514 | Input/Output: [[73.83990918732908 56] 129.83990918732908]
Test Case: 515 | Input/Output: [[-62.283501821223396 14] -48.283501821223396]
Test Case: 516 | Input/Output: [[12.849201080481421 77] 89.84920108048142]
Test Case: 517 | Input/Output: [[-64.82586394032455 -15] -79.82586394032455]
Test Case: 518 | Input/Output: [[61.27718142498554 45] 106.27718142498554]
Test Case: 519 | Input/Output: [[18.784610322017812 -91] -72.21538967798219]
Test Case: 520 | Input/Output: [[44.611729820471396 84] 128.6117298204714]
Test Case: 521 | Input/Output: [[67.52432749373114 2] 69.52432749373114]
Test Case: 522 | Input/Output: [[-25.979473560077878 -33] -58.97947356007788]
Test Case: 523 | Input/Output: [[8.767623429193904 -93] -84.2323765708061]
Test Case: 524 | Input/Output: [[56.70270806931825 -25] 31.70270806931825]
Test Case: 525 | Input/Output: [[-1.959296103958124 33] 31.040703896041876]
Test Case: 526 | Input/Output: [[-11.600793804710776 -82] -93.60079380471078]
Test Case: 527 | Input/Output: [[68.87554625344427 26] 94.87554625344427]
Test Case: 528 | Input/Output: [[-49.03659634035365 -54] -103.03659634035364]
Test Case: 529 | Input/Output: [[-15.555187688825526 -39] -54.55518768882553]
Test Case: 530 | Input/Output: [[-95.63607028196294 46] -49.636070281962944]
Test Case: 531 | Input/Output: [[-31.404696141890213 47] 15.595303858109787]
Test Case: 532 | Input/Output: [[23.421998822978622 94] 117.42199882297862]
Test Case: 533 | Input/Output: [[50.37805435305887 -38] 12.378054353058872]
Test Case: 534 | Input/Output: [[50.84381742455295 0] 50.84381742455295]
Test Case: 535 | Input/Output: [[41.77784640826644 -76] -34.22215359173356]
Test Case: 536 | Input/Output: [[93.22659193789525 63] 156.22659193789525]
Test Case: 537 | Input/Output: [[70.01936764131008 73] 143.01936764131008]
Test Case: 538 | Input/Output: [[22.017117136636614 -56] -33.982882863363386]
Test Case: 539 | Input/Output: [[-75.94390860585429 -81] -156.9439086058543]
Test Case: 540 | Input/Output: [[20.408734520276866 -17] 3.408734520276866]
Test Case: 541 | Input/Output: [[37.77656041762404 -49] -11.22343958237596]
Test Case: 542 | Input/Output: [[-67.12529109522127 63] -4.125291095221272]
Test Case: 543 | Input/Output: [[4.186086299803122 22] 26.186086299803122]
Test Case: 544 | Input/Output: [[-65.32711578956133 60] -5.327115789561333]
Test Case: 545 | Input/Output: [[-57.96945225016532 -70] -127.96945225016532]
Test Case: 546 | Input/Output: [[40.4410617390794 54] 94.4410617390794]
Test Case: 547 | Input/Output: [[-1.3710193757345621 -49] -50.37101937573456]
Test Case: 548 | Input/Output: [[28.271088867532768 -52] -23.728911132467232]
Test Case: 549 | Input/Output: [[-53.151110721315156 48] -5.151110721315156]
Test Case: 550 | Input/Output: [[-48.038204111084106 51] 2.961795888915894]
Test Case: 551 | Input/Output: [[74.66360126132372 -64] 10.66360126132372]
Test Case: 552 | Input/Output: [[-88.08774877374964 -5] -93.08774877374964]
Test Case: 553 | Input/Output: [[-30.707718609420894 52] 21.292281390579106]
Test Case: 554 | Input/Output: [[12.486185127210732 -34] -21.51381487278927]
Test Case: 555 | Input/Output: [[-55.69016477307509 -86] -141.69016477307508]
Test Case: 556 | Input/Output: [[-93.67797002674753 33] -60.67797002674753]
Test Case: 557 | Input/Output: [[59.00751128882197 -86] -26.992488711178027]
Test Case: 558 | Input/Output: [[77.2304437650705 46] 123.2304437650705]
Test Case: 559 | Input/Output: [[93.82622384090456 -82] 11.82622384090456]
Test Case: 560 | Input/Output: [[92.43954957628725 40] 132.43954957628725]
Test Case: 561 | Input/Output: [[73.89132683062559 -38] 35.89132683062559]
Test Case: 562 | Input/Output: [[-24.062496443198583 8] -16.062496443198583]
Test Case: 563 | Input/Output: [[-67.0762459841268 23] -44.0762459841268]
Test Case: 564 | Input/Output: [[45.81761269798025 64] 109.81761269798025]
Test Case: 565 | Input/Output: [[78.2412044232623 -20] 58.2412044232623]
Test Case: 566 | Input/Output: [[22.516067019415644 -95] -72.48393298058436]
Test Case: 567 | Input/Output: [[-82.86472085930166 31] -51.864720859301656]
Test Case: 568 | Input/Output: [[-10.64465221264716 56] 45.35534778735284]
Test Case: 569 | Input/Output: [[34.33270395317001 8] 42.33270395317001]
Test Case: 570 | Input/Output: [[53.64755371784648 -76] -22.352446282153522]
Test Case: 571 | Input/Output: [[89.47198565881678 16] 105.47198565881678]
Test Case: 572 | Input/Output: [[-49.82293584710622 31] -18.822935847106223]
Test Case: 573 | Input/Output: [[88.43581826996535 -26] 62.43581826996535]
Test Case: 574 | Input/Output: [[20.394158771863147 -53] -32.60584122813685]
Test Case: 575 | Input/Output: [[-69.68989539378943 59] -10.689895393789428]
Test Case: 576 | Input/Output: [[97.90491223823625 -44] 53.90491223823625]
Test Case: 577 | Input/Output: [[34.63724079603375 -91] -56.36275920396625]
Test Case: 578 | Input/Output: [[3.8179359563065987 -24] -20.1820640436934]
Test Case: 579 | Input/Output: [[-5.0603613591679135 -48] -53.06036135916791]
Test Case: 580 | Input/Output: [[-50.42740818399922 -16] -66.42740818399922]
Test Case: 581 | Input/Output: [[48.48653704103509 46] 94.48653704103509]
Test Case: 582 | Input/Output: [[18.165022185295527 99] 117.16502218529553]
Test Case: 583 | Input/Output: [[82.70300935679268 -3] 79.70300935679268]
Test Case: 584 | Input/Output: [[-90.2216727040959 -45] -135.2216727040959]
Test Case: 585 | Input/Output: [[2.960425204633353 24] 26.960425204633353]
Test Case: 586 | Input/Output: [[-56.25434148305024 47] -9.25434148305024]
Test Case: 587 | Input/Output: [[-94.69742516538643 -78] -172.69742516538645]
Test Case: 588 | Input/Output: [[82.75938193447402 -77] 5.759381934474021]
Test Case: 589 | Input/Output: [[73.3200162609472 -23] 50.3200162609472]
Test Case: 590 | Input/Output: [[-71.66600065201038 -5] -76.66600065201038]
Test Case: 591 | Input/Output: [[23.52339583080041 63] 86.52339583080041]
Test Case: 592 | Input/Output: [[-87.56783107647743 82] -5.567831076477432]
Test Case: 593 | Input/Output: [[-86.11325323700694 63] -23.113253237006944]
Test Case: 594 | Input/Output: [[-78.83536236121493 22] -56.83536236121493]
Test Case: 595 | Input/Output: [[-1.8631003618836246 -77] -78.86310036188362]
Test Case: 596 | Input/Output: [[-22.206661330302225 -77] -99.20666133030223]
Test Case: 597 | Input/Output: [[55.59698765797634 39] 94.59698765797634]
Test Case: 598 | Input/Output: [[-72.99275435002266 21] -51.992754350022665]
Test Case: 599 | Input/Output: [[75.30971477796132 -52] 23.309714777961318]
Test Case: 600 | Input/Output: [[62.59929868339083 100] 162.59929868339083]
Test Case: 601 | Input/Output: [[-78.2710697226533 -96] -174.2710697226533]
Test Case: 602 | Input/Output: [[62.48543677963633 -28] 34.48543677963633]
Test Case: 603 | Input/Output: [[37.314726116180196 -73] -35.685273883819804]
Test Case: 604 | Input/Output: [[-82.83536990128162 -41] -123.83536990128162]
Test Case: 605 | Input/Output: [[45.80923435750438 -49] -3.19076564249562]
Test Case: 606 | Input/Output: [[-24.253448026403746 80] 55.746551973596254]
Test Case: 607 | Input/Output: [[50.06695836642558 -59] -8.933041633574419]
Test Case: 608 | Input/Output: [[-66.56591076139458 41] -25.565910761394576]
Test Case: 609 | Input/Output: [[-5.967365947232082 63] 57.03263405276792]
Test Case: 610 | Input/Output: [[94.54175502797403 83] 177.54175502797403]
Test Case: 611 | Input/Output: [[-91.84322077776275 46] -45.84322077776275]
Test Case: 612 | Input/Output: [[21.82691231770748 -71] -49.17308768229252]
Test Case: 613 | Input/Output: [[-0.31778450830842075 -60] -60.31778450830842]
Test Case: 614 | Input/Output: [[-64.1709842672916 -40] -104.1709842672916]
Test Case: 615 | Input/Output: [[-43.00243989424097 98] 54.99756010575903]
Test Case: 616 | Input/Output: [[-43.60112013223334 1] -42.60112013223334]
Test Case: 617 | Input/Output: [[-80.32446727195106 24] -56.324467271951065]
Test Case: 618 | Input/Output: [[-70.70907076240488 35] -35.70907076240488]
Test Case: 619 | Input/Output: [[32.988930797523125 8] 40.988930797523125]
Test Case: 620 | Input/Output: [[-18.750195912759352 52] 33.24980408724065]
Test Case: 621 | Input/Output: [[-97.77733932485424 -72] -169.77733932485424]
Test Case: 622 | Input/Output: [[51.06386443823513 53] 104.06386443823513]
Test Case: 623 | Input/Output: [[-22.38170778378374 -39] -61.38170778378374]
Test Case: 624 | Input/Output: [[-30.600155981666347 -99] -129.60015598166635]
Test Case: 625 | Input/Output: [[-83.77611673038778 -41] -124.77611673038778]
Test Case: 626 | Input/Output: [[20.501494969093244 -80] -59.498505030906756]
Test Case: 627 | Input/Output: [[-85.71555116609125 -81] -166.71555116609125]
Test Case: 628 | Input/Output: [[0.45534117592707446 -8] -7.5446588240729255]
Test Case: 629 | Input/Output: [[0.9680044764337055 -49] -48.031995523566295]
Test Case: 630 | Input/Output: [[89.78112903858965 61] 150.78112903858965]
Test Case: 631 | Input/Output: [[-53.34819307068044 81] 27.651806929319562]
Test Case: 632 | Input/Output: [[4.0054109116339305 -31] -26.99458908836607]
Test Case: 633 | Input/Output: [[95.01997511707893 -10] 85.01997511707893]
Test Case: 634 | Input/Output: [[-11.911812303969825 88] 76.08818769603018]
Test Case: 635 | Input/Output: [[-31.070416440901738 -71] -102.07041644090174]
Test Case: 636 | Input/Output: [[-61.93622892489314 38] -23.936228924893143]
Test Case: 637 | Input/Output: [[-12.155345502991779 -74] -86.15534550299178]
Test Case: 638 | Input/Output: [[-25.53877188332949 94] 68.46122811667051]
Test Case: 639 | Input/Output: [[41.963433755476046 78] 119.96343375547605]
Test Case: 640 | Input/Output: [[5.755025218648683 -63] -57.24497478135132]
Test Case: 641 | Input/Output: [[87.65610737736614 73] 160.65610737736614]
Test Case: 642 | Input/Output: [[57.71766840303022 38] 95.71766840303022]
Test Case: 643 | Input/Output: [[-25.76237467209799 -79] -104.76237467209799]
Test Case: 644 | Input/Output: [[-62.11203885169472 74] 11.88796114830528]
Test Case: 645 | Input/Output: [[82.09511167091443 50] 132.09511167091443]
Test Case: 646 | Input/Output: [[-53.12820583163933 55] 1.8717941683606725]
Test Case: 647 | Input/Output: [[-26.695028289323915 -40] -66.69502828932391]
Test Case: 648 | Input/Output: [[-59.00976615462608 97] 37.99023384537392]
Test Case: 649 | Input/Output: [[-55.26971340061506 85] 29.73028659938494]
Test Case: 650 | Input/Output: [[74.01869921737409 -38] 36.01869921737409]
Test Case: 651 | Input/Output: [[60.17859062491186 -68] -7.8214093750881375]
Test Case: 652 | Input/Output: [[-19.03407094791916 -18] -37.03407094791916]
Test Case: 653 | Input/Output: [[-27.97901059136791 97] 69.02098940863209]
Test Case: 654 | Input/Output: [[-75.97335578978641 -64] -139.9733557897864]
Test Case: 655 | Input/Output: [[-84.92108387600585 33] -51.92108387600585]
Test Case: 656 | Input/Output: [[-95.13744284729935 40] -55.137442847299354]
Test Case: 657 | Input/Output: [[87.34127256805087 85] 172.34127256805087]
Test Case: 658 | Input/Output: [[-63.77670851924013 31] -32.77670851924013]
Test Case: 659 | Input/Output: [[3.8521748632121273 85] 88.85217486321213]
Test Case: 660 | Input/Output: [[-79.54205452512235 -56] -135.54205452512235]
Test Case: 661 | Input/Output: [[-88.14293206244564 -15] -103.14293206244564]
Test Case: 662 | Input/Output: [[51.707638215485645 -9] 42.707638215485645]
Test Case: 663 | Input/Output: [[77.3120011548713 -15] 62.3120011548713]
Test Case: 664 | Input/Output: [[27.156458749232 72] 99.156458749232]
Test Case: 665 | Input/Output: [[93.13529947787552 -81] 12.13529947787552]
Test Case: 666 | Input/Output: [[-98.36076541231628 -2] -100.36076541231628]
Test Case: 667 | Input/Output: [[-95.37015915595308 -3] -98.37015915595308]
Test Case: 668 | Input/Output: [[80.87839059223535 -16] 64.87839059223535]
Test Case: 669 | Input/Output: [[99.86230065699317 19] 118.86230065699317]
Test Case: 670 | Input/Output: [[-54.26254250618001 -8] -62.26254250618001]
Test Case: 671 | Input/Output: [[-81.78899472323377 -72] -153.78899472323377]
Test Case: 672 | Input/Output: [[93.60988336407974 77] 170.60988336407974]
Test Case: 673 | Input/Output: [[-35.18383693109925 -19] -54.18383693109925]
Test Case: 674 | Input/Output: [[81.68193415603605 79] 160.68193415603605]
Test Case: 675 | Input/Output: [[63.25613169949668 7] 70.25613169949668]
Test Case: 676 | Input/Output: [[-13.875499597880278 80] 66.12450040211972]
Test Case: 677 | Input/Output: [[-45.64784762452887 -3] -48.64784762452887]
Test Case: 678 | Input/Output: [[-73.90536129487111 20] -53.90536129487111]
Test Case: 679 | Input/Output: [[33.021582859075835 75] 108.02158285907583]
Test Case: 680 | Input/Output: [[-73.68574275929205 -66] -139.68574275929205]
Test Case: 681 | Input/Output: [[95.10301631354548 -94] 1.1030163135454814]
Test Case: 682 | Input/Output: [[51.52432835638362 -84] -32.47567164361638]
Test Case: 683 | Input/Output: [[39.43536139726399 -48] -8.56463860273601]
Test Case: 684 | Input/Output: [[-87.18663669875654 84] -3.186636698756544]
Test Case: 685 | Input/Output: [[-66.25232141534772 -90] -156.25232141534772]
Test Case: 686 | Input/Output: [[38.522697557400335 52] 90.52269755740033]
Test Case: 687 | Input/Output: [[-20.43898281621061 33] 12.561017183789389]
Test Case: 688 | Input/Output: [[-57.39257914884923 43] -14.39257914884923]
Test Case: 689 | Input/Output: [[-38.33014496776015 -59] -97.33014496776015]
Test Case: 690 | Input/Output: [[87.7144726837628 -41] 46.71447268376281]
Test Case: 691 | Input/Output: [[80.55741514420524 -2] 78.55741514420524]
Test Case: 692 | Input/Output: [[-48.88447629041961 -14] -62.88447629041961]
Test Case: 693 | Input/Output: [[-63.951472202588235 -97] -160.95147220258823]
Test Case: 694 | Input/Output: [[35.68840151595464 -58] -22.311598484045362]
Test Case: 695 | Input/Output: [[-17.287233794163726 -31] -48.287233794163726]
Test Case: 696 | Input/Output: [[44.06952206449188 51] 95.06952206449188]
Test Case: 697 | Input/Output: [[94.27708423450952 -66] 28.277084234509516]
Test Case: 698 | Input/Output: [[-4.489063765050901 14] 9.5109362349491]
Test Case: 699 | Input/Output: [[-51.581494096754945 81] 29.418505903245055]
Test Case: 700 | Input/Output: [[76.5328788719884 98] 174.5328788719884]
Test Case: 701 | Input/Output: [[83.80149118096782 49] 132.80149118096782]
Test Case: 702 | Input/Output: [[42.35749272693269 -86] -43.64250727306731]
Test Case: 703 | Input/Output: [[57.33911022969693 90] 147.33911022969693]
Test Case: 704 | Input/Output: [[50.14895146162033 -78] -27.851048538379672]
Test Case: 705 | Input/Output: [[-33.9798770466401 -55] -88.9798770466401]
Test Case: 706 | Input/Output: [[-52.500845811571665 80] 27.499154188428335]
Test Case: 707 | Input/Output: [[28.10062902062208 22] 50.10062902062208]
Test Case: 708 | Input/Output: [[-94.26496646856172 -69] -163.26496646856174]
Test Case: 709 | Input/Output: [[22.796822176368252 -9] 13.796822176368252]
Test Case: 710 | Input/Output: [[-49.12692285857656 92] 42.87307714142344]
Test Case: 711 | Input/Output: [[12.86532023528359 -31] -18.13467976471641]
Test Case: 712 | Input/Output: [[61.340149250277165 -73] -11.659850749722835]
Test Case: 713 | Input/Output: [[-77.0925613524497 31] -46.09256135244971]
Test Case: 714 | Input/Output: [[62.86461958355761 -50] 12.864619583557612]
Test Case: 715 | Input/Output: [[-59.141602661771046 -25] -84.14160266177105]
Test Case: 716 | Input/Output: [[14.518767641861288 22] 36.51876764186129]
Test Case: 717 | Input/Output: [[83.00313994402032 -96] -12.996860055979681]
Test Case: 718 | Input/Output: [[97.89253193891395 59] 156.89253193891395]
Test Case: 719 | Input/Output: [[-71.49771647599235 -34] -105.49771647599235]
Test Case: 720 | Input/Output: [[-23.38456237590934 100] 76.61543762409066]
Test Case: 721 | Input/Output: [[-16.49976884400664 -51] -67.49976884400664]
Test Case: 722 | Input/Output: [[82.13544587195884 88] 170.13544587195884]
Test Case: 723 | Input/Output: [[-34.113208093215434 39] 4.886791906784566]
Test Case: 724 | Input/Output: [[93.71088607674889 64] 157.7108860767489]
Test Case: 725 | Input/Output: [[30.75562308861322 21] 51.75562308861322]
Test Case: 726 | Input/Output: [[-98.42765117506723 -59] -157.42765117506724]
Test Case: 727 | Input/Output: [[86.70468080298699 21] 107.70468080298699]
Test Case: 728 | Input/Output: [[45.25624981738409 57] 102.25624981738409]
Test Case: 729 | Input/Output: [[30.992007866971534 57] 87.99200786697153]
Test Case: 730 | Input/Output: [[-60.74662301804161 36] -24.74662301804161]
Test Case: 731 | Input/Output: [[-77.48530053575749 33] -44.48530053575749]
Test Case: 732 | Input/Output: [[70.82436744051998 -77] -6.175632559480022]
Test Case: 733 | Input/Output: [[53.2382070984888 -16] 37.2382070984888]
Test Case: 734 | Input/Output: [[-26.57351571385884 -17] -43.57351571385884]
Test Case: 735 | Input/Output: [[-43.49677263182985 -83] -126.49677263182986]
Test Case: 736 | Input/Output: [[81.6116469311292 -34] 47.6116469311292]
Test Case: 737 | Input/Output: [[-35.18208479516811 -90] -125.18208479516811]
Test Case: 738 | Input/Output: [[16.621827833703364 -52] -35.378172166296636]
Test Case: 739 | Input/Output: [[22.216136876553747 -85] -62.78386312344625]
Test Case: 740 | Input/Output: [[-64.27380800948777 98] 33.726191990512234]
Test Case: 741 | Input/Output: [[98.74942330224357 -89] 9.74942330224357]
Test Case: 742 | Input/Output: [[36.08682964317481 73] 109.08682964317481]
Test Case: 743 | Input/Output: [[8.17987759390381 -43] -34.82012240609619]
Test Case: 744 | Input/Output: [[-53.820124957798 -88] -141.820124957798]
Test Case: 745 | Input/Output: [[46.49428134193474 -62] -15.505718658065263]
Test Case: 746 | Input/Output: [[-0.535860128096985 -56] -56.535860128096985]
Test Case: 747 | Input/Output: [[-33.23714425653324 96] 62.76285574346676]
Test Case: 748 | Input/Output: [[-92.72827999445335 73] -19.728279994453345]
Test Case: 749 | Input/Output: [[-19.58094617126413 43] 23.41905382873587]
Test Case: 750 | Input/Output: [[-86.84079548813573 98] 11.159204511864274]
Test Case: 751 | Input/Output: [[-35.40000794266207 -89] -124.40000794266207]
Test Case: 752 | Input/Output: [[-93.68566833510677 42] -51.68566833510677]
Test Case: 753 | Input/Output: [[-35.513621009930034 70] 34.486378990069966]
Test Case: 754 | Input/Output: [[-82.94321978487558 -5] -87.94321978487558]
Test Case: 755 | Input/Output: [[-0.6464547076044482 -20] -20.64645470760445]
Test Case: 756 | Input/Output: [[3.6065429641367643 54] 57.606542964136764]
Test Case: 757 | Input/Output: [[55.77888056015229 -59] -3.221119439847712]
Test Case: 758 | Input/Output: [[72.35450344250538 -90] -17.645496557494624]
Test Case: 759 | Input/Output: [[57.66477078316677 25] 82.66477078316677]
Test Case: 760 | Input/Output: [[-62.54750142382204 82] 19.45249857617796]
Test Case: 761 | Input/Output: [[63.848080884562734 63] 126.84808088456273]
Test Case: 762 | Input/Output: [[9.273386611645023 -23] -13.726613388354977]
Test Case: 763 | Input/Output: [[-75.96182356732679 37] -38.96182356732679]
Test Case: 764 | Input/Output: [[51.47178602532023 -40] 11.471786025320228]
Test Case: 765 | Input/Output: [[74.47552548543194 38] 112.47552548543194]
Test Case: 766 | Input/Output: [[25.16159744107817 53] 78.16159744107817]
Test Case: 767 | Input/Output: [[84.711818021196 97] 181.711818021196]
Test Case: 768 | Input/Output: [[-81.65905363741214 -8] -89.65905363741214]
Test Case: 769 | Input/Output: [[-87.15077821760025 4] -83.15077821760025]
Test Case: 770 | Input/Output: [[-65.72228283530536 -93] -158.72228283530535]
Test Case: 771 | Input/Output: [[30.42377986036766 -69] -38.57622013963234]
Test Case: 772 | Input/Output: [[43.55824797644482 -14] 29.558247976444818]
Test Case: 773 | Input/Output: [[33.90254499747101 41] 74.90254499747101]
Test Case: 774 | Input/Output: [[48.33798885094973 -7] 41.33798885094973]
Test Case: 775 | Input/Output: [[-12.896781620292927 53] 40.10321837970707]
Test Case: 776 | Input/Output: [[-9.100558860669096 -40] -49.100558860669096]
Test Case: 777 | Input/Output: [[-36.580862800549866 20] -16.580862800549866]
Test Case: 778 | Input/Output: [[74.97457548802078 20] 94.97457548802078]
Test Case: 779 | Input/Output: [[-25.22924802668858 -35] -60.22924802668858]
Test Case: 780 | Input/Output: [[-80.31051282986488 -88] -168.31051282986488]
Test Case: 781 | Input/Output: [[21.405801114500562 -41] -19.594198885499438]
Test Case: 782 | Input/Output: [[-90.45624056752084 93] 2.5437594324791633]
Test Case: 783 | Input/Output: [[4.974733386959059 33] 37.97473338695906]
Test Case: 784 | Input/Output: [[99.21213830120348 89] 188.21213830120348]
Test Case: 785 | Input/Output: [[-47.394589602332715 -5] -52.394589602332715]
Test Case: 786 | Input/Output: [[-49.0728752544688 -15] -64.0728752544688]
Test Case: 787 | Input/Output: [[86.62736125433733 77] 163.62736125433733]
Test Case: 788 | Input/Output: [[-87.55539667816521 -9] -96.55539667816521]
Test Case: 789 | Input/Output: [[-43.99380522004621 -91] -134.99380522004623]
Test Case: 790 | Input/Output: [[23.975886148706962 5] 28.975886148706962]
Test Case: 791 | Input/Output: [[-0.852968614932692 39] 38.14703138506731]
Test Case: 792 | Input/Output: [[-72.7913574880506 99] 26.208642511949407]
Test Case: 793 | Input/Output: [[17.93924262403179 11] 28.93924262403179]
Test Case: 794 | Input/Output: [[-16.90911606481376 -45] -61.90911606481376]
Test Case: 795 | Input/Output: [[-16.15167190336409 -22] -38.15167190336409]
Test Case: 796 | Input/Output: [[-65.25828610854296 -11] -76.25828610854296]
Test Case: 797 | Input/Output: [[26.773538655989483 -89] -62.22646134401052]
Test Case: 798 | Input/Output: [[-87.14101763535295 11] -76.14101763535295]
Test Case: 799 | Input/Output: [[75.9574521589183 4] 79.9574521589183]
Test Case: 800 | Input/Output: [[-77.1822542088429 -27] -104.1822542088429]
Test Case: 801 | Input/Output: [[-8.780922854749122 69] 60.21907714525088]
Test Case: 802 | Input/Output: [[-83.0364987415008 -88] -171.0364987415008]
Test Case: 803 | Input/Output: [[-24.064663855706954 71] 46.935336144293046]
Test Case: 804 | Input/Output: [[-39.30246683986576 -12] -51.30246683986576]
Test Case: 805 | Input/Output: [[27.35709935891842 -33] -5.642900641081582]
Test Case: 806 | Input/Output: [[30.382106992425093 55] 85.3821069924251]
Test Case: 807 | Input/Output: [[53.115145768235294 63] 116.1151457682353]
Test Case: 808 | Input/Output: [[-68.24137272119803 -35] -103.24137272119803]
Test Case: 809 | Input/Output: [[-3.9779905267460833 8] 4.022009473253917]
Test Case: 810 | Input/Output: [[70.7287665265209 -43] 27.7287665265209]
Test Case: 811 | Input/Output: [[-94.50305044662109 51] -43.50305044662109]
Test Case: 812 | Input/Output: [[-73.5141700552054 -33] -106.5141700552054]
Test Case: 813 | Input/Output: [[3.4139269676388295 35] 38.41392696763883]
Test Case: 814 | Input/Output: [[-43.34612833437497 -15] -58.34612833437497]
Test Case: 815 | Input/Output: [[50.96837041578769 84] 134.9683704157877]
Test Case: 816 | Input/Output: [[43.43639156186458 -48] -4.563608438135418]
Test Case: 817 | Input/Output: [[2.3027666712255552 -70] -67.69723332877444]
Test Case: 818 | Input/Output: [[78.30395232723734 57] 135.30395232723734]
Test Case: 819 | Input/Output: [[-98.67652010040348 -25] -123.67652010040348]
Test Case: 820 | Input/Output: [[15.831048261403808 -56] -40.16895173859619]
Test Case: 821 | Input/Output: [[-42.43703744181055 -41] -83.43703744181056]
Test Case: 822 | Input/Output: [[6.661885143479523 34] 40.66188514347952]
Test Case: 823 | Input/Output: [[63.37807583426317 97] 160.37807583426317]
Test Case: 824 | Input/Output: [[6.20107883728582 89] 95.20107883728582]
Test Case: 825 | Input/Output: [[24.336179675809078 25] 49.33617967580908]
Test Case: 826 | Input/Output: [[-6.154317935610493 -2] -8.154317935610493]
Test Case: 827 | Input/Output: [[72.07496639384806 80] 152.07496639384806]
Test Case: 828 | Input/Output: [[76.84559450398842 87] 163.84559450398842]
Test Case: 829 | Input/Output: [[86.85378417309576 -47] 39.85378417309576]
Test Case: 830 | Input/Output: [[-25.326215040784447 82] 56.67378495921555]
Test Case: 831 | Input/Output: [[-98.09469609669561 -9] -107.09469609669561]
Test Case: 832 | Input/Output: [[-92.21246232874456 44] -48.212462328744564]
Test Case: 833 | Input/Output: [[24.507845496118733 -92] -67.49215450388127]
Test Case: 834 | Input/Output: [[26.005506063643054 -95] -68.99449393635695]
Test Case: 835 | Input/Output: [[-74.2710192405092 87] 12.728980759490796]
Test Case: 836 | Input/Output: [[-13.427157670155566 53] 39.572842329844434]
Test Case: 837 | Input/Output: [[-4.168427614598542 -86] -90.16842761459854]
Test Case: 838 | Input/Output: [[-79.59580258581164 -82] -161.59580258581164]
Test Case: 839 | Input/Output: [[-23.91053696908918 -37] -60.91053696908918]
Test Case: 840 | Input/Output: [[90.45424039845665 -87] 3.4542403984566477]
Test Case: 841 | Input/Output: [[-57.49623333780831 -88] -145.49623333780832]
Test Case: 842 | Input/Output: [[-46.16734266647149 -73] -119.16734266647148]
Test Case: 843 | Input/Output: [[-66.16713869368454 64] -2.167138693684535]
Test Case: 844 | Input/Output: [[-36.36112218780969 -54] -90.36112218780968]
Test Case: 845 | Input/Output: [[-55.816710238663326 79] 23.183289761336674]
Test Case: 846 | Input/Output: [[69.55101774638223 -14] 55.55101774638223]
Test Case: 847 | Input/Output: [[34.63824149695978 -67] -32.36175850304022]
Test Case: 848 | Input/Output: [[-66.50277136485605 -51] -117.50277136485605]
Test Case: 849 | Input/Output: [[93.53174791254793 -20] 73.53174791254793]
Test Case: 850 | Input/Output: [[48.707604921171225 -68] -19.292395078828775]
Test Case: 851 | Input/Output: [[-4.7448984877274825 -87] -91.74489848772748]
Test Case: 852 | Input/Output: [[61.18209433175471 51] 112.18209433175471]
Test Case: 853 | Input/Output: [[56.984817004797435 13] 69.98481700479743]
Test Case: 854 | Input/Output: [[-97.20299950960765 -12] -109.20299950960765]
Test Case: 855 | Input/Output: [[-68.40056076147309 -77] -145.4005607614731]
Test Case: 856 | Input/Output: [[3.492687032464815 -49] -45.507312967535185]
Test Case: 857 | Input/Output: [[34.11541210646038 32] 66.11541210646038]
Test Case: 858 | Input/Output: [[84.17779582700021 7] 91.17779582700021]
Test Case: 859 | Input/Output: [[-80.27158722268284 -79] -159.27158722268285]
Test Case: 860 | Input/Output: [[75.12521119110275 -19] 56.12521119110275]
Test Case: 861 | Input/Output: [[68.74784047374735 35] 103.74784047374735]
Test Case: 862 | Input/Output: [[42.21292358705182 36] 78.21292358705182]
Test Case: 863 | Input/Output: [[41.43491935507936 33] 74.43491935507936]
Test Case: 864 | Input/Output: [[-70.45389219091875 -72] -142.45389219091874]
Test Case: 865 | Input/Output: [[47.312166847923635 -60] -12.687833152076365]
Test Case: 866 | Input/Output: [[-84.9509695370051 -5] -89.9509695370051]
Test Case: 867 | Input/Output: [[73.696603050336 -45] 28.696603050335995]
Test Case: 868 | Input/Output: [[-36.219402380269216 -87] -123.21940238026922]
Test Case: 869 | Input/Output: [[52.24898870507175 -8] 44.24898870507175]
Test Case: 870 | Input/Output: [[-66.90659394948165 -17] -83.90659394948165]
Test Case: 871 | Input/Output: [[-60.80787427616225 70] 9.192125723837748]
Test Case: 872 | Input/Output: [[-83.52251142039 -63] -146.52251142039]
Test Case: 873 | Input/Output: [[-61.87697319067633 67] 5.123026809323669]
Test Case: 874 | Input/Output: [[30.638716729299148 38] 68.63871672929915]
Test Case: 875 | Input/Output: [[-48.045089524295605 67] 18.954910475704395]
Test Case: 876 | Input/Output: [[-18.791555311304478 18] -0.791555311304478]
Test Case: 877 | Input/Output: [[-91.3038353228862 72] -19.3038353228862]
Test Case: 878 | Input/Output: [[-71.62226628539119 13] -58.62226628539119]
Test Case: 879 | Input/Output: [[-41.73506983888837 -6] -47.73506983888837]
Test Case: 880 | Input/Output: [[55.253315978969766 4] 59.253315978969766]
Test Case: 881 | Input/Output: [[50.231083596554214 30] 80.23108359655421]
Test Case: 882 | Input/Output: [[-94.60074839888293 -21] -115.60074839888293]
Test Case: 883 | Input/Output: [[67.77463608669535 -28] 39.77463608669535]
Test Case: 884 | Input/Output: [[-93.10267885524239 -73] -166.1026788552424]
Test Case: 885 | Input/Output: [[-3.42523514287943 -32] -35.42523514287943]
Test Case: 886 | Input/Output: [[-75.130622627656 -97] -172.130622627656]
Test Case: 887 | Input/Output: [[35.42574359126053 -52] -16.574256408739473]
Test Case: 888 | Input/Output: [[32.25485115170778 -62] -29.745148848292217]
Test Case: 889 | Input/Output: [[21.44658419208976 88] 109.44658419208976]
Test Case: 890 | Input/Output: [[40.64370625899983 88] 128.64370625899983]
Test Case: 891 | Input/Output: [[-31.525458550036518 18] -13.525458550036518]
Test Case: 892 | Input/Output: [[-64.34712182660235 -65] -129.34712182660235]
Test Case: 893 | Input/Output: [[19.99369411842757 52] 71.99369411842757]
Test Case: 894 | Input/Output: [[48.093060390542576 -8] 40.093060390542576]
Test Case: 895 | Input/Output: [[-32.38509383859068 -97] -129.38509383859068]
Test Case: 896 | Input/Output: [[-43.453646181043105 -96] -139.4536461810431]
Test Case: 897 | Input/Output: [[41.84713402523897 11] 52.84713402523897]
Test Case: 898 | Input/Output: [[87.52974498646157 -32] 55.529744986461566]
Test Case: 899 | Input/Output: [[-83.89883644720126 49] -34.89883644720126]
Test Case: 900 | Input/Output: [[-93.93946296940207 -60] -153.9394629694021]
Test Case: 901 | Input/Output: [[-56.46018101596384 40] -16.46018101596384]
Test Case: 902 | Input/Output: [[13.224360459165553 99] 112.22436045916555]
Test Case: 903 | Input/Output: [[86.68497061397224 -29] 57.68497061397224]
Test Case: 904 | Input/Output: [[69.14903537174578 51] 120.14903537174578]
Test Case: 905 | Input/Output: [[-27.23519301244785 -12] -39.23519301244785]
Test Case: 906 | Input/Output: [[68.51809339472095 -41] 27.51809339472095]
Test Case: 907 | Input/Output: [[51.13020754159217 -67] -15.86979245840783]
Test Case: 908 | Input/Output: [[-61.276732727612156 24] -37.276732727612156]
Test Case: 909 | Input/Output: [[37.97056249532426 54] 91.97056249532426]
Test Case: 910 | Input/Output: [[-82.22606579825542 6] -76.22606579825542]
Test Case: 911 | Input/Output: [[-29.397308689332192 96] 66.60269131066781]
Test Case: 912 | Input/Output: [[-86.22368816074082 -71] -157.22368816074083]
Test Case: 913 | Input/Output: [[-81.95553296660647 -19] -100.95553296660647]
Test Case: 914 | Input/Output: [[6.295698915358997 5] 11.295698915358997]
Test Case: 915 | Input/Output: [[-44.22417133596264 12] -32.22417133596264]
Test Case: 916 | Input/Output: [[-62.33080402973257 34] -28.33080402973257]
Test Case: 917 | Input/Output: [[37.53544283737108 -95] -57.46455716262892]
Test Case: 918 | Input/Output: [[-69.77499818110635 -73] -142.77499818110635]
Test Case: 919 | Input/Output: [[-42.54926363419798 38] -4.5492636341979775]
Test Case: 920 | Input/Output: [[-89.94307434702394 31] -58.94307434702394]
Test Case: 921 | Input/Output: [[-34.971865909196765 -50] -84.97186590919677]
Test Case: 922 | Input/Output: [[-35.2660691659098 48] 12.733930834090202]
Test Case: 923 | Input/Output: [[22.0144889345419 35] 57.0144889345419]
Test Case: 924 | Input/Output: [[95.91505528128894 -81] 14.915055281288943]
Test Case: 925 | Input/Output: [[90.32234370380917 -8] 82.32234370380917]
Test Case: 926 | Input/Output: [[75.4539795540772 -47] 28.453979554077193]
Test Case: 927 | Input/Output: [[5.0640865898604375 -21] -15.935913410139563]
Test Case: 928 | Input/Output: [[27.397524829771953 90] 117.39752482977195]
Test Case: 929 | Input/Output: [[-86.94795230119863 -22] -108.94795230119863]
Test Case: 930 | Input/Output: [[-99.31837103146583 67] -32.31837103146583]
Test Case: 931 | Input/Output: [[-2.0271937856072952 -16] -18.027193785607295]
Test Case: 932 | Input/Output: [[7.7403923000328945 -32] -24.259607699967106]
Test Case: 933 | Input/Output: [[-98.47062709960393 -16] -114.47062709960393]
Test Case: 934 | Input/Output: [[-62.95650468868026 26] -36.95650468868026]
Test Case: 935 | Input/Output: [[-54.0544602560165 -82] -136.0544602560165]
Test Case: 936 | Input/Output: [[80.97453066119883 -17] 63.97453066119883]
Test Case: 937 | Input/Output: [[24.707176112199164 -7] 17.707176112199164]
Test Case: 938 | Input/Output: [[-2.3518679519022783 -61] -63.35186795190228]
Test Case: 939 | Input/Output: [[-18.01881241904266 75] 56.98118758095734]
Test Case: 940 | Input/Output: [[-86.77635351271331 54] -32.776353512713314]
Test Case: 941 | Input/Output: [[-31.801121992434787 15] -16.801121992434787]
Test Case: 942 | Input/Output: [[-17.87475173500694 -12] -29.87475173500694]
Test Case: 943 | Input/Output: [[91.29125326002375 64] 155.29125326002375]
Test Case: 944 | Input/Output: [[-33.70902561933123 47] 13.290974380668771]
Test Case: 945 | Input/Output: [[-89.8042817872792 -3] -92.8042817872792]
Test Case: 946 | Input/Output: [[-9.368594908987944 44] 34.631405091012056]
Test Case: 947 | Input/Output: [[43.74703779310835 51] 94.74703779310835]
Test Case: 948 | Input/Output: [[71.73387602142739 -28] 43.73387602142739]
Test Case: 949 | Input/Output: [[42.28774415299151 -98] -55.71225584700849]
Test Case: 950 | Input/Output: [[-7.050067932888069 -82] -89.05006793288807]
Test Case: 951 | Input/Output: [[-83.38638460859637 26] -57.38638460859637]
Test Case: 952 | Input/Output: [[-67.9977141356619 -48] -115.9977141356619]
Test Case: 953 | Input/Output: [[-64.75338427016719 -93] -157.7533842701672]
Test Case: 954 | Input/Output: [[-6.065809388753806 73] 66.9341906112462]
Test Case: 955 | Input/Output: [[45.95687803677936 68] 113.95687803677936]
Test Case: 956 | Input/Output: [[-80.56009609469612 -94] -174.56009609469612]
Test Case: 957 | Input/Output: [[43.515896836013354 71] 114.51589683601335]
Test Case: 958 | Input/Output: [[-57.67400237108355 27] -30.674002371083553]
Test Case: 959 | Input/Output: [[-99.88298024655367 32] -67.88298024655367]
Test Case: 960 | Input/Output: [[-90.26686745858956 -78] -168.26686745858956]
Test Case: 961 | Input/Output: [[95.4954839143272 88] 183.4954839143272]
Test Case: 962 | Input/Output: [[-69.62623788217141 8] -61.62623788217141]
Test Case: 963 | Input/Output: [[99.25139702226875 32] 131.25139702226875]
Test Case: 964 | Input/Output: [[42.13759118191712 7] 49.13759118191712]
Test Case: 965 | Input/Output: [[-96.21553910942893 3] -93.21553910942893]
Test Case: 966 | Input/Output: [[49.975726812615676 18] 67.97572681261568]
Test Case: 967 | Input/Output: [[-36.66343112808321 -27] -63.66343112808321]
Test Case: 968 | Input/Output: [[23.43912038043645 -48] -24.56087961956355]
Test Case: 969 | Input/Output: [[-35.68698888905382 -65] -100.68698888905382]
Test Case: 970 | Input/Output: [[-43.89058690777041 34] -9.890586907770412]
Test Case: 971 | Input/Output: [[-71.40629143416142 -92] -163.4062914341614]
Test Case: 972 | Input/Output: [[71.17529066576586 66] 137.17529066576586]
Test Case: 973 | Input/Output: [[-1.2171556231722889 23] 21.78284437682771]
Test Case: 974 | Input/Output: [[-9.40830141043844 97] 87.59169858956156]
Test Case: 975 | Input/Output: [[69.43923025457818 -10] 59.43923025457818]
Test Case: 976 | Input/Output: [[48.92843576314431 65] 113.92843576314431]
Test Case: 977 | Input/Output: [[-27.938333433024653 93] 65.06166656697535]
Test Case: 978 | Input/Output: [[20.02591629280633 59] 79.02591629280633]
Test Case: 979 | Input/Output: [[-49.55867761659532 -85] -134.55867761659533]
Test Case: 980 | Input/Output: [[-48.43900011469753 -25] -73.43900011469754]
Test Case: 981 | Input/Output: [[-81.3477281963078 23] -58.3477281963078]
Test Case: 982 | Input/Output: [[-55.72402726323171 84] 28.27597273676829]
Test Case: 983 | Input/Output: [[-30.682601047330408 -31] -61.68260104733041]
Test Case: 984 | Input/Output: [[-89.65150788206415 -45] -134.65150788206415]
Test Case: 985 | Input/Output: [[83.36672342868448 -98] -14.63327657131552]
Test Case: 986 | Input/Output: [[89.72097889974009 -36] 53.72097889974009]
Test Case: 987 | Input/Output: [[85.64589008075356 -97] -11.35410991924644]
Test Case: 988 | Input/Output: [[-72.12753979235463 98] 25.872460207645375]
Test Case: 989 | Input/Output: [[-45.99393464808881 28] -17.99393464808881]
Test Case: 990 | Input/Output: [[-64.54015287557802 24] -40.540152875578016]
Test Case: 991 | Input/Output: [[-46.489426838990134 -57] -103.48942683899014]
Test Case: 992 | Input/Output: [[-50.63908822938225 20] -30.639088229382253]
Test Case: 993 | Input/Output: [[-21.44011729458437 -29] -50.44011729458437]
Test Case: 994 | Input/Output: [[96.80810781061737 -95] 1.808107810617372]
Test Case: 995 | Input/Output: [[-80.9933096598053 94] 13.006690340194694]
Test Case: 996 | Input/Output: [[38.141341754834116 -36] 2.141341754834116]
Test Case: 997 | Input/Output: [[-21.06232599071454 -51] -72.06232599071454]
Test Case: 998 | Input/Output: [[61.01757881297186 64] 125.01757881297186]
Test Case: 999 | Input/Output: [[-99.39815240052472 77] -22.398152400524722]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 111 35 52 -8 -103 -78 -45 -8 -8 35 37 -114 -73 -24 43 -22
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 54636.0
Test mean error for best: 27.31800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 34.3049767458 
Correct output: 109.3816555251 | Program output: 50.3816555251 
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: -32.8923791844
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 95.0106062966 
Correct output: -54.99029604   | Program output: -91.99029604  
Correct output: 60.5127184446  | Program output: -24.4872815554
Correct output: 61.1705628788  | Program output: -26.8294371212
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 8.2733863439  
Correct output: 136.9572654004 | Program output: 38.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: -49.5425364979
Correct output: 102.3014515582 | Program output: 5.3014515582  
Correct output: 82.9352078558  | Program output: 51.9352078558 
Correct output: 170.2225097733 | Program output: 77.2225097733 
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mult} {:instruction float_shove} {:instruction float_yank} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod float_mult float_shove float_yank integer_swap float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div print_float integer_pop integer_mult float_mult integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [92.0 2 73.0 2 35.0 13 45.0 2 59.0 2 16.0 2 44.0 13 52.0 2 1.0 1 9.0 2 77.0 9 62.0 3 95.0 2 37.0 2 85.0 11 88.0 13 7.0 2 63.0 2 98.0 2 40.0 1 69.0 11 97.0 3 31.0 2 93.0 2 15.0 2]
Total: 1491.0
Mean: 29.82
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 18116.836884199998
Median total errors in population: 25333.0
Error averages by case: (745.7961912999981 13.203 707.556836099999 12.313 703.3464539000004 13.803 705.5081861000008 12.42 713.7757256000026 13.23 701.3636889000018 12.418 695.5113411999997 13.168 705.8805414999989 12.401 704.2908912000028 12.427 707.7928004000007 12.534 705.5541384999999 11.282 734.3477092999977 13.998 736.4795220000007 13.129 706.8562768999988 11.769 707.2324529000003 13.031 707.5571212000002 13.179 706.0572849999979 13.183 702.3744533999989 12.417 722.4918685000013 13.201 718.2655934000001 13.289 700.3631658000004 13.055 712.8269081999981 13.219 705.1803307999987 12.419 731.6774697000006 13.202 708.0769324000005 12.383)
Error minima by case: (8.3383 2 0.2886 2 0.737 8 0.3885 2 10.6183 2 0.4696 2 0.1318 8 1.4296 2 1.0 1 0.7024 1 0.0861 6 30.0436 3 1.9894 2 0.5969 2 2.7348 8 3.2339 8 0.7864 2 0.2734 1 16.6361 2 2.437 1 1.8403 8 1.3015 3 0.6009 2 16.6291 2 3.6854 2)
Average genome size in population (length): 50.068
Average program size in population (points): 51.068
Average percent parens in population: 0.041
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.32
Error (vector) diversity:			 0.348
Behavioral diversity:				 0.368
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1256539
--- Timings ---
Current time: 1529614857406 milliseconds
Total Time:           3.2 seconds
Initialization:       0.1 seconds,  3.5%
Reproduction:         0.6 seconds, 17.1%
Fitness Testing:      2.6 seconds, 79.4%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 54636.0
Test mean error for best: 27.31800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 34.3049767458 
Correct output: 109.3816555251 | Program output: 50.3816555251 
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: -32.8923791844
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 95.0106062966 
Correct output: -54.99029604   | Program output: -91.99029604  
Correct output: 60.5127184446  | Program output: -24.4872815554
Correct output: 61.1705628788  | Program output: -26.8294371212
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 8.2733863439  
Correct output: 136.9572654004 | Program output: 38.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: -49.5425364979
Correct output: 102.3014515582 | Program output: 5.3014515582  
Correct output: 82.9352078558  | Program output: 51.9352078558 
Correct output: 170.2225097733 | Program output: 77.2225097733 
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mult} {:instruction float_shove} {:instruction float_yank} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod float_mult float_shove float_yank integer_swap float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div print_float integer_pop integer_mult float_mult integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [92.0 2 73.0 2 35.0 13 45.0 2 59.0 2 16.0 2 44.0 13 52.0 2 1.0 1 9.0 2 77.0 9 62.0 3 95.0 2 37.0 2 85.0 11 88.0 13 7.0 2 63.0 2 98.0 2 40.0 1 69.0 11 97.0 3 31.0 2 93.0 2 15.0 2]
Total: 1491.0
Mean: 29.82
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 6613.297635600008
Median total errors in population: 2223.6030499999997
Error averages by case: (320.73570740000093 10.654 245.07299610000047 9.803 227.9724416 12.82 241.89396899999875 9.993 257.4377551999994 10.635 221.5563343999991 10.004 224.94492639999996 12.551 240.1770265999992 10.003 244.87817109999895 9.949 248.924665699999 10.074 243.09490129999998 10.567 298.4143122000004 11.354 306.71774369999986 10.371 248.00129130000133 9.766 245.6931778000002 12.024 248.97545560000023 12.589 232.27329390000074 10.61 235.77228090000096 9.899 278.4364165000011 10.577 259.7718541999997 10.703 234.19118250000022 12.225 258.6520361000003 10.765 240.68082100000166 10.039 295.8017156 10.513 244.8401595000017 9.899)
Error minima by case: (0.3383 2 0.2886 2 0.737 8 0.3885 2 8.6183 2 0.4696 2 0.1318 8 0.539 2 0.0 1 0.7024 1 0.0861 6 7.9564 3 0.0106 2 3.5615 2 2.7348 8 3.2339 8 2.3871 2 0.6659 1 34.9573 2 5.1593 1 1.5425 8 1.3015 3 0.6009 2 15.7775 2 3.6854 2)
Average genome size in population (length): 58.814
Average program size in population (points): 59.814
Average percent parens in population: 0.023
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.474
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.779
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.779
Total error diversity:				 0.306
Error (vector) diversity:			 0.322
Behavioral diversity:				 0.343
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2733164
--- Timings ---
Current time: 1529614860600 milliseconds
Total Time:           8.3 seconds
Initialization:       0.1 seconds,  1.4%
Reproduction:         1.9 seconds, 22.8%
Fitness Testing:      4.1 seconds, 49.0%
Report:               2.2 seconds, 26.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 54636.0
Test mean error for best: 27.31800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 34.3049767458 
Correct output: 109.3816555251 | Program output: 50.3816555251 
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: -32.8923791844
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 95.0106062966 
Correct output: -54.99029604   | Program output: -91.99029604  
Correct output: 60.5127184446  | Program output: -24.4872815554
Correct output: 61.1705628788  | Program output: -26.8294371212
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 8.2733863439  
Correct output: 136.9572654004 | Program output: 38.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: -49.5425364979
Correct output: 102.3014515582 | Program output: 5.3014515582  
Correct output: 82.9352078558  | Program output: 51.9352078558 
Correct output: 170.2225097733 | Program output: 77.2225097733 
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mult} {:instruction float_shove} {:instruction float_yank} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod float_mult float_shove float_yank integer_swap float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div print_float integer_pop integer_mult float_mult integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [92.0 2 73.0 2 35.0 13 45.0 2 59.0 2 16.0 2 44.0 13 52.0 2 1.0 1 9.0 2 77.0 9 62.0 3 95.0 2 37.0 2 85.0 11 88.0 13 7.0 2 63.0 2 98.0 2 40.0 1 69.0 11 97.0 3 31.0 2 93.0 2 15.0 2]
Total: 1491.0
Mean: 29.82
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 4565.679292299996
Median total errors in population: 1517.0
Error averages by case: (215.14020590000044 5.919 188.44105820000001 5.608 154.1372586 13.367 163.63051129999943 5.635 177.00169399999973 5.767 141.16572669999968 5.593 162.92075370000006 13.358 172.10190939999987 5.731 139.1224922999996 5.056 144.34239250000027 5.195 189.94229629999992 10.576 190.71837660000045 6.776 211.8584825000003 5.634 168.13100670000043 5.584 192.1449660000001 11.988 194.64034169999965 13.442 138.8222565000003 5.917 172.82632490000037 5.02 205.09617350000022 5.75 166.2606170999998 5.845 183.18326700000017 12.472 198.73669710000016 6.361 155.97877750000072 5.655 207.4613876000004 5.732 148.2933187 5.6)
Error minima by case: (7.3383 2 0.1167 2 8.0938 8 2.305 2 9.6183 2 0.4696 2 1.0828 9 3.9218 2 1.0 1 4.7024 1 0.7133 8 29.0436 3 0.9894 2 0.7716 2 3.8918 8 3.2339 8 4.0 2 0.6659 1 34.9573 2 7.5839 1 1.8403 9 1.3015 2 5.9352 2 16.7775 2 15.0 2)
Average genome size in population (length): 54.129
Average program size in population (points): 55.129
Average percent parens in population: 0.022
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.952
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.686
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.686
Total error diversity:				 0.126
Error (vector) diversity:			 0.129
Behavioral diversity:				 0.141
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4091914
--- Timings ---
Current time: 1529614863432 milliseconds
Total Time:          11.1 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         2.9 seconds, 26.1%
Fitness Testing:      5.5 seconds, 49.7%
Report:               2.6 seconds, 23.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 54636.0
Test mean error for best: 27.31800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 34.3049767458 
Correct output: 109.3816555251 | Program output: 50.3816555251 
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: -32.8923791844
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 95.0106062966 
Correct output: -54.99029604   | Program output: -91.99029604  
Correct output: 60.5127184446  | Program output: -24.4872815554
Correct output: 61.1705628788  | Program output: -26.8294371212
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 8.2733863439  
Correct output: 136.9572654004 | Program output: 38.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: -49.5425364979
Correct output: 102.3014515582 | Program output: 5.3014515582  
Correct output: 82.9352078558  | Program output: 51.9352078558 
Correct output: 170.2225097733 | Program output: 77.2225097733 
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mult} {:instruction float_shove} {:instruction float_yank} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod float_mult float_shove float_yank integer_swap float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div print_float integer_pop integer_mult float_mult integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [92.0 2 73.0 2 35.0 13 45.0 2 59.0 2 16.0 2 44.0 13 52.0 2 1.0 1 9.0 2 77.0 9 62.0 3 95.0 2 37.0 2 85.0 11 88.0 13 7.0 2 63.0 2 98.0 2 40.0 1 69.0 11 97.0 3 31.0 2 93.0 2 15.0 2]
Total: 1491.0
Mean: 29.82
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 4055.6931008000006
Median total errors in population: 1499.0
Error averages by case: (192.58516400000005 3.438 171.3389764 3.318 137.18283739999998 13.31 146.89899959999997 3.332 159.76372080000002 3.373 120.77553949999998 3.311 147.131598 13.264 152.94735010000002 3.332 108.17691699999997 2.431 115.97112880000003 2.823 174.71012249999995 9.925 165.86959100000004 4.413 192.394997 3.348 142.88800810000004 3.247 183.21733279999995 11.51 185.89984140000007 13.292 115.10904580000002 3.427 160.7051357 2.791 194.13721809999998 3.373 144.74960559999997 3.051 169.39904219999997 11.957 190.92822940000002 4.181 134.93428910000006 3.327 190.36760750000002 3.369 121.147803 3.32)
Error minima by case: (8.3383 1 4.6039 2 3.5345 10 7.305 2 10.6183 2 9.6778 2 3.6378 9 14.0692 1 1.0 1 9.0 1 2.294 8 30.0436 2 1.9894 1 9.9903 2 3.2438 10 0.2438 10 1.7493 2 0.7266 1 2.0 1 8.5839 1 11.9877 10 4.3015 2 10.9352 2 7.0 1 15.0 2)
Average genome size in population (length): 45.618
Average program size in population (points): 46.618
Average percent parens in population: 0.023
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.39125
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 107
Genome diversity (% unique Plush genomes):	 0.602
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 107
Syntactic diversity (% unique Push programs):	 0.602
Total error diversity:				 0.049
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5236089
--- Timings ---
Current time: 1529614866091 milliseconds
Total Time:          13.8 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         3.9 seconds, 28.0%
Fitness Testing:      6.9 seconds, 50.0%
Report:               2.9 seconds, 21.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 54636.0
Test mean error for best: 27.31800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 34.3049767458 
Correct output: 109.3816555251 | Program output: 50.3816555251 
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: -32.8923791844
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 95.0106062966 
Correct output: -54.99029604   | Program output: -91.99029604  
Correct output: 60.5127184446  | Program output: -24.4872815554
Correct output: 61.1705628788  | Program output: -26.8294371212
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 8.2733863439  
Correct output: 136.9572654004 | Program output: 38.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: -49.5425364979
Correct output: 102.3014515582 | Program output: 5.3014515582  
Correct output: 82.9352078558  | Program output: 51.9352078558 
Correct output: 170.2225097733 | Program output: 77.2225097733 
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mult} {:instruction float_shove} {:instruction float_yank} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod float_mult float_shove float_yank integer_swap float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div print_float integer_pop integer_mult float_mult integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [92.0 2 73.0 2 35.0 13 45.0 2 59.0 2 16.0 2 44.0 13 52.0 2 1.0 1 9.0 2 77.0 9 62.0 3 95.0 2 37.0 2 85.0 11 88.0 13 7.0 2 63.0 2 98.0 2 40.0 1 69.0 11 97.0 3 31.0 2 93.0 2 15.0 2]
Total: 1491.0
Mean: 29.82
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3789.2440518000003
Median total errors in population: 1491.0
Error averages by case: (181.9131977 3.173 163.24778210000002 3.11 129.36971820000002 13.37 136.26043129999996 3.115 149.10545879999998 3.163 112.51476669999998 3.089 134.6124403 13.335 144.63968 3.109 97.07966119999999 2.182 104.24880090000002 3.05 166.7044096 9.465 154.7595013 4.156 182.1753993 3.124 128.67904030000003 3.03 171.81105099999996 11.508 174.49944080000003 13.315 104.64577850000002 3.167 150.5846176 3.006 184.27330720000003 3.156 134.43780069999997 2.315 157.0553578 11.492 181.3432683 3.97 123.78053640000003 3.109 180.1684076 3.135 109.57919819999998 3.111)
Error minima by case: (91.0 2 11.0737 2 10.4655 11 45.0 2 59.0 2 15.0 2 9.3232 11 20.2489 2 1.0 1 9.0 1 3.085 9 61.0 3 95.0 2 26.9903 2 59.5127 10 59.6938 9 6.0 2 63.0 1 98.0 2 0.4572 1 18.4575 10 97.0 3 31.0 2 93.0 2 15.0 2)
Average genome size in population (length): 42.147
Average program size in population (points): 43.147
Average percent parens in population: 0.024
Minimum age in population: 4.0
Maximum age in population: 7.5
Average age in population: 5.84575
Median age in population: 5.875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 148
Genome diversity (% unique Plush genomes):	 0.592
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 148
Syntactic diversity (% unique Push programs):	 0.592
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6289964
--- Timings ---
Current time: 1529614868709 milliseconds
Total Time:          16.4 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         4.8 seconds, 29.1%
Fitness Testing:      8.3 seconds, 50.4%
Report:               3.3 seconds, 19.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 54638.0
Test mean error for best: 27.31900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 35.3049767458 
Correct output: 109.3816555251 | Program output: 51.3816555251 
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: -31.8923791844
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 93.7628386321 
Correct output: 95.2976348595  | Program output: 87.2976348595 
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 96.0106062966 
Correct output: -54.99029604   | Program output: -90.99029604  
Correct output: 60.5127184446  | Program output: -23.4872815554
Correct output: 61.1705628788  | Program output: -25.8294371212
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 9.2733863439  
Correct output: 136.9572654004 | Program output: 39.9572654004 
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: -48.5425364979
Correct output: 102.3014515582 | Program output: 6.3014515582  
Correct output: 82.9352078558  | Program output: 52.9352078558 
Correct output: 170.2225097733 | Program output: 78.2225097733 
Correct output: 92.3146270329  | Program output: 78.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mult} {:instruction float_shove} {:instruction float_yank} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod float_mult float_shove float_yank integer_swap float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc float_inc integer_div print_float integer_pop integer_mult float_mult integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [93.0 2 74.0 2 36.0 13 44.0 2 58.0 3 17.0 2 43.0 12 53.0 2 0.0 0 8.0 2 78.0 10 63.0 3 94.0 2 36.0 2 84.0 11 87.0 13 8.0 2 62.0 2 97.0 2 41.0 2 68.0 12 96.0 3 30.0 1 92.0 2 14.0 2]
Total: 1485.0
Mean: 29.7
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 4279.6684024
Median total errors in population: 1491.0
Error averages by case: (199.6155473 3.444 180.2633725 3.356 146.8473497 13.377 155.9728653 3.362 168.42950929999998 3.445 130.18898769999998 3.332 156.662646 13.319 161.85994390000002 3.362 117.46780609999999 2.454 124.49327180000002 3.333 183.7149435 9.464 173.1333243 4.439 200.48430530000002 3.408 150.7590284 3.249 192.818421 11.539 195.45120559999998 13.305 124.35598530000001 3.445 171.706116 3.291 202.7964797 3.433 153.4900079 2.573 178.62211430000002 11.487 201.709514 4.231 143.7128194 3.353 198.61025400000003 3.41 129.7365841 3.355)
Error minima by case: (91.0 2 12.004 2 10.4655 11 33.305 2 49.3817 2 15.0 2 9.3232 11 20.2489 2 0.0 0 8.0 1 3.085 9 61.0 3 94.0 2 26.9903 2 25.4873 10 27.8294 9 6.0 2 7.2734 1 37.9573 2 39.0 1 18.7418 10 4.3015 2 30.0 1 76.2225 2 14.0 2)
Average genome size in population (length): 41.561
Average program size in population (points): 42.561
Average percent parens in population: 0.024
Minimum age in population: 5.0
Maximum age in population: 9.1875
Average age in population: 7.284
Median age in population: 7.25
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 120
Genome diversity (% unique Plush genomes):	 0.648
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 120
Syntactic diversity (% unique Push programs):	 0.648
Total error diversity:				 0.02
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 7328989
--- Timings ---
Current time: 1529614871298 milliseconds
Total Time:          19.0 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         5.7 seconds, 29.9%
Fitness Testing:      9.6 seconds, 50.6%
Report:               3.6 seconds, 18.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 54638.0
Test mean error for best: 27.31900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 35.3049767458 
Correct output: 109.3816555251 | Program output: 51.3816555251 
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: -31.8923791844
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 93.7628386321 
Correct output: 95.2976348595  | Program output: 87.2976348595 
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 96.0106062966 
Correct output: -54.99029604   | Program output: -90.99029604  
Correct output: 60.5127184446  | Program output: -23.4872815554
Correct output: 61.1705628788  | Program output: -25.8294371212
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 9.2733863439  
Correct output: 136.9572654004 | Program output: 39.9572654004 
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: -48.5425364979
Correct output: 102.3014515582 | Program output: 6.3014515582  
Correct output: 82.9352078558  | Program output: 52.9352078558 
Correct output: 170.2225097733 | Program output: 78.2225097733 
Correct output: 92.3146270329  | Program output: 78.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_mult} {:instruction float_swap} {:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (integer_dup_items float_mult float_swap float_cos print_integer float_pop integer_pop float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div integer_dec float_inc integer_div print_float integer_pop integer_mult float_mult integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [93.0 2 74.0 2 36.0 13 44.0 2 58.0 3 17.0 2 43.0 12 53.0 2 0.0 0 8.0 2 78.0 10 63.0 3 94.0 2 36.0 2 84.0 11 87.0 13 8.0 2 62.0 2 97.0 2 41.0 2 68.0 12 96.0 3 30.0 1 92.0 2 14.0 2]
Total: 1485.0
Mean: 29.7
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 3523.045127900001
Median total errors in population: 1491.0
Error averages by case: (171.34785740000004 3.142 151.0670469 3.081 116.7279678 13.317 125.80476299999995 3.089 138.8355005 3.148 99.77836049999998 3.063 124.91906420000004 13.265 132.28583150000003 3.085 86.33166219999998 2.148 93.55334530000005 3.062 154.54126710000003 9.393 143.8230182 4.132 172.45091940000003 3.112 118.98312890000003 2.999 162.53170989999998 11.448 165.23969680000005 13.254 92.80067910000002 3.128 141.2027443 3.024 174.40926760000002 3.136 123.08883239999999 2.249 147.56585659999996 11.416 172.2724286 3.968 113.21953360000005 3.071 170.39367570000002 3.111 98.9459704 3.084)
Error minima by case: (91.0 2 11.0737 2 9.7839 9 44.0 2 58.0 2 14.8524 2 10.1076 8 18.1683 2 0.0 0 8.0 1 3.085 8 61.0 3 94.0 2 22.1829 2 59.5127 9 53.2697 8 6.0 2 62.0 1 97.0 2 39.0 1 18.4575 10 96.0 2 30.0 1 92.0 2 14.0 2)
Average genome size in population (length): 41.685
Average program size in population (points): 42.685
Average percent parens in population: 0.024
Minimum age in population: 6.0
Maximum age in population: 10.53125
Average age in population: 8.7550625
Median age in population: 8.78125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 82
Genome diversity (% unique Plush genomes):	 0.704
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 82
Syntactic diversity (% unique Push programs):	 0.704
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 8371139
--- Timings ---
Current time: 1529614874032 milliseconds
Total Time:          21.7 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         6.7 seconds, 30.8%
Fitness Testing:     11.0 seconds, 50.5%
Report:               3.9 seconds, 18.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 54638.0
Test mean error for best: 27.31900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 35.3049767458 
Correct output: 109.3816555251 | Program output: 51.3816555251 
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: -31.8923791844
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 93.7628386321 
Correct output: 95.2976348595  | Program output: 87.2976348595 
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 96.0106062966 
Correct output: -54.99029604   | Program output: -90.99029604  
Correct output: 60.5127184446  | Program output: -23.4872815554
Correct output: 61.1705628788  | Program output: -25.8294371212
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 9.2733863439  
Correct output: 136.9572654004 | Program output: 39.9572654004 
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: -48.5425364979
Correct output: 102.3014515582 | Program output: 6.3014515582  
Correct output: 82.9352078558  | Program output: 52.9352078558 
Correct output: 170.2225097733 | Program output: 78.2225097733 
Correct output: 92.3146270329  | Program output: 78.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_yank} {:instruction tagged_278} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div integer_dec float_inc integer_div print_float integer_yank tagged_278 float_swap)
Errors: [93.0 2 74.0 2 36.0 13 44.0 2 58.0 3 17.0 2 43.0 12 53.0 2 0.0 0 8.0 2 78.0 10 63.0 3 94.0 2 36.0 2 84.0 11 87.0 13 8.0 2 62.0 2 97.0 2 41.0 2 68.0 12 96.0 3 30.0 1 92.0 2 14.0 2]
Total: 1485.0
Mean: 29.7
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 3451.0310582000006
Median total errors in population: 1491.0
Error averages by case: (167.3843354 3.053 148.5549186 2.983 114.09045979999999 13.29 123.59347669999998 2.99 136.58282419999998 3.1 96.77914649999998 2.962 122.060189 13.195 129.5479015 2.988 82.91613730000002 1.986 90.99491599999999 2.969 152.10833350000001 9.421 139.7595845 4.038 170.02887649999997 3.004 116.05278890000001 2.917 159.77384930000002 11.419 162.50791020000003 13.253 88.7905018 3.056 138.6917904 2.929 172.27688959999998 3.023 119.17097639999999 2.209 144.8600466 11.444 170.1486273 3.873 110.88647339999999 2.916 168.0294013 3.016 96.4257035 2.981)
Error minima by case: (91.0 2 11.0737 2 10.4655 11 44.0 2 58.0 2 15.0 2 9.3232 10 20.2489 2 0.0 0 8.0 1 3.085 8 61.0 3 94.0 2 25.9903 2 58.5749 10 59.6938 9 6.0 2 62.0 1 97.0 2 39.0 1 17.4956 10 96.0 3 30.0 1 92.0 2 14.0 2)
Average genome size in population (length): 41.555
Average program size in population (points): 42.555
Average percent parens in population: 0.024
Minimum age in population: 7.96875
Maximum age in population: 12.109375
Average age in population: 10.186453125
Median age in population: 10.2109375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 49
Genome diversity (% unique Plush genomes):	 0.731
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 49
Syntactic diversity (% unique Push programs):	 0.731
Total error diversity:				 0.026
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 9410014
--- Timings ---
Current time: 1529614876762 milliseconds
Total Time:          24.5 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         7.7 seconds, 31.4%
Fitness Testing:     12.4 seconds, 50.7%
Report:               4.3 seconds, 17.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 54673.0
Test mean error for best: 27.33650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -96.338275572 
Correct output: 12.0737210789  | Program output: 87.0737210789 
Correct output: -10.4655066097 | Program output: 26.5344933903 
Correct output: 79.3049767458  | Program output: 36.3049767458 
Correct output: 109.3816555251 | Program output: 52.3816555251 
Correct output: 17.1475953645  | Program output: 35.1475953645 
Correct output: 11.1076208156  | Program output: -30.8923791844
Correct output: 21.5390260682  | Program output: 75.5390260682 
Correct output: 93.7628386321  | Program output: 94.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 75.91501729   
Correct output: -152.0436144918 | Program output: -88.0436144918
Correct output: 190.0106062966 | Program output: 97.0106062966 
Correct output: -54.99029604   | Program output: -89.99029604  
Correct output: 60.5127184446  | Program output: -22.4872815554
Correct output: 61.1705628788  | Program output: -24.8294371212
Correct output: -43.2506843864 | Program output: -34.2506843864
Correct output: 71.2733863439  | Program output: 10.2733863439 
Correct output: 136.9572654004 | Program output: 40.9572654004 
Correct output: -86.5838714881 | Program output: -44.5838714881
Correct output: 19.4574635021  | Program output: -47.5425364979
Correct output: 102.3014515582 | Program output: 7.3014515582  
Correct output: 82.9352078558  | Program output: 53.9352078558 
Correct output: 170.2225097733 | Program output: 79.2225097733 
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mult} {:instruction float_shove} {:instruction float_yank} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction integer_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod float_mult float_shove float_yank integer_swap float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 integer_min integer_dup_times)
Errors: [94.0 2 75.0 2 37.0 13 43.0 2 57.0 3 18.0 2 42.0 13 54.0 2 1.0 1 7.0 2 79.0 10 64.0 3 93.0 2 35.0 2 83.0 11 86.0 13 9.0 2 61.0 2 96.0 3 42.0 2 67.0 12 95.0 3 29.0 2 91.0 2 13.0 2]
Total: 1484.0
Mean: 29.68
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3566.1280515999997
Median total errors in population: 1491.0
Error averages by case: (174.60253629999997 3.093 152.80954010000002 3.043 118.3139026 13.339 126.0922929 3.037 138.99481709999998 3.416 101.07620750000001 3.017 128.66473870000002 12.975 133.7869067 3.054 86.27185770000001 1.771 93.5350546 3.016 156.3913174 9.744 147.2504172 4.088 172.2019056 3.046 122.5105571 2.962 165.9969646 11.484 168.71606359999998 13.308 96.9668102 3.097 142.40093729999998 2.958 174.6105285 3.069 126.9701076 2.536 151.32349829999998 11.786 173.49129470000003 3.897 113.4022427 2.695 170.2649064 3.05 98.9556462 3.046)
Error minima by case: (91.0 2 11.3884 2 10.4381 10 33.3985 2 57.0 2 15.0 2 9.219 8 19.886 2 0.0 0 7.0 1 2.294 8 61.0 3 93.0 2 32.2976 2 14.6062 10 15.264 9 6.0 2 25.3669 1 91.0507 2 0.704 1 18.4956 10 56.3949 2 29.0 1 91.0 2 13.0 2)
Average genome size in population (length): 41.533
Average program size in population (points): 42.533
Average percent parens in population: 0.024
Minimum age in population: 9.0625
Maximum age in population: 13.8671875
Average age in population: 11.607390625
Median age in population: 11.63671875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.027
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 10448339
--- Timings ---
Current time: 1529614879508 milliseconds
Total Time:          27.2 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:         8.7 seconds, 31.9%
Fitness Testing:     13.8 seconds, 50.8%
Report:               4.6 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 54673.0
Test mean error for best: 27.33650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -96.338275572 
Correct output: 12.0737210789  | Program output: 87.0737210789 
Correct output: -10.4655066097 | Program output: 26.5344933903 
Correct output: 79.3049767458  | Program output: 36.3049767458 
Correct output: 109.3816555251 | Program output: 52.3816555251 
Correct output: 17.1475953645  | Program output: 35.1475953645 
Correct output: 11.1076208156  | Program output: -30.8923791844
Correct output: 21.5390260682  | Program output: 75.5390260682 
Correct output: 93.7628386321  | Program output: 94.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 75.91501729   
Correct output: -152.0436144918 | Program output: -88.0436144918
Correct output: 190.0106062966 | Program output: 97.0106062966 
Correct output: -54.99029604   | Program output: -89.99029604  
Correct output: 60.5127184446  | Program output: -22.4872815554
Correct output: 61.1705628788  | Program output: -24.8294371212
Correct output: -43.2506843864 | Program output: -34.2506843864
Correct output: 71.2733863439  | Program output: 10.2733863439 
Correct output: 136.9572654004 | Program output: 40.9572654004 
Correct output: -86.5838714881 | Program output: -44.5838714881
Correct output: 19.4574635021  | Program output: -47.5425364979
Correct output: 102.3014515582 | Program output: 7.3014515582  
Correct output: 82.9352078558  | Program output: 53.9352078558 
Correct output: 170.2225097733 | Program output: 79.2225097733 
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mult} {:instruction float_shove} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -27} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction integer_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod float_mult float_shove integer_dup_items integer_swap float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -27 integer_min float_div in1 integer_dec float_inc integer_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 integer_min integer_dup_times)
Errors: [94.0 2 75.0 2 37.0 13 43.0 2 57.0 3 18.0 2 42.0 13 54.0 2 1.0 1 7.0 2 79.0 10 64.0 3 93.0 2 35.0 2 83.0 11 86.0 13 9.0 2 61.0 2 96.0 3 42.0 2 67.0 12 95.0 3 29.0 2 91.0 2 13.0 2]
Total: 1484.0
Mean: 29.68
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3255.283192000001
Median total errors in population: 1485.0
Error averages by case: (160.66963389999998 2.944 142.0972262 2.864 107.28478659999999 13.169 115.0092794 2.866 128.063823 3.774 89.6867883 2.853 113.6766933 12.296 122.8269816 2.865 74.6597234 1.101 81.9618205 2.86 145.74220970000002 10.1 132.83224520000002 3.921 161.6623096 2.914 107.52001969999999 2.806 151.68615119999998 11.28 154.4396458 13.115 81.5879933 2.94 131.50494949999998 2.837 164.09933839999997 2.946 112.1965647 2.88 136.7192734 12.107 162.9690422 3.81 102.14589850000002 2.026 159.70213700000002 2.93 87.4726576 2.862)
Error minima by case: (91.0 2 9.3926 2 10.7839 10 43.0 2 57.0 2 14.2497 2 8.3232 10 17.1683 2 0.0 0 7.0 1 4.4731 9 61.0 3 93.0 2 35.0 2 58.7597 10 52.2697 9 6.0 2 61.0 1 96.0 2 39.0 1 17.5752 9 95.0 3 29.0 1 91.0 2 13.0 2)
Average genome size in population (length): 41.524
Average program size in population (points): 42.524
Average percent parens in population: 0.024
Minimum age in population: 10.5625
Maximum age in population: 15.015625
Average age in population: 12.95381640625
Median age in population: 12.984375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 64
Genome diversity (% unique Plush genomes):	 0.586
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 64
Syntactic diversity (% unique Push programs):	 0.586
Total error diversity:				 0.018
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 11486439
--- Timings ---
Current time: 1529614882192 milliseconds
Total Time:          29.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:         9.6 seconds, 32.2%
Fitness Testing:     15.2 seconds, 50.8%
Report:               5.0 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 54771.0
Test mean error for best: 27.38550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -94.338275572 
Correct output: 12.0737210789  | Program output: 89.0737210789 
Correct output: -10.4655066097 | Program output: 28.5344933903 
Correct output: 79.3049767458  | Program output: 38.3049767458 
Correct output: 109.3816555251 | Program output: 54.3816555251 
Correct output: 17.1475953645  | Program output: 37.1475953645 
Correct output: 11.1076208156  | Program output: -28.8923791844
Correct output: 21.5390260682  | Program output: 77.5390260682 
Correct output: 93.7628386321  | Program output: 96.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 77.91501729   
Correct output: -152.0436144918 | Program output: -86.0436144918
Correct output: 190.0106062966 | Program output: 99.0106062966 
Correct output: -54.99029604   | Program output: -87.99029604  
Correct output: 60.5127184446  | Program output: -20.4872815554
Correct output: 61.1705628788  | Program output: -22.8294371212
Correct output: -43.2506843864 | Program output: -32.2506843864
Correct output: 71.2733863439  | Program output: 12.2733863439 
Correct output: 136.9572654004 | Program output: 42.9572654004 
Correct output: -86.5838714881 | Program output: -42.5838714881
Correct output: 19.4574635021  | Program output: -45.5425364979
Correct output: 102.3014515582 | Program output: 9.3014515582  
Correct output: 82.9352078558  | Program output: 55.9352078558 
Correct output: 170.2225097733 | Program output: 81.2225097733 
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_swap} {:instruction in1} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_dup_items} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (integer_dup_items float_cos print_integer float_pop integer_pop float_shove integer_mult tagged_288 integer_swap in1 integer_mult integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_dup_items print_float integer_pop integer_mult float_mult integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [96.0 2 77.0 2 39.0 13 41.0 2 55.0 3 20.0 1 40.0 13 56.0 2 3.0 1 5.0 1 81.0 10 66.0 3 91.0 2 33.0 2 81.0 10 84.0 13 11.0 2 59.0 2 94.0 3 44.0 2 65.0 12 93.0 3 27.0 2 89.0 3 11.0 2]
Total: 1472.0
Mean: 29.44
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2796.6037982000003
Median total errors in population: 1485.0
Error averages by case: (144.6744386 2.732 123.64234180000001 2.665 88.0629436 13.12 95.815563 2.675 109.1806883 3.632 70.2095153 2.664 96.23889559999999 12.277 104.0173954 2.672 54.90751790000001 0.926 62.1686866 2.667 127.3487317 10.113 116.2805333 3.718 143.59135969999997 2.706 90.0126196 2.628 135.00762600000002 11.216 137.8238001 13.087 63.935433599999996 2.727 112.62390690000002 2.649 145.98034699999997 2.833 95.16357190000001 2.721 119.70301309999999 12.122 144.76352339999997 3.621 82.70188720000002 1.864 141.555969 2.721 67.7684896 2.669)
Error minima by case: (91.0 2 0.6333 2 3.5668 11 41.0 2 55.0 2 5.7072 1 0.3328 7 10.0986 2 0.0 0 5.0 1 3.294 8 61.0 3 91.0 2 24.9903 2 49.0723 10 49.7301 8 6.0 1 59.0 1 94.0 2 39.0 1 8.017 9 90.861 2 27.0 1 89.0 2 11.0 2)
Average genome size in population (length): 41.424
Average program size in population (points): 42.424
Average percent parens in population: 0.024
Minimum age in population: 11.96875
Maximum age in population: 16.830078125
Average age in population: 14.492578125
Median age in population: 14.517578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.682
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.682
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 12522039
--- Timings ---
Current time: 1529614884918 milliseconds
Total Time:          32.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        10.6 seconds, 32.4%
Fitness Testing:     16.6 seconds, 50.9%
Report:               5.3 seconds, 16.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 54771.0
Test mean error for best: 27.38550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -94.338275572 
Correct output: 12.0737210789  | Program output: 89.0737210789 
Correct output: -10.4655066097 | Program output: 28.5344933903 
Correct output: 79.3049767458  | Program output: 38.3049767458 
Correct output: 109.3816555251 | Program output: 54.3816555251 
Correct output: 17.1475953645  | Program output: 37.1475953645 
Correct output: 11.1076208156  | Program output: -28.8923791844
Correct output: 21.5390260682  | Program output: 77.5390260682 
Correct output: 93.7628386321  | Program output: 96.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 77.91501729   
Correct output: -152.0436144918 | Program output: -86.0436144918
Correct output: 190.0106062966 | Program output: 99.0106062966 
Correct output: -54.99029604   | Program output: -87.99029604  
Correct output: 60.5127184446  | Program output: -20.4872815554
Correct output: 61.1705628788  | Program output: -22.8294371212
Correct output: -43.2506843864 | Program output: -32.2506843864
Correct output: 71.2733863439  | Program output: 12.2733863439 
Correct output: 136.9572654004 | Program output: 42.9572654004 
Correct output: -86.5838714881 | Program output: -42.5838714881
Correct output: 19.4574635021  | Program output: -45.5425364979
Correct output: 102.3014515582 | Program output: 9.3014515582  
Correct output: 82.9352078558  | Program output: 55.9352078558 
Correct output: 170.2225097733 | Program output: 81.2225097733 
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_swap} {:instruction in1} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_dup_items} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (integer_dup_items float_cos print_integer float_pop integer_pop float_shove integer_mult tagged_288 integer_swap in1 integer_mult integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_dup_items print_float integer_pop integer_mult float_mult integer_yankdup integer_pop integer_mult float_stackdepth integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [96.0 2 77.0 2 39.0 13 41.0 2 55.0 3 20.0 1 40.0 13 56.0 2 3.0 1 5.0 1 81.0 10 66.0 3 91.0 2 33.0 2 81.0 10 84.0 13 11.0 2 59.0 2 94.0 3 44.0 2 65.0 12 93.0 3 27.0 2 89.0 3 11.0 2]
Total: 1472.0
Mean: 29.44
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3099.0875782000003
Median total errors in population: 1484.0
Error averages by case: (155.7118332 2.858 136.47762869999997 2.798 102.0411692 13.146 107.93277219999999 2.802 121.04455370000001 3.765 83.64353109999999 2.788 107.54445790000001 12.736 116.985494 2.805 68.2443024 1.499 74.5402028 2.783 140.1042099 10.142 127.82420370000001 3.845 154.90650040000003 2.841 101.2771987 2.742 145.6816188 11.246 148.4817647 13.107 76.2549326 2.853 124.4438755 2.771 157.27987440000004 3.398 107.04470610000001 2.854 130.6713192 12.159 155.50000669999997 3.747 94.84167330000002 2.42 152.8095426 2.859 80.04120640000001 2.795)
Error minima by case: (55.7459 2 13.004 2 15.5345 11 10.0251 2 20.0516 2 15.0 1 10.3232 10 3.5081 2 0.0 0 5.0 1 3.8585 7 61.0 3 91.0 2 25.9903 2 28.8173 10 28.1595 10 6.0 1 18.0567 1 47.6272 2 3.7939 1 1.0848 10 12.9714 2 6.3948 1 80.8925 2 2.9846 2)
Average genome size in population (length): 41.532
Average program size in population (points): 42.532
Average percent parens in population: 0.024
Minimum age in population: 13.759765625
Maximum age in population: 17.9765625
Average age in population: 16.1249453125
Median age in population: 16.13037109375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.661
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.661
Total error diversity:				 0.025
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 13560339
--- Timings ---
Current time: 1529614887729 milliseconds
Total Time:          35.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        11.6 seconds, 32.8%
Fitness Testing:     18.0 seconds, 50.9%
Report:               5.7 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 54792.0
Test mean error for best: 27.39600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -93.338275572 
Correct output: 12.0737210789  | Program output: 90.0737210789 
Correct output: -10.4655066097 | Program output: 29.5344933903 
Correct output: 79.3049767458  | Program output: 39.3049767458 
Correct output: 109.3816555251 | Program output: 55.3816555251 
Correct output: 17.1475953645  | Program output: 38.1475953645 
Correct output: 11.1076208156  | Program output: -27.8923791844
Correct output: 21.5390260682  | Program output: 78.5390260682 
Correct output: 93.7628386321  | Program output: 97.7628386321 
Correct output: 95.2976348595  | Program output: 91.2976348595 
Correct output: -3.08498271    | Program output: 78.91501729   
Correct output: -152.0436144918 | Program output: -85.0436144918
Correct output: 190.0106062966 | Program output: 100.0106062966
Correct output: -54.99029604   | Program output: -86.99029604  
Correct output: 60.5127184446  | Program output: -19.4872815554
Correct output: 61.1705628788  | Program output: -21.8294371212
Correct output: -43.2506843864 | Program output: -31.2506843864
Correct output: 71.2733863439  | Program output: 13.2733863439 
Correct output: 136.9572654004 | Program output: 43.9572654004 
Correct output: -86.5838714881 | Program output: -41.5838714881
Correct output: 19.4574635021  | Program output: -44.5425364979
Correct output: 102.3014515582 | Program output: 10.3014515582 
Correct output: 82.9352078558  | Program output: 56.9352078558 
Correct output: 170.2225097733 | Program output: 82.2225097733 
Correct output: 92.3146270329  | Program output: 82.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_swap} {:instruction in1} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (integer_dup_items float_cos print_integer float_pop integer_pop float_shove integer_mult tagged_288 integer_swap in1 integer_mult integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div print_float integer_pop integer_mult float_mult integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [97.0 2 78.0 2 40.0 13 40.0 1 54.0 3 21.0 2 39.0 13 57.0 2 4.0 1 4.0 1 82.0 10 67.0 2 90.0 1 32.0 2 80.0 11 83.0 12 12.0 2 58.0 2 93.0 2 45.0 2 64.0 12 92.0 1 26.0 2 88.0 3 10.0 1]
Total: 1461.0
Mean: 29.22
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 3172.0026237
Median total errors in population: 1484.0
Error averages by case: (160.03103399999998 2.882 139.601301 2.813 104.5730564 13.127 109.9954007 2.822 123.10588320000001 3.782 86.95114500000001 2.749 110.6916006 13.057 120.23078600000002 2.815 70.8062994 1.87 76.81222 2.744 143.2801742 10.146 132.139298 3.869 156.85296219999998 2.862 104.500095 2.761 148.6954566 11.166 151.460711 13.079 80.7748946 2.835 125.9530848 2.752 159.30651790000005 3.772 111.46041739999998 2.883 133.77921780000003 12.143 157.46285529999997 3.768 97.07384239999999 2.794 154.8851066 2.932 82.34526360000001 2.811)
Error minima by case: (91.0 2 9.004 2 12.3859 9 7.0636 1 37.1402 2 12.2497 1 6.3232 8 17.2489 2 0.0 0 3.0 1 4.9705 9 61.0 2 89.0 1 30.7155 2 11.7287 10 11.0709 9 6.0 1 0.968 1 64.7159 2 39.0 1 15.7418 9 30.06 1 10.6938 1 87.0 2 9.0 1)
Average genome size in population (length): 41.293
Average program size in population (points): 42.293
Average percent parens in population: 0.024
Minimum age in population: 15.421875
Maximum age in population: 19.52490234375
Average age in population: 17.6770458984375
Median age in population: 17.712890625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 48
Genome diversity (% unique Plush genomes):	 0.619
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 48
Syntactic diversity (% unique Push programs):	 0.619
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 14592714
--- Timings ---
Current time: 1529614890385 milliseconds
Total Time:          38.0 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        12.5 seconds, 32.9%
Fitness Testing:     19.4 seconds, 50.9%
Report:               6.1 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 54937.0
Test mean error for best: 27.46850
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -91.338275572 
Correct output: 12.0737210789  | Program output: 92.0737210789 
Correct output: -10.4655066097 | Program output: 31.5344933903 
Correct output: 79.3049767458  | Program output: 41.3049767458 
Correct output: 109.3816555251 | Program output: 57.3816555251 
Correct output: 17.1475953645  | Program output: 40.1475953645 
Correct output: 11.1076208156  | Program output: -25.8923791844
Correct output: 21.5390260682  | Program output: 80.5390260682 
Correct output: 93.7628386321  | Program output: 99.7628386321 
Correct output: 95.2976348595  | Program output: 93.2976348595 
Correct output: -3.08498271    | Program output: 80.91501729   
Correct output: -152.0436144918 | Program output: -83.0436144918
Correct output: 190.0106062966 | Program output: 102.0106062966
Correct output: -54.99029604   | Program output: -84.99029604  
Correct output: 60.5127184446  | Program output: -17.4872815554
Correct output: 61.1705628788  | Program output: -19.8294371212
Correct output: -43.2506843864 | Program output: -29.2506843864
Correct output: 71.2733863439  | Program output: 15.2733863439 
Correct output: 136.9572654004 | Program output: 45.9572654004 
Correct output: -86.5838714881 | Program output: -39.5838714881
Correct output: 19.4574635021  | Program output: -42.5425364979
Correct output: 102.3014515582 | Program output: 12.3014515582 
Correct output: 82.9352078558  | Program output: 58.9352078558 
Correct output: 170.2225097733 | Program output: 84.2225097733 
Correct output: 92.3146270329  | Program output: 84.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_mult} {:instruction float_swap} {:instruction float_cos} {:instruction float_pop} {:instruction float_pop} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (integer_dup_items float_mult float_swap float_cos float_pop float_pop integer_pop float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_mod float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_mod float_inc integer_div integer_dec float_inc float_inc integer_div print_float integer_pop integer_mult float_stackdepth integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [99.0 2 80.0 1 42.0 12 38.0 2 52.0 3 23.0 2 37.0 13 59.0 2 6.0 1 2.0 1 84.0 10 69.0 3 88.0 2 30.0 1 78.0 11 81.0 12 14.0 2 56.0 2 91.0 3 47.0 2 62.0 12 90.0 1 24.0 2 86.0 3 8.0 2]
Total: 1453.0
Mean: 29.06
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3309.2785385000006
Median total errors in population: 1477.0
Error averages by case: (165.65441219999997 3.008 145.67154739999998 2.924 111.20289790000001 13.201 115.38331459999999 2.929 128.49912080000001 3.889 93.6248475 2.597 114.54128219999998 13.155 126.58385840000001 2.933 78.2189218 1.989 82.70971450000002 2.587 149.24747989999997 10.234 137.8628547 3.956 162.29103849999998 2.953 108.6523752 2.887 152.4791681 11.006 155.21622259999998 13.141 86.56155949999999 2.829 131.66713269999997 2.74 164.38617810000002 3.866 117.11781729999998 3.003 137.4598897 12.21 162.22736049999995 3.835 102.6294252 2.912 160.21843909999998 3.335 88.14568010000002 2.907)
Error minima by case: (92.0 2 8.004 1 10.2083 10 38.0 1 52.0 2 11.2497 1 5.3232 9 16.2489 2 0.0 0 2.0 1 3.085 7 62.0 2 88.0 1 29.9134 1 55.8829 10 55.6938 10 7.0 1 56.0 1 91.0 2 40.0 1 14.7418 9 90.0 1 24.0 1 86.0 2 8.0 1)
Average genome size in population (length): 42.196
Average program size in population (points): 43.196
Average percent parens in population: 0.024
Minimum age in population: 16.845703125
Maximum age in population: 20.832275390625
Average age in population: 19.13535473632812
Median age in population: 19.186767578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 47
Genome diversity (% unique Plush genomes):	 0.647
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.647
Total error diversity:				 0.035
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 15647614
--- Timings ---
Current time: 1529614893133 milliseconds
Total Time:          40.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.5 seconds, 33.0%
Fitness Testing:     20.8 seconds, 50.9%
Report:               6.4 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 55029.0
Test mean error for best: 27.51450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -90.338275572 
Correct output: 12.0737210789  | Program output: 93.0737210789 
Correct output: -10.4655066097 | Program output: 32.5344933903 
Correct output: 79.3049767458  | Program output: 42.3049767458 
Correct output: 109.3816555251 | Program output: 58.3816555251 
Correct output: 17.1475953645  | Program output: 41.1475953645 
Correct output: 11.1076208156  | Program output: -24.8923791844
Correct output: 21.5390260682  | Program output: 81.5390260682 
Correct output: 93.7628386321  | Program output: 100.7628386321
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 81.91501729   
Correct output: -152.0436144918 | Program output: -82.0436144918
Correct output: 190.0106062966 | Program output: 103.0106062966
Correct output: -54.99029604   | Program output: -83.99029604  
Correct output: 60.5127184446  | Program output: -16.4872815554
Correct output: 61.1705628788  | Program output: -18.8294371212
Correct output: -43.2506843864 | Program output: -28.2506843864
Correct output: 71.2733863439  | Program output: 16.2733863439 
Correct output: 136.9572654004 | Program output: 46.9572654004 
Correct output: -86.5838714881 | Program output: -38.5838714881
Correct output: 19.4574635021  | Program output: -41.5425364979
Correct output: 102.3014515582 | Program output: 13.3014515582 
Correct output: 82.9352078558  | Program output: 59.9352078558 
Correct output: 170.2225097733 | Program output: 85.2225097733 
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_swap} {:instruction in1} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction -60.124667311478674} {:instruction float_swap})
Best program: (integer_dup_items float_cos print_integer float_pop integer_pop float_shove integer_mult tagged_288 integer_swap in1 integer_mult integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div print_float integer_pop integer_mult float_stackdepth integer_yankdup float_dup_items integer_yank float_inc integer_yank -60.124667311478674 float_swap)
Errors: [100.0 1 81.0 2 43.0 13 37.0 2 51.0 3 24.0 2 36.0 13 60.0 1 7.0 3 1.0 1 85.0 10 70.0 2 87.0 2 29.0 2 77.0 11 80.0 12 15.0 2 55.0 2 90.0 2 48.0 2 61.0 12 89.0 2 23.0 2 85.0 3 7.0 2]
Total: 1450.0
Mean: 29.0
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2853.3821290000005
Median total errors in population: 1472.0
Error averages by case: (151.60476030000007 2.94 127.4853033 2.846 92.8497467 13.019 95.95762209999997 2.754 109.65786470000003 3.809 75.293509 2.2 94.95425629999998 13.054 108.48538020000004 2.863 61.2672878 1.932 63.66185909999997 2.054 130.94069190000002 10.152 123.05608439999999 3.777 145.15136179999993 2.804 90.010186 2.81 133.5201639 10.558 136.26785049999995 12.93 69.64415009999999 2.87 112.0202725 2.797 146.06983429999997 3.712 100.97820569999998 2.934 118.01336250000003 12.102 143.75867500000004 3.521 83.28101050000005 2.851 142.6425545 3.758 69.01613590000002 2.747)
Error minima by case: (91.0 1 6.5306 1 9.7269 7 15.3291 1 14.7476 2 11.2497 1 5.3232 9 16.2489 1 0.0 0 0.6635 1 2.294 8 61.0 2 87.0 1 15.1307 1 2.1195 9 1.4617 9 6.0 1 8.6411 1 42.3232 2 16.4629 1 13.469 9 7.6674 1 11.6989 1 75.5884 2 2.3195 1)
Average genome size in population (length): 43.158
Average program size in population (points): 44.158
Average percent parens in population: 0.023
Minimum age in population: 18.1220703125
Maximum age in population: 22.4654541015625
Average age in population: 20.63506530761719
Median age in population: 20.70587158203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 65
Genome diversity (% unique Plush genomes):	 0.575
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 65
Syntactic diversity (% unique Push programs):	 0.575
Total error diversity:				 0.051
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 16726589
--- Timings ---
Current time: 1529614895955 milliseconds
Total Time:          43.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.4 seconds, 33.2%
Fitness Testing:     22.2 seconds, 51.0%
Report:               6.8 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 55218.0
Test mean error for best: 27.60900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -88.338275572 
Correct output: 12.0737210789  | Program output: 95.0737210789 
Correct output: -10.4655066097 | Program output: 34.5344933903 
Correct output: 79.3049767458  | Program output: 44.3049767458 
Correct output: 109.3816555251 | Program output: 60.3816555251 
Correct output: 17.1475953645  | Program output: 43.1475953645 
Correct output: 11.1076208156  | Program output: -22.8923791844
Correct output: 21.5390260682  | Program output: 83.5390260682 
Correct output: 93.7628386321  | Program output: 102.7628386321
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 83.91501729   
Correct output: -152.0436144918 | Program output: -80.0436144918
Correct output: 190.0106062966 | Program output: 105.0106062966
Correct output: -54.99029604   | Program output: -81.99029604  
Correct output: 60.5127184446  | Program output: -14.4872815554
Correct output: 61.1705628788  | Program output: -16.8294371212
Correct output: -43.2506843864 | Program output: -26.2506843864
Correct output: 71.2733863439  | Program output: 18.2733863439 
Correct output: 136.9572654004 | Program output: 48.9572654004 
Correct output: -86.5838714881 | Program output: -36.5838714881
Correct output: 19.4574635021  | Program output: -39.5425364979
Correct output: 102.3014515582 | Program output: 15.3014515582 
Correct output: 82.9352078558  | Program output: 61.9352078558 
Correct output: 170.2225097733 | Program output: 87.2225097733 
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mult} {:instruction float_shove} {:instruction float_yank} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_dup} {:instruction tagged_432} {:instruction float_min} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat integer_mod float_mult float_shove float_yank integer_swap float_shove integer_mult integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_flush float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc float_inc integer_yank float_inc integer_yankdup float_dup_items float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_dup tagged_432 float_min float_mult integer_yankdup float_dup_items integer_yank float_inc integer_yank float_inc float_swap)
Errors: [102.0 3 83.0 2 45.0 13 35.0 2 49.0 2 26.0 2 34.0 13 62.0 2 9.0 3 1.0 1 87.0 9 72.0 3 85.0 2 27.0 2 75.0 11 78.0 12 17.0 2 53.0 2 88.0 3 50.0 1 59.0 11 87.0 2 21.0 2 83.0 2 5.0 2]
Total: 1442.0
Mean: 28.84
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3441.141420200001
Median total errors in population: 1461.0
Error averages by case: (173.57171209999998 3.137 152.59668989999997 2.973 118.75554740000001 12.975 119.2520439 2.582 132.3156567 3.973 101.2301744 2.793 118.35200239999999 13.062 133.74659150000005 3.015 86.83686470000004 2.16 86.9393415 2.163 156.2195423 10.177 145.9023139 3.63 166.02089279999996 2.653 112.9036132 2.948 155.99618189999998 11.038 158.69589079999997 12.541 94.61503040000001 3.108 135.3521161 3.002 167.92691659999997 3.531 125.02563849999997 3.118 141.0042116 12.149 165.88818920000003 2.877 106.5886935 3.027 163.9128229 3.982 92.30374200000003 2.575)
Error minima by case: (92.0 1 5.3218 1 10.5527 10 3.8107 1 26.266 2 9.1605 1 3.3232 7 14.2489 1 0.0 0 0.0 0 4.8585 8 62.0 2 85.0 1 27.0 1 22.6029 9 21.9451 7 7.0 1 11.8422 1 53.8416 2 40.0 1 11.7959 8 19.1858 1 0.1804 1 83.0 2 5.0 1)
Average genome size in population (length): 45.823
Average program size in population (points): 46.823
Average percent parens in population: 0.022
Minimum age in population: 19.865966796875
Maximum age in population: 23.9503173828125
Average age in population: 22.26552087402344
Median age in population: 22.33941650390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 43
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 43
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.047
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 17872214
--- Timings ---
Current time: 1529614898788 milliseconds
Total Time:          46.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        15.4 seconds, 33.2%
Fitness Testing:     23.7 seconds, 51.0%
Report:               7.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 55482.0
Test mean error for best: 27.74100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -86.338275572 
Correct output: 12.0737210789  | Program output: 97.0737210789 
Correct output: -10.4655066097 | Program output: 36.5344933903 
Correct output: 79.3049767458  | Program output: 46.3049767458 
Correct output: 109.3816555251 | Program output: 62.3816555251 
Correct output: 17.1475953645  | Program output: 45.1475953645 
Correct output: 11.1076208156  | Program output: -20.8923791844
Correct output: 21.5390260682  | Program output: 85.5390260682 
Correct output: 93.7628386321  | Program output: 104.7628386321
Correct output: 95.2976348595  | Program output: 98.2976348595 
Correct output: -3.08498271    | Program output: 85.91501729   
Correct output: -152.0436144918 | Program output: -78.0436144918
Correct output: 190.0106062966 | Program output: 107.0106062966
Correct output: -54.99029604   | Program output: -79.99029604  
Correct output: 60.5127184446  | Program output: -12.4872815554
Correct output: 61.1705628788  | Program output: -14.8294371212
Correct output: -43.2506843864 | Program output: -24.2506843864
Correct output: 71.2733863439  | Program output: 20.2733863439 
Correct output: 136.9572654004 | Program output: 50.9572654004 
Correct output: -86.5838714881 | Program output: -34.5838714881
Correct output: 19.4574635021  | Program output: -37.5425364979
Correct output: 102.3014515582 | Program output: 17.3014515582 
Correct output: 82.9352078558  | Program output: 63.9352078558 
Correct output: 170.2225097733 | Program output: 89.2225097733 
Correct output: 92.3146270329  | Program output: 89.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_mult} {:instruction float_swap} {:instruction float_cos} {:instruction float_pop} {:instruction float_pop} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_cos} {:instruction print_float} {:instruction integer_swap} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (integer_dup_items float_mult float_swap float_cos float_pop float_pop integer_pop float_shove integer_mult tagged_288 integer_dup_times float_stackdepth float_cos print_float integer_swap float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_mod float_inc integer_div integer_dec float_inc float_inc integer_div print_float integer_pop integer_mult float_stackdepth integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [104.0 3 85.0 2 47.0 13 33.0 2 47.0 3 28.0 2 32.0 13 64.0 2 11.0 3 3.0 1 89.0 10 74.0 3 83.0 2 25.0 2 73.0 11 76.0 12 19.0 2 51.0 2 86.0 3 52.0 2 57.0 12 85.0 2 19.0 2 81.0 3 3.0 2]
Total: 1441.0
Mean: 28.82
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3251.4744342000004
Median total errors in population: 1461.0
Error averages by case: (170.69522989999996 3.078 143.85373079999994 2.82 111.27057880000002 12.889 109.60166609999996 2.55 122.94862479999999 3.947 92.32230369999998 3.024 112.47476280000001 13.051 124.887709 2.974 79.03059850000002 2.375 77.4891569 2.154 147.21167430000003 10.156 143.05575350000004 3.516 157.55459079999994 2.619 107.87431980000002 2.773 149.73688529999998 11.253 152.5950489 12.22 90.85623309999998 3.107 124.26465220000003 3.02 158.68239179999998 3.414 121.64433919999999 3.094 135.01390700000002 12.116 155.7690326 2.42 96.82476900000002 3.038 155.02931629999998 3.973 82.66315910000002 2.543)
Error minima by case: (47.1584 1 2.004 1 10.1193 9 5.9586 1 36.0353 2 0.2242 1 0.6768 8 0.9589 1 0.0 0 0.0 0 2.1545 7 62.0 2 83.0 1 4.773 1 12.8336 9 12.1758 9 7.0 1 2.073 1 63.6109 2 26.8206 1 1.6535 9 28.9551 1 9.5888 1 81.0 2 3.0 1)
Average genome size in population (length): 47.856
Average program size in population (points): 48.856
Average percent parens in population: 0.021
Minimum age in population: 20.865966796875
Maximum age in population: 25.37689208984375
Average age in population: 23.83843466186523
Median age in population: 23.90475463867188
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.661
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.661
Total error diversity:				 0.059
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 19068614
--- Timings ---
Current time: 1529614901710 milliseconds
Total Time:          49.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        16.4 seconds, 33.2%
Fitness Testing:     25.2 seconds, 51.1%
Report:               7.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 55611.0
Test mean error for best: 27.80550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -85.338275572 
Correct output: 12.0737210789  | Program output: 98.0737210789 
Correct output: -10.4655066097 | Program output: 37.5344933903 
Correct output: 79.3049767458  | Program output: 47.3049767458 
Correct output: 109.3816555251 | Program output: 63.3816555251 
Correct output: 17.1475953645  | Program output: 46.1475953645 
Correct output: 11.1076208156  | Program output: -19.8923791844
Correct output: 21.5390260682  | Program output: 86.5390260682 
Correct output: 93.7628386321  | Program output: 105.7628386321
Correct output: 95.2976348595  | Program output: 99.2976348595 
Correct output: -3.08498271    | Program output: 86.91501729   
Correct output: -152.0436144918 | Program output: -77.0436144918
Correct output: 190.0106062966 | Program output: 108.0106062966
Correct output: -54.99029604   | Program output: -78.99029604  
Correct output: 60.5127184446  | Program output: -11.4872815554
Correct output: 61.1705628788  | Program output: -13.8294371212
Correct output: -43.2506843864 | Program output: -23.2506843864
Correct output: 71.2733863439  | Program output: 21.2733863439 
Correct output: 136.9572654004 | Program output: 51.9572654004 
Correct output: -86.5838714881 | Program output: -33.5838714881
Correct output: 19.4574635021  | Program output: -36.5425364979
Correct output: 102.3014515582 | Program output: 18.3014515582 
Correct output: 82.9352078558  | Program output: 64.9352078558 
Correct output: 170.2225097733 | Program output: 90.2225097733 
Correct output: 92.3146270329  | Program output: 90.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction float_shove} {:instruction float_yank} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot float_shove float_yank integer_pop integer_dup_items integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc integer_pop integer_mult float_stackdepth integer_yankdup float_dup_items integer_yank float_inc integer_yank float_inc integer_mod float_inc integer_div integer_dec float_inc float_inc integer_div print_float integer_pop integer_mult float_stackdepth integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [105.0 3 86.0 2 48.0 13 32.0 2 46.0 3 29.0 2 31.0 12 65.0 2 12.0 3 4.0 1 90.0 10 75.0 3 82.0 2 24.0 2 72.0 11 75.0 12 20.0 1 50.0 1 85.0 3 53.0 2 56.0 12 84.0 2 18.0 2 80.0 2 2.0 1]
Total: 1433.0
Mean: 28.66
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3524.5336014000013
Median total errors in population: 1453.0
Error averages by case: (180.83416409999998 3.202 156.947142 2.881 124.72953989999999 12.805 120.43905119999995 3.156 133.68440890000002 3.918 106.64013580000001 3.186 119.2781095 13.054 138.56713790000003 2.943 93.93216690000001 3.307 89.21671920000003 2.205 160.44473830000004 10.078 153.31994410000004 3.953 167.95021750000004 3.239 114.63065089999999 2.845 156.91351559999993 11.287 159.57195750000005 12.186 101.53848639999998 3.3 135.94410610000003 3.18 168.91126200000002 3.877 131.90681899999996 3.164 141.5228801 12.017 166.94938629999996 2.941 108.00677780000001 3.179 165.42814249999992 4.054 94.12214190000003 3.147)
Error minima by case: (46.1934 1 1.004 1 0.0791 8 31.0 1 45.0 2 4.2497 1 0.3232 9 6.3786 1 0.0 0 0.0 0 0.085 7 61.0 2 81.0 1 20.9903 1 46.1883 6 47.2697 7 6.0 1 49.0 1 84.0 2 1.56 1 0.0621 7 79.5452 1 17.0 1 78.5857 2 1.0 1)
Average genome size in population (length): 50.61
Average program size in population (points): 51.61
Average percent parens in population: 0.020
Minimum age in population: 22.48797607421875
Maximum age in population: 27.00572204589844
Average age in population: 25.31925093078613
Median age in population: 25.37118530273438
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.649
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.649
Total error diversity:				 0.064
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 20333914
--- Timings ---
Current time: 1529614904607 milliseconds
Total Time:          52.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        17.3 seconds, 33.2%
Fitness Testing:     26.7 seconds, 51.2%
Report:               8.1 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 56053.0
Test mean error for best: 28.02650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -82.338275572 
Correct output: 12.0737210789  | Program output: 101.0737210789
Correct output: -10.4655066097 | Program output: 40.5344933903 
Correct output: 79.3049767458  | Program output: 50.3049767458 
Correct output: 109.3816555251 | Program output: 66.3816555251 
Correct output: 17.1475953645  | Program output: 49.1475953645 
Correct output: 11.1076208156  | Program output: -16.8923791844
Correct output: 21.5390260682  | Program output: 89.5390260682 
Correct output: 93.7628386321  | Program output: 108.7628386321
Correct output: 95.2976348595  | Program output: 102.2976348595
Correct output: -3.08498271    | Program output: 89.91501729   
Correct output: -152.0436144918 | Program output: -74.0436144918
Correct output: 190.0106062966 | Program output: 111.0106062966
Correct output: -54.99029604   | Program output: -75.99029604  
Correct output: 60.5127184446  | Program output: -8.4872815554 
Correct output: 61.1705628788  | Program output: -10.8294371212
Correct output: -43.2506843864 | Program output: -20.2506843864
Correct output: 71.2733863439  | Program output: 24.2733863439 
Correct output: 136.9572654004 | Program output: 54.9572654004 
Correct output: -86.5838714881 | Program output: -30.5838714881
Correct output: 19.4574635021  | Program output: -33.5425364979
Correct output: 102.3014515582 | Program output: 21.3014515582 
Correct output: 82.9352078558  | Program output: 67.9352078558 
Correct output: 170.2225097733 | Program output: 93.2225097733 
Correct output: 92.3146270329  | Program output: 93.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_pop} {:instruction float_tan} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_dup_items} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_dup} {:instruction tagged_432} {:instruction float_min} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos integer_max float_dup_times integer_pop float_tan integer_add integer_mod integer_sub integer_stackdepth -28 integer_dup_items integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc integer_yank float_inc integer_yankdup float_dup_items float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_dup tagged_432 float_min float_mult integer_yankdup float_dup_items integer_yank float_inc integer_yank float_inc float_swap)
Errors: [108.0 3 89.0 2 51.0 12 29.0 2 43.0 3 32.0 2 28.0 12 68.0 2 15.0 3 7.0 3 93.0 10 78.0 3 79.0 2 21.0 2 69.0 10 72.0 12 23.0 2 47.0 2 82.0 3 56.0 2 53.0 12 81.0 3 15.0 2 77.0 3 1.0 1]
Total: 1430.0
Mean: 28.6
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3730.5675856000007
Median total errors in population: 1442.0
Error averages by case: (190.56765439999998 3.82 167.05156930000007 3.234 133.77628869999998 13.177 127.39173049999995 3.276 140.4725066 3.605 117.05379209999997 3.255 126.65924620000001 13.066 148.8168957 3.167 104.15098460000003 4.024 97.72174310000003 2.236 170.58531469999997 9.854 163.16770360000004 4.209 174.37850779999997 3.345 121.8963235 3.216 163.3270497999999 11.369 166.0679802 12.26 111.94865569999997 3.372 141.91422070000004 3.247 175.46212540000002 4.107 142.00306729999997 2.974 148.7409023 11.804 172.6259334 3.328 115.1667504 3.208 172.03356860000002 3.808 101.38507100000004 3.241)
Error minima by case: (91.0 1 0.0569 1 0.4601 6 21.4883 1 8.5884 2 2.2497 1 0.229 8 7.2489 1 1.0 1 0.0 0 2.294 8 61.0 2 79.0 1 7.5618 1 22.7121 10 23.37 7 6.0 1 5.1755 1 36.164 2 9.881 1 5.7418 9 1.5082 1 15.0 1 69.4292 2 1.0 1)
Average genome size in population (length): 55.604
Average program size in population (points): 56.604
Average percent parens in population: 0.018
Minimum age in population: 23.48797607421875
Maximum age in population: 28.40830993652344
Average age in population: 26.82516355133057
Median age in population: 26.90303039550781
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 55
Genome diversity (% unique Plush genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 55
Syntactic diversity (% unique Push programs):	 0.712
Total error diversity:				 0.063
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.072
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 21724014
--- Timings ---
Current time: 1529614907565 milliseconds
Total Time:          55.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        18.3 seconds, 33.1%
Fitness Testing:     28.3 seconds, 51.3%
Report:               8.5 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 57528.0
Test mean error for best: 28.76400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -75.338275572 
Correct output: 12.0737210789  | Program output: 108.0737210789
Correct output: -10.4655066097 | Program output: 47.5344933903 
Correct output: 79.3049767458  | Program output: 57.3049767458 
Correct output: 109.3816555251 | Program output: 73.3816555251 
Correct output: 17.1475953645  | Program output: 56.1475953645 
Correct output: 11.1076208156  | Program output: -9.8923791844 
Correct output: 21.5390260682  | Program output: 96.5390260682 
Correct output: 93.7628386321  | Program output: 115.7628386321
Correct output: 95.2976348595  | Program output: 109.2976348595
Correct output: -3.08498271    | Program output: 96.91501729   
Correct output: -152.0436144918 | Program output: -67.0436144918
Correct output: 190.0106062966 | Program output: 118.0106062966
Correct output: -54.99029604   | Program output: -68.99029604  
Correct output: 60.5127184446  | Program output: -1.4872815554 
Correct output: 61.1705628788  | Program output: -3.8294371212 
Correct output: -43.2506843864 | Program output: -13.2506843864
Correct output: 71.2733863439  | Program output: 31.2733863439 
Correct output: 136.9572654004 | Program output: 61.9572654004 
Correct output: -86.5838714881 | Program output: -23.5838714881
Correct output: 19.4574635021  | Program output: -26.5425364979
Correct output: 102.3014515582 | Program output: 28.3014515582 
Correct output: 82.9352078558  | Program output: 74.9352078558 
Correct output: 170.2225097733 | Program output: 100.2225097733
Correct output: 92.3146270329  | Program output: 100.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction integer_max} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_mult} {:instruction tagged_288} {:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction -60.124667311478674} {:instruction float_swap})
Best program: (float_cos integer_max integer_swap float_shove integer_mult tagged_288 float_cos print_integer float_pop float_div in1 integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_dup_items float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_yankdup float_inc integer_div integer_dec float_inc float_inc integer_yankdup float_inc integer_div integer_dec float_inc float_inc integer_yankdup print_float integer_pop integer_mult float_stackdepth integer_yankdup float_dup_items integer_yank float_inc integer_yank -60.124667311478674 float_swap)
Errors: [115.0 3 96.0 2 58.0 13 22.0 2 36.0 3 39.0 2 21.0 12 75.0 2 22.0 3 14.0 3 100.0 10 85.0 3 72.0 2 14.0 2 62.0 10 65.0 12 30.0 1 40.0 1 75.0 3 63.0 2 46.0 12 74.0 3 8.0 2 70.0 1 8.0 3]
Total: 1422.0
Mean: 28.44
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3338.5203098999996
Median total errors in population: 1442.0
Error averages by case: (177.09787799999998 3.961 154.1078089 3.032 121.18627959999998 13.183 110.16377289999998 3.035 123.35987460000001 3.627 102.7467632 2.974 109.36956410000002 12.81 135.24934330000005 3.043 89.83807230000001 3.751 81.98514880000002 2.275 157.85724550000003 9.926 149.43336820000005 4.075 158.36033149999997 3.087 105.08915549999999 3.014 146.5870936 11.278 149.39122929999994 12.26 97.38500999999995 3.071 125.2263779 2.951 158.89365300000003 3.961 128.17584779999999 2.815 132.26778989999997 11.892 156.2753598 3.092 97.51612140000002 2.862 155.09081570000004 3.593 83.40640510000001 2.892)
Error minima by case: (47.2284 1 0.0844 1 10.3233 8 15.5066 1 36.0 2 0.2497 1 0.2502 7 5.2489 1 0.0 0 0.0 0 3.0984 7 61.0 2 72.0 1 14.0 1 3.2856 8 2.6278 8 6.0 1 7.475 1 13.0 2 39.0 1 3.7418 8 14.0 1 8.0 1 18.0 1 0.0 0)
Average genome size in population (length): 59.186
Average program size in population (points): 60.186
Average percent parens in population: 0.017
Minimum age in population: 26.07476806640625
Maximum age in population: 30.06357192993164
Average age in population: 28.35233968734741
Median age in population: 28.42541885375977
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.732
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.732
Total error diversity:				 0.067
Error (vector) diversity:			 0.077
Behavioral diversity:				 0.078
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 23203664
--- Timings ---
Current time: 1529614910640 milliseconds
Total Time:          58.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.2 seconds, 33.1%
Fitness Testing:     29.9 seconds, 51.4%
Report:               8.9 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 56793.0
Test mean error for best: 28.39650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -78.338275572 
Correct output: 12.0737210789  | Program output: 105.0737210789
Correct output: -10.4655066097 | Program output: 44.5344933903 
Correct output: 79.3049767458  | Program output: 54.3049767458 
Correct output: 109.3816555251 | Program output: 70.3816555251 
Correct output: 17.1475953645  | Program output: 53.1475953645 
Correct output: 11.1076208156  | Program output: -12.8923791844
Correct output: 21.5390260682  | Program output: 93.5390260682 
Correct output: 93.7628386321  | Program output: 112.7628386321
Correct output: 95.2976348595  | Program output: 106.2976348595
Correct output: -3.08498271    | Program output: 93.91501729   
Correct output: -152.0436144918 | Program output: -70.0436144918
Correct output: 190.0106062966 | Program output: 115.0106062966
Correct output: -54.99029604   | Program output: -71.99029604  
Correct output: 60.5127184446  | Program output: -4.4872815554 
Correct output: 61.1705628788  | Program output: -6.8294371212 
Correct output: -43.2506843864 | Program output: -16.2506843864
Correct output: 71.2733863439  | Program output: 28.2733863439 
Correct output: 136.9572654004 | Program output: 58.9572654004 
Correct output: -86.5838714881 | Program output: -26.5838714881
Correct output: 19.4574635021  | Program output: -29.5425364979
Correct output: 102.3014515582 | Program output: 25.3014515582 
Correct output: 82.9352078558  | Program output: 71.9352078558 
Correct output: 170.2225097733 | Program output: 97.2225097733 
Correct output: 92.3146270329  | Program output: 97.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction float_shove} {:instruction float_yank} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction float_swap})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot float_shove float_yank integer_pop integer_dup_items integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_dec integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div integer_dec float_div float_inc integer_div integer_dec float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_yankdup float_inc integer_div integer_dec integer_yank float_inc integer_mod float_inc integer_div integer_dec float_inc float_inc integer_div print_float integer_pop integer_mult float_stackdepth integer_yankdup float_dup_items integer_yank float_inc float_swap)
Errors: [112.0 3 93.0 2 55.0 13 25.0 2 39.0 2 36.0 2 24.0 12 72.0 2 19.0 3 11.0 3 97.0 9 82.0 3 75.0 2 17.0 2 65.0 10 68.0 12 27.0 2 43.0 2 78.0 3 60.0 1 49.0 11 77.0 3 11.0 2 73.0 2 5.0 1]
Total: 1422.0
Mean: 28.44
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3042.4649523
Median total errors in population: 1433.0
Error averages by case: (169.2155795 3.971 143.26406729999997 2.964 109.2864706 12.993 96.40373660000002 2.962 109.92683950000001 3.914 91.84214860000002 2.846 96.11221440000003 12.31 124.49028770000004 2.989 79.6525867 3.76 71.8469318 2.764 146.9515064 10.104 140.933845 3.986 145.7651426999999 3.029 91.9087607 2.96 133.80774019999998 10.915 136.6300552 12.104 87.86100319999997 2.873 111.3475008 2.783 146.0188174 3.901 119.02638159999998 3.064 119.00474700000001 12.051 142.89064280000002 3.143 83.9219121 2.879 142.71635020000002 3.718 70.25368430000003 2.403)
Error minima by case: (97.0 1 0.004 1 6.7746 9 20.4206 1 5.3874 2 0.2497 1 0.1315 7 4.1683 1 1.0 1 0.0 0 4.0275 8 67.0 2 72.0 1 13.2564 1 25.3956 8 22.8643 8 1.5168 1 28.4522 1 32.9631 2 44.85 1 3.7418 7 1.6928 1 8.0 1 66.2283 1 0.0 0)
Average genome size in population (length): 61.208
Average program size in population (points): 62.208
Average percent parens in population: 0.016
Minimum age in population: 27.59391403198242
Maximum age in population: 31.60257530212402
Average age in population: 29.76671904754639
Median age in population: 29.81047439575195
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.752
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.752
Total error diversity:				 0.066
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 24733864
--- Timings ---
Current time: 1529614913767 milliseconds
Total Time:          61.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.2 seconds, 33.0%
Fitness Testing:     31.6 seconds, 51.5%
Report:               9.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 58843.0
Test mean error for best: 29.42150
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -70.338275572 
Correct output: 12.0737210789  | Program output: 113.0737210789
Correct output: -10.4655066097 | Program output: 52.5344933903 
Correct output: 79.3049767458  | Program output: 62.3049767458 
Correct output: 109.3816555251 | Program output: 78.3816555251 
Correct output: 17.1475953645  | Program output: 61.1475953645 
Correct output: 11.1076208156  | Program output: -4.8923791844 
Correct output: 21.5390260682  | Program output: 101.5390260682
Correct output: 93.7628386321  | Program output: 120.7628386321
Correct output: 95.2976348595  | Program output: 114.2976348595
Correct output: -3.08498271    | Program output: 101.91501729  
Correct output: -152.0436144918 | Program output: -62.0436144918
Correct output: 190.0106062966 | Program output: 123.0106062966
Correct output: -54.99029604   | Program output: -63.99029604  
Correct output: 60.5127184446  | Program output: 3.5127184446  
Correct output: 61.1705628788  | Program output: 1.1705628788  
Correct output: -43.2506843864 | Program output: -8.2506843864 
Correct output: 71.2733863439  | Program output: 36.2733863439 
Correct output: 136.9572654004 | Program output: 66.9572654004 
Correct output: -86.5838714881 | Program output: -18.5838714881
Correct output: 19.4574635021  | Program output: -21.5425364979
Correct output: 102.3014515582 | Program output: 33.3014515582 
Correct output: 82.9352078558  | Program output: 79.9352078558 
Correct output: 170.2225097733 | Program output: 105.2225097733
Correct output: 92.3146270329  | Program output: 105.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult integer_min float_div in1 integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_sub integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc integer_dec float_inc float_inc integer_div float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [120.0 2 101.0 2 63.0 13 17.0 2 31.0 3 44.0 2 16.0 12 80.0 2 27.0 3 19.0 3 105.0 11 90.0 2 67.0 2 9.0 2 57.0 2 60.0 1 35.0 2 35.0 2 70.0 2 68.0 2 41.0 12 69.0 3 3.0 2 65.0 2 13.0 3]
Total: 1399.0
Mean: 27.98
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3295.6268715000006
Median total errors in population: 1430.0
Error averages by case: (178.88034109999998 3.991 156.4668287 3.002 122.9776151 12.835 105.71486739999999 2.873 119.1047817 3.979 105.43388859999999 2.949 103.02895349999999 12.098 137.8427954 3.037 92.50188470000002 3.94 85.4648411 3.561 160.16830660000002 10.085 150.92838270000001 3.887 153.6726494 2.963 98.6091475 2.976 140.828107 10.478 143.50104129999997 12.052 98.56769750000001 3.051 121.550815 2.95 154.7034246 3.779 129.2577534 3.181 125.52220490000002 12.018 152.75649120000003 3.464 93.35052700000001 3.06 151.249989 3.873 81.36953709999999 2.092)
Error minima by case: (18.6617 1 0.004 1 10.6337 9 1.7358 1 16.3817 2 0.4779 1 0.1055 7 1.2489 1 0.0 0 0.0 0 3.2178 8 3.0436 2 25.0106 1 9.0 1 20.5281 2 19.8643 1 4.2507 1 9.7674 1 34.0427 2 12.6759 1 0.2582 8 21.2607 1 1.8944 1 9.2225 1 0.0 0)
Average genome size in population (length): 64.239
Average program size in population (points): 65.239
Average percent parens in population: 0.016
Minimum age in population: 29.08590507507324
Maximum age in population: 33.31824970245361
Average age in population: 31.1759310131073
Median age in population: 31.22554016113281
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.766
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.766
Total error diversity:				 0.057
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 26339839
--- Timings ---
Current time: 1529614916898 milliseconds
Total Time:          64.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.2 seconds, 32.9%
Fitness Testing:     33.3 seconds, 51.6%
Report:               9.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 60003.0
Test mean error for best: 30.00150
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -66.338275572 
Correct output: 12.0737210789  | Program output: 117.0737210789
Correct output: -10.4655066097 | Program output: 56.5344933903 
Correct output: 79.3049767458  | Program output: 66.3049767458 
Correct output: 109.3816555251 | Program output: 82.3816555251 
Correct output: 17.1475953645  | Program output: 65.1475953645 
Correct output: 11.1076208156  | Program output: -0.8923791844 
Correct output: 21.5390260682  | Program output: 105.5390260682
Correct output: 93.7628386321  | Program output: 124.7628386321
Correct output: 95.2976348595  | Program output: 118.2976348595
Correct output: -3.08498271    | Program output: 105.91501729  
Correct output: -152.0436144918 | Program output: -58.0436144918
Correct output: 190.0106062966 | Program output: 127.0106062966
Correct output: -54.99029604   | Program output: -59.99029604  
Correct output: 60.5127184446  | Program output: 7.5127184446  
Correct output: 61.1705628788  | Program output: 5.1705628788  
Correct output: -43.2506843864 | Program output: -4.2506843864 
Correct output: 71.2733863439  | Program output: 40.2733863439 
Correct output: 136.9572654004 | Program output: 70.9572654004 
Correct output: -86.5838714881 | Program output: -14.5838714881
Correct output: 19.4574635021  | Program output: -17.5425364979
Correct output: 102.3014515582 | Program output: 37.3014515582 
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 109.2225097733
Correct output: 92.3146270329  | Program output: 109.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction float_shove} {:instruction float_yank} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction -28} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot float_shove float_yank integer_pop integer_dup_items integer_sub integer_stackdepth -28 integer_min float_div in1 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_dup float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_sub integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc integer_dec float_inc float_inc integer_div float_inc integer_yankdup integer_dec integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [124.0 3 105.0 2 67.0 13 13.0 2 27.0 3 48.0 2 12.0 12 84.0 3 31.0 3 23.0 3 109.0 11 94.0 2 63.0 2 5.0 1 53.0 2 56.0 2 39.0 1 31.0 2 66.0 3 72.0 2 37.0 11 65.0 3 1.0 1 61.0 2 17.0 3]
Total: 1397.0
Mean: 27.94
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3537.6038590000003
Median total errors in population: 1425.0
Error averages by case: (192.3461892999999 4.05 166.49323949999993 3.209 133.9303003 12.94 112.41562599999996 3.117 125.91590109999999 4.083 116.97418839999997 3.278 111.50896510000004 12.067 148.41434450000006 3.207 103.75441430000006 4.126 97.90756429999999 3.974 170.11035039999996 10.084 164.60038310000004 4.073 160.77592899999996 3.239 107.20902780000003 3.164 148.45727970000004 10.194 151.0766714 11.976 112.37655229999997 3.334 128.7129768 3.255 161.0535808 3.969 142.71479209999995 3.343 133.36597640000002 12.006 159.57325110000008 3.968 100.3839162 3.238 158.161174 4.017 92.94626510000002 2.514)
Error minima by case: (94.0 1 0.0413 1 6.4655 9 0.2035 1 27.0 2 0.21 1 0.0085 7 1.9987 1 1.0 1 0.0 0 0.915 7 64.0 2 63.0 1 4.8779 1 7.1361 1 6.4782 1 1.4935 1 1.3754 1 57.3085 2 5.6169 1 0.0828 7 22.6527 1 1.0 1 61.0 1 0.0 0)
Average genome size in population (length): 68.77
Average program size in population (points): 69.77
Average percent parens in population: 0.015
Minimum age in population: 30.52783918380737
Maximum age in population: 34.34790372848511
Average age in population: 32.62367255353928
Median age in population: 32.65796804428101
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.763
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.763
Total error diversity:				 0.082
Error (vector) diversity:			 0.09
Behavioral diversity:				 0.091
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 28059139
--- Timings ---
Current time: 1529614920001 milliseconds
Total Time:          67.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.1 seconds, 32.8%
Fitness Testing:     34.9 seconds, 51.7%
Report:              10.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 60654.0
Test mean error for best: 30.32700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -64.338275572 
Correct output: 12.0737210789  | Program output: 119.0737210789
Correct output: -10.4655066097 | Program output: 58.5344933903 
Correct output: 79.3049767458  | Program output: 68.3049767458 
Correct output: 109.3816555251 | Program output: 84.3816555251 
Correct output: 17.1475953645  | Program output: 67.1475953645 
Correct output: 11.1076208156  | Program output: 1.1076208156  
Correct output: 21.5390260682  | Program output: 107.5390260682
Correct output: 93.7628386321  | Program output: 126.7628386321
Correct output: 95.2976348595  | Program output: 120.2976348595
Correct output: -3.08498271    | Program output: 107.91501729  
Correct output: -152.0436144918 | Program output: -56.0436144918
Correct output: 190.0106062966 | Program output: 129.0106062966
Correct output: -54.99029604   | Program output: -57.99029604  
Correct output: 60.5127184446  | Program output: 9.5127184446  
Correct output: 61.1705628788  | Program output: 7.1705628788  
Correct output: -43.2506843864 | Program output: -2.2506843864 
Correct output: 71.2733863439  | Program output: 42.2733863439 
Correct output: 136.9572654004 | Program output: 72.9572654004 
Correct output: -86.5838714881 | Program output: -12.5838714881
Correct output: 19.4574635021  | Program output: -15.5425364979
Correct output: 102.3014515582 | Program output: 39.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 111.2225097733
Correct output: 92.3146270329  | Program output: 111.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_min} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_dup_times float_mult integer_min integer_min float_div in1 integer_dec float_inc integer_dec float_inc float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [126.0 3 107.0 2 69.0 13 11.0 2 25.0 3 50.0 1 10.0 1 86.0 3 33.0 3 25.0 3 111.0 11 96.0 2 61.0 2 3.0 1 51.0 2 54.0 2 41.0 2 29.0 2 64.0 3 74.0 2 35.0 11 63.0 3 3.0 1 59.0 2 19.0 3]
Total: 1388.0
Mean: 27.76
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3531.0149715000002
Median total errors in population: 1422.0
Error averages by case: (195.23106049999998 4.128 168.3138489 3.304 135.98822570000002 12.94 110.83342969999995 3.329 124.36301950000001 4.08 119.37243819999999 3.302 107.63523119999999 11.9 150.7434086000001 3.335 107.80483459999998 4.136 102.07773890000001 4.141 172.06608149999997 9.99 167.43504409999994 4.247 159.64302339999998 3.468 105.11401570000001 3.246 143.26516440000003 9.172 146.1738003 11.264 114.20931569999996 3.288 123.30347169999997 3.217 159.35942109999993 4.19 145.0771696999999 3.293 130.2159045 11.814 153.86912220000005 4.23 98.99150910000002 3.261 156.86404609999997 3.688 96.9336462 3.168)
Error minima by case: (92.0 1 0.004 1 0.4932 9 0.6562 1 5.8761 2 0.6922 1 0.0285 1 0.6415 1 0.0 0 0.0 0 0.915 6 57.0436 2 56.0 1 2.0 1 6.1361 1 5.4782 1 7.0 1 0.2715 1 21.6995 2 8.4161 1 0.4974 8 6.7845 1 0.0 0 54.0 1 0.0 0)
Average genome size in population (length): 73.154
Average program size in population (points): 74.154
Average percent parens in population: 0.014
Minimum age in population: 31.57275009155273
Maximum age in population: 35.94702792167664
Average age in population: 34.06037670946121
Median age in population: 34.09053015708923
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.815
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.815
Total error diversity:				 0.095
Error (vector) diversity:			 0.102
Behavioral diversity:				 0.103
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 29888039
--- Timings ---
Current time: 1529614923215 milliseconds
Total Time:          70.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.1 seconds, 32.6%
Fitness Testing:     36.6 seconds, 51.8%
Report:              10.9 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 61025.0
Test mean error for best: 30.51250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -63.338275572 
Correct output: 12.0737210789  | Program output: 120.0737210789
Correct output: -10.4655066097 | Program output: 59.5344933903 
Correct output: 79.3049767458  | Program output: 69.3049767458 
Correct output: 109.3816555251 | Program output: 85.3816555251 
Correct output: 17.1475953645  | Program output: 68.1475953645 
Correct output: 11.1076208156  | Program output: 2.1076208156  
Correct output: 21.5390260682  | Program output: 108.5390260682
Correct output: 93.7628386321  | Program output: 127.7628386321
Correct output: 95.2976348595  | Program output: 121.2976348595
Correct output: -3.08498271    | Program output: 108.91501729  
Correct output: -152.0436144918 | Program output: -55.0436144918
Correct output: 190.0106062966 | Program output: 130.0106062966
Correct output: -54.99029604   | Program output: -56.99029604  
Correct output: 60.5127184446  | Program output: 10.5127184446 
Correct output: 61.1705628788  | Program output: 8.1705628788  
Correct output: -43.2506843864 | Program output: -1.2506843864 
Correct output: 71.2733863439  | Program output: 43.2733863439 
Correct output: 136.9572654004 | Program output: 73.9572654004 
Correct output: -86.5838714881 | Program output: -11.5838714881
Correct output: 19.4574635021  | Program output: -14.5425364979
Correct output: 102.3014515582 | Program output: 40.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 112.2225097733
Correct output: 92.3146270329  | Program output: 112.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction float_shove} {:instruction float_div} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction integer_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot float_shove float_div float_dup_times float_mult integer_min float_div in1 integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_sub integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 integer_min integer_dup_times)
Errors: [127.0 3 108.0 1 70.0 13 10.0 1 24.0 3 51.0 2 9.0 2 87.0 3 34.0 3 26.0 3 112.0 10 97.0 2 60.0 1 2.0 1 50.0 1 53.0 2 42.0 2 28.0 2 63.0 2 75.0 2 34.0 11 62.0 2 4.0 1 58.0 2 20.0 2]
Total: 1383.0
Mean: 27.66
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3529.0243752999995
Median total errors in population: 1413.0
Error averages by case: (198.27026140000007 4.118 174.02716969999992 3.204 141.0394205 12.902 107.2970592 3.203 120.66508559999997 4.094 123.60994350000001 3.234 104.23699059999998 11.787 154.9968277 3.548 112.49309570000001 4.137 105.69812540000004 4.136 177.0408236999999 10.394 170.56672560000004 4.067 156.2948257 3.299 101.3661625 3.057 139.51582419999994 6.048 142.3184251 8.508 117.82776339999998 3.306 121.00697699999999 3.207 155.64524480000003 4.054 148.75565059999997 3.286 127.164743 11.891 151.4889138 4.045 95.58569530000001 3.121 152.7660466 3.407 99.59357469999999 3.7)
Error minima by case: (91.0 1 0.1167 1 13.0663 9 5.4436 1 7.1165 1 0.1476 1 0.9715 1 0.1222 1 0.0 0 0.0 0 4.4891 7 61.0 2 56.0 1 0.0 0 11.1361 1 10.4782 1 1.6601 1 0.3754 1 21.0 2 2.9376 1 0.7068 8 0.0363 2 0.0 0 26.0 1 0.0 0)
Average genome size in population (length): 79.632
Average program size in population (points): 80.632
Average percent parens in population: 0.013
Minimum age in population: 32.5789966583252
Maximum age in population: 37.3843742609024
Average age in population: 35.50271934199333
Median age in population: 35.53514689207077
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.811
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.811
Total error diversity:				 0.091
Error (vector) diversity:			 0.106
Behavioral diversity:				 0.107
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 31878989
--- Timings ---
Current time: 1529614926577 milliseconds
Total Time:          74.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.1 seconds, 32.5%
Fitness Testing:     38.5 seconds, 51.9%
Report:              11.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 61025.0
Test mean error for best: 30.51250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -63.338275572 
Correct output: 12.0737210789  | Program output: 120.0737210789
Correct output: -10.4655066097 | Program output: 59.5344933903 
Correct output: 79.3049767458  | Program output: 69.3049767458 
Correct output: 109.3816555251 | Program output: 85.3816555251 
Correct output: 17.1475953645  | Program output: 68.1475953645 
Correct output: 11.1076208156  | Program output: 2.1076208156  
Correct output: 21.5390260682  | Program output: 108.5390260682
Correct output: 93.7628386321  | Program output: 127.7628386321
Correct output: 95.2976348595  | Program output: 121.2976348595
Correct output: -3.08498271    | Program output: 108.91501729  
Correct output: -152.0436144918 | Program output: -55.0436144918
Correct output: 190.0106062966 | Program output: 130.0106062966
Correct output: -54.99029604   | Program output: -56.99029604  
Correct output: 60.5127184446  | Program output: 10.5127184446 
Correct output: 61.1705628788  | Program output: 8.1705628788  
Correct output: -43.2506843864 | Program output: -1.2506843864 
Correct output: 71.2733863439  | Program output: 43.2733863439 
Correct output: 136.9572654004 | Program output: 73.9572654004 
Correct output: -86.5838714881 | Program output: -11.5838714881
Correct output: 19.4574635021  | Program output: -14.5425364979
Correct output: 102.3014515582 | Program output: 40.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 112.2225097733
Correct output: 92.3146270329  | Program output: 112.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_pop} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min})
Best program: (float_cos print_integer integer_pop float_sin integer_fromfloat float_dup_times float_mult integer_min float_div in1 integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_mod float_inc integer_div integer_dec float_inc integer_yank float_inc integer_pop float_inc integer_div integer_div float_inc integer_dup_items integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc float_inc float_inc float_inc integer_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min)
Errors: [127.0 3 108.0 1 70.0 13 10.0 1 24.0 3 51.0 2 9.0 2 87.0 3 34.0 3 26.0 3 112.0 10 97.0 2 60.0 1 2.0 1 50.0 1 53.0 2 42.0 2 28.0 2 63.0 2 75.0 2 34.0 11 62.0 2 4.0 1 58.0 2 20.0 2]
Total: 1383.0
Mean: 27.66
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 4034.6705593999995
Median total errors in population: 1399.0
Error averages by case: (222.11477380000005 4.312 196.77731609999995 3.346 164.28747810000002 12.952 123.92977709999995 3.429 136.9320839 4.34 147.67479090000003 3.472 122.75662080000002 10.508 178.78183680000004 4.08 135.5749421 4.286 128.8498439 4.315 200.2773359 10.799 195.2004719 4.127 170.4896412 3.607 121.36121420000002 3.094 156.1121552 3.881 158.81186440000002 4.663 143.4886878 3.764 138.2344338 3.498 171.17403639999995 4.286 174.31942300000006 3.59 146.7243826 11.63 168.34264370000005 4.31 113.55280570000002 2.977 168.03591679999997 3.639 123.67008330000002 4.291)
Error minima by case: (21.6617 1 1.9757 1 5.6792 7 1.0 1 15.0 2 0.71 1 0.0 0 0.1781 1 0.0 0 0.0 0 1.3896 7 0.0436 1 28.0106 1 0.0 0 0.8639 1 1.5218 1 0.7493 1 10.3385 1 24.0427 2 13.9521 1 1.2557 1 38.3947 1 0.0 0 12.2225 1 0.0 0)
Average genome size in population (length): 86.939
Average program size in population (points): 87.939
Average percent parens in population: 0.011
Minimum age in population: 34.31775116920471
Maximum age in population: 39.01038694381714
Average age in population: 36.98030094468594
Median age in population: 37.00802218914032
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.843
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.843
Total error diversity:				 0.089
Error (vector) diversity:			 0.101
Behavioral diversity:				 0.102
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 34052864
--- Timings ---
Current time: 1529614929927 milliseconds
Total Time:          77.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        25.0 seconds, 32.3%
Fitness Testing:     40.4 seconds, 52.1%
Report:              11.9 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 61025.0
Test mean error for best: 30.51250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -63.338275572 
Correct output: 12.0737210789  | Program output: 120.0737210789
Correct output: -10.4655066097 | Program output: 59.5344933903 
Correct output: 79.3049767458  | Program output: 69.3049767458 
Correct output: 109.3816555251 | Program output: 85.3816555251 
Correct output: 17.1475953645  | Program output: 68.1475953645 
Correct output: 11.1076208156  | Program output: 2.1076208156  
Correct output: 21.5390260682  | Program output: 108.5390260682
Correct output: 93.7628386321  | Program output: 127.7628386321
Correct output: 95.2976348595  | Program output: 121.2976348595
Correct output: -3.08498271    | Program output: 108.91501729  
Correct output: -152.0436144918 | Program output: -55.0436144918
Correct output: 190.0106062966 | Program output: 130.0106062966
Correct output: -54.99029604   | Program output: -56.99029604  
Correct output: 60.5127184446  | Program output: 10.5127184446 
Correct output: 61.1705628788  | Program output: 8.1705628788  
Correct output: -43.2506843864 | Program output: -1.2506843864 
Correct output: 71.2733863439  | Program output: 43.2733863439 
Correct output: 136.9572654004 | Program output: 73.9572654004 
Correct output: -86.5838714881 | Program output: -11.5838714881
Correct output: 19.4574635021  | Program output: -14.5425364979
Correct output: 102.3014515582 | Program output: 40.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 112.2225097733
Correct output: 92.3146270329  | Program output: 112.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_min} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult integer_min float_div in1 integer_dec float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_sub integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc integer_yankdup integer_dec integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min)
Errors: [127.0 3 108.0 1 70.0 13 10.0 1 24.0 3 51.0 2 9.0 2 87.0 3 34.0 3 26.0 3 112.0 10 97.0 2 60.0 1 2.0 1 50.0 1 53.0 2 42.0 2 28.0 2 63.0 2 75.0 2 34.0 11 62.0 2 4.0 1 58.0 2 20.0 2]
Total: 1383.0
Mean: 27.66
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3769.3530879000004
Median total errors in population: 1396.0
Error averages by case: (213.6453145000001 4.316 189.46318769999993 3.195 157.10384130000003 12.949 111.94423449999995 3.236 125.06436999999995 4.244 140.35113 3.302 107.92432500000001 7.552 171.40022150000004 4.133 127.85217599999996 4.121 120.97315470000008 4.227 193.34837539999998 10.753 185.72934100000006 3.859 159.26713750000008 3.456 106.11589600000005 2.774 143.73005110000003 3.547 146.33517690000002 3.808 133.11095630000005 3.937 127.81824910000005 3.32 159.64709710000008 4.264 163.7712895999999 3.477 130.69495210000002 11.256 156.8617637 4.22 103.48389720000009 2.515 156.94920030000006 3.445 116.7137494 4.148)
Error minima by case: (44.6617 2 0.7093 1 4.4655 7 0.2609 1 1.0497 1 0.1545 1 0.0 0 1.4119 1 1.0 1 0.0 0 2.085 7 22.9564 1 45.0 1 0.0 0 4.6074 1 3.9496 1 5.7685 1 3.7266 1 8.0427 2 14.7499 1 2.055 2 5.5582 1 0.0 0 35.2225 1 0.0 0)
Average genome size in population (length): 92.235
Average program size in population (points): 93.235
Average percent parens in population: 0.011
Minimum age in population: 35.31775116920471
Maximum age in population: 40.39340618252754
Average age in population: 38.36110279133916
Median age in population: 38.40461324155331
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.878
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.878
Total error diversity:				 0.089
Error (vector) diversity:			 0.099
Behavioral diversity:				 0.099
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 36359189
--- Timings ---
Current time: 1529614933350 milliseconds
Total Time:          80.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        26.0 seconds, 32.1%
Fitness Testing:     42.4 seconds, 52.4%
Report:              12.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 58774.0
Test mean error for best: 29.38700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -62.338275572 
Correct output: 12.0737210789  | Program output: 121.0737210789
Correct output: -10.4655066097 | Program output: 60.5344933903 
Correct output: 79.3049767458  | Program output: 70.3049767458 
Correct output: 109.3816555251 | Program output: 86.3816555251 
Correct output: 17.1475953645  | Program output: 69.1475953645 
Correct output: 11.1076208156  | Program output: 3.1076208156  
Correct output: 21.5390260682  | Program output: 109.5390260682
Correct output: 93.7628386321  | Program output: 128.7628386321
Correct output: 95.2976348595  | Program output: 122.2976348595
Correct output: -3.08498271    | Program output: 109.91501729  
Correct output: -152.0436144918 | Program output: -54.0436144918
Correct output: 190.0106062966 | Program output: 131.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 11.5127184446 
Correct output: 61.1705628788  | Program output: 9.1705628788  
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 44.2733863439 
Correct output: 136.9572654004 | Program output: 74.9572654004 
Correct output: -86.5838714881 | Program output: -10.5838714881
Correct output: 19.4574635021  | Program output: -13.5425364979
Correct output: 102.3014515582 | Program output: 41.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 113.2225097733
Correct output: 92.3146270329  | Program output: 113.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [128.0 3 109.0 1 71.0 12 9.0 1 23.0 3 52.0 2 8.0 2 88.0 3 35.0 3 27.0 3 113.0 11 98.0 2 59.0 2 1.0 1 49.0 2 52.0 2 8.0 2 27.0 2 62.0 3 76.0 2 33.0 11 61.0 3 5.0 1 57.0 2 21.0 3]
Total: 1354.0
Mean: 27.08
Genome size: 103
Size: 104
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3482.324153500001
Median total errors in population: 1388.0
Error averages by case: (205.40069490000002 4.291 180.9310031 2.997 145.8094032 12.925 98.38897989999998 3.054 111.91830739999999 4.277 129.03630459999997 3.227 93.50049570000002 5.273 162.6542641 4.084 119.15676939999997 4.141 112.45765779999999 4.208 184.57207599999998 10.681 177.70445279999996 3.663 148.2560048 3.268 95.58826489999997 2.544 128.296471 3.377 131.07625829999998 3.603 123.5145614 3.976 110.94477950000001 3.203 146.54467889999998 4.063 155.19325179999996 3.458 119.69960700000001 11.22 141.3644279 4.054 92.20570770000002 2.581 145.48040090000003 3.322 107.1513305 3.988)
Error minima by case: (19.6617 1 0.1152 1 1.5345 8 0.0 0 0.3398 2 0.4879 1 0.0 0 0.6326 1 1.0 1 0.0 0 0.915 8 2.0436 1 26.0106 1 0.0 0 2.3 1 2.9578 1 2.7493 1 4.2734 1 0.0427 2 19.4161 1 0.6971 2 6.7404 1 0.0 0 10.2225 1 0.6658 1)
Average genome size in population (length): 95.135
Average program size in population (points): 96.135
Average percent parens in population: 0.010
Minimum age in population: 36.85880041122437
Maximum age in population: 41.90152463316917
Average age in population: 39.69590903127193
Median age in population: 39.72892217338085
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.899
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.899
Total error diversity:				 0.103
Error (vector) diversity:			 0.113
Behavioral diversity:				 0.114
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 38737714
--- Timings ---
Current time: 1529614936997 milliseconds
Total Time:          84.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        27.0 seconds, 32.0%
Fitness Testing:     44.4 seconds, 52.6%
Report:              12.9 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 57196.0
Test mean error for best: 28.59800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -65.338275572 
Correct output: 12.0737210789  | Program output: 118.0737210789
Correct output: -10.4655066097 | Program output: 57.5344933903 
Correct output: 79.3049767458  | Program output: 67.3049767458 
Correct output: 109.3816555251 | Program output: 83.3816555251 
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 0.1076208156  
Correct output: 21.5390260682  | Program output: 106.5390260682
Correct output: 93.7628386321  | Program output: 125.7628386321
Correct output: 95.2976348595  | Program output: 119.2976348595
Correct output: -3.08498271    | Program output: 106.91501729  
Correct output: -152.0436144918 | Program output: -57.0436144918
Correct output: 190.0106062966 | Program output: 128.0106062966
Correct output: -54.99029604   | Program output: -58.99029604  
Correct output: 60.5127184446  | Program output: 8.5127184446  
Correct output: 61.1705628788  | Program output: 6.1705628788  
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 41.2733863439 
Correct output: 136.9572654004 | Program output: 71.9572654004 
Correct output: -86.5838714881 | Program output: -13.5838714881
Correct output: 19.4574635021  | Program output: -16.5425364979
Correct output: 102.3014515582 | Program output: 38.3014515582 
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 110.2225097733
Correct output: 92.3146270329  | Program output: 110.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc float_inc integer_div integer_dec integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [125.0 3 106.0 2 68.0 13 12.0 2 26.0 3 17.0 2 11.0 2 85.0 3 32.0 3 24.0 3 110.0 11 95.0 2 62.0 2 4.0 1 52.0 2 55.0 1 8.0 2 30.0 1 65.0 3 73.0 2 36.0 11 64.0 3 2.0 1 60.0 1 18.0 3]
Total: 1322.0
Mean: 26.44
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3601.709515399999
Median total errors in population: 1388.0
Error averages by case: (209.47017430000008 4.349 185.3945951 2.881 151.88617820000005 12.912 104.22678329999997 2.915 117.57476390000002 4.343 135.46601559999996 3.301 97.98476819999998 4.651 167.27920929999996 4.124 124.44079869999999 4.194 117.60273760000004 4.249 189.30864989999998 10.535 181.96638770000004 3.688 152.5179072 3.165 98.75591900000002 2.533 133.7318661 3.237 136.23596410000005 3.581 127.45668 4.25 114.85854400000001 3.311 152.27690209999997 3.957 159.84830680000002 3.512 122.9766421 11.192 144.79869309999998 3.965 98.51150730000005 2.626 149.89625320000005 3.445 112.45726860000002 3.87)
Error minima by case: (26.6617 2 0.1218 1 2.5345 9 0.0 0 11.0 2 0.29 1 0.0 0 0.1954 1 0.0 0 2.0 1 2.915 7 4.9564 1 33.0106 1 0.0 0 18.3949 1 19.0527 1 3.7493 1 7.7266 1 12.0427 2 14.4194 1 0.5575 7 15.6527 1 0.0 0 17.2225 1 0.0 0)
Average genome size in population (length): 96.037
Average program size in population (points): 97.037
Average percent parens in population: 0.010
Minimum age in population: 38.28799617290497
Maximum age in population: 43.17456956207752
Average age in population: 41.11731687183678
Median age in population: 41.16153163090348
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.874
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.874
Total error diversity:				 0.099
Error (vector) diversity:			 0.11
Behavioral diversity:				 0.11
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 41138864
--- Timings ---
Current time: 1529614940536 milliseconds
Total Time:          88.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        28.0 seconds, 31.8%
Fitness Testing:     46.5 seconds, 52.8%
Report:              13.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 57749.0
Test mean error for best: 28.87450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: 
-66.338275572
Correct output: 12.0737210789  | Program output: 
117.0737210789
Correct output: -10.4655066097 | Program output: 
56.5344933903
Correct output: 79.3049767458  | Program output: 
66.3049767458
Correct output: 109.3816555251 | Program output: 
82.3816555251
Correct output: 17.1475953645  | Program output: 
34.1475953645
Correct output: 11.1076208156  | Program output: 
-0.8923791844
Correct output: 21.5390260682  | Program output: 
105.5390260682
Correct output: 93.7628386321  | Program output: 
124.7628386321
Correct output: 95.2976348595  | Program output: 
118.2976348595
Correct output: -3.08498271    | Program output: 
105.91501729 
Correct output: -152.0436144918 | Program output: 
-58.0436144918
Correct output: 190.0106062966 | Program output: 
127.0106062966
Correct output: -54.99029604   | Program output: 
-59.99029604 
Correct output: 60.5127184446  | Program output: 
7.5127184446 
Correct output: 61.1705628788  | Program output: 
5.1705628788 
Correct output: -43.2506843864 | Program output: 
-35.2506843864
Correct output: 71.2733863439  | Program output: 
40.2733863439
Correct output: 136.9572654004 | Program output: 
70.9572654004
Correct output: -86.5838714881 | Program output: 
-14.5838714881
Correct output: 19.4574635021  | Program output: 
-17.5425364979
Correct output: 102.3014515582 | Program output: 
37.3014515582
Correct output: 82.9352078558  | Program output: 
83.9352078558
Correct output: 170.2225097733 | Program output: 
109.2225097733
Correct output: 92.3146270329  | Program output: 
109.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction print_newline} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div print_newline integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc float_inc integer_div integer_dec integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [124.0 4 105.0 3 67.0 13 13.0 3 27.0 3 17.0 3 12.0 13 84.0 3 31.0 4 23.0 4 109.0 11 94.0 3 63.0 3 5.0 2 53.0 2 56.0 2 8.0 3 31.0 3 66.0 3 72.0 3 37.0 12 65.0 3 1.0 2 61.0 3 17.0 4]
Total: 1353.0
Mean: 27.06
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3863.1407455
Median total errors in population: 1388.0
Error averages by case: (220.15863550000003 4.447 195.67738830000002 2.96 164.1990958 12.954 114.54189429999998 2.977 127.6208525 4.444 146.79705989999994 3.407 107.6646427 4.776 177.6236525999999 4.232 133.77519680000003 4.276 127.02954340000005 4.331 199.3254073 10.513 193.1003008 3.806 161.8816727 3.23 109.94811530000007 2.625 144.0661191 3.343 145.75674070000005 3.834 139.17755369999998 4.392 125.81494440000003 3.479 161.86029350000004 4.008 170.9962699 3.597 133.86327030000004 11.273 155.1226913 4.018 108.93901970000006 2.747 159.07013250000003 3.622 121.92425250000002 3.915)
Error minima by case: (22.6059 1 0.0594 1 0.3255 9 0.0 0 5.992 2 0.2652 1 0.0 0 0.9957 1 0.1297 1 0.0 0 3.9766 7 7.9564 1 36.0106 1 0.0 0 3.2292 1 2.5714 1 2.728 1 7.3507 1 8.2538 2 14.2516 1 0.5276 8 1.0882 1 0.0 0 20.2225 1 0.0 0)
Average genome size in population (length): 96.402
Average program size in population (points): 97.402
Average percent parens in population: 0.010
Minimum age in population: 39.61381006240845
Maximum age in population: 44.59469171613455
Average age in population: 42.47646257366985
Median age in population: 42.50078594125807
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.881
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.881
Total error diversity:				 0.106
Error (vector) diversity:			 0.119
Behavioral diversity:				 0.12
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 43549264
--- Timings ---
Current time: 1529614944094 milliseconds
Total Time:          91.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        29.0 seconds, 31.6%
Fitness Testing:     48.5 seconds, 53.0%
Report:              14.0 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 55163.0
Test mean error for best: 27.58150
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: 
-66.338275572
Correct output: 12.0737210789  | Program output: 
117.0737210789
Correct output: -10.4655066097 | Program output: 
25.5344933903
Correct output: 79.3049767458  | Program output: 
66.3049767458
Correct output: 109.3816555251 | Program output: 
82.3816555251
Correct output: 17.1475953645  | Program output: 
34.1475953645
Correct output: 11.1076208156  | Program output: 
-0.8923791844
Correct output: 21.5390260682  | Program output: 
105.5390260682
Correct output: 93.7628386321  | Program output: 
124.7628386321
Correct output: 95.2976348595  | Program output: 
118.2976348595
Correct output: -3.08498271    | Program output: 
105.91501729 
Correct output: -152.0436144918 | Program output: 
-58.0436144918
Correct output: 190.0106062966 | Program output: 
127.0106062966
Correct output: -54.99029604   | Program output: 
-59.99029604 
Correct output: 60.5127184446  | Program output: 
7.5127184446 
Correct output: 61.1705628788  | Program output: 
5.1705628788 
Correct output: -43.2506843864 | Program output: 
-35.2506843864
Correct output: 71.2733863439  | Program output: 
40.2733863439
Correct output: 136.9572654004 | Program output: 
70.9572654004
Correct output: -86.5838714881 | Program output: 
-14.5838714881
Correct output: 19.4574635021  | Program output: 
-17.5425364979
Correct output: 102.3014515582 | Program output: 
37.3014515582
Correct output: 82.9352078558  | Program output: 
83.9352078558
Correct output: 170.2225097733 | Program output: 
109.2225097733
Correct output: 92.3146270329  | Program output: 
109.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction print_newline} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dup integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div print_newline integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc float_inc integer_div integer_dec integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [124.0 4 105.0 3 36.0 13 13.0 3 27.0 3 17.0 3 12.0 13 84.0 3 31.0 4 23.0 4 109.0 11 94.0 3 63.0 3 5.0 2 53.0 2 56.0 2 8.0 3 31.0 3 66.0 3 72.0 3 37.0 12 65.0 3 1.0 2 61.0 3 17.0 4]
Total: 1322.0
Mean: 26.44
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3663.252804300001
Median total errors in population: 1388.0
Error averages by case: (212.5234374 4.331 187.18867949999995 2.791 153.8818139 12.951 106.3752737 2.81 119.5391274 4.303 137.53537339999994 3.286 103.20022920000001 4.71 168.95233840000003 4.107 125.0709545 4.152 119.1642393 4.21 190.8478232 10.527 185.03217150000003 3.687 153.99534049999997 3.089 102.61621829999999 2.542 136.2855248 3.223 139.02948619999998 3.693 131.56833369999998 4.34 116.96127910000001 3.34 154.2962508 3.883 163.3756520999999 3.528 127.6269029 11.26 147.31272170000005 3.871 100.897081 2.595 151.38323690000007 3.479 114.08031489999998 3.805)
Error minima by case: (23.6617 2 0.1221 1 1.7692 8 0.0 0 4.0666 2 0.8455 1 0.7894 1 2.331 1 0.0 0 0.0 0 1.085 7 1.9564 1 30.0106 1 0.0 0 5.3956 1 2.8643 1 0.7493 1 0.3754 1 15.0427 2 1.4161 1 0.0957 7 3.0136 1 0.0 0 14.2225 1 0.0 0)
Average genome size in population (length): 96.356
Average program size in population (points): 97.356
Average percent parens in population: 0.010
Minimum age in population: 41.27138777449727
Maximum age in population: 45.81147674284875
Average age in population: 43.84785005285777
Median age in population: 43.90627141110599
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.899
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.899
Total error diversity:				 0.109
Error (vector) diversity:			 0.121
Behavioral diversity:				 0.122
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 45958464
--- Timings ---
Current time: 1529614947689 milliseconds
Total Time:          95.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        30.0 seconds, 31.5%
Fitness Testing:     50.6 seconds, 53.2%
Report:              14.5 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 55068.0
Test mean error for best: 27.53400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -62.338275572 
Correct output: 12.0737210789  | Program output: 121.0737210789
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 70.3049767458 
Correct output: 109.3816555251 | Program output: 86.3816555251 
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 3.1076208156  
Correct output: 21.5390260682  | Program output: 109.5390260682
Correct output: 93.7628386321  | Program output: 128.7628386321
Correct output: 95.2976348595  | Program output: 122.2976348595
Correct output: -3.08498271    | Program output: 109.91501729  
Correct output: -152.0436144918 | Program output: -54.0436144918
Correct output: 190.0106062966 | Program output: 131.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 11.5127184446 
Correct output: 61.1705628788  | Program output: 9.1705628788  
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 44.2733863439 
Correct output: 136.9572654004 | Program output: 74.9572654004 
Correct output: -86.5838714881 | Program output: -10.5838714881
Correct output: 19.4574635021  | Program output: -13.5425364979
Correct output: 102.3014515582 | Program output: 41.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 113.2225097733
Correct output: 92.3146270329  | Program output: 113.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dup integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [128.0 3 109.0 1 36.0 13 9.0 1 23.0 3 17.0 2 8.0 2 88.0 3 35.0 3 27.0 3 113.0 11 98.0 2 59.0 2 1.0 1 49.0 2 52.0 2 8.0 2 27.0 2 62.0 3 76.0 2 33.0 11 61.0 3 5.0 1 57.0 2 21.0 3]
Total: 1285.0
Mean: 25.7
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3832.2061826
Median total errors in population: 1388.0
Error averages by case: (218.13186650000006 4.501 192.8562724 3.033 161.08795559999996 13.008 114.72787439999996 3.042 128.01546019999998 4.518 144.19684739999997 3.468 107.9743579 4.934 175.28956659999997 4.269 133.84067349999998 4.372 127.01783619999999 4.429 196.47637909999997 10.628 190.88186900000002 3.898 162.59795380000006 3.361 108.6112492 2.77 142.65848300000002 3.678 145.4842733 4.203 131.2242304 4.567 124.45082260000001 3.572 162.1015341 4.099 168.36231699999996 3.758 131.4744165 11.39 153.2762492 4.1 109.52105330000008 2.876 159.6031957000001 3.694 122.1374457 4.038)
Error minima by case: (18.6617 1 0.1918 1 1.4655 9 0.0 0 11.0 2 0.0673 1 0.0 0 0.501 1 0.0 0 1.0 1 1.542 7 0.0436 1 25.0106 1 0.0 0 1.9635 1 2.6214 1 1.2507 1 6.8342 1 23.5842 2 18.4161 1 0.4425 7 6.1815 1 0.0 0 9.2225 1 1.0 1)
Average genome size in population (length): 97.807
Average program size in population (points): 98.807
Average percent parens in population: 0.010
Minimum age in population: 42.33552595973015
Maximum age in population: 47.06904765870422
Average age in population: 45.19485329320002
Median age in population: 45.24585432885215
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.896
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.896
Total error diversity:				 0.161
Error (vector) diversity:			 0.189
Behavioral diversity:				 0.189
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 48403914
--- Timings ---
Current time: 1529614951266 milliseconds
Total Time:          98.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        30.9 seconds, 31.3%
Fitness Testing:     52.7 seconds, 53.4%
Report:              15.0 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 50350.0
Test mean error for best: 25.17500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: 
-65.338275572
Correct output: 12.0737210789  | Program output: 
118.0737210789
Correct output: -10.4655066097 | Program output: 
25.5344933903
Correct output: 79.3049767458  | Program output: 
67.3049767458
Correct output: 109.3816555251 | Program output: 
83.3816555251
Correct output: 17.1475953645  | Program output: 
34.1475953645
Correct output: 11.1076208156  | Program output: 
0.1076208156 
Correct output: 21.5390260682  | Program output: 
74.5390260682
Correct output: 93.7628386321  | Program output: 
125.7628386321
Correct output: 95.2976348595  | Program output: 
119.2976348595
Correct output: -3.08498271    | Program output: 
106.91501729 
Correct output: -152.0436144918 | Program output: 
-89.0436144918
Correct output: 190.0106062966 | Program output: 
128.0106062966
Correct output: -54.99029604   | Program output: 
-58.99029604 
Correct output: 60.5127184446  | Program output: 
8.5127184446 
Correct output: 61.1705628788  | Program output: 
6.1705628788 
Correct output: -43.2506843864 | Program output: 
-35.2506843864
Correct output: 71.2733863439  | Program output: 
41.2733863439
Correct output: 136.9572654004 | Program output: 
71.9572654004
Correct output: -86.5838714881 | Program output: 
-45.5838714881
Correct output: 19.4574635021  | Program output: 
-16.5425364979
Correct output: 102.3014515582 | Program output: 
38.3014515582
Correct output: 82.9352078558  | Program output: 
84.9352078558
Correct output: 170.2225097733 | Program output: 
110.2225097733
Correct output: 92.3146270329  | Program output: 
110.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction print_newline} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dup integer_add float_inc integer_dup integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div print_newline integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc float_inc integer_div integer_dec integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [125.0 4 106.0 3 36.0 13 12.0 3 26.0 3 17.0 3 11.0 2 53.0 3 32.0 4 24.0 4 110.0 11 63.0 4 62.0 3 4.0 2 52.0 2 55.0 2 8.0 3 30.0 2 65.0 3 41.0 3 36.0 12 64.0 3 2.0 2 60.0 2 18.0 4]
Total: 1212.0
Mean: 24.24
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 4142.028820499999
Median total errors in population: 1385.0
Error averages by case: (231.27912440000003 4.713 206.0593097 3.25 172.3508976999999 12.975 128.69899009999995 3.22 141.65805180000004 4.583 156.78190289999998 3.666 119.10863689999998 5.565 188.68056169999997 4.369 146.4656331 4.507 139.21577220000006 4.474 209.8029228 10.68 204.3124629 4.173 175.5028953 3.571 123.6581892 2.952 152.49973540000002 4.22 155.65098889999993 4.59 136.69477980000002 4.555 133.17333430000002 3.683 175.36829380000003 4.293 181.60007099999987 3.98 145.99156390000005 11.446 161.65632940000003 4.252 123.49297620000003 3.028 172.81586560000002 3.845 134.72853149999995 4.191)
Error minima by case: (23.6617 1 0.1379 1 2.4655 9 0.0 0 10.0 2 0.2025 1 0.0 0 0.3293 1 0.0 0 0.0 0 3.8327 6 1.9564 1 30.0106 1 0.0 0 1.2732 1 0.6153 1 0.7493 1 4.3754 1 15.6363 2 23.4161 1 0.4575 9 11.6985 1 0.0 0 14.2225 1 0.0 0)
Average genome size in population (length): 100.516
Average program size in population (points): 101.516
Average percent parens in population: 0.010
Minimum age in population: 43.33552595973015
Maximum age in population: 48.41424011811614
Average age in population: 46.57948093044385
Median age in population: 46.63097206735983
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.9
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.9
Total error diversity:				 0.204
Error (vector) diversity:			 0.252
Behavioral diversity:				 0.254
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 50917114
--- Timings ---
Current time: 1529614954966 milliseconds
Total Time:         102.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        31.9 seconds, 31.1%
Fitness Testing:     54.9 seconds, 53.6%
Report:              15.5 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 52286.0
Test mean error for best: 26.14300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -59.338275572 
Correct output: 12.0737210789  | Program output: 124.0737210789
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 73.3049767458 
Correct output: 109.3816555251 | Program output: 89.3816555251 
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 6.1076208156  
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 131.7628386321
Correct output: 95.2976348595  | Program output: 125.2976348595
Correct output: -3.08498271    | Program output: 112.91501729  
Correct output: -152.0436144918 | Program output: -51.0436144918
Correct output: 190.0106062966 | Program output: 134.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 14.5127184446 
Correct output: 61.1705628788  | Program output: 12.1705628788 
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 47.2733863439 
Correct output: 136.9572654004 | Program output: 77.9572654004 
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: -10.5425364979
Correct output: 102.3014515582 | Program output: 44.3014515582 
Correct output: 82.9352078558  | Program output: 90.9352078558 
Correct output: 170.2225097733 | Program output: 116.2225097733
Correct output: 92.3146270329  | Program output: 116.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer integer_fromfloat integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dup integer_add integer_mod integer_div integer_inc integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc float_inc integer_div integer_dec float_inc float_inc float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [131.0 2 112.0 1 36.0 13 6.0 1 20.0 2 17.0 2 5.0 2 53.0 2 38.0 2 30.0 2 116.0 11 101.0 2 56.0 2 2.0 1 46.0 2 49.0 2 8.0 2 24.0 2 59.0 3 41.0 2 30.0 11 58.0 3 8.0 2 54.0 2 24.0 3]
Total: 1203.0
Mean: 24.06
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3566.2145054000007
Median total errors in population: 1367.0
Error averages by case: (208.87658470000002 4.588 185.12717580000006 3.223 148.7114833 12.986 104.71893389999991 3.112 117.92348719999994 4.308 129.75489609999997 3.596 96.90927689999997 6.183 166.06949219999998 4.229 125.01232449999995 4.444 115.02921350000004 4.295 188.67670720000012 10.851 181.2349213 3.999 152.35430169999998 3.431 99.61083329999997 2.765 133.2382935 4.265 135.66123569999996 4.626 106.5825036 3.998 113.1318073 3.476 152.44376269999998 4.034 158.14321639999997 3.809 122.94777659999998 11.594 142.2155004 4.055 99.23560290000005 2.839 149.60257410000003 3.6 110.5536006 4.143)
Error minima by case: (11.3383 1 0.1218 1 5.5345 8 0.0 0 6.0 1 0.7348 1 0.0 0 0.0481 1 0.0 0 0.0 0 3.085 8 0.9564 1 29.0106 1 0.0 0 1.7923 1 9.2057 1 0.2507 1 0.8971 1 13.9573 2 1.4161 1 0.5848 2 5.5616 1 0.0 0 13.2225 1 0.0 0)
Average genome size in population (length): 103.644
Average program size in population (points): 104.644
Average percent parens in population: 0.010
Minimum age in population: 45.39127532765269
Maximum age in population: 49.73647345718928
Average age in population: 47.90283356758067
Median age in population: 47.95152413332835
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.877
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.877
Total error diversity:				 0.262
Error (vector) diversity:			 0.345
Behavioral diversity:				 0.348
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 53508514
--- Timings ---
Current time: 1529614958803 milliseconds
Total Time:         106.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.8 seconds, 30.9%
Fitness Testing:     57.2 seconds, 53.8%
Report:              16.1 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 43119.0
Test mean error for best: 21.55950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 69.3049767458 
Correct output: 109.3816555251 | Program output: 85.3816555251 
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 2.1076208156  
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 127.7628386321
Correct output: 95.2976348595  | Program output: 121.2976348595
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 130.0106062966
Correct output: -54.99029604   | Program output: -56.99029604  
Correct output: 60.5127184446  | Program output: 10.5127184446 
Correct output: 61.1705628788  | Program output: 8.1705628788  
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 43.2733863439 
Correct output: 136.9572654004 | Program output: 73.9572654004 
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: -14.5425364979
Correct output: 102.3014515582 | Program output: 40.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 112.2225097733
Correct output: 92.3146270329  | Program output: 112.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dup integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items -84 float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [93.0 2 74.0 2 36.0 13 10.0 1 24.0 3 17.0 2 9.0 2 53.0 2 34.0 3 26.0 3 78.0 10 63.0 3 60.0 1 2.0 1 50.0 1 53.0 2 8.0 2 28.0 2 63.0 2 41.0 2 34.0 11 62.0 2 4.0 1 58.0 2 20.0 2]
Total: 1077.0
Mean: 21.54
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3499.706377900001
Median total errors in population: 1349.0
Error averages by case: (205.4424278000001 4.733 178.87483950000006 3.431 138.62991930000004 13.088 103.28194779999994 3.46 116.79397989999997 4.39 116.26206419999991 3.726 98.40101939999998 7.086 161.44791719999998 4.221 119.96351969999998 4.516 112.99581820000002 4.565 183.38405720000011 10.97 177.8047792 4.188 152.01005250000003 3.743 97.44008220000003 3.033 132.1481449 4.572 135.94492420000003 4.771 104.6628573 4.005 113.78856199999997 3.73 151.38220249999992 4.181 152.97158539999995 3.972 120.56189339999995 11.803 144.19180360000001 4.196 96.79466460000005 3.063 149.1152911000001 3.835 107.68502479999998 4.449)
Error minima by case: (23.6617 2 0.0057 1 6.4655 8 1.0 1 7.9286 2 0.8455 1 0.0449 1 2.3398 1 0.0 0 0.0 0 0.085 7 1.9564 1 30.0106 1 0.0 0 3.41 1 0.2584 1 0.2507 1 3.2734 1 19.647 2 18.6441 1 0.1525 3 0.3015 1 0.0 0 14.2225 1 0.0 1)
Average genome size in population (length): 103.895
Average program size in population (points): 104.895
Average percent parens in population: 0.010
Minimum age in population: 47.17428620532155
Maximum age in population: 51.21521287458017
Average age in population: 49.30067401329451
Median age in population: 49.32183555414667
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.863
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.863
Total error diversity:				 0.3
Error (vector) diversity:			 0.397
Behavioral diversity:				 0.398
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 56106239
--- Timings ---
Current time: 1529614962573 milliseconds
Total Time:         110.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.8 seconds, 30.7%
Fitness Testing:     59.5 seconds, 54.0%
Report:              16.7 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 43119.0
Test mean error for best: 21.55950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 69.3049767458 
Correct output: 109.3816555251 | Program output: 85.3816555251 
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 2.1076208156  
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 127.7628386321
Correct output: 95.2976348595  | Program output: 121.2976348595
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 130.0106062966
Correct output: -54.99029604   | Program output: -56.99029604  
Correct output: 60.5127184446  | Program output: 10.5127184446 
Correct output: 61.1705628788  | Program output: 8.1705628788  
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 43.2733863439 
Correct output: 136.9572654004 | Program output: 73.9572654004 
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: -14.5425364979
Correct output: 102.3014515582 | Program output: 40.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 112.2225097733
Correct output: 92.3146270329  | Program output: 112.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dup integer_add integer_mod float_inc float_inc integer_dup integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_div integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items -84 float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [93.0 2 74.0 2 36.0 13 10.0 1 24.0 3 17.0 2 9.0 2 53.0 2 34.0 3 26.0 3 78.0 10 63.0 3 60.0 1 2.0 1 50.0 1 53.0 2 8.0 2 28.0 2 63.0 2 41.0 2 34.0 11 62.0 2 4.0 1 58.0 2 20.0 2]
Total: 1077.0
Mean: 21.54
Genome size: 109
Size: 110
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3678.5894673999996
Median total errors in population: 1322.0
Error averages by case: (214.34012300000012 4.893 187.7847781 3.589 140.19750169999992 13.036 111.55222419999993 3.569 124.82681669999998 4.493 119.62381079999994 3.797 105.83910719999999 6.843 166.82109210000002 4.297 127.2405688 4.598 120.71885430000002 4.632 191.39809680000002 10.912 186.12470800000008 4.45 159.50301229999994 3.893 108.40107920000004 3.218 138.00492020000002 4.774 141.32358299999999 4.945 111.55934420000001 4.296 117.2602336 3.849 159.03901669999996 4.325 159.78385459999996 4.104 130.8881786000001 11.737 147.03466699999998 4.374 105.87314060000007 3.209 156.59163120000002 3.951 116.50412449999999 4.571)
Error minima by case: (22.6617 2 0.1918 1 4.055 2 0.0 0 11.907 2 0.1551 1 0.0 0 0.3718 1 0.0 0 0.0 0 1.085 7 0.9564 1 29.0106 1 0.0 0 0.1437 1 0.8015 1 0.2507 1 1.3572 1 19.0427 2 7.5839 1 0.3604 7 0.2772 1 0.0 0 13.2225 1 1.0 1)
Average genome size in population (length): 104.394
Average program size in population (points): 105.394
Average percent parens in population: 0.010
Minimum age in population: 48.28135002590716
Maximum age in population: 52.33934686670545
Average age in population: 50.60463772542879
Median age in population: 50.6537322300137
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.884
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.884
Total error diversity:				 0.325
Error (vector) diversity:			 0.417
Behavioral diversity:				 0.418
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 58716639
--- Timings ---
Current time: 1529614966360 milliseconds
Total Time:         113.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.8 seconds, 30.5%
Fitness Testing:     61.8 seconds, 54.3%
Report:              17.2 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 41868.0
Test mean error for best: 20.93400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 73.3049767458 
Correct output: 109.3816555251 | Program output: 89.3816555251 
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 6.1076208156  
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 131.7628386321
Correct output: 95.2976348595  | Program output: 125.2976348595
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 134.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 14.5127184446 
Correct output: 61.1705628788  | Program output: 12.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 47.2733863439 
Correct output: 136.9572654004 | Program output: 77.9572654004 
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: -10.5425364979
Correct output: 102.3014515582 | Program output: 44.3014515582 
Correct output: 82.9352078558  | Program output: 90.9352078558 
Correct output: 170.2225097733 | Program output: 116.2225097733
Correct output: 92.3146270329  | Program output: 116.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_add} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_dup} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dup integer_add integer_mod integer_add float_inc integer_dup integer_add integer_mod integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_div integer_dec float_inc float_inc float_yank print_float float_min integer_pop tagged_432 float_dup 20.811225588459223 float_min integer_dup_times)
Errors: [91.0 2 72.0 2 34.0 13 6.0 1 20.0 2 15.0 2 5.0 2 51.0 2 38.0 2 30.0 2 76.0 10 61.0 3 56.0 2 2.0 1 46.0 2 49.0 2 6.0 2 24.0 2 59.0 3 39.0 2 30.0 11 58.0 3 8.0 2 54.0 2 24.0 3]
Total: 1034.0
Mean: 20.68
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3945.4677567000017
Median total errors in population: 1290.0
Error averages by case: (227.79800640000013 4.769 203.6321374 3.599 155.938946 13.142 120.1710593999999 3.527 133.40896419999996 4.572 141.51484159999998 3.885 111.02620129999998 6.581 179.2546727 4.171 137.46718639999992 4.576 130.88889580000006 4.684 207.24067150000005 10.905 198.4410650000001 4.562 167.95145409999998 3.941 115.86874480000007 3.158 144.2747495000001 4.606 147.17715989999996 4.708 132.00412179999995 4.328 124.98731670000004 3.864 167.27274499999996 4.404 170.2784073 4.142 138.1678995 11.707 154.16567860000004 4.391 115.12205080000011 3.258 165.05146470000008 3.993 126.32531629999997 4.565)
Error minima by case: (7.6617 1 0.2438 1 0.5345 8 0.0 0 0.5965 1 2.8524 1 0.0 0 0.9213 1 0.0 0 0.0 1 3.1392 8 2.0436 1 26.0106 1 0.0 0 10.7801 1 8.2584 1 2.7493 1 13.0 1 18.0427 2 1.5839 1 0.1525 2 6.4837 1 0.0 0 10.2225 1 0.0 0)
Average genome size in population (length): 105.641
Average program size in population (points): 106.641
Average percent parens in population: 0.009
Minimum age in population: 49.62266195309348
Maximum age in population: 53.97732905924204
Average age in population: 52.1255744293147
Median age in population: 52.16980074561434
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.384
Error (vector) diversity:			 0.502
Behavioral diversity:				 0.503
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 61358014
--- Timings ---
Current time: 1529614970198 milliseconds
Total Time:         117.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.7 seconds, 30.4%
Fitness Testing:     64.1 seconds, 54.5%
Report:              17.7 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 42206.0
Test mean error for best: 21.10300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 95.3816555251 
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 137.7628386321
Correct output: 95.2976348595  | Program output: 131.2976348595
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 140.0106062966
Correct output: -54.99029604   | Program output: -46.99029604  
Correct output: 60.5127184446  | Program output: 20.5127184446 
Correct output: 61.1705628788  | Program output: 18.1705628788 
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 53.2733863439 
Correct output: 136.9572654004 | Program output: 83.9572654004 
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: -4.5425364979 
Correct output: 102.3014515582 | Program output: 50.3014515582 
Correct output: 82.9352078558  | Program output: 96.9352078558 
Correct output: 170.2225097733 | Program output: 122.2225097733
Correct output: 92.3146270329  | Program output: 122.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dup integer_add integer_mod integer_div integer_dup integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items -84 float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [93.0 2 74.0 2 36.0 13 0.0 0 14.0 3 17.0 2 1.0 1 53.0 2 44.0 2 36.0 3 78.0 10 63.0 3 50.0 1 8.0 2 40.0 1 43.0 2 8.0 2 18.0 2 53.0 2 41.0 2 24.0 11 52.0 2 14.0 2 48.0 2 30.0 2]
Total: 1014.0
Mean: 20.28
Genome size: 128
Size: 129
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4071.3509452000008
Median total errors in population: 1215.0
Error averages by case: (236.23435569999998 4.655 211.1491087 3.771 172.83424609999997 13.107 119.71977169999992 3.529 133.06745539999994 4.639 157.9719719999999 3.98 114.53742449999996 6.74 189.06705839999992 4.108 139.08729389999996 4.549 130.3778483000001 4.637 214.61831780000003 10.678 207.4650446 5.006 168.15063059999997 3.944 116.78420970000002 3.312 146.5812449 4.714 150.64489150000003 4.879 152.03394029999995 4.425 128.5098552 3.883 166.78193720000002 4.483 183.15355760000006 4.246 137.02106030000002 11.619 158.20194880000005 4.495 115.07972410000008 3.331 164.9878103000001 4.04 125.94723759999995 4.573)
Error minima by case: (6.6617 1 0.6616 1 7.4655 9 0.0 0 1.1069 1 2.5647 1 0.0 0 0.461 1 0.0 0 0.0 0 0.085 6 1.9564 1 30.0106 1 0.0 0 0.1273 1 0.7851 1 0.7493 1 8.2734 1 3.9573 2 3.4161 1 0.0317 1 5.3257 1 0.0 0 14.2225 1 0.0 0)
Average genome size in population (length): 106.07
Average program size in population (points): 107.07
Average percent parens in population: 0.009
Minimum age in population: 50.95563123078318
Maximum age in population: 55.42597494850634
Average age in population: 53.6947708361665
Median age in population: 53.76842645688885
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.917
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.917
Total error diversity:				 0.414
Error (vector) diversity:			 0.525
Behavioral diversity:				 0.526
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 64010389
--- Timings ---
Current time: 1529614974109 milliseconds
Total Time:         121.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.7 seconds, 30.2%
Fitness Testing:     66.4 seconds, 54.6%
Report:              18.3 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 42552.0
Test mean error for best: 21.27600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 87.3049767458 
Correct output: 109.3816555251 | Program output: 103.3816555251
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 20.1076208156 
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 145.7628386321
Correct output: 95.2976348595  | Program output: 139.2976348595
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 148.0106062966
Correct output: -54.99029604   | Program output: -38.99029604  
Correct output: 60.5127184446  | Program output: 28.5127184446 
Correct output: 61.1705628788  | Program output: 26.1705628788 
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 61.2733863439 
Correct output: 136.9572654004 | Program output: 91.9572654004 
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: 3.4574635021  
Correct output: 102.3014515582 | Program output: 58.3014515582 
Correct output: 82.9352078558  | Program output: 104.9352078558
Correct output: 170.2225097733 | Program output: 130.2225097733
Correct output: 92.3146270329  | Program output: 130.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction integer_mult} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div print_integer float_pop integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec float_inc integer_div integer_dec integer_add float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dup float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc print_float float_min integer_pop tagged_432 float_min 20.811225588459223 integer_mult integer_dup_times)
Errors: [93.0 2 74.0 2 36.0 13 8.0 2 6.0 1 17.0 2 9.0 2 53.0 2 52.0 3 44.0 3 78.0 10 63.0 3 42.0 2 16.0 2 32.0 2 35.0 2 8.0 2 10.0 1 45.0 3 41.0 2 16.0 2 44.0 3 22.0 3 40.0 1 38.0 3]
Total: 995.0
Mean: 19.9
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3583.7485774999996
Median total errors in population: 1122.5
Error averages by case: (204.49716419999996 3.906 183.9518756 3.372 149.43762459999994 12.983 106.1840181999999 3.113 119.59930759999999 4.373 132.09469739999994 3.517 97.554432 5.448 165.51028660000006 3.619 126.03444199999993 4.147 120.35341930000006 4.336 187.4026866 10.356 177.27089200000003 4.538 154.80272849999992 3.577 102.03228700000004 2.842 129.9363092 4.196 133.33135539999995 4.296 120.63513659999998 4.079 110.36257860000002 3.51 153.0458967 4.213 155.40483049999997 3.702 123.37657230000003 11.457 139.99537750000002 4.228 102.82537570000008 3.0 151.8816264000001 3.63 115.54665699999995 4.243)
Error minima by case: (5.6617 1 2.4683 1 5.5345 10 0.0 0 3.3817 1 0.4353 1 0.0 0 1.599 1 0.0 0 1.0 1 0.915 7 4.9564 1 12.0106 1 0.0 0 1.5841 1 0.9263 1 3.7493 1 9.1765 1 4.9573 2 5.4161 1 0.4152 2 13.9286 1 0.0 0 3.7775 1 0.0 0)
Average genome size in population (length): 108.983
Average program size in population (points): 109.983
Average percent parens in population: 0.009
Minimum age in population: 52.52778854209464
Maximum age in population: 57.05113686964614
Average age in population: 55.14835144172946
Median age in population: 55.20367413570784
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.915
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.318
Error (vector) diversity:			 0.387
Behavioral diversity:				 0.388
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 66735655
--- Timings ---
Current time: 1529614978068 milliseconds
Total Time:         125.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.7 seconds, 30.0%
Fitness Testing:     68.8 seconds, 54.8%
Report:              18.9 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 42552.0
Test mean error for best: 21.27600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 87.3049767458 
Correct output: 109.3816555251 | Program output: 103.3816555251
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 20.1076208156 
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 145.7628386321
Correct output: 95.2976348595  | Program output: 139.2976348595
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 148.0106062966
Correct output: -54.99029604   | Program output: -38.99029604  
Correct output: 60.5127184446  | Program output: 28.5127184446 
Correct output: 61.1705628788  | Program output: 26.1705628788 
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 61.2733863439 
Correct output: 136.9572654004 | Program output: 91.9572654004 
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: 3.4574635021  
Correct output: 102.3014515582 | Program output: 58.3014515582 
Correct output: 82.9352078558  | Program output: 104.9352078558
Correct output: 170.2225097733 | Program output: 130.2225097733
Correct output: 92.3146270329  | Program output: 130.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_inc} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_add} {:instruction 20.811225588459223} {:instruction integer_mult} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div print_integer float_pop integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec float_inc integer_div integer_dec integer_add float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dup float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_inc float_inc float_yank float_inc integer_yankdup float_dup_items integer_yank float_inc print_float float_min integer_pop tagged_432 float_add 20.811225588459223 integer_mult integer_dup_times)
Errors: [93.0 2 74.0 2 36.0 13 8.0 2 6.0 1 17.0 2 9.0 2 53.0 2 52.0 3 44.0 3 78.0 10 63.0 3 42.0 2 16.0 2 32.0 2 35.0 2 8.0 2 10.0 1 45.0 3 41.0 2 16.0 2 44.0 3 22.0 3 40.0 1 38.0 3]
Total: 995.0
Mean: 19.9
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3912.3090927000003
Median total errors in population: 1090.0
Error averages by case: (206.4879995000001 3.933 184.94033249999995 3.463 151.04730360000005 13.048 124.82983029999987 3.152 137.75834669999998 4.48 135.25363539999998 3.553 117.82343219999998 4.818 166.7949368 3.673 147.0775899 4.137 140.47703600000006 4.426 188.3461362 10.395 179.5701796000001 4.561 172.07065899999998 3.737 121.27688140000006 3.028 148.92215769999999 4.336 152.21167130000003 4.422 127.30230210000003 4.524 129.10191700000001 3.652 171.50455300000002 4.38 157.91978279999995 3.792 141.4278925 11.29 158.09454420000006 4.382 124.28104730000008 3.27 169.2240123 3.822 135.98091340000002 4.31)
Error minima by case: (5.3383 1 0.0737 1 2.4655 8 0.0 0 5.0 1 1.6041 1 0.0 0 0.2622 1 0.0 0 0.0 0 4.5513 8 2.9564 1 3.8299 1 0.0 0 6.1701 1 3.1701 1 1.7493 1 9.0 1 6.8299 2 0.4161 1 0.7033 1 2.4214 1 0.0 0 1.8299 1 0.0 0)
Average genome size in population (length): 112.35
Average program size in population (points): 113.35
Average percent parens in population: 0.009
Minimum age in population: 54.28366059735708
Maximum age in population: 58.33193465107615
Average age in population: 56.55709314826286
Median age in population: 56.63260528123828
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.923
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.923
Total error diversity:				 0.296
Error (vector) diversity:			 0.343
Behavioral diversity:				 0.344
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 69545012
--- Timings ---
Current time: 1529614982188 milliseconds
Total Time:         129.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.6 seconds, 29.8%
Fitness Testing:     71.2 seconds, 55.0%
Report:              19.5 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 41037.0
Test mean error for best: 20.51850
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 85.3049767458 
Correct output: 109.3816555251 | Program output: 101.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 18.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 143.7628386321
Correct output: 95.2976348595  | Program output: 137.2976348595
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 146.0106062966
Correct output: -54.99029604   | Program output: -40.99029604  
Correct output: 60.5127184446  | Program output: 26.5127184446 
Correct output: 61.1705628788  | Program output: 24.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 59.2733863439 
Correct output: 136.9572654004 | Program output: 89.9572654004 
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 1.4574635021  
Correct output: 102.3014515582 | Program output: 56.3014515582 
Correct output: 82.9352078558  | Program output: 102.9352078558
Correct output: 170.2225097733 | Program output: 128.2225097733
Correct output: 92.3146270329  | Program output: 128.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dup integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [91.0 2 72.0 2 34.0 13 6.0 2 8.0 1 15.0 2 7.0 1 51.0 2 50.0 2 42.0 3 76.0 10 61.0 3 44.0 2 14.0 2 34.0 2 37.0 2 6.0 2 12.0 2 47.0 3 39.0 2 18.0 1 46.0 3 20.0 2 42.0 2 36.0 2]
Total: 978.0
Mean: 19.56
Genome size: 125
Size: 126
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3951.7756640999996
Median total errors in population: 1064.0
Error averages by case: (207.31637220000007 4.041 184.44883739999997 3.52 148.90330799999998 13.206 126.3120845999999 3.25 138.69536029999995 4.558 134.45300939999998 3.603 119.0160803 4.549 165.5399616 3.679 152.22541149999992 4.099 146.26449010000005 4.548 187.78601319999996 10.473 180.21112410000003 4.665 173.09825090000004 3.927 126.53535380000008 3.349 150.97195890000006 4.594 154.2636239 4.653 125.90199960000002 4.976 131.56482320000003 3.76 171.90373580000002 4.589 156.86832610000002 3.941 141.7282118 11.173 160.4376308 4.577 129.94308450000017 3.662 170.04096190000007 3.905 141.70265019999997 4.346)
Error minima by case: (28.6617 1 0.6764 1 1.5345 9 0.0 0 0.0 0 0.0016 1 0.0 0 0.2911 1 0.0 0 0.0 0 0.915 8 6.9564 1 35.0106 1 0.0 0 5.8872 1 6.5451 1 2.0177 1 0.5858 1 7.0427 2 2.5839 1 0.2014 1 1.6985 1 0.0 0 19.2225 1 0.0 0)
Average genome size in population (length): 116.906
Average program size in population (points): 117.906
Average percent parens in population: 0.009
Minimum age in population: 55.28366059735708
Maximum age in population: 59.92031151085212
Average age in population: 57.97484645874839
Median age in population: 58.00192654559214
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.924
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.924
Total error diversity:				 0.31
Error (vector) diversity:			 0.364
Behavioral diversity:				 0.365
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 72468137
--- Timings ---
Current time: 1529614986441 milliseconds
Total Time:         133.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.7 seconds, 29.6%
Fitness Testing:     73.8 seconds, 55.2%
Report:              20.2 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 41152.0
Test mean error for best: 20.57600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 88.3049767458 
Correct output: 109.3816555251 | Program output: 104.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 21.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 146.7628386321
Correct output: 95.2976348595  | Program output: 140.2976348595
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 149.0106062966
Correct output: -54.99029604   | Program output: -37.99029604  
Correct output: 60.5127184446  | Program output: 29.5127184446 
Correct output: 61.1705628788  | Program output: 27.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 62.2733863439 
Correct output: 136.9572654004 | Program output: 92.9572654004 
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 4.4574635021  
Correct output: 102.3014515582 | Program output: 59.3014515582 
Correct output: 82.9352078558  | Program output: 105.9352078558
Correct output: 170.2225097733 | Program output: 131.2225097733
Correct output: 92.3146270329  | Program output: 131.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_dup integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [91.0 2 72.0 2 34.0 13 9.0 2 5.0 1 15.0 2 10.0 1 51.0 2 53.0 3 45.0 3 76.0 10 61.0 3 41.0 2 17.0 2 31.0 2 34.0 2 6.0 2 9.0 2 44.0 3 39.0 2 15.0 2 43.0 3 23.0 3 39.0 2 39.0 3]
Total: 976.0
Mean: 19.52
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4253.902808499999
Median total errors in population: 1041.0
Error averages by case: (221.97181980000005 4.169 201.1170314 3.666 166.85411329999994 13.182 135.79784889999988 3.428 146.03229179999988 4.452 152.71464199999997 3.739 128.0512967 4.27 183.45275019999997 3.818 165.68315869999986 4.204 159.54258550000006 4.631 204.41407229999993 10.434 195.74859890000005 4.856 179.62572310000004 3.981 139.8547139000001 3.633 159.43429579999994 4.559 161.89688719999998 4.673 141.35252130000006 5.352 140.1858268 3.805 178.869894 4.67 173.41307479999995 4.335 148.10753180000003 10.167 168.39452339999997 4.637 142.90732850000015 3.981 176.79748550000014 3.945 154.9017929000001 4.194)
Error minima by case: (4.3383 2 0.0907 1 1.5345 8 0.0 0 0.0 0 0.1184 1 0.0 0 0.7953 1 0.0 0 0.0 0 1.085 8 1.9564 1 2.0106 1 0.0 0 3.8823 1 3.2245 1 4.2507 1 0.7266 1 6.0427 2 4.5839 1 1.8559 1 0.3015 1 0.0 0 13.7775 1 1.0 1)
Average genome size in population (length): 122.816
Average program size in population (points): 123.816
Average percent parens in population: 0.008
Minimum age in population: 57.30438126371155
Maximum age in population: 61.41056060957635
Average age in population: 59.37961563821534
Median age in population: 59.41427991880391
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.94
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.94
Total error diversity:				 0.283
Error (vector) diversity:			 0.332
Behavioral diversity:				 0.333
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 75539287
--- Timings ---
Current time: 1529614990756 milliseconds
Total Time:         138.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.6 seconds, 29.4%
Fitness Testing:     76.5 seconds, 55.4%
Report:              20.9 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 42847.0
Test mean error for best: 21.42350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 93.3049767458 
Correct output: 109.3816555251 | Program output: 109.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 26.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 151.7628386321
Correct output: 95.2976348595  | Program output: 145.2976348595
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 154.0106062966
Correct output: -54.99029604   | Program output: -32.99029604  
Correct output: 60.5127184446  | Program output: 34.5127184446 
Correct output: 61.1705628788  | Program output: 32.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 67.2733863439 
Correct output: 136.9572654004 | Program output: 97.9572654004 
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 9.4574635021  
Correct output: 102.3014515582 | Program output: 64.3014515582 
Correct output: 82.9352078558  | Program output: 110.9352078558
Correct output: 170.2225097733 | Program output: 136.2225097733
Correct output: 92.3146270329  | Program output: 136.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_shove} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_add} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_shove -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_dup integer_div integer_dec float_inc float_inc integer_dup integer_add integer_mod integer_add float_inc integer_dup integer_add integer_mod integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_div integer_div float_inc integer_div float_inc integer_dec float_inc integer_swap integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_div integer_dec float_inc float_inc integer_div integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [91.0 2 72.0 2 34.0 13 14.0 2 0.0 0 15.0 2 15.0 2 51.0 2 58.0 3 50.0 2 76.0 10 61.0 3 36.0 2 22.0 2 26.0 2 29.0 2 6.0 2 4.0 2 39.0 3 39.0 2 10.0 1 38.0 3 28.0 3 34.0 2 44.0 3]
Total: 964.0
Mean: 19.28
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4290.4628494
Median total errors in population: 1022.0
Error averages by case: (223.24567399999998 4.18 201.8304657 3.773 166.48552989999993 13.255 139.1564571999999 3.757 145.92942839999995 4.179 152.52513379999996 3.812 132.85663369999995 4.319 184.1444128 3.857 170.2724296999999 4.448 165.21065880000003 4.694 205.1048411 10.511 196.88028039999998 4.892 180.39217959999993 4.082 146.94009320000006 3.826 156.40138379999996 4.652 159.7121986 4.804 144.33592690000003 5.478 137.24802800000003 3.9 178.37257609999997 4.726 174.0949194 4.877 150.08208359999998 8.537 165.4910775 4.718 147.9957759000001 4.334 177.22165790000017 4.067 160.57400340000004 4.281)
Error minima by case: (16.6617 1 3.9263 1 4.4655 10 0.0 0 0.0 0 0.3615 1 0.0 0 3.8384 1 0.0 0 0.0 0 0.915 8 5.0436 1 23.0106 1 0.0 0 3.5741 1 2.9162 1 0.7493 1 0.0 0 6.0427 2 1.4161 1 0.0814 1 0.0396 1 1.0 1 7.2225 1 0.4868 1)
Average genome size in population (length): 128.403
Average program size in population (points): 129.403
Average percent parens in population: 0.008
Minimum age in population: 58.43031210656045
Maximum age in population: 62.72841649564498
Average age in population: 60.7240601646502
Median age in population: 60.78747952480262
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.287
Error (vector) diversity:			 0.341
Behavioral diversity:				 0.342
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 78750012
--- Timings ---
Current time: 1529614995311 milliseconds
Total Time:         142.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.7 seconds, 29.2%
Fitness Testing:     79.2 seconds, 55.6%
Report:              21.6 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 40054.0
Test mean error for best: 20.02700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 95.3816555251 
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 131.2976348595
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 140.0106062966
Correct output: -54.99029604   | Program output: -46.99029604  
Correct output: 60.5127184446  | Program output: 20.5127184446 
Correct output: 61.1705628788  | Program output: 18.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 53.2733863439 
Correct output: 136.9572654004 | Program output: 83.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: -4.5425364979 
Correct output: 102.3014515582 | Program output: 50.3014515582 
Correct output: 82.9352078558  | Program output: 96.9352078558 
Correct output: 170.2225097733 | Program output: 122.2225097733
Correct output: 92.3146270329  | Program output: 122.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction integer_dup} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc integer_yankdup float_dup_items -84 integer_dup tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [92.0 2 73.0 2 35.0 13 0.0 0 14.0 3 16.0 2 1.0 1 52.0 2 1.0 1 36.0 3 77.0 9 62.0 3 50.0 1 8.0 2 40.0 1 43.0 2 7.0 2 18.0 2 53.0 2 40.0 1 24.0 11 52.0 2 14.0 2 48.0 2 30.0 2]
Total: 959.0
Mean: 19.18
Genome size: 119
Size: 120
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4042.3954804999994
Median total errors in population: 1004.0
Error averages by case: (214.25153240000006 4.139 189.32505120000005 3.717 156.58346790000002 13.103 132.34342899999984 3.815 136.64916529999996 3.895 140.35783269999993 3.752 122.75629709999997 4.175 171.59131219999995 3.786 163.5103053 4.491 159.3642204 4.671 192.7744123 10.363 187.2899568000001 4.881 171.1135614 4.058 141.33041940000007 3.831 143.92092380000005 4.433 147.1011219 4.505 130.99298220000003 5.361 128.45820409999996 3.846 168.4729106 4.709 162.1247207999999 4.923 135.9583568 6.744 156.31715549999996 4.717 142.39772449999998 4.426 167.90382650000006 4.072 154.77959039999996 4.314)
Error minima by case: (18.6617 1 0.6039 1 1.4655 7 0.0 0 0.0 0 0.8371 1 0.0 0 0.7524 1 0.0 0 0.0 0 2.085 7 3.0436 1 26.0 1 1.0 1 4.5344 1 0.0878 1 4.2507 1 0.0 0 0.9573 1 18.4161 1 0.0 0 2.6985 1 0.0 0 24.0 1 0.0 0)
Average genome size in population (length): 132.078
Average program size in population (points): 133.078
Average percent parens in population: 0.008
Minimum age in population: 59.6097322966707
Maximum age in population: 64.09975475079113
Average age in population: 62.09387137554708
Median age in population: 62.1117182122598
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.945
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.945
Total error diversity:				 0.285
Error (vector) diversity:			 0.335
Behavioral diversity:				 0.336
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 82052237
--- Timings ---
Current time: 1529614999667 milliseconds
Total Time:         147.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.7 seconds, 29.0%
Fitness Testing:     82.0 seconds, 55.7%
Report:              22.3 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 40294.0
Test mean error for best: 20.14700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 82.3049767458 
Correct output: 109.3816555251 | Program output: 98.3816555251 
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 15.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 143.0106062966
Correct output: -54.99029604   | Program output: -43.99029604  
Correct output: 60.5127184446  | Program output: 23.5127184446 
Correct output: 61.1705628788  | Program output: 21.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 56.2733863439 
Correct output: 136.9572654004 | Program output: 86.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: -1.5425364979 
Correct output: 102.3014515582 | Program output: 53.3014515582 
Correct output: 82.9352078558  | Program output: 99.9352078558 
Correct output: 170.2225097733 | Program output: 125.2225097733
Correct output: 92.3146270329  | Program output: 125.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_cos} {:instruction float_cos} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_rot} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_cos print_integer float_pop integer_pop float_cos float_cos integer_pop float_sin integer_rot integer_inc float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 float_dup_times integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_mult float_inc float_inc float_inc integer_dup integer_add integer_mod float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc integer_div float_rot integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_432 float_min 20.811225588459223 integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [92.0 2 73.0 2 35.0 13 3.0 2 11.0 3 16.0 2 4.0 1 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 47.0 2 11.0 2 37.0 2 40.0 1 7.0 2 15.0 2 50.0 2 40.0 1 21.0 11 49.0 3 17.0 2 45.0 2 33.0 2]
Total: 923.0
Mean: 18.46
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4123.578606799999
Median total errors in population: 996.0
Error averages by case: (219.13100429999997 4.305 195.37531310000006 3.876 162.08127269999997 13.111 135.2320945999998 4.002 137.55065099999993 4.013 147.66904849999992 3.894 128.99227039999994 4.492 177.9807856 3.949 163.40895229999987 4.569 161.5697885999999 4.802 198.58804390000012 10.392 192.4635552000001 5.004 171.7870208000001 4.247 142.20199890000012 3.98 147.54382430000004 4.661 150.3885088 4.732 138.55151420000004 5.681 127.39308150000008 4.008 168.9350107 4.818 166.87014320000003 5.334 136.1746279 6.32 155.46839060000005 4.886 144.53837180000025 4.618 168.2829596000002 4.251 156.91237430000004 4.543)
Error minima by case: (34.6617 1 0.0737 1 0.4655 9 0.0 0 0.0 0 3.1476 1 0.0 0 0.1549 1 0.0 0 0.0 0 2.085 8 12.9564 2 21.0 1 0.0 0 1.7597 1 4.1708 1 3.2507 1 0.0 0 2.0427 1 9.4161 1 0.0 0 2.6755 1 0.0 0 19.0 1 0.4538 1)
Average genome size in population (length): 134.677
Average program size in population (points): 135.677
Average percent parens in population: 0.007
Minimum age in population: 61.0678540032859
Maximum age in population: 65.52844623779617
Average age in population: 63.47589358407429
Median age in population: 63.50535212135622
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.307
Error (vector) diversity:			 0.361
Behavioral diversity:				 0.362
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 85419662
--- Timings ---
Current time: 1529615004251 milliseconds
Total Time:         151.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.7 seconds, 28.8%
Fitness Testing:     84.9 seconds, 56.0%
Report:              22.9 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 39675.0
Test mean error for best: 19.83750
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 91.3049767458 
Correct output: 109.3816555251 | Program output: 107.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 24.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 143.2976348595
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 152.0106062966
Correct output: -54.99029604   | Program output: -34.99029604  
Correct output: 60.5127184446  | Program output: 32.5127184446 
Correct output: 61.1705628788  | Program output: 30.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 65.2733863439 
Correct output: 136.9572654004 | Program output: 95.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 7.4574635021  
Correct output: 102.3014515582 | Program output: 62.3014515582 
Correct output: 82.9352078558  | Program output: 108.9352078558
Correct output: 170.2225097733 | Program output: 134.2225097733
Correct output: 92.3146270329  | Program output: 134.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_rot} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec integer_rot -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_dup integer_add integer_mod float_inc integer_dec float_inc float_inc float_inc integer_dup integer_add integer_mod integer_div integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc float_inc float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot integer_yankdup float_dup_items -84 float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [92.0 2 73.0 2 35.0 13 12.0 2 2.0 1 16.0 2 13.0 2 52.0 2 1.0 1 48.0 3 77.0 9 62.0 3 38.0 2 20.0 1 28.0 2 31.0 2 7.0 2 6.0 2 41.0 3 40.0 1 12.0 2 40.0 2 26.0 3 36.0 2 42.0 3]
Total: 919.0
Mean: 18.38
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4520.777152799999
Median total errors in population: 991.0
Error averages by case: (229.94157940000005 4.42 208.48577959999997 3.99 175.6927956 13.231 153.50534649999983 4.158 155.7395907999999 4.273 161.52075369999991 4.008 146.6964632 4.721 191.3503246999999 4.059 178.19519669999994 4.491 179.15854139999993 4.972 211.72056890000002 10.409 203.6521152 5.144 188.90866530000014 4.417 158.10323720000005 4.114 163.7305489000001 4.919 166.6784803 4.981 151.7145985 5.591 146.18611280000013 4.15 186.25213120000006 4.947 180.68476829999994 5.189 154.28499739999995 6.839 173.70968249999999 4.999 162.74996520000016 4.807 185.49668350000007 4.415 174.6562260000001 4.718)
Error minima by case: (37.6617 1 1.4087 1 8.5345 7 0.0 0 0.0 0 0.1476 1 0.0 0 0.1418 1 0.0 0 1.0 1 2.085 8 15.9564 2 23.0 1 1.0 1 0.7952 1 0.1043 1 2.4174 1 0.0 0 1.0427 1 9.5839 1 0.0 0 4.9903 1 1.0 1 21.0 1 0.0 0)
Average genome size in population (length): 135.729
Average program size in population (points): 136.729
Average percent parens in population: 0.007
Minimum age in population: 62.91701677498259
Maximum age in population: 66.96378963029281
Average age in population: 64.9051761791189
Median age in population: 64.91655873773536
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.307
Error (vector) diversity:			 0.372
Behavioral diversity:				 0.373
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 88813287
--- Timings ---
Current time: 1529615008868 milliseconds
Total Time:         156.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.7 seconds, 28.6%
Fitness Testing:     87.8 seconds, 56.2%
Report:              23.6 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 40040.0
Test mean error for best: 20.02000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 88.3049767458 
Correct output: 109.3816555251 | Program output: 104.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 21.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 149.0106062966
Correct output: -54.99029604   | Program output: -37.99029604  
Correct output: 60.5127184446  | Program output: 29.5127184446 
Correct output: 61.1705628788  | Program output: 27.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 62.2733863439 
Correct output: 136.9572654004 | Program output: 92.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 4.4574635021  
Correct output: 102.3014515582 | Program output: 59.3014515582 
Correct output: 82.9352078558  | Program output: 105.9352078558
Correct output: 170.2225097733 | Program output: 131.2225097733
Correct output: 92.3146270329  | Program output: 131.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_rot} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432})
Best program: (float_cos integer_fromfloat float_dup_times float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc integer_div integer_dec float_inc float_inc integer_div integer_add integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc integer_div float_rot integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_432)
Errors: [92.0 2 73.0 2 35.0 13 9.0 2 5.0 1 16.0 2 10.0 1 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 41.0 2 17.0 2 31.0 2 34.0 2 7.0 2 9.0 2 44.0 3 40.0 1 15.0 2 43.0 3 23.0 3 39.0 2 39.0 3]
Total: 892.0
Mean: 17.84
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5025.586557499999
Median total errors in population: 978.5
Error averages by case: (251.70018730000004 4.613 226.46664590000003 4.195 194.13535819999993 13.27 174.07781349999982 4.369 177.62216079999993 4.565 180.81804159999996 4.208 167.79436149999992 4.873 209.00930479999997 4.273 188.44588659999994 4.197 199.5557861999999 5.101 229.8454488 10.356 225.96793710000009 5.378 211.2347841 4.634 183.54201070000008 4.322 185.38510129999997 5.085 189.73832180000008 5.179 171.4937050000001 5.649 165.23373730000006 4.33 207.35568439999997 5.143 199.12698759999992 5.034 173.39094679999997 7.337 191.50827390000003 5.212 183.46838290000014 4.908 207.4172757 4.655 195.49641370000003 4.87)
Error minima by case: (30.6617 2 0.9399 1 5.4655 9 0.0 0 0.0 0 0.1476 1 0.0 0 0.461 1 0.0 0 1.0 1 0.6228 7 8.9564 1 1.0138 1 0.0 0 2.5127 1 3.1706 1 6.0 1 0.0 0 1.9862 1 30.4161 1 0.0 0 0.9862 2 0.0 0 3.0138 1 1.0 1)
Average genome size in population (length): 134.795
Average program size in population (points): 135.795
Average percent parens in population: 0.007
Minimum age in population: 63.98775702553758
Maximum age in population: 68.35918813998765
Average age in population: 66.38971354743173
Median age in population: 66.45563944480463
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.322
Error (vector) diversity:			 0.38
Behavioral diversity:				 0.381
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 92183962
--- Timings ---
Current time: 1529615013226 milliseconds
Total Time:         160.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.7 seconds, 28.5%
Fitness Testing:     90.5 seconds, 56.4%
Report:              24.3 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 40123.0
Test mean error for best: 20.06150
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 92.3049767458 
Correct output: 109.3816555251 | Program output: 108.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 25.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 153.0106062966
Correct output: -54.99029604   | Program output: -33.99029604  
Correct output: 60.5127184446  | Program output: 33.5127184446 
Correct output: 61.1705628788  | Program output: 31.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 66.2733863439 
Correct output: 136.9572654004 | Program output: 96.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 8.4574635021  
Correct output: 102.3014515582 | Program output: 63.3014515582 
Correct output: 82.9352078558  | Program output: 109.9352078558
Correct output: 170.2225097733 | Program output: 135.2225097733
Correct output: 92.3146270329  | Program output: 135.3146270329
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_rot} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_stackdepth integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc integer_div float_rot integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_432)
Errors: [92.0 2 73.0 2 35.0 13 13.0 2 1.0 1 16.0 2 14.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 37.0 2 21.0 2 27.0 2 30.0 1 7.0 2 5.0 2 40.0 2 40.0 1 11.0 2 39.0 3 27.0 3 35.0 2 43.0 3]
Total: 875.0
Mean: 17.5
Genome size: 129
Size: 130
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4207.612267299999
Median total errors in population: 965.0
Error averages by case: (218.07127509999998 3.978 194.3606503 3.596 162.8539206 13.269 140.36628939999989 3.873 144.7909061 4.059 146.04227389999997 3.612 136.0005076999999 4.416 177.18424419999997 3.658 140.20336549999993 2.997 164.5349063 4.665 197.85443740000002 10.21 191.8769939 4.77 178.72550999999999 4.117 150.29244950000003 3.871 157.72213589999998 4.658 160.09880930000003 4.802 138.75707649999998 4.693 138.4302618 3.9 176.86062829999997 4.725 169.19823960000002 4.233 147.1529499 7.184 167.39988630000002 4.735 149.1867718000001 4.451 175.9111283000001 4.165 160.7766497 4.323)
Error minima by case: (25.6617 1 0.4513 1 1.789 9 0.0 0 0.0 0 5.761 1 0.0 0 2.4722 1 0.0 0 1.0 1 2.085 8 3.9564 1 25.0 1 0.0 0 1.4224 1 0.5683 1 2.7493 1 0.0 0 5.0427 1 24.7651 1 0.0 0 10.9332 1 0.0 0 23.0 1 1.0 1)
Average genome size in population (length): 131.966
Average program size in population (points): 132.966
Average percent parens in population: 0.008
Minimum age in population: 65.69011214282
Maximum age in population: 70.12213635756771
Average age in population: 67.86569327657298
Median age in population: 67.94518799019062
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.942
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.942
Total error diversity:				 0.302
Error (vector) diversity:			 0.364
Behavioral diversity:				 0.365
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 95484087
--- Timings ---
Current time: 1529615017718 milliseconds
Total Time:         165.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.7 seconds, 28.3%
Fitness Testing:     93.3 seconds, 56.5%
Report:              24.9 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 37663.0
Test mean error for best: 18.83150
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 90.3049767458 
Correct output: 109.3816555251 | Program output: 106.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 23.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 151.0106062966
Correct output: -54.99029604   | Program output: -35.99029604  
Correct output: 60.5127184446  | Program output: 31.5127184446 
Correct output: 61.1705628788  | Program output: 29.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 64.2733863439 
Correct output: 136.9572654004 | Program output: 94.9572654004 
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 6.4574635021  
Correct output: 102.3014515582 | Program output: 61.3014515582 
Correct output: 82.9352078558  | Program output: 107.9352078558
Correct output: 170.2225097733 | Program output: 133.2225097733
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc 30 float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot integer_yankdup float_dup_items -84 float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [92.0 2 73.0 2 35.0 13 11.0 2 3.0 1 16.0 2 12.0 2 52.0 2 1.0 1 9.0 2 77.0 9 62.0 3 39.0 2 19.0 2 29.0 2 32.0 2 7.0 2 7.0 2 42.0 3 40.0 1 13.0 2 41.0 3 25.0 3 37.0 2 15.0 2]
Total: 858.0
Mean: 17.16
Genome size: 122
Size: 123
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4564.2516368999995
Median total errors in population: 952.0
Error averages by case: (231.09044160000005 4.317 209.94019340000003 3.975 177.36989029999998 13.425 157.47209019999985 4.227 159.08934109999996 4.211 162.57915489999996 3.962 151.56442780000006 4.851 192.58046119999995 4.03 152.10842419999997 3.18 181.45376879999995 4.943 213.34768959999997 10.316 205.0341192000001 5.1 192.1233866 4.429 164.58143070000008 4.168 167.95734050000004 4.994 171.0689667000001 5.154 154.13079250000004 5.023 149.31442680000006 4.242 190.1290942 5.007 182.77422169999997 4.609 158.7439281000001 6.437 176.43083040000005 5.002 166.53181360000013 4.887 189.0261867000001 4.478 178.09621610000008 4.746)
Error minima by case: (21.6617 1 0.2428 1 2.4655 8 0.0 0 0.0 0 0.6616 1 0.0 0 1.461 1 0.0 0 0.0 0 0.3026 7 0.0436 1 23.0 1 0.0 0 0.4061 1 1.6184 1 1.2507 1 0.0 0 1.9573 1 21.4161 1 0.0 0 1.7449 1 1.0 1 12.2225 1 1.0 1)
Average genome size in population (length): 134.066
Average program size in population (points): 135.066
Average percent parens in population: 0.007
Minimum age in population: 66.69011214282
Maximum age in population: 71.23114052830744
Average age in population: 69.24590229358728
Median age in population: 69.29988407859167
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.31
Error (vector) diversity:			 0.392
Behavioral diversity:				 0.393
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 98836712
--- Timings ---
Current time: 1529615022144 milliseconds
Total Time:         169.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.7 seconds, 28.1%
Fitness Testing:     96.2 seconds, 56.7%
Report:              25.6 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 37452.0
Test mean error for best: 18.72600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 97.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 30.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 158.0106062966
Correct output: -54.99029604   | Program output: -28.99029604  
Correct output: 60.5127184446  | Program output: 38.5127184446 
Correct output: 61.1705628788  | Program output: 36.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 101.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 68.3014515582 
Correct output: 82.9352078558  | Program output: 114.9352078558
Correct output: 170.2225097733 | Program output: 140.2225097733
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_add float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc 30 float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot integer_yankdup float_dup_items -84 float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [92.0 2 73.0 2 35.0 13 18.0 2 4.0 2 16.0 2 19.0 2 52.0 2 1.0 1 9.0 2 77.0 9 62.0 3 32.0 2 26.0 2 22.0 2 25.0 2 7.0 2 0.0 0 35.0 2 40.0 1 6.0 1 34.0 3 32.0 3 30.0 1 15.0 2]
Total: 827.0
Mean: 16.54
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4248.263453499999
Median total errors in population: 943.0
Error averages by case: (220.51528370000005 4.314 197.70540340000002 3.878 164.16004949999996 13.154 146.39702619999986 4.065 145.973895 4.021 150.34145149999995 3.907 139.95790679999996 4.871 180.59232720000006 3.955 142.28892489999993 3.283 170.4055409 4.605 200.83451939999992 10.089 194.08339550000002 5.044 177.95690840000003 4.253 153.3142362000001 4.032 154.37942749999996 4.823 157.30084310000004 4.936 141.20138679999997 5.208 135.3715989000001 3.959 174.9276348 4.711 170.54936459999996 4.777 142.58084929999995 5.616 162.75714080000006 4.863 156.3660443000001 4.727 174.73355830000014 4.277 167.5557365 4.645)
Error minima by case: (37.3383 1 0.6901 1 1.4655 9 0.0 0 0.0 0 0.787 1 0.0 0 2.1055 1 0.0 0 0.0 0 1.085 8 0.9564 1 13.0 1 0.0 0 0.5127 1 0.0931 1 5.7493 1 0.0 0 1.0427 1 2.5839 1 0.0 0 0.3874 1 0.0 0 11.0 1 0.0 0)
Average genome size in population (length): 138.088
Average program size in population (points): 139.088
Average percent parens in population: 0.007
Minimum age in population: 68.7343582043244
Maximum age in population: 72.72285697130032
Average age in population: 70.64036299133345
Median age in population: 70.6614990959672
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.961
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.961
Total error diversity:				 0.335
Error (vector) diversity:			 0.42
Behavioral diversity:				 0.421
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 102290287
--- Timings ---
Current time: 1529615026654 milliseconds
Total Time:         174.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.7 seconds, 28.0%
Fitness Testing:     99.0 seconds, 56.9%
Report:              26.2 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 37452.0
Test mean error for best: 18.72600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 97.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 30.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 158.0106062966
Correct output: -54.99029604   | Program output: -28.99029604  
Correct output: 60.5127184446  | Program output: 38.5127184446 
Correct output: 61.1705628788  | Program output: 36.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 101.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 68.3014515582 
Correct output: 82.9352078558  | Program output: 114.9352078558
Correct output: 170.2225097733 | Program output: 140.2225097733
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_add} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_dup integer_add integer_mod float_inc integer_add integer_mod integer_sub integer_dec integer_add integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_inc integer_min float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc integer_div integer_dup float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_yankdup float_inc float_inc integer_div integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc 30 float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot integer_yankdup float_dup_items -84 float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [92.0 2 73.0 2 35.0 13 18.0 2 4.0 2 16.0 2 19.0 2 52.0 2 1.0 1 9.0 2 77.0 9 62.0 3 32.0 2 26.0 2 22.0 2 25.0 2 7.0 2 0.0 0 35.0 2 40.0 1 6.0 1 34.0 3 32.0 3 30.0 1 15.0 2]
Total: 827.0
Mean: 16.54
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4619.854281799999
Median total errors in population: 934.5
Error averages by case: (235.6932128 4.317 212.57239519999996 3.935 180.87542579999996 13.281 162.64525649999987 4.147 160.49051029999993 4.136 165.5108601 3.943 157.78842989999998 5.358 195.48342490000002 4.015 155.98468629999994 3.491 180.78719859999998 4.466 216.00171719999997 10.089 209.80312190000004 5.055 191.06032710000005 4.266 170.2273308000001 4.023 170.26969090000003 5.211 173.36415610000003 5.401 157.181597 5.207 149.56869150000003 3.884 189.25107370000003 4.666 185.6533015 4.624 158.23334390000002 5.655 176.11651790000002 4.88 170.6467067000001 4.732 188.0686176000001 4.298 178.80368760000007 4.693)
Error minima by case: (6.6617 1 0.4224 1 7.5345 9 0.0 0 0.0 0 1.1516 1 0.1442 1 0.7278 1 0.0 0 0.0 0 3.4731 7 25.9564 1 17.0 1 0.0 0 0.5127 1 1.1706 1 4.0585 1 0.0 0 0.9573 1 2.5839 1 0.0 0 19.0 1 0.0 0 15.0 1 0.0 0)
Average genome size in population (length): 140.465
Average program size in population (points): 141.465
Average percent parens in population: 0.007
Minimum age in population: 69.76303083435917
Maximum age in population: 74.02671887148536
Average age in population: 71.99008458127209
Median age in population: 72.02395482046767
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.349
Error (vector) diversity:			 0.447
Behavioral diversity:				 0.448
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 105803262
--- Timings ---
Current time: 1529615031410 milliseconds
Total Time:         178.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.8 seconds, 27.8%
Fitness Testing:    102.0 seconds, 57.1%
Report:              26.8 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 37578.0
Test mean error for best: 18.78900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 101.3049767458
Correct output: 109.3816555251 | Program output: 117.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 34.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 162.0106062966
Correct output: -54.99029604   | Program output: -24.99029604  
Correct output: 60.5127184446  | Program output: 42.5127184446 
Correct output: 61.1705628788  | Program output: 40.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 75.2733863439 
Correct output: 136.9572654004 | Program output: 105.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 17.4574635021 
Correct output: 102.3014515582 | Program output: 72.3014515582 
Correct output: 82.9352078558  | Program output: 118.9352078558
Correct output: 170.2225097733 | Program output: 144.2225097733
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction float_inc} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc 30 float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot integer_yankdup float_dup_items -84 float_inc tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [92.0 2 73.0 2 35.0 13 22.0 3 8.0 2 16.0 2 23.0 2 52.0 2 1.0 1 9.0 2 77.0 9 62.0 3 28.0 2 30.0 1 18.0 2 21.0 2 7.0 2 4.0 1 31.0 2 40.0 1 2.0 1 30.0 2 36.0 3 26.0 2 15.0 2]
Total: 824.0
Mean: 16.48
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4165.3935108
Median total errors in population: 931.0
Error averages by case: (219.09097520000003 4.13 195.1346437 3.811 163.45952750000004 13.114 144.74489779999988 4.061 143.79492619999996 3.947 147.792778 3.809 137.33854159999999 5.013 177.7445455 3.869 140.3387194999999 3.44 159.76271959999997 4.162 198.53751730000002 9.919 192.51034550000008 4.902 175.38190629999997 4.166 150.53056260000005 3.876 150.57013490000006 4.816 153.79759310000003 4.999 138.05528590000006 5.053 132.0270183000001 3.764 172.1328555999999 4.591 166.41409799999997 4.441 137.53794889999998 5.355 158.5770049 4.795 153.41807310000016 4.636 172.11037560000005 4.191 161.20251620000002 4.528)
Error minima by case: (22.6617 1 0.868 1 0.4655 8 0.0 0 0.0 0 0.3312 1 0.0 0 1.0943 1 0.0 0 0.0 0 2.294 8 0.9564 1 18.0 1 0.0 0 0.4276 1 0.0485 1 0.2507 1 0.0 0 0.0427 1 13.3849 1 0.0 0 4.1468 1 1.0 1 16.0 1 0.0 0)
Average genome size in population (length): 139.268
Average program size in population (points): 140.268
Average percent parens in population: 0.007
Minimum age in population: 71.35468652815592
Maximum age in population: 75.03556665317414
Average age in population: 73.27653174710515
Median age in population: 73.33584903472374
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.363
Error (vector) diversity:			 0.476
Behavioral diversity:				 0.477
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 109286437
--- Timings ---
Current time: 1529615036084 milliseconds
Total Time:         183.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.8 seconds, 27.7%
Fitness Testing:    105.0 seconds, 57.2%
Report:              27.5 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 37866.0
Test mean error for best: 18.93300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 105.3049767458
Correct output: 109.3816555251 | Program output: 121.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 38.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 166.0106062966
Correct output: -54.99029604   | Program output: -20.99029604  
Correct output: 60.5127184446  | Program output: 46.5127184446 
Correct output: 61.1705628788  | Program output: 44.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 79.2733863439 
Correct output: 136.9572654004 | Program output: 109.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 21.4574635021 
Correct output: 102.3014515582 | Program output: 76.3014515582 
Correct output: 82.9352078558  | Program output: 50.9352078558 
Correct output: 170.2225097733 | Program output: 148.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_add float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_432)
Errors: [92.0 2 73.0 2 35.0 13 26.0 3 12.0 2 16.0 2 27.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 24.0 2 34.0 2 14.0 2 17.0 2 7.0 2 8.0 1 27.0 2 40.0 1 2.0 2 26.0 3 32.0 2 22.0 2 16.0 2]
Total: 819.0
Mean: 16.38
Genome size: 152
Size: 153
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4206.811187299999
Median total errors in population: 921.0
Error averages by case: (222.6436673000001 4.25 199.39474629999995 3.806 167.56870510000005 13.185 145.54037969999982 3.969 144.2097906 3.861 152.97346069999998 3.824 136.58325789999995 5.224 182.83119159999995 3.878 142.1956400999999 3.381 153.23384919999995 4.032 202.79366159999998 9.908 196.07448480000005 4.941 175.63910060000006 4.075 151.56753560000016 3.914 151.2933381 4.967 154.02756000000002 5.188 139.98544960000007 5.315 133.34727010000012 3.753 173.9881618000001 4.531 171.57384310000003 4.652 140.62550949999994 5.52 160.14140250000003 4.686 153.8179647000001 4.576 172.54017950000008 4.121 158.2950373000001 4.369)
Error minima by case: (43.6617 1 1.0737 1 4.4655 9 0.0 0 0.0 0 0.2465 1 0.0 0 0.9308 1 0.0 0 0.0 0 2.915 7 21.9564 1 20.0 1 0.0 0 2.2703 1 2.9926 1 3.7493 1 0.0 0 1.0427 1 28.5591 1 0.0 0 1.8509 1 0.0 0 18.0 1 0.0 0)
Average genome size in population (length): 136.154
Average program size in population (points): 137.154
Average percent parens in population: 0.007
Minimum age in population: 72.57288094783911
Maximum age in population: 76.23622644192862
Average age in population: 74.59051831148959
Median age in population: 74.64136430256919
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.944
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.944
Total error diversity:				 0.37
Error (vector) diversity:			 0.472
Behavioral diversity:				 0.473
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 112691862
--- Timings ---
Current time: 1529615040684 milliseconds
Total Time:         188.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.8 seconds, 27.5%
Fitness Testing:    107.8 seconds, 57.4%
Report:              28.3 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 37214.0
Test mean error for best: 18.60700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 102.3049767458
Correct output: 109.3816555251 | Program output: 118.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 35.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 163.0106062966
Correct output: -54.99029604   | Program output: -23.99029604  
Correct output: 60.5127184446  | Program output: 43.5127184446 
Correct output: 61.1705628788  | Program output: 41.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 76.2733863439 
Correct output: 136.9572654004 | Program output: 106.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 18.4574635021 
Correct output: 102.3014515582 | Program output: 73.3014515582 
Correct output: 82.9352078558  | Program output: 119.9352078558
Correct output: 170.2225097733 | Program output: 145.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction -84} {:instruction integer_dup_times} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc 30 float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot integer_yankdup float_dup_items -84 integer_dup_times tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [91.0 2 72.0 2 34.0 13 23.0 3 9.0 2 15.0 2 24.0 2 51.0 2 2.0 1 10.0 1 76.0 10 61.0 3 27.0 2 31.0 2 17.0 2 20.0 1 6.0 2 5.0 1 30.0 1 39.0 2 1.0 1 29.0 3 37.0 3 25.0 2 16.0 2]
Total: 818.0
Mean: 16.36
Genome size: 142
Size: 143
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4462.1514718
Median total errors in population: 917.5
Error averages by case: (231.80193950000006 4.394 208.01944779999994 3.928 176.64226280000003 13.163 156.6892929999999 4.203 155.39468929999995 4.078 161.13614059999998 3.932 150.30947599999996 5.442 190.90551799999994 4.033 149.78672769999994 3.545 157.44810840000005 4.061 211.56671030000004 9.91 205.4896238000001 5.088 187.21670110000002 4.301 162.58774870000013 4.091 164.68259700000004 5.246 167.2179295 5.468 151.88237930000005 5.441 146.8602054000001 3.964 184.8716885 4.742 178.83140799999995 4.761 150.07514420000007 5.554 173.07101390000008 4.914 164.31435550000006 4.752 183.9398137000001 4.336 163.6965498 4.367)
Error minima by case: (47.6617 1 0.5581 1 2.4655 8 0.0 0 0.0 0 0.1476 1 0.0 0 0.8707 1 0.0 0 0.0 0 0.085 7 25.9564 1 16.0 1 0.0 0 1.4873 1 0.8294 1 0.7493 1 0.0 0 0.0427 1 21.5623 1 0.0 0 2.9608 1 0.0 0 14.0 1 0.0 0)
Average genome size in population (length): 135.518
Average program size in population (points): 136.518
Average percent parens in population: 0.007
Minimum age in population: 73.99408347772003
Maximum age in population: 77.70394367388025
Average age in population: 75.90390725709048
Median age in population: 75.93212085175055
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.378
Error (vector) diversity:			 0.47
Behavioral diversity:				 0.472
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 116081312
--- Timings ---
Current time: 1529615045086 milliseconds
Total Time:         192.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.8 seconds, 27.4%
Fitness Testing:    110.6 seconds, 57.5%
Report:              29.0 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 37260.0
Test mean error for best: 18.63000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 103.3049767458
Correct output: 109.3816555251 | Program output: 119.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 36.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 164.0106062966
Correct output: -54.99029604   | Program output: -22.99029604  
Correct output: 60.5127184446  | Program output: 44.5127184446 
Correct output: 61.1705628788  | Program output: 42.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 77.2733863439 
Correct output: 136.9572654004 | Program output: 107.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 19.4574635021 
Correct output: 102.3014515582 | Program output: 74.3014515582 
Correct output: 82.9352078558  | Program output: 120.9352078558
Correct output: 170.2225097733 | Program output: 146.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_pop} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction float_dup_items} {:instruction -84} {:instruction integer_dup_times} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec integer_pop float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_dup integer_add integer_mod float_inc integer_add integer_mod float_dup_times integer_dec integer_add integer_div integer_dec float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc 30 float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot float_rot float_dup_items -84 integer_dup_times tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [91.0 2 72.0 2 34.0 13 24.0 3 10.0 1 15.0 2 25.0 2 51.0 2 2.0 1 10.0 1 76.0 10 61.0 3 26.0 2 32.0 2 16.0 2 19.0 2 6.0 2 6.0 1 29.0 2 39.0 2 0.0 0 28.0 3 38.0 2 24.0 2 16.0 2]
Total: 816.0
Mean: 16.32
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3833.804031999998
Median total errors in population: 867.0
Error averages by case: (208.93019280000007 4.123 186.11599390000006 3.65 153.37253960000007 13.142 132.98367889999992 3.842 129.81067729999998 3.728 137.1634158 3.647 126.94804159999994 5.224 168.20037619999994 3.726 127.10042639999995 3.214 131.49129690000004 3.756 189.52301959999997 9.831 182.06253650000005 4.808 159.1214584 3.851 140.58224170000014 3.733 137.7622896 4.904 139.9688272 5.16 126.82565170000002 5.11 119.77297090000006 3.421 158.13874360000003 4.197 156.17704019999994 4.421 123.64305649999999 4.95 145.30688020000002 4.521 141.94596650000003 4.346 156.2093109000001 3.888 135.54939910000004 3.905)
Error minima by case: (8.6617 1 0.9071 1 8.4655 9 1.0 1 0.0 0 1.2486 1 0.0 1 0.3792 1 0.0 0 0.0 0 1.085 8 0.9564 1 7.0 1 0.0 0 0.9614 1 0.0 1 0.2507 1 0.0 0 0.0427 1 2.5839 1 0.0 0 4.3015 1 0.0 0 5.0 1 0.0 0)
Average genome size in population (length): 138.929
Average program size in population (points): 139.929
Average percent parens in population: 0.007
Minimum age in population: 75.09468056580262
Maximum age in population: 79.0501721274722
Average age in population: 77.1702189684443
Median age in population: 77.21042990720152
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.34
Error (vector) diversity:			 0.425
Behavioral diversity:				 0.426
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 119556762
--- Timings ---
Current time: 1529615049725 milliseconds
Total Time:         197.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.8 seconds, 27.3%
Fitness Testing:    113.4 seconds, 57.6%
Report:              29.7 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 37260.0
Test mean error for best: 18.63000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 103.3049767458
Correct output: 109.3816555251 | Program output: 119.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 36.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 164.0106062966
Correct output: -54.99029604   | Program output: -22.99029604  
Correct output: 60.5127184446  | Program output: 44.5127184446 
Correct output: 61.1705628788  | Program output: 42.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 77.2733863439 
Correct output: 136.9572654004 | Program output: 107.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 19.4574635021 
Correct output: 102.3014515582 | Program output: 74.3014515582 
Correct output: 82.9352078558  | Program output: 120.9352078558
Correct output: 170.2225097733 | Program output: 146.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_pop} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_shove} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction float_dup_items} {:instruction -84} {:instruction integer_dup_times} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec integer_pop float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_dup integer_add integer_mod float_inc integer_add integer_mod float_dup_times integer_dec integer_add integer_div integer_dec float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_shove float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc 30 float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot float_rot float_dup_items -84 integer_dup_times tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [91.0 2 72.0 2 34.0 13 24.0 3 10.0 1 15.0 2 25.0 2 51.0 2 2.0 1 10.0 1 76.0 10 61.0 3 26.0 2 32.0 2 16.0 2 19.0 2 6.0 2 6.0 1 29.0 2 39.0 2 0.0 0 28.0 3 38.0 2 24.0 2 16.0 2]
Total: 816.0
Mean: 16.32
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3779.1224722
Median total errors in population: 846.0
Error averages by case: (205.88335610000004 3.993 184.4539285 3.608 149.56888379999998 13.101 132.34673479999992 3.962 128.48881499999993 3.803 133.40388159999992 3.645 128.08122110000002 5.181 166.50440349999997 3.708 125.4853093999999 3.13 128.53823850000006 3.687 187.94051939999997 9.754 179.03722240000005 4.7 156.03144620000003 3.828 139.42604560000007 3.672 135.39360359999998 4.872 138.0215846 5.101 123.96924420000002 4.973 119.69827720000002 3.259 153.2379125 4.037 154.06663569999998 4.235 121.95624740000005 4.693 145.225516 4.504 141.60102830000014 4.312 152.05776560000004 3.87 131.33865119999996 3.738)
Error minima by case: (21.6617 1 1.1299 1 3.5345 7 0.0 0 0.0 0 1.1239 1 0.51 1 0.0463 1 0.0 0 0.0 0 0.085 7 0.0436 1 7.0 1 0.0 0 0.4873 1 0.1706 1 0.2507 1 0.0 0 0.0427 1 14.7651 1 0.0 0 1.6985 1 0.0 0 9.0 1 0.0 0)
Average genome size in population (length): 143.894
Average program size in population (points): 144.894
Average percent parens in population: 0.007
Minimum age in population: 76.26568084450783
Maximum age in population: 80.75455862943151
Average age in population: 78.61393163573894
Median age in population: 78.66308002275186
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.952
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.952
Total error diversity:				 0.303
Error (vector) diversity:			 0.367
Behavioral diversity:				 0.368
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 123155762
--- Timings ---
Current time: 1529615054591 milliseconds
Total Time:         201.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.9 seconds, 27.2%
Fitness Testing:    116.5 seconds, 57.7%
Report:              30.4 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 37260.0
Test mean error for best: 18.63000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 103.3049767458
Correct output: 109.3816555251 | Program output: 119.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 36.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 164.0106062966
Correct output: -54.99029604   | Program output: -22.99029604  
Correct output: 60.5127184446  | Program output: 44.5127184446 
Correct output: 61.1705628788  | Program output: 42.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 77.2733863439 
Correct output: 136.9572654004 | Program output: 107.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 19.4574635021 
Correct output: 102.3014515582 | Program output: 74.3014515582 
Correct output: 82.9352078558  | Program output: 120.9352078558
Correct output: 170.2225097733 | Program output: 146.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_pop} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_948} {:instruction integer_add} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction float_dup_items} {:instruction -84} {:instruction integer_dup_times} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec integer_pop float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc tag_integer_948 integer_add integer_mod float_inc integer_add integer_mod float_dup_times integer_dec integer_add integer_div integer_dec float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc 30 float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot float_rot float_dup_items -84 integer_dup_times tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [91.0 2 72.0 2 34.0 13 24.0 3 10.0 1 15.0 2 25.0 2 51.0 2 2.0 1 10.0 1 76.0 10 61.0 3 26.0 2 32.0 2 16.0 2 19.0 2 6.0 2 6.0 1 29.0 2 39.0 2 0.0 0 28.0 3 38.0 2 24.0 2 16.0 2]
Total: 816.0
Mean: 16.32
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4038.2764305999995
Median total errors in population: 836.0
Error averages by case: (216.10427120000008 4.181 192.74372929999998 3.722 161.11036099999998 13.242 145.0149412999999 4.232 139.6458446999999 4.065 145.01484489999999 3.723 139.66408209999997 5.239 175.7811766 3.863 133.3320249999999 3.335 137.63621300000003 3.832 196.2541053 9.871 189.45211860000006 4.877 164.11814080000002 4.012 152.6719874000001 3.849 142.65894239999997 4.981 145.14942019999998 5.165 137.19189150000003 5.265 131.4247441 3.396 162.49163769999998 4.152 167.58559140000003 4.558 132.40362029999997 4.782 154.90588100000002 4.635 153.36629850000008 4.436 161.02434880000007 4.065 140.13621349999997 3.916)
Error minima by case: (8.3383 1 1.0391 1 0.4655 9 0.0 0 0.0 0 1.239 1 0.0 0 0.2722 1 0.0 0 0.0 0 5.133 8 30.0436 1 13.0 1 1.0 1 1.4873 1 0.8294 1 0.2507 1 0.0 0 1.9573 1 8.5839 1 0.0 0 3.6985 1 0.0 0 11.0 1 0.0 0)
Average genome size in population (length): 147.027
Average program size in population (points): 148.027
Average percent parens in population: 0.007
Minimum age in population: 77.92724531956657
Maximum age in population: 82.00025945263536
Average age in population: 79.99135248637279
Median age in population: 80.00952952194635
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.965
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.965
Total error diversity:				 0.315
Error (vector) diversity:			 0.372
Behavioral diversity:				 0.373
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 126833837
--- Timings ---
Current time: 1529615059429 milliseconds
Total Time:         206.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.9 seconds, 27.0%
Fitness Testing:    119.6 seconds, 57.8%
Report:              31.2 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 37260.0
Test mean error for best: 18.63000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 103.3049767458
Correct output: 109.3816555251 | Program output: 119.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 36.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 164.0106062966
Correct output: -54.99029604   | Program output: -22.99029604  
Correct output: 60.5127184446  | Program output: 44.5127184446 
Correct output: 61.1705628788  | Program output: 42.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 77.2733863439 
Correct output: 136.9572654004 | Program output: 107.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 19.4574635021 
Correct output: 102.3014515582 | Program output: 74.3014515582 
Correct output: 82.9352078558  | Program output: 120.9352078558
Correct output: 170.2225097733 | Program output: 146.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_pop} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_add} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_add} {:instruction integer_mod} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_shove} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction float_rot} {:instruction float_dup_items} {:instruction -84} {:instruction integer_dup_times} {:instruction tagged_902} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432} {:instruction float_min} {:instruction 20.811225588459223} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec integer_pop float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_dup integer_add integer_mod float_inc integer_add integer_mod float_dup_times integer_dec integer_add integer_div integer_dec float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_shove float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc in2 float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc 30 float_inc float_inc in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_rot float_rot float_dup_items -84 integer_dup_times tagged_902 print_float float_min integer_pop tagged_432 float_min 20.811225588459223 float_min integer_dup_times)
Errors: [91.0 2 72.0 2 34.0 13 24.0 3 10.0 1 15.0 2 25.0 2 51.0 2 2.0 1 10.0 1 76.0 10 61.0 3 26.0 2 32.0 2 16.0 2 19.0 2 6.0 2 6.0 1 29.0 2 39.0 2 0.0 0 28.0 3 38.0 2 24.0 2 16.0 2]
Total: 816.0
Mean: 16.32
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4258.8259105
Median total errors in population: 841.0
Error averages by case: (224.74607170000007 4.237 203.60125010000002 3.799 170.73774659999998 13.215 154.15452659999985 4.276 149.1075397 4.063 155.56570839999995 3.822 149.56176750000006 5.44 185.97351400000002 3.927 143.9421775999999 3.408 148.5196324 3.84 206.93530000000004 9.922 198.36928630000006 4.894 171.95963409999996 4.01 160.3298659000001 3.81 151.43142789999996 5.102 154.47900319999997 5.344 146.48184229999998 5.404 135.52747100000005 3.398 170.62327089999997 4.107 174.07395519999997 4.753 139.94874719999993 4.902 157.1145103 4.67 162.18381110000016 4.407 169.02858610000007 4.1 151.58326440000002 3.996)
Error minima by case: (57.6617 1 0.9891 1 4.4655 9 0.0 0 0.0 0 1.1476 1 0.2068 1 1.9372 1 0.0 0 1.0 1 0.915 8 35.9564 1 11.0 1 0.0 0 0.0254 1 0.8294 1 2.5725 1 0.0 0 4.9573 1 2.5839 1 0.0 0 1.6985 1 1.0 1 3.3348 1 0.0 0)
Average genome size in population (length): 147.984
Average program size in population (points): 148.984
Average percent parens in population: 0.007
Minimum age in population: 78.92724531956657
Maximum age in population: 83.50694846595847
Average age in population: 81.4323253876171
Median age in population: 81.45262945629771
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.295
Error (vector) diversity:			 0.372
Behavioral diversity:				 0.373
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 130536112
--- Timings ---
Current time: 1529615064120 milliseconds
Total Time:         211.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.9 seconds, 26.9%
Fitness Testing:    122.5 seconds, 57.9%
Report:              31.9 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 36891.0
Test mean error for best: 18.44550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 110.3049767458
Correct output: 109.3816555251 | Program output: 126.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 43.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 171.0106062966
Correct output: -54.99029604   | Program output: -15.99029604  
Correct output: 60.5127184446  | Program output: 51.5127184446 
Correct output: 61.1705628788  | Program output: 49.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 84.2733863439 
Correct output: 136.9572654004 | Program output: 114.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 26.4574635021 
Correct output: 102.3014515582 | Program output: 81.3014515582 
Correct output: 82.9352078558  | Program output: 76.9352078558 
Correct output: 170.2225097733 | Program output: 153.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_yankdup float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float)
Errors: [92.0 2 73.0 2 35.0 13 31.0 3 17.0 2 16.0 2 32.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 19.0 2 39.0 2 9.0 2 12.0 2 7.0 2 13.0 2 22.0 2 40.0 1 7.0 2 21.0 3 6.0 2 17.0 2 16.0 2]
Total: 794.0
Mean: 15.88
Genome size: 152
Size: 153
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4192.7130374
Median total errors in population: 843.5
Error averages by case: (222.69780230000006 4.282 198.9124059 3.895 167.00442890000002 13.207 153.32312109999984 4.521 148.63718759999995 4.186 151.43379419999994 3.865 144.36200839999998 5.418 181.50614609999997 4.005 142.69914029999993 3.47 147.17557180000006 3.824 202.27708959999995 10.071 196.19361340000006 4.946 171.67844680000002 4.211 159.89889110000007 3.907 147.1858738 5.195 149.76571060000003 5.354 140.2577604 5.487 133.25775560000002 3.555 169.65169980000002 4.259 170.28415549999997 4.923 137.78500650000004 5.059 154.2287814 4.789 159.7112316000001 4.476 168.43135660000002 4.268 149.07605809999998 4.105)
Error minima by case: (56.6617 1 0.1824 1 10.4655 8 0.0 0 0.0 0 0.5224 1 0.0 0 0.539 1 0.0 0 1.0 1 3.085 8 34.9564 1 11.0 1 0.0 0 6.0E-4 1 0.795 1 1.1431 1 0.0 0 3.9573 1 2.5839 1 0.0 0 8.1961 1 1.0 1 9.0 1 0.0 0)
Average genome size in population (length): 149.114
Average program size in population (points): 150.114
Average percent parens in population: 0.007
Minimum age in population: 79.92724531956657
Maximum age in population: 84.95492795533941
Average age in population: 82.83689593829352
Median age in population: 82.89459466779886
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.337
Error (vector) diversity:			 0.413
Behavioral diversity:				 0.414
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 134266962
--- Timings ---
Current time: 1529615068899 milliseconds
Total Time:         216.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.9 seconds, 26.8%
Fitness Testing:    125.6 seconds, 58.1%
Report:              32.6 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 37540.0
Test mean error for best: 18.77000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 117.3049767458
Correct output: 109.3816555251 | Program output: 133.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 50.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 178.0106062966
Correct output: -54.99029604   | Program output: -66.99029604  
Correct output: 60.5127184446  | Program output: 58.5127184446 
Correct output: 61.1705628788  | Program output: 56.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 91.2733863439 
Correct output: 136.9572654004 | Program output: 121.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 33.4574635021 
Correct output: 102.3014515582 | Program output: 88.3014515582 
Correct output: 82.9352078558  | Program output: 76.9352078558 
Correct output: 170.2225097733 | Program output: 160.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_432)
Errors: [92.0 2 73.0 2 35.0 13 38.0 3 24.0 2 16.0 2 39.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 12.0 2 12.0 2 2.0 2 5.0 2 7.0 2 20.0 1 15.0 2 40.0 1 14.0 2 14.0 3 6.0 2 10.0 1 16.0 2]
Total: 758.0
Mean: 15.16
Genome size: 168
Size: 169
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3741.7702841000005
Median total errors in population: 832.0
Error averages by case: (206.39810070000007 3.859 181.94217140000006 3.496 149.51331920000004 13.138 135.39386469999988 4.243 130.17580769999998 3.789 134.1067981 3.493 127.43563069999998 5.066 163.86742040000001 3.612 123.91843889999994 3.105 129.46118750000008 3.259 185.5019919 10.109 179.3919181 4.557 152.46659819999988 3.86 142.3522620000001 3.649 127.91474099999998 4.795 130.90387389999998 4.932 124.20331790000004 5.196 115.78924770000006 3.2 150.76369939999998 3.859 153.75093779999997 4.726 118.03090569999995 4.641 135.87681230000004 4.498 143.14709530000013 4.13 149.36177410000005 3.887 133.29536949999994 3.708)
Error minima by case: (44.6617 1 4.5425 1 4.4122 9 0.0 0 0.0 0 0.2437 1 0.907 1 0.461 1 0.0 0 0.0 0 1.2603 7 22.9564 2 8.0 1 0.0 0 0.0 0 0.0745 1 1.2507 1 0.0 0 2.9573 1 13.9149 1 0.0 0 10.0 1 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 150.125
Average program size in population (points): 151.125
Average percent parens in population: 0.007
Minimum age in population: 81.6932018932313
Maximum age in population: 86.16502439675536
Average age in population: 84.15933915369597
Median age in population: 84.20520771023887
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.963
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.963
Total error diversity:				 0.346
Error (vector) diversity:			 0.421
Behavioral diversity:				 0.422
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 138024112
--- Timings ---
Current time: 1529615073835 milliseconds
Total Time:         221.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.9 seconds, 26.7%
Fitness Testing:    128.7 seconds, 58.2%
Report:              33.3 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 37903.0
Test mean error for best: 18.95150
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 120.3049767458
Correct output: 109.3816555251 | Program output: 136.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 53.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 181.0106062966
Correct output: -54.99029604   | Program output: -63.99029604  
Correct output: 60.5127184446  | Program output: 61.5127184446 
Correct output: 61.1705628788  | Program output: 59.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 94.2733863439 
Correct output: 136.9572654004 | Program output: 124.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 36.4574635021 
Correct output: 102.3014515582 | Program output: 91.3014515582 
Correct output: 82.9352078558  | Program output: 79.9352078558 
Correct output: 170.2225097733 | Program output: 163.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction -46} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_inc} {:instruction tagged_432})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc float_inc -46 integer_shove float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add integer_dec integer_div float_inc float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_inc tagged_432)
Errors: [92.0 2 73.0 2 35.0 13 41.0 3 27.0 2 16.0 2 42.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 9.0 2 9.0 2 1.0 1 2.0 2 7.0 2 23.0 2 12.0 2 40.0 1 17.0 2 11.0 3 3.0 2 7.0 2 16.0 2]
Total: 752.0
Mean: 15.04
Genome size: 174
Size: 175
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3912.477837899999
Median total errors in population: 840.5
Error averages by case: (213.15665290000015 4.02 189.2218802 3.622 155.40315149999998 13.074 141.13568929999985 4.338 136.28548429999995 3.977 141.44474509999998 3.673 134.74967669999998 5.097 171.45564629999996 3.738 133.31757159999995 3.277 137.5461215 3.304 192.71801259999998 10.189 186.19327790000008 4.72 159.26856060000003 3.992 148.9913833000001 3.78 133.76589869999992 4.836 137.66726390000002 4.987 131.75558510000002 5.318 120.25804630000009 3.392 156.38375409999998 3.995 160.65972510000006 5.048 126.40450379999999 4.716 139.72487449999994 4.601 148.3966864000001 4.257 155.9196024000001 4.053 140.75304379999997 3.897)
Error minima by case: (6.3383 1 0.4513 1 0.3316 8 1.0 1 0.0 0 1.8524 1 0.0 0 0.3772 1 0.0 0 0.0 0 1.0564 7 28.0436 1 8.0 1 0.0 0 0.0 0 1.0 1 4.7493 1 0.0 0 3.9573 1 3.266 1 0.0 0 4.8946 1 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 150.381
Average program size in population (points): 151.381
Average percent parens in population: 0.007
Minimum age in population: 82.97213271992403
Maximum age in population: 87.47936639739429
Average age in population: 85.42388062236155
Median age in population: 85.4840969044669
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.356
Error (vector) diversity:			 0.456
Behavioral diversity:				 0.456
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 141788162
--- Timings ---
Current time: 1529615078859 milliseconds
Total Time:         226.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        59.9 seconds, 26.5%
Fitness Testing:    131.9 seconds, 58.4%
Report:              34.1 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 37903.0
Test mean error for best: 18.95150
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 120.3049767458
Correct output: 109.3816555251 | Program output: 136.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 53.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 181.0106062966
Correct output: -54.99029604   | Program output: -63.99029604  
Correct output: 60.5127184446  | Program output: 61.5127184446 
Correct output: 61.1705628788  | Program output: 59.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 94.2733863439 
Correct output: 136.9572654004 | Program output: 124.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 36.4574635021 
Correct output: 102.3014515582 | Program output: 91.3014515582 
Correct output: 82.9352078558  | Program output: 79.9352078558 
Correct output: 170.2225097733 | Program output: 163.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_max} {:instruction in1} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_inc} {:instruction tagged_432})
Best program: (integer_mult print_integer float_pop in1 float_max in1 float_inc integer_dec integer_div -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_min integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add integer_dec integer_div float_inc float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_inc tagged_432)
Errors: [92.0 2 73.0 2 35.0 13 41.0 3 27.0 2 16.0 2 42.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 9.0 2 9.0 2 1.0 1 2.0 2 7.0 2 23.0 2 12.0 2 40.0 1 17.0 2 11.0 3 3.0 2 7.0 2 16.0 2]
Total: 752.0
Mean: 15.04
Genome size: 174
Size: 175
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4614.2157424
Median total errors in population: 921.0
Error averages by case: (239.53505160000003 4.336 214.9893428 3.948 183.80422840000003 13.212 168.823974 4.529 164.49293489999997 4.234 168.79467759999991 3.931 164.456844 5.517 197.9422880999999 4.064 159.51188069999998 3.609 164.71221610000003 3.659 218.24845880000004 10.329 213.32084200000003 4.988 186.4104688 4.225 175.2229269 3.952 164.96321649999996 5.184 167.4836758 5.379 161.1788911 5.661 151.35907360000004 3.594 184.16852659999998 4.236 188.88566050000003 5.4 155.37695860000002 5.228 169.66504919999994 4.794 173.90130599999998 4.41 182.84915860000007 4.273 167.20309120000005 4.223)
Error minima by case: (57.6617 1 1.0229 1 6.7982 9 0.0 0 0.0 0 0.702 1 0.0 0 2.539 1 0.0 0 0.0 0 0.5534 7 35.9564 1 7.0 1 0.0 0 0.0 0 0.0 0 2.1053 1 0.0 0 4.9573 1 2.4993 1 0.0 0 2.3015 1 0.0 0 5.0 1 0.0 0)
Average genome size in population (length): 150.576
Average program size in population (points): 151.576
Average percent parens in population: 0.007
Minimum age in population: 84.27771020181804
Maximum age in population: 89.04566089367279
Average age in population: 86.75025650387032
Median age in population: 86.78108608811932
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.963
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.963
Total error diversity:				 0.387
Error (vector) diversity:			 0.48
Behavioral diversity:				 0.482
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 145557162
--- Timings ---
Current time: 1529615083888 milliseconds
Total Time:         231.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        60.9 seconds, 26.4%
Fitness Testing:    135.1 seconds, 58.5%
Report:              34.9 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 35950.0
Test mean error for best: 17.97500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 102.3049767458
Correct output: 109.3816555251 | Program output: 118.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 35.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 163.0106062966
Correct output: -54.99029604   | Program output: -56.99029604  
Correct output: 60.5127184446  | Program output: 43.5127184446 
Correct output: 61.1705628788  | Program output: 41.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 76.2733863439 
Correct output: 136.9572654004 | Program output: 106.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 18.4574635021 
Correct output: 102.3014515582 | Program output: 73.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 145.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_dup_times})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div integer_mod integer_sub integer_stackdepth float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec integer_mod integer_yankdup float_inc float_inc integer_dec integer_dec float_inc integer_dec 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc float_inc integer_div integer_dec integer_mult integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_dup_times)
Errors: [92.0 2 73.0 2 35.0 13 23.0 3 9.0 2 16.0 2 24.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 27.0 2 2.0 1 17.0 2 20.0 1 7.0 2 5.0 1 30.0 1 40.0 1 1.0 1 29.0 3 4.0 1 25.0 2 16.0 2]
Total: 759.0
Mean: 15.18
Genome size: 151
Size: 152
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4294.511500299999
Median total errors in population: 905.0
Error averages by case: (227.32706620000005 4.076 202.99426890000004 3.81 169.54242699999998 13.218 156.96915699999988 4.604 152.90024919999996 4.269 154.996516 3.81 149.54838650000008 5.421 184.89440609999997 3.855 144.07443069999994 3.424 150.71955110000002 3.542 206.4527199 10.299 200.87160000000006 4.751 175.0657743000001 4.297 163.85301410000005 3.927 149.34040779999998 5.165 151.96152029999996 5.312 146.77255079999995 5.5 139.0562514000001 3.68 172.37824210000002 4.341 176.908053 5.057 143.30071320000002 5.22 158.53285580000005 4.852 162.9038952000001 4.459 171.70747400000008 4.33 156.09496969999998 4.126)
Error minima by case: (28.6617 1 0.2636 1 0.4655 3 0.0 0 0.0 0 1.8524 1 0.1076 1 0.4882 1 0.0 0 0.0 0 2.4731 8 6.9564 1 3.0 1 0.0 0 0.0 0 0.1706 1 3.2507 1 0.0 0 1.9573 1 0.4896 1 0.0 0 1.8975 1 0.0 0 1.0 1 0.0 0)
Average genome size in population (length): 150.993
Average program size in population (points): 151.993
Average percent parens in population: 0.007
Minimum age in population: 85.27771020181804
Maximum age in population: 90.09569279287757
Average age in population: 88.11740144762518
Median age in population: 88.18553609724097
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.42
Error (vector) diversity:			 0.537
Behavioral diversity:				 0.538
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 149336187
--- Timings ---
Current time: 1529615088801 milliseconds
Total Time:         236.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        62.0 seconds, 26.2%
Fitness Testing:    138.2 seconds, 58.6%
Report:              35.8 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 35950.0
Test mean error for best: 17.97500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 102.3049767458
Correct output: 109.3816555251 | Program output: 118.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 35.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 163.0106062966
Correct output: -54.99029604   | Program output: -56.99029604  
Correct output: 60.5127184446  | Program output: 43.5127184446 
Correct output: 61.1705628788  | Program output: 41.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 76.2733863439 
Correct output: 136.9572654004 | Program output: 106.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 18.4574635021 
Correct output: 102.3014515582 | Program output: 73.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 145.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_dup_times})
Best program: (float_mult float_dup_items float_div in1 integer_dec in1 integer_dec integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div integer_mod integer_sub integer_stackdepth float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec integer_mod integer_yankdup float_inc float_inc integer_dec integer_dec float_inc integer_dec 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc float_inc integer_div integer_dec integer_mult integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_dup_times)
Errors: [92.0 2 73.0 2 35.0 13 23.0 3 9.0 2 16.0 2 24.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 27.0 2 2.0 1 17.0 2 20.0 1 7.0 2 5.0 1 30.0 1 40.0 1 1.0 1 29.0 3 4.0 1 25.0 2 16.0 2]
Total: 759.0
Mean: 15.18
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4197.361059399999
Median total errors in population: 924.0
Error averages by case: (225.1041539000001 4.014 197.82669909999987 3.743 166.0930008 13.119 151.6944142999999 4.485 146.64068849999992 4.201 149.57625769999999 3.789 148.97136569999998 5.322 180.3570915 3.788 139.87998419999994 3.37 147.54371160000008 3.63 201.38279969999982 10.206 198.55754750000008 4.664 169.29692619999992 4.194 161.58930330000007 3.868 148.57525370000005 5.01 151.27749740000002 5.111 146.8989952 5.362 134.97951900000007 3.579 166.8908841999999 4.221 174.92984629999995 5.024 139.35051140000002 5.116 153.84571020000004 4.794 156.1885803000001 4.258 165.8955784000001 4.207 150.81473929999993 4.125)
Error minima by case: (33.6617 1 1.0996 1 0.5345 9 0.0 0 0.0 0 3.0482 1 0.1076 1 0.1766 1 0.0 0 0.0 0 5.085 7 11.9564 1 4.0 1 0.0 0 0.0 0 0.3866 1 2.0045 1 0.0 0 7.0 1 12.5839 1 0.0 0 6.0 1 0.0 0 2.0 1 1.0 1)
Average genome size in population (length): 151.389
Average program size in population (points): 152.389
Average percent parens in population: 0.007
Minimum age in population: 86.68673233221455
Maximum age in population: 91.58562383228066
Average age in population: 89.48916819604453
Median age in population: 89.54389797273775
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.43
Error (vector) diversity:			 0.568
Behavioral diversity:				 0.569
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 153126762
--- Timings ---
Current time: 1529615093663 milliseconds
Total Time:         240.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        63.0 seconds, 26.2%
Fitness Testing:    141.3 seconds, 58.6%
Report:              36.5 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 37193.0
Test mean error for best: 18.59650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 114.3049767458
Correct output: 109.3816555251 | Program output: 130.3816555251
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 47.1076208156 
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 93.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 175.0106062966
Correct output: -54.99029604   | Program output: -57.99029604  
Correct output: 60.5127184446  | Program output: 55.5127184446 
Correct output: 61.1705628788  | Program output: 53.1705628788 
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 88.2733863439 
Correct output: 136.9572654004 | Program output: 118.9572654004
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: 30.4574635021 
Correct output: 102.3014515582 | Program output: 85.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 157.2225097733
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction print_integer} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult print_integer print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat print_integer integer_flush integer_dec in1 integer_dec float_inc integer_mult print_integer integer_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div integer_mod integer_sub integer_stackdepth float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_inc integer_add float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_yank float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc integer_yankdup float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_dec float_inc integer_dec integer_div float_inc integer_div float_inc integer_yankdup float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float)
Errors: [93.0 2 74.0 2 36.0 13 35.0 3 21.0 2 17.0 2 36.0 2 53.0 2 0.0 0 9.0 2 78.0 10 63.0 3 15.0 2 3.0 1 5.0 2 8.0 2 8.0 2 17.0 2 18.0 2 41.0 2 11.0 2 17.0 3 3.0 1 13.0 2 15.0 2]
Total: 757.0
Mean: 15.14
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3628.088431099999
Median total errors in population: 908.0
Error averages by case: (202.15398350000004 3.612 175.824561 3.436 142.53105170000003 13.076 128.5742188999998 4.322 126.06211319999997 4.116 126.86628280000001 3.458 123.92686450000002 5.119 157.7311711 3.377 118.62592399999998 3.017 126.46569810000008 3.469 179.4826834 10.022 175.05094930000007 4.303 150.6765488 4.044 137.67691680000016 3.829 124.72711530000012 4.853 127.43053780000001 5.04 120.10250840000003 4.73 113.08197330000013 3.514 146.81877289999997 4.128 150.61496499999996 4.295 115.46696200000002 4.921 133.38107500000004 4.679 131.51073730000022 4.073 146.70930060000006 4.085 129.21451639999998 3.863)
Error minima by case: (56.6617 1 0.0859 1 8.4655 9 0.0 0 0.0 0 0.082 1 0.0 0 0.7286 1 0.0 0 0.0 0 1.085 8 34.9564 1 6.0 1 0.0 0 0.0 0 0.0 0 3.7493 1 0.0 0 3.9573 1 35.199 1 0.0 0 0.1961 1 0.0 0 4.0 1 0.0 0)
Average genome size in population (length): 150.838
Average program size in population (points): 151.838
Average percent parens in population: 0.007
Minimum age in population: 88.26156370774856
Maximum age in population: 92.87255374106446
Average age in population: 90.87010268191658
Median age in population: 90.86912382352472
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.96
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.96
Total error diversity:				 0.455
Error (vector) diversity:			 0.63
Behavioral diversity:				 0.632
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 156903762
--- Timings ---
Current time: 1529615098675 milliseconds
Total Time:         245.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        64.0 seconds, 26.0%
Fitness Testing:    144.4 seconds, 58.7%
Report:              37.3 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 37166.0
Test mean error for best: 18.58300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 69.3049767458 
Correct output: 109.3816555251 | Program output: 135.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 2.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 180.0106062966
Correct output: -54.99029604   | Program output: -92.99029604  
Correct output: 60.5127184446  | Program output: 60.5127184446 
Correct output: 61.1705628788  | Program output: 58.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 93.2733863439 
Correct output: 136.9572654004 | Program output: 123.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 35.4574635021 
Correct output: 102.3014515582 | Program output: 90.3014515582 
Correct output: 82.9352078558  | Program output: 50.9352078558 
Correct output: 170.2225097733 | Program output: 162.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -96} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_cos integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div integer_mod integer_sub integer_stackdepth float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc integer_div float_shove integer_div float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc -96 float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float)
Errors: [92.0 2 73.0 2 35.0 13 10.0 1 26.0 2 16.0 2 9.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 10.0 1 38.0 2 0.0 0 3.0 2 7.0 2 22.0 2 13.0 2 40.0 1 16.0 2 12.0 2 32.0 2 8.0 2 16.0 2]
Total: 742.0
Mean: 14.84
Genome size: 173
Size: 174
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4144.066147099999
Median total errors in population: 897.0
Error averages by case: (217.66973169999997 3.771 196.82107510000006 3.572 164.3254837 13.154 152.64946649999987 4.444 147.31102339999998 4.215 148.23314729999996 3.573 146.96812869999994 5.088 178.97230809999996 3.532 137.95411819999998 3.064 146.67521280000005 3.489 200.2999288 9.967 191.29341729999993 4.501 169.5924903000001 4.175 157.96989250000001 3.843 146.5939887 4.8 149.08737190000002 4.887 139.17338729999994 4.659 137.5090027 3.644 166.733271 4.278 167.7683256 3.975 136.43101319999997 4.738 157.03199950000007 4.826 151.41466100000014 3.993 166.19715870000005 4.227 150.94154310000005 4.034)
Error minima by case: (29.6617 1 1.9621 1 8.4655 9 0.0 0 0.0 0 2.3252 1 0.0 0 1.9294 1 0.0 0 1.0 1 1.085 8 7.9564 1 7.0 1 0.0 0 0.0 0 0.0 0 5.0 1 0.0 0 0.9573 1 9.4584 1 0.0 0 3.6126 1 0.0 0 5.0 1 3.0 1)
Average genome size in population (length): 151.594
Average program size in population (points): 152.594
Average percent parens in population: 0.007
Minimum age in population: 89.78956316244648
Maximum age in population: 94.17886750671585
Average age in population: 92.13485580638265
Median age in population: 92.15682299264456
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.436
Error (vector) diversity:			 0.66
Behavioral diversity:				 0.664
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 160697262
--- Timings ---
Current time: 1529615103671 milliseconds
Total Time:         250.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        65.0 seconds, 25.9%
Fitness Testing:    147.6 seconds, 58.8%
Report:              38.1 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 37166.0
Test mean error for best: 18.58300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 69.3049767458 
Correct output: 109.3816555251 | Program output: 135.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 2.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 180.0106062966
Correct output: -54.99029604   | Program output: -92.99029604  
Correct output: 60.5127184446  | Program output: 60.5127184446 
Correct output: 61.1705628788  | Program output: 58.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 93.2733863439 
Correct output: 136.9572654004 | Program output: 123.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 35.4574635021 
Correct output: 102.3014515582 | Program output: 90.3014515582 
Correct output: 82.9352078558  | Program output: 50.9352078558 
Correct output: 170.2225097733 | Program output: 162.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -96} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_cos integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div integer_mod integer_sub integer_stackdepth float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc integer_div float_shove integer_div float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc -96 float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float)
Errors: [92.0 2 73.0 2 35.0 13 10.0 1 26.0 2 16.0 2 9.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 10.0 1 38.0 2 0.0 0 3.0 2 7.0 2 22.0 2 13.0 2 40.0 1 16.0 2 12.0 2 32.0 2 8.0 2 16.0 2]
Total: 742.0
Mean: 14.84
Genome size: 173
Size: 174
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4268.921369799999
Median total errors in population: 919.0
Error averages by case: (219.5748528 3.913 199.02528169999997 3.656 165.25969499999994 13.224 161.42928949999984 4.673 156.73703409999987 4.538 150.74570789999999 3.649 150.58680690000006 5.097 181.26639420000004 3.718 139.59896859999992 3.131 152.57275620000004 3.536 202.4993843 9.972 193.19768310000003 4.669 178.62330350000008 4.506 165.3195058000001 4.082 149.80578639999993 4.879 152.08536610000002 4.999 140.93270610000002 4.539 145.46050670000002 4.028 174.3749764 4.617 171.43622849999994 3.895 143.8510121 5.102 163.1394595 5.067 156.2280704000001 4.09 175.0417396000001 4.578 157.81885440000002 4.152)
Error minima by case: (23.6617 1 0.3302 1 7.565 9 0.0 0 0.0 0 0.8524 1 0.0 0 0.2992 1 0.0 0 1.0 1 2.0888 7 1.9564 1 2.0 1 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0427 1 23.4161 1 0.0 0 0.6985 1 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 153.43
Average program size in population (points): 154.43
Average percent parens in population: 0.007
Minimum age in population: 91.18576920975568
Maximum age in population: 95.6653570092024
Average age in population: 93.43424509205505
Median age in population: 93.48687963106764
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.479
Error (vector) diversity:			 0.71
Behavioral diversity:				 0.715
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 164534637
--- Timings ---
Current time: 1529615108829 milliseconds
Total Time:         255.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        66.1 seconds, 25.8%
Fitness Testing:    150.8 seconds, 58.9%
Report:              39.0 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 37219.0
Test mean error for best: 18.60950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 72.3049767458 
Correct output: 109.3816555251 | Program output: 138.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 5.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 183.0106062966
Correct output: -54.99029604   | Program output: -92.99029604  
Correct output: 60.5127184446  | Program output: 63.5127184446 
Correct output: 61.1705628788  | Program output: 61.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 96.2733863439 
Correct output: 136.9572654004 | Program output: 126.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 38.4574635021 
Correct output: 102.3014515582 | Program output: 93.3014515582 
Correct output: 82.9352078558  | Program output: 50.9352078558 
Correct output: 170.2225097733 | Program output: 165.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_float} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -96} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_cos print_float float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_yank float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc integer_div float_shove integer_div float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc -96 float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float)
Errors: [92.0 2 73.0 2 35.0 13 7.0 1 29.0 2 16.0 2 6.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 7.0 2 38.0 2 3.0 1 0.0 0 7.0 2 25.0 2 10.0 1 40.0 1 19.0 2 9.0 3 32.0 2 5.0 2 16.0 2]
Total: 733.0
Mean: 14.66
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3838.9310508
Median total errors in population: 912.0
Error averages by case: (203.83034590000003 3.771 183.14660219999996 3.488 149.87077069999995 13.25 143.76952859999986 4.488 138.63661839999992 4.246 134.16815229999992 3.48 134.50341410000004 5.052 165.1830293 3.565 123.84762419999996 2.943 135.55274550000007 3.461 186.52402810000007 9.937 177.08769579999998 4.521 157.96053380000004 4.244 146.8621094 3.847 131.6522959 4.63 133.62526119999993 4.747 125.22874499999999 4.402 130.20629810000003 3.764 154.68594739999998 4.31 155.7171244 3.689 126.5138896 4.897 147.014737 4.874 139.61268810000007 3.845 154.41320610000008 4.287 141.5466597 4.033)
Error minima by case: (27.6617 1 0.0737 1 10.4655 9 0.0 0 0.0 0 1.0565 1 0.0 0 0.7966 1 0.0 0 0.0 0 3.085 8 5.9564 1 1.0 1 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 2.0427 1 27.4161 1 0.0 0 2.6985 1 0.0 0 1.0 1 0.0 0)
Average genome size in population (length): 155.592
Average program size in population (points): 156.592
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 96.76074369035476
Average age in population: 94.54011903460678
Median age in population: 94.66609002831123
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.967
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.488
Error (vector) diversity:			 0.748
Behavioral diversity:				 0.751
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 168425587
--- Timings ---
Current time: 1529615113885 milliseconds
Total Time:         261.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        67.1 seconds, 25.7%
Fitness Testing:    154.0 seconds, 59.0%
Report:              39.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 35170.0
Test mean error for best: 17.58500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 138.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 183.0106062966
Correct output: -54.99029604   | Program output: -57.99029604  
Correct output: 60.5127184446  | Program output: 63.5127184446 
Correct output: 61.1705628788  | Program output: 61.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 96.2733863439 
Correct output: 136.9572654004 | Program output: 126.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 38.4574635021 
Correct output: 102.3014515582 | Program output: 93.3014515582 
Correct output: 82.9352078558  | Program output: 50.9352078558 
Correct output: 170.2225097733 | Program output: 165.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -96} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_mult float_dup_items float_div in1 integer_dec in1 integer_dec integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc integer_mod integer_sub integer_stackdepth float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc integer_dec float_inc float_inc integer_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc integer_div float_shove integer_div float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc -96 float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_mult integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float)
Errors: [92.0 2 73.0 2 35.0 13 2.0 1 29.0 2 16.0 2 1.0 1 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 7.0 2 3.0 1 3.0 1 0.0 0 7.0 2 25.0 2 10.0 1 40.0 1 19.0 2 9.0 3 32.0 2 5.0 2 16.0 2]
Total: 686.0
Mean: 13.72
Genome size: 180
Size: 181
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4364.3857745000005
Median total errors in population: 910.0
Error averages by case: (225.91750730000004 4.07 201.85123559999994 3.799 169.09062270000004 13.294 166.3740427999999 4.701 162.1933345 4.521 154.2758432 3.79 155.54301759999998 5.191 184.49994929999997 3.893 144.87871369999996 3.22 159.78303850000006 3.777 205.25735469999998 9.946 200.48314590000007 4.836 178.64979570000003 4.504 168.5671423000001 3.975 150.0539874 4.741 152.26316999999997 4.839 147.20601959999996 4.535 150.6329160000001 4.067 175.27942729999998 4.54 177.1687123 3.889 149.25723190000005 5.024 163.61753670000002 5.066 159.6765686000001 4.097 174.97815650000007 4.51 163.73730440000003 4.325)
Error minima by case: (51.6617 1 2.9263 1 9.4659 8 0.0 0 0.0 0 0.6245 1 0.0 0 1.9078 1 0.0 0 1.0 1 2.4731 2 29.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 5.0 1 0.0 0 1.0427 1 28.254 1 0.0 0 0.4712 1 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 159.052
Average program size in population (points): 160.052
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 97.75181312585258
Average age in population: 95.67964641515115
Median age in population: 95.89966693558723
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.963
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.963
Total error diversity:				 0.467
Error (vector) diversity:			 0.764
Behavioral diversity:				 0.768
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 172402787
--- Timings ---
Current time: 1529615119119 milliseconds
Total Time:         266.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        68.1 seconds, 25.6%
Fitness Testing:    157.3 seconds, 59.1%
Report:              40.7 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 35573.0
Test mean error for best: 17.78650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -97.338275572 
Correct output: 12.0737210789  | Program output: 86.0737210789 
Correct output: -10.4655066097 | Program output: 25.5344933903 
Correct output: 79.3049767458  | Program output: 81.3049767458 
Correct output: 109.3816555251 | Program output: 141.3816555251
Correct output: 17.1475953645  | Program output: 34.1475953645 
Correct output: 11.1076208156  | Program output: 14.1076208156 
Correct output: 21.5390260682  | Program output: 74.5390260682 
Correct output: 93.7628386321  | Program output: 93.7628386321 
Correct output: 95.2976348595  | Program output: 86.2976348595 
Correct output: -3.08498271    | Program output: 74.91501729   
Correct output: -152.0436144918 | Program output: -89.0436144918
Correct output: 190.0106062966 | Program output: 186.0106062966
Correct output: -54.99029604   | Program output: -48.99029604  
Correct output: 60.5127184446  | Program output: 66.5127184446 
Correct output: 61.1705628788  | Program output: 64.1705628788 
Correct output: -43.2506843864 | Program output: -35.2506843864
Correct output: 71.2733863439  | Program output: 99.2733863439 
Correct output: 136.9572654004 | Program output: 129.9572654004
Correct output: -86.5838714881 | Program output: -45.5838714881
Correct output: 19.4574635021  | Program output: 41.4574635021 
Correct output: 102.3014515582 | Program output: 96.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 168.2225097733
Correct output: 92.3146270329  | Program output: 77.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -96} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_dec float_inc integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc integer_mod integer_sub integer_stackdepth float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dup integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc integer_dec float_inc float_inc integer_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_dec float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc integer_div float_shove integer_div float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc -96 float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_mult integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float)
Errors: [93.0 2 74.0 2 36.0 13 2.0 2 32.0 2 17.0 2 3.0 1 53.0 2 0.0 0 9.0 2 78.0 10 63.0 3 4.0 2 6.0 2 6.0 1 3.0 1 8.0 2 28.0 2 7.0 2 41.0 2 22.0 2 6.0 3 3.0 1 2.0 2 15.0 2]
Total: 676.0
Mean: 13.52
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 3954.880039299999
Median total errors in population: 911.0
Error averages by case: (212.4332632 3.794 189.69940069999996 3.497 155.60730030000002 13.185 146.93252099999992 4.454 144.04400129999996 4.223 140.9254728 3.493 140.78663 5.241 171.9510679 3.595 129.80695709999998 2.897 139.97912620000005 3.396 193.1992496 9.864 185.8307356 4.559 157.5284124 4.217 150.65504960000007 3.737 133.8997067 4.66 135.74539520000002 4.736 134.30292859999997 4.404 134.66855920000012 3.827 154.5989411 4.242 164.02593159999998 3.655 132.40178269999998 4.902 146.2392437000001 4.825 143.28068840000012 3.902 154.0717373000001 4.236 144.70193709999998 4.023)
Error minima by case: (30.6617 1 1.2885 1 6.4655 8 0.0 0 0.0 0 2.7366 1 0.0 0 4.7511 1 0.0 0 0.101 1 0.915 8 8.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 5.0 1 0.0 0 1.0 1 7.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 161.667
Average program size in population (points): 162.667
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 99.37219141441645
Average age in population: 97.09985914403539
Median age in population: 97.21034021883341
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.513
Error (vector) diversity:			 0.804
Behavioral diversity:				 0.807
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 176445062
--- Timings ---
Current time: 1529615124296 milliseconds
Total Time:         271.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        69.1 seconds, 25.5%
Fitness Testing:    160.6 seconds, 59.2%
Report:              41.6 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 35362.0
Test mean error for best: 17.68100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 80.3049767458 
Correct output: 109.3816555251 | Program output: 145.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 13.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -59.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 103.2733863439
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 45.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -96} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc integer_div float_shove integer_div float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc -96 float_inc integer_div float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float)
Errors: [92.0 2 73.0 2 35.0 13 1.0 2 36.0 2 16.0 2 2.0 1 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 0.0 0 5.0 1 10.0 1 7.0 1 7.0 2 32.0 3 3.0 1 40.0 1 26.0 2 2.0 1 0.0 0 2.0 1 16.0 2]
Total: 663.0
Mean: 13.26
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 3921.1083992999997
Median total errors in population: 921.0
Error averages by case: (207.68194620000003 3.832 183.23244779999996 3.511 150.62364790000004 13.19 147.6542685999999 4.416 149.94563129999992 4.268 134.82508789999997 3.511 140.38435860000007 5.118 165.30817160000004 3.628 124.77523950000003 2.963 140.55791190000002 3.46 186.71491450000002 9.862 180.7289465 4.626 160.8842233999999 4.232 148.69298410000005 3.668 133.00452100000007 4.585 134.01136549999998 4.645 129.73931750000006 4.412 136.66334120000005 3.968 157.6757941 4.256 159.40419789999996 3.623 135.34729670000004 4.938 145.28130769999999 4.814 147.11756900000003 3.898 157.46528970000008 4.282 145.6316192 4.051)
Error minima by case: (28.6617 1 0.6569 1 1.3059 9 0.0 0 0.0 0 1.1476 1 0.0 0 0.3042 1 0.0 0 0.0 0 0.915 8 6.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 5.0 1 0.0 0 0.0 0 28.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 163.645
Average program size in population (points): 164.645
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 100.8252538044823
Average age in population: 98.44000080609116
Median age in population: 98.564654989944
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.521
Error (vector) diversity:			 0.818
Behavioral diversity:				 0.821
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 180536812
--- Timings ---
Current time: 1529615129515 milliseconds
Total Time:         276.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        70.2 seconds, 25.4%
Fitness Testing:    163.9 seconds, 59.2%
Report:              42.5 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 34647.0
Test mean error for best: 17.32350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 96.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 6.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 185.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 65.5127184446 
Correct output: 61.1705628788  | Program output: 63.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 128.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 40.4574635021 
Correct output: 102.3014515582 | Program output: 95.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 167.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_432)
Errors: [92.0 2 73.0 2 35.0 13 17.0 2 3.0 2 16.0 2 5.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 5.0 2 2.0 1 5.0 1 2.0 1 7.0 2 1.0 1 8.0 2 40.0 1 21.0 2 7.0 3 4.0 1 3.0 2 16.0 2]
Total: 626.0
Mean: 12.52
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 3998.7471867000004
Median total errors in population: 928.5
Error averages by case: (209.2443013 3.746 188.51667049999998 3.445 154.5340833 13.235 149.18423169999997 4.208 153.17224319999997 4.33 139.5891996 3.451 139.5825437 4.927 170.38549049999997 3.56 128.50191710000001 2.863 148.53111429999993 3.361 192.11091429999996 9.831 182.75854530000007 4.573 161.63493739999998 4.253 149.18405620000004 3.563 135.47318790000003 4.481 136.82221859999993 4.586 131.61430789999997 4.259 142.78538660000004 4.039 158.46633750000004 4.302 162.1372408 3.412 137.87759920000005 4.954 147.5621088 4.869 151.9434194000001 3.791 158.19123740000012 4.293 152.65889420000005 3.953)
Error minima by case: (25.6617 1 1.0737 1 6.5345 10 0.0 0 0.0 0 0.017 1 0.0 0 0.461 1 0.0 0 0.0 0 3.294 8 3.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 25.4161 1 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 167.679
Average program size in population (points): 168.679
Average percent parens in population: 0.006
Minimum age in population: 97.74466724176939
Maximum age in population: 101.7938839086308
Average age in population: 99.82799048486972
Median age in population: 99.84019017873017
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.522
Error (vector) diversity:			 0.781
Behavioral diversity:				 0.783
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 184729412
--- Timings ---
Current time: 1529615135048 milliseconds
Total Time:         282.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        71.2 seconds, 25.2%
Fitness Testing:    167.5 seconds, 59.4%
Report:              43.4 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 35374.0
Test mean error for best: 17.68700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 96.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 6.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 191.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 71.5127184446 
Correct output: 61.1705628788  | Program output: 69.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 134.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 46.4574635021 
Correct output: 102.3014515582 | Program output: 101.3014515582
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 173.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_pop integer_flush integer_dec in1 integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_mult integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float)
Errors: [92.0 2 73.0 2 35.0 13 17.0 2 3.0 2 16.0 2 5.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 1.0 1 2.0 1 11.0 2 8.0 1 7.0 2 1.0 1 2.0 1 40.0 1 27.0 2 1.0 1 4.0 1 3.0 1 16.0 2]
Total: 624.0
Mean: 12.48
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4029.8173754999993
Median total errors in population: 939.0
Error averages by case: (210.74726189999996 3.694 189.63590720000005 3.409 156.5889421 13.119 148.0938118 4.222 157.99644589999994 4.47 140.8160984 3.436 140.8975440999999 4.924 171.64181889999995 3.53 129.85461209999997 2.856 145.64691639999995 3.463 193.14616450000003 9.719 184.14291790000004 4.525 164.8500663 4.414 150.81376950000003 3.714 137.36839449999994 4.468 138.7331417 4.555 132.7615868 4.345 143.48771110000007 4.193 161.16730150000004 4.412 163.5445042 3.455 142.7950447999999 4.956 147.169247 5.022 150.96496280000008 3.876 161.31789120000008 4.379 148.44531290000003 4.034)
Error minima by case: (24.6617 1 0.9406 1 9.624 10 0.0 0 0.0 0 0.4799 1 0.0 0 0.7953 1 0.0 0 1.0 1 2.0888 8 2.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 2.4366 1 0.0 0 0.0 0 24.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 170.838
Average program size in population (points): 171.838
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 103.0823562530509
Average age in population: 100.622331497738
Median age in population: 101.1500602104064
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.532
Error (vector) diversity:			 0.795
Behavioral diversity:				 0.796
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 189001062
--- Timings ---
Current time: 1529615140384 milliseconds
Total Time:         287.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        72.2 seconds, 25.1%
Fitness Testing:    170.9 seconds, 59.4%
Report:              44.2 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 34182.0
Test mean error for best: 17.09100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 71.3049767458 
Correct output: 109.3816555251 | Program output: 109.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 4.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 183.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 63.5127184446 
Correct output: 61.1705628788  | Program output: 61.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 67.2733863439 
Correct output: 136.9572654004 | Program output: 126.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 38.4574635021 
Correct output: 102.3014515582 | Program output: 93.3014515582 
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 165.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction print_integer} {:instruction float_pop} {:instruction integer_pop} {:instruction float_sin} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction tagged_819} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_432})
Best program: (float_cos print_integer float_pop integer_pop float_sin integer_rot integer_fromfloat float_dup_times float_mult float_dup_items float_div in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_dec integer_dup_items float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc integer_yankdup integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div tagged_819 integer_div float_inc float_inc integer_yankdup float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_432)
Errors: [92.0 2 73.0 2 35.0 13 8.0 1 0.0 0 16.0 2 7.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 7.0 2 0.0 0 3.0 1 0.0 0 7.0 2 4.0 2 10.0 1 40.0 1 19.0 2 9.0 3 2.0 1 5.0 2 16.0 2]
Total: 612.0
Mean: 12.24
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 3935.6243925999997
Median total errors in population: 945.0
Error averages by case: (210.37380250000004 3.796 188.94488199999998 3.531 155.89397510000003 13.175 141.1629842999999 4.044 151.80402279999996 4.424 140.88216899999998 3.571 133.10788019999998 4.908 171.1176778 3.646 129.28065119999994 2.98 146.0957106 3.437 192.18659770000002 9.789 183.58923170000003 4.643 155.91920600000003 4.369 144.78027150000003 3.809 130.5316111 4.505 130.9467949 4.597 130.36990669999997 4.322 141.42512720000002 4.248 151.5066627 4.331 161.06394079999995 3.51 135.3878968 5.099 141.87266509999998 4.94 147.31078850000011 3.869 152.2512474000001 4.355 149.897689 4.023)
Error minima by case: (24.6617 1 0.7749 1 5.4655 2 0.0 0 0.0 0 2.1476 1 0.0 0 0.9166 1 0.0 0 0.0 0 1.085 7 2.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 3.1201 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.112
Average program size in population (points): 175.112
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 104.2879189697565
Average age in population: 101.4762709840254
Median age in population: 102.5387780221743
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.542
Error (vector) diversity:			 0.811
Behavioral diversity:				 0.813
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 193354512
--- Timings ---
Current time: 1529615145816 milliseconds
Total Time:         293.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        73.3 seconds, 25.0%
Fitness Testing:    174.4 seconds, 59.5%
Report:              45.2 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 35187.0
Test mean error for best: 17.59350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 74.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 7.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 189.0106062966
Correct output: -54.99029604   | Program output: -51.99029604  
Correct output: 60.5127184446  | Program output: 69.5127184446 
Correct output: 61.1705628788  | Program output: 67.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 132.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 44.4574635021 
Correct output: 102.3014515582 | Program output: 99.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 171.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_stackdepth float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 5.0 1 4.0 2 16.0 2 4.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 1.0 2 3.0 1 9.0 1 6.0 1 7.0 2 0.0 0 4.0 1 40.0 1 25.0 2 3.0 3 5.0 1 1.0 1 16.0 2]
Total: 609.0
Mean: 12.18
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 3999.3857792
Median total errors in population: 957.0
Error averages by case: (207.5322137 3.729 188.61977999999996 3.494 155.3440513 13.147 148.67062529999978 4.258 158.6743225999998 4.621 139.3189938 3.51 138.16921540000004 4.981 170.52416689999998 3.578 129.59494169999994 2.907 145.66860730000005 3.407 192.0607119 9.724 180.76005609999999 4.583 162.26680249999995 4.489 148.1518949000001 3.758 134.47302900000014 4.563 135.04545179999994 4.63 132.4541062 4.263 145.59495330000013 4.426 157.62514779999992 4.456 160.76722130000005 3.349 142.12738600000006 5.25 144.23528100000007 5.052 151.12914910000018 3.844 158.59586890000014 4.444 153.4868014 4.032)
Error minima by case: (13.6617 1 3.9524 1 3.5552 9 0.0 0 0.0 0 4.4809 1 0.0 0 0.2534 1 0.0 0 0.0 0 3.294 2 2.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 9.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1)
Average genome size in population (length): 176.341
Average program size in population (points): 177.341
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 105.7243388778616
Average age in population: 102.7252181060415
Median age in population: 103.7622711696624
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.541
Error (vector) diversity:			 0.808
Behavioral diversity:				 0.81
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 197763537
--- Timings ---
Current time: 1529615151135 milliseconds
Total Time:         298.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        74.3 seconds, 24.9%
Fitness Testing:    177.8 seconds, 59.6%
Report:              46.0 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 35058.0
Test mean error for best: 17.52900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 74.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 7.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -51.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 43.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_inc} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_inc in1 integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_stackdepth float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_yank -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 5.0 1 4.0 2 16.0 2 4.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 2.0 2 3.0 1 8.0 1 5.0 1 7.0 2 0.0 0 5.0 1 40.0 1 24.0 2 4.0 3 5.0 1 0.0 0 16.0 2]
Total: 607.0
Mean: 12.14
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4003.8504559
Median total errors in population: 957.0
Error averages by case: (212.48399970000008 3.852 189.9372955 3.544 156.93666740000006 13.18 147.34742959999986 4.083 156.8510948999999 4.561 141.21632579999996 3.548 136.60812879999997 5.026 172.15338469999998 3.652 129.41452149999998 2.992 144.69284010000007 3.445 193.21486070000003 9.758 185.10397500000008 4.725 161.0404982 4.477 146.43306970000003 3.762 135.1214414000001 4.684 135.39682049999993 4.784 134.3799486 4.308 143.56734830000016 4.391 156.6160471999999 4.421 163.33735479999999 3.482 142.93847680000005 5.328 143.08732210000005 5.055 148.86425590000013 3.867 157.44013710000016 4.452 150.27221159999996 4.018)
Error minima by case: (33.6617 1 1.0737 1 0.4655 9 0.0 0 0.0 0 4.7387 1 0.0 0 0.3857 1 0.0 0 0.0 0 1.6416 2 11.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 6.0 1 0.0 0 0.0 0 9.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.3146 1)
Average genome size in population (length): 176.912
Average program size in population (points): 177.912
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 107.1064651280852
Average age in population: 102.772159517684
Median age in population: 105.226651464257
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.993
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.993
Total error diversity:				 0.532
Error (vector) diversity:			 0.812
Behavioral diversity:				 0.816
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 202186937
--- Timings ---
Current time: 1529615156585 milliseconds
Total Time:         303.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        75.4 seconds, 24.8%
Fitness Testing:    181.4 seconds, 59.7%
Report:              46.9 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 34935.0
Test mean error for best: 17.46750
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 74.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 7.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -51.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 43.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_stackdepth float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 5.0 1 3.0 2 16.0 2 4.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 2.0 2 3.0 1 8.0 1 5.0 1 7.0 2 1.0 1 5.0 1 40.0 1 24.0 2 4.0 3 5.0 1 0.0 0 16.0 2]
Total: 608.0
Mean: 12.16
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 3870.9105407999996
Median total errors in population: 940.0
Error averages by case: (205.63364800000005 3.717 183.21531050000002 3.475 150.0113765 13.177 142.2275206999999 4.039 152.22062999999991 4.498 134.1336753 3.502 131.0731153 4.99 165.2185546 3.584 123.47070459999996 2.974 141.75373820000002 3.362 186.5949708 9.748 178.26570139999998 4.586 156.1152481000001 4.454 141.464727 3.854 130.60888570000006 4.457 130.72867159999998 4.551 128.15596270000003 4.28 141.89978830000013 4.369 151.74663739999988 4.333 157.52028989999997 3.342 137.01991449999997 5.056 141.37411870000005 5.039 144.09038040000007 3.796 152.44558790000013 4.401 146.3653827 3.972)
Error minima by case: (15.6617 1 3.2581 1 4.4655 8 0.0 0 0.0 0 3.8524 1 0.0 0 0.539 1 0.0 0 0.7024 1 1.085 8 5.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 2.9906 1 0.0 0 0.0 0 15.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.781
Average program size in population (points): 178.781
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 108.4930829410824
Average age in population: 103.1585538695745
Median age in population: 106.4632569895084
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.544
Error (vector) diversity:			 0.83
Behavioral diversity:				 0.833
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 206632137
--- Timings ---
Current time: 1529615162092 milliseconds
Total Time:         309.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        76.4 seconds, 24.7%
Fitness Testing:    184.9 seconds, 59.8%
Report:              47.7 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 34547.0
Test mean error for best: 17.27350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 75.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 8.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -50.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 43.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dup_times integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc -46 integer_dec integer_dup_times float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 4.0 1 3.0 2 16.0 2 3.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 2.0 2 4.0 1 8.0 1 5.0 1 7.0 2 1.0 1 5.0 1 40.0 1 24.0 2 4.0 3 1.0 1 0.0 0 16.0 2]
Total: 603.0
Mean: 12.06
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4654.830188399998
Median total errors in population: 962.0
Error averages by case: (232.75765370000008 4.2 212.3671764 3.937 180.38896150000002 13.221 170.25309239999987 4.482 180.70520319999994 4.852 165.115185 3.926 160.9878659 5.571 195.14687199999995 4.018 155.75735769999994 3.396 174.48900159999997 3.903 215.5339485 9.849 206.99140580000005 5.02 191.41356580000001 4.966 170.24980600000012 4.064 164.09024390000005 4.965 163.614995 5.029 156.9753213 4.646 170.99718950000005 4.667 186.4915752 4.863 186.94570249999998 3.781 171.4559386 5.476 175.1631692 5.484 172.74935080000014 4.236 187.77632630000025 4.939 178.44728060000006 4.475)
Error minima by case: (10.6617 1 0.0885 1 5.4655 9 0.0 0 0.0 0 1.7532 1 0.0 0 0.2173 1 0.0 0 0.0904 1 0.085 7 0.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 10.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 1.6854 1)
Average genome size in population (length): 176.589
Average program size in population (points): 177.589
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 109.9810894604462
Average age in population: 102.6207768603367
Median age in population: 107.6537370256281
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.554
Error (vector) diversity:			 0.822
Behavioral diversity:				 0.826
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 211047478
--- Timings ---
Current time: 1529615167552 milliseconds
Total Time:         314.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        77.4 seconds, 24.6%
Fitness Testing:    188.4 seconds, 59.9%
Report:              48.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 34547.0
Test mean error for best: 17.27350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 75.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 8.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 85.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -50.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 43.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 76.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dup_times integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc -46 integer_dec integer_dup_times float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_max float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 4.0 1 3.0 2 16.0 2 3.0 2 52.0 2 1.0 1 10.0 1 77.0 9 62.0 3 2.0 2 4.0 1 8.0 1 5.0 1 7.0 2 1.0 1 5.0 1 40.0 1 24.0 2 4.0 3 1.0 1 0.0 0 16.0 2]
Total: 603.0
Mean: 12.06
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5090.255615199999
Median total errors in population: 951.0
Error averages by case: (251.949918 4.392 231.12161640000002 4.119 197.77701169999997 13.278 193.12914849999973 4.664 197.3564326999999 4.935 184.93967499999994 4.132 182.02529579999998 5.701 214.28998659999993 4.234 175.63000259999993 3.663 185.51410219999988 3.921 233.0416923 9.906 226.51592030000003 5.247 204.98399040000015 5.075 187.74996670000016 4.209 180.6019618999999 4.893 180.56183210000006 4.927 178.33889620000005 4.809 185.67492520000016 4.681 200.89614450000013 4.947 208.26819129999998 3.977 186.68284459999998 5.508 189.37387740000003 5.532 189.6150857000002 4.309 200.99712920000016 5.015 192.51196790000014 4.634)
Error minima by case: (22.6617 1 0.0737 1 6.4655 7 0.0 0 0.0 0 4.1476 1 0.0 0 3.3778 1 0.0 0 0.0 0 0.915 7 0.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 1)
Average genome size in population (length): 177.608
Average program size in population (points): 178.608
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 111.1904932727524
Average age in population: 103.3725759549839
Median age in population: 109.0025805560131
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.524
Error (vector) diversity:			 0.806
Behavioral diversity:				 0.811
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 215487953
--- Timings ---
Current time: 1529615173056 milliseconds
Total Time:         320.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        78.5 seconds, 24.5%
Fitness Testing:    192.0 seconds, 60.0%
Report:              49.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 34891.0
Test mean error for best: 17.44550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -48.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 45.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 80.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_dec float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_min integer_dec float_inc float_inc float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 2.0 1 6.0 2 16.0 2 1.0 1 52.0 2 1.0 1 5.0 1 77.0 9 62.0 3 0.0 0 6.0 2 10.0 1 7.0 1 7.0 2 2.0 1 3.0 1 40.0 1 26.0 2 2.0 1 2.0 1 2.0 1 11.0 2]
Total: 595.0
Mean: 11.9
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4721.2296733
Median total errors in population: 972.6944
Error averages by case: (236.29321270000005 4.375 213.06359770000003 4.074 181.22484380000006 13.275 179.2735101999998 4.704 181.384475 4.869 166.52050769999997 4.066 164.67994109999998 5.802 196.18350879999994 4.145 158.2148907999999 3.578 174.88710909999992 3.895 216.0441713 9.847 210.04131200000003 5.227 193.87428160000002 5.114 175.75659530000007 4.271 167.04063830000007 5.056 166.47160009999993 5.136 160.79107330000005 4.753 170.78971160000006 4.65 188.3054392 4.994 189.4934064 4.024 174.4280515 5.689 177.1563717000001 5.611 177.5055932000002 4.359 190.05618790000008 5.041 180.64764300000007 4.547)
Error minima by case: (24.6617 1 1.9263 1 5.4655 9 0.0 0 0.0 0 3.1476 1 0.0 0 0.4474 1 0.0 0 1.0 1 0.085 8 2.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 7.1615 1 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1)
Average genome size in population (length): 176.868
Average program size in population (points): 177.868
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 112.5591361275678
Average age in population: 102.3693988700656
Median age in population: 110.2903511100756
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.52
Error (vector) diversity:			 0.797
Behavioral diversity:				 0.802
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 219910128
--- Timings ---
Current time: 1529615178551 milliseconds
Total Time:         325.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        79.6 seconds, 24.4%
Fitness Testing:    195.5 seconds, 60.0%
Report:              50.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 34891.0
Test mean error for best: 17.44550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -48.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 45.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 80.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_dec float_inc integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_dec float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_min integer_dec float_inc float_inc float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 2.0 1 6.0 2 16.0 2 1.0 1 52.0 2 1.0 1 5.0 1 77.0 9 62.0 3 0.0 0 6.0 2 10.0 1 7.0 1 7.0 2 2.0 1 3.0 1 40.0 1 26.0 2 2.0 1 2.0 1 2.0 1 11.0 2]
Total: 595.0
Mean: 11.9
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4697.642187799999
Median total errors in population: 953.0
Error averages by case: (238.47023800000008 4.387 216.39991229999995 4.086 184.24864410000004 13.265 173.60539319999984 4.477 174.07664489999993 4.737 170.00833059999994 4.106 164.9805959 5.537 199.52166979999998 4.178 160.16982349999995 3.545 173.94849490000004 3.813 219.4593288 9.873 212.85143350000013 5.268 187.25277910000005 4.953 172.55046760000013 4.144 167.28840290000014 4.823 166.93377779999997 4.878 164.07847280000007 4.789 166.06599990000015 4.474 182.54740980000008 4.784 191.67746129999998 3.97 172.13607569999996 5.435 173.56262120000005 5.485 174.27008940000022 4.229 183.69549400000014 4.865 179.26362680000008 4.478)
Error minima by case: (11.6617 1 3.0229 1 4.3355 9 0.0 0 0.0 0 1.1476 1 0.0 0 1.539 1 0.0 0 1.0 1 2.294 7 1.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0 0 5.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 178.348
Average program size in population (points): 179.348
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 113.6682606790709
Average age in population: 103.1588123814488
Median age in population: 111.5837331833983
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.497
Error (vector) diversity:			 0.799
Behavioral diversity:				 0.803
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 224369528
--- Timings ---
Current time: 1529615184098 milliseconds
Total Time:         331.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        80.6 seconds, 24.3%
Fitness Testing:    199.1 seconds, 60.1%
Report:              51.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 34440.0
Test mean error for best: 17.22000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 75.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 8.1076208156  
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -50.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 43.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 78.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction integer_max} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_mod} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_pop integer_max float_pop in1 integer_dec in1 integer_dec float_inc float_dec float_inc integer_mod print_integer float_pop in1 integer_dec integer_dec integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_dec float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_min integer_dec float_inc float_inc float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 4.0 1 4.0 2 16.0 2 3.0 2 52.0 2 1.0 1 5.0 1 77.0 9 62.0 3 2.0 2 4.0 1 8.0 1 5.0 1 7.0 2 0.0 0 5.0 1 40.0 1 24.0 2 4.0 3 4.0 2 0.0 0 11.0 2]
Total: 596.0
Mean: 11.92
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5345.154045299998
Median total errors in population: 977.0
Error averages by case: (264.4377460000002 4.834 240.4126282 4.524 210.19104149999998 13.3 199.86382579999972 4.922 201.90496059999992 5.302 196.53532909999984 4.538 190.28284859999997 6.139 224.57088789999992 4.604 186.22878949999986 4.117 197.23580409999983 4.39 243.01210220000004 9.901 239.69365180000014 5.707 214.6441457000002 5.466 198.75411600000012 4.635 190.64402170000005 5.338 190.24475790000005 5.38 191.3776747000001 5.236 192.37727790000022 4.971 208.3242767000001 5.349 218.45132569999993 4.498 196.77877520000007 5.882 196.9596791000001 5.976 198.38988140000023 4.766 210.64449310000023 5.424 203.0070049000002 4.988)
Error minima by case: (21.6617 1 4.0737 1 7.4655 10 0.0 0 0.0 0 0.6531 1 0.0 0 3.539 1 0.0 0 0.0 0 0.085 8 0.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0 0 6.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 172.875
Average program size in population (points): 173.875
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 114.9147840966287
Average age in population: 99.39831753868168
Median age in population: 112.8270888296983
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.511
Error (vector) diversity:			 0.78
Behavioral diversity:				 0.787
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 228692519
--- Timings ---
Current time: 1529615189407 milliseconds
Total Time:         336.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        81.7 seconds, 24.3%
Fitness Testing:    202.5 seconds, 60.2%
Report:              52.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 33877.0
Test mean error for best: 16.93850
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 66.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_mult} {:instruction print_integer} {:instruction float_inc} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction -90} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (float_mult float_dup_items float_div in1 integer_dec in1 integer_dec integer_mult print_integer float_inc in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div integer_dup float_inc integer_add float_inc float_inc integer_div float_dup integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc -90 integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 2.0 1 3.0 2 16.0 2 1.0 1 52.0 2 1.0 1 5.0 1 77.0 9 62.0 3 0.0 0 2.0 1 10.0 1 7.0 1 7.0 2 1.0 1 3.0 1 40.0 1 7.0 1 2.0 1 16.0 2 2.0 1 11.0 2]
Total: 581.0
Mean: 11.62
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5630.341637299999
Median total errors in population: 986.5
Error averages by case: (274.8503018000001 4.777 253.1186991 4.482 222.09109329999998 13.314 209.86748069999982 4.87 211.5143867 5.269 207.47279849999993 4.496 201.13430810000003 6.051 236.7514251 4.584 195.68668859999988 3.991 208.79143919999999 4.383 255.88760139999997 9.932 250.5961476000001 5.636 224.97630870000006 5.464 210.56997150000024 4.689 203.7254917 5.346 203.82681910000002 5.402 203.17952640000004 5.198 202.4968412000001 4.968 219.99521240000004 5.31 230.94626139999997 4.436 207.81708129999996 5.869 209.34773120000008 5.935 211.06176380000022 4.808 221.40664220000014 5.379 213.6816163000002 4.959)
Error minima by case: (7.6617 1 0.8059 1 2.4744 8 0.0 0 0.0 0 3.1476 1 0.0 0 1.0495 1 0.0 0 0.0 0 3.085 8 3.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 4.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.576
Average program size in population (points): 177.576
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 116.2919383752081
Average age in population: 102.904313338042
Median age in population: 114.1698931425815
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.492
Error (vector) diversity:			 0.777
Behavioral diversity:				 0.782
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 233107669
--- Timings ---
Current time: 1529615194842 milliseconds
Total Time:         341.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        82.7 seconds, 24.2%
Fitness Testing:    206.0 seconds, 60.2%
Report:              53.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 33601.0
Test mean error for best: 16.80050
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -98.338275572 
Correct output: 12.0737210789  | Program output: 85.0737210789 
Correct output: -10.4655066097 | Program output: 24.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 111.3816555251
Correct output: 17.1475953645  | Program output: 33.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 73.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 73.91501729   
Correct output: -152.0436144918 | Program output: -90.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -36.2506843864
Correct output: 71.2733863439  | Program output: 69.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -46.5838714881
Correct output: 19.4574635021  | Program output: 11.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_yankdup} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult integer_yankdup float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div float_shove float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc float_inc float_inc print_integer float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div integer_min float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc 11 integer_sub integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_dup_times integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec float_inc float_inc float_yank float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [92.0 2 73.0 2 35.0 13 0.0 0 2.0 2 16.0 2 1.0 1 52.0 2 1.0 1 5.0 1 77.0 9 62.0 3 0.0 0 1.0 1 10.0 1 7.0 1 7.0 2 2.0 2 3.0 1 40.0 1 8.0 1 2.0 1 4.0 1 2.0 1 11.0 2]
Total: 566.0
Mean: 11.32
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5483.698555599999
Median total errors in population: 984.0
Error averages by case: (268.1042608 4.679 242.98364560000005 4.407 213.6155274 13.225 204.21350329999981 4.643 209.1804940999999 5.076 199.04524129999996 4.437 195.7905016 6.021 227.02923619999996 4.491 189.41977879999988 3.919 200.37305159999997 4.219 245.80809440000004 9.88 243.55439310000014 5.547 223.4603715000002 5.362 206.2789484000001 4.542 199.49700190000001 5.373 199.30630170000015 5.425 195.1837471 5.041 199.87850220000016 4.735 218.15866570000009 5.239 223.14069620000004 4.252 203.6025967 6.025 207.6819768000001 5.864 204.68478140000022 4.593 219.84924060000017 5.301 206.7799972000002 4.782)
Error minima by case: (8.3383 1 2.7341 1 2.3448 7 0.0 0 0.0 0 2.5311 1 0.0 0 1.1828 1 0.0 0 0.0 0 0.8089 8 13.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 6.0 1 0.0 0 0.0 0 8.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 172.012
Average program size in population (points): 173.012
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 117.7077998740911
Average age in population: 100.4759638040647
Median age in population: 115.3759420617913
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.506
Error (vector) diversity:			 0.786
Behavioral diversity:				 0.793
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 237408144
--- Timings ---
Current time: 1529615200255 milliseconds
Total Time:         347.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        83.8 seconds, 24.1%
Fitness Testing:    209.4 seconds, 60.3%
Report:              54.1 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 32567.0
Test mean error for best: 16.28350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 185.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 65.5127184446 
Correct output: 61.1705628788  | Program output: 63.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 128.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 95.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 167.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 5.0 2 0.0 0 5.0 1 2.0 1 6.0 2 0.0 0 8.0 2 39.0 2 6.0 1 7.0 3 5.0 1 3.0 2 13.0 2]
Total: 572.0
Mean: 11.44
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5797.162982899999
Median total errors in population: 1000.0
Error averages by case: (277.3564444000001 4.84 254.9205158000001 4.512 224.88584429999995 13.344 217.65080279999992 4.835 222.59077239999993 5.282 210.94132459999994 4.533 207.2765827 6.045 239.82131569999993 4.621 201.3672815999999 4.04 215.22905809999983 4.508 258.7491257999999 9.996 251.53438630000008 5.801 237.17966160000014 5.555 217.6830608000002 4.8 213.7470493999999 5.429 214.06172500000014 5.478 205.58275770000006 5.248 214.75973080000017 4.969 232.62111350000023 5.393 230.74512150000004 4.564 212.99297669999987 6.038 223.6288638000002 5.984 216.60847510000028 4.792 234.81384760000014 5.43 219.36714490000026 5.011)
Error minima by case: (7.6617 1 1.074 1 5.1964 10 0.0 0 0.0 0 2.2287 1 0.0 0 4.461 1 0.0 0 0.0 0 0.085 7 5.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 4.7493 1 0.0 0 0.0 0 7.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.739
Average program size in population (points): 175.739
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 118.9371834400382
Average age in population: 103.7440186065548
Median age in population: 116.6515526484822
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.995
Total error diversity:				 0.532
Error (vector) diversity:			 0.802
Behavioral diversity:				 0.809
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 241777144
--- Timings ---
Current time: 1529615205668 milliseconds
Total Time:         352.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        84.8 seconds, 24.0%
Fitness Testing:    212.9 seconds, 60.3%
Report:              55.0 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 32567.0
Test mean error for best: 16.28350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 185.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 65.5127184446 
Correct output: 61.1705628788  | Program output: 63.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 128.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 95.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 167.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 5.0 2 0.0 0 5.0 1 2.0 1 6.0 2 0.0 0 8.0 2 39.0 2 6.0 1 7.0 3 5.0 1 3.0 2 13.0 2]
Total: 572.0
Mean: 11.44
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5384.760909699999
Median total errors in population: 974.0
Error averages by case: (263.35145059999996 4.69 239.86596860000003 4.393 208.78098790000004 13.193 197.1540074999998 4.558 204.75879599999996 5.141 195.63407249999995 4.408 191.23315049999988 6.016 223.86711189999994 4.486 187.89940109999998 3.92 198.50747309999983 4.314 242.7036058 9.956 237.92875890000008 5.544 222.03751970000016 5.347 195.42901940000004 4.482 197.08809839999986 5.371 196.76830730000012 5.49 191.40009730000006 5.07 196.91723970000015 4.779 216.55503090000016 5.226 218.76609649999992 4.383 196.9937053999999 5.986 204.99510360000014 5.822 198.13054840000015 4.624 218.3413466000002 5.292 202.33701210000015 4.826)
Error minima by case: (4.3383 1 0.0737 1 1.5345 9 0.0 0 0.0 0 0.8524 1 0.0 0 1.8177 1 0.0 0 0.0 0 0.085 8 1.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 0.9674 1 0.0 0 0.0 0 4.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.126
Average program size in population (points): 175.126
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 120.1757669776353
Average age in population: 104.2231845687086
Median age in population: 117.9058765409991
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.536
Error (vector) diversity:			 0.821
Behavioral diversity:				 0.826
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 246130544
--- Timings ---
Current time: 1529615211000 milliseconds
Total Time:         358.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        85.9 seconds, 24.0%
Fitness Testing:    216.3 seconds, 60.4%
Report:              55.9 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 32567.0
Test mean error for best: 16.28350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 185.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 65.5127184446 
Correct output: 61.1705628788  | Program output: 63.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 128.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 95.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 167.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 5.0 2 0.0 0 5.0 1 2.0 1 6.0 2 0.0 0 8.0 2 39.0 2 6.0 1 7.0 3 5.0 1 3.0 2 13.0 2]
Total: 572.0
Mean: 11.44
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5447.811377299999
Median total errors in population: 982.0
Error averages by case: (267.3526643000001 4.761 239.83656740000006 4.453 210.4093863 13.255 202.3498776999998 4.749 206.21090529999984 5.311 195.99020839999994 4.473 194.3373081999999 6.086 224.96288629999992 4.571 186.9547660999999 3.939 200.33589619999984 4.383 242.62443799999994 9.902 241.9681746000001 5.677 221.57595830000022 5.487 205.83444590000013 4.718 200.28083639999986 5.361 199.70499080000025 5.417 194.83772680000007 5.082 198.78446110000016 4.911 215.53256860000022 5.345 221.88190469999998 4.5 200.15612539999984 5.936 208.0843621 5.941 205.24482270000019 4.767 217.6719258000002 5.392 205.5501699000002 4.921)
Error minima by case: (4.6617 1 1.5213 1 0.1153 9 0.0 0 0.0 0 0.4025 1 0.0 0 0.539 1 0.0 0 0.0 0 0.915 8 3.0872 2 0.0 0 0.0 0 0.0 0 0.0 0 3.7493 1 0.0 0 0.0 0 4.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.975
Average program size in population (points): 175.975
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 121.4316178477309
Average age in population: 105.6600130408151
Median age in population: 119.2937216764296
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.513
Error (vector) diversity:			 0.796
Behavioral diversity:				 0.806
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 250505094
--- Timings ---
Current time: 1529615216418 milliseconds
Total Time:         363.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        86.9 seconds, 23.9%
Fitness Testing:    219.8 seconds, 60.4%
Report:              56.7 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 32567.0
Test mean error for best: 16.28350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 185.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 65.5127184446 
Correct output: 61.1705628788  | Program output: 63.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 128.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 95.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 167.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 5.0 2 0.0 0 5.0 1 2.0 1 6.0 2 0.0 0 8.0 2 39.0 2 6.0 1 7.0 3 5.0 1 3.0 2 13.0 2]
Total: 572.0
Mean: 11.44
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5709.155669299999
Median total errors in population: 993.0
Error averages by case: (276.51588860000004 4.888 255.20685450000005 4.618 224.00743069999996 13.329 211.76244619999977 4.802 215.82556889999995 5.432 211.64758679999986 4.604 204.06232200000008 6.029 239.44954919999986 4.699 202.27076469999992 4.124 212.2677141999998 4.558 257.95854439999994 10.061 252.26099420000014 5.734 232.1444170000001 5.552 212.31293950000014 4.814 204.14444819999997 5.551 204.2183696 5.626 206.27041440000008 5.286 203.1973819000002 5.019 226.51220880000017 5.444 232.04984229999994 4.68 210.67354380000012 6.058 211.8322002000001 6.003 214.81882870000027 4.881 228.44513680000014 5.536 216.97027370000023 5.002)
Error minima by case: (2.6617 1 0.0737 1 5.4655 7 0.0 0 0.0 0 0.7417 1 0.0 0 1.2803 1 0.0 0 0.0 0 1.085 8 0.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.0328 1 0.0 0 0.0 0 2.4161 1 0.3642 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.647
Average program size in population (points): 175.647
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 122.7846035853061
Average age in population: 106.9955477041396
Median age in population: 120.6530167702814
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.525
Error (vector) diversity:			 0.801
Behavioral diversity:				 0.807
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 254871769
--- Timings ---
Current time: 1529615221709 milliseconds
Total Time:         368.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        88.0 seconds, 23.9%
Fitness Testing:    223.2 seconds, 60.5%
Report:              57.6 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 32195.0
Test mean error for best: 16.09750
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 185.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 65.5127184446 
Correct output: 61.1705628788  | Program output: 63.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 128.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 95.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 167.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc -46 integer_dec integer_dec float_inc integer_div integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_inc integer_min integer_dec integer_min integer_dec float_dup integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div integer_max float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 5.0 2 0.0 0 5.0 1 2.0 1 6.0 2 0.0 0 8.0 2 39.0 2 6.0 1 7.0 3 3.0 1 3.0 2 13.0 2]
Total: 570.0
Mean: 11.4
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4940.8709449
Median total errors in population: 938.0
Error averages by case: (249.19286380000005 4.399 224.2466683000001 4.128 193.40888709999996 13.242 181.56981459999986 4.383 184.41206249999988 4.876 178.26257359999997 4.129 171.59377600000008 5.639 207.49818669999993 4.181 166.28461659999996 3.549 176.70843439999993 4.15 227.51242689999992 9.995 224.00058280000013 5.286 202.18952870000012 5.136 181.93425320000003 4.386 177.43846100000005 5.121 177.9994895000001 5.197 174.84921190000006 4.638 177.3259657000001 4.516 197.3957706000001 5.022 202.36650439999994 4.143 178.36691569999996 5.624 188.10777900000002 5.665 184.6402060000001 4.365 198.4901417000002 5.043 183.7518242 4.511)
Error minima by case: (22.6617 1 1.9263 1 0.5345 8 0.0 0 0.0 0 0.5117 1 0.0 0 1.114 1 0.0 0 0.0 0 0.085 8 0.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 11.9872 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.953
Average program size in population (points): 177.953
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 124.3898735008271
Average age in population: 109.6370759888982
Median age in population: 121.994857818231
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.512
Error (vector) diversity:			 0.823
Behavioral diversity:				 0.829
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 259296169
--- Timings ---
Current time: 1529615227132 milliseconds
Total Time:         374.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        89.0 seconds, 23.8%
Fitness Testing:    226.7 seconds, 60.6%
Report:              58.4 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 32195.0
Test mean error for best: 16.09750
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 185.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 65.5127184446 
Correct output: 61.1705628788  | Program output: 63.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 128.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 95.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 167.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc -46 integer_dec integer_dec float_inc integer_div integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_inc integer_min integer_dec integer_min integer_dec float_dup integer_div float_inc float_inc float_inc float_inc integer_add float_inc integer_div integer_div integer_max float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 5.0 2 0.0 0 5.0 1 2.0 1 6.0 2 0.0 0 8.0 2 39.0 2 6.0 1 7.0 3 3.0 1 3.0 2 13.0 2]
Total: 570.0
Mean: 11.4
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4650.491267999999
Median total errors in population: 953.0
Error averages by case: (233.22443570000016 4.372 211.05763510000008 4.096 178.83803629999989 13.239 175.4094491999998 4.556 178.28090799999993 4.947 164.1261915999999 4.084 160.59545130000004 5.55 194.34796309999987 4.165 154.40943209999995 3.582 171.67221059999986 4.319 214.05756229999994 10.106 207.39301980000013 5.189 190.68972580000013 5.116 177.03894590000024 4.375 162.2355395 4.947 162.3643031000001 5.035 156.99212770000005 4.676 168.36210690000007 4.601 185.46454230000018 4.968 186.50249599999995 4.209 166.0282487 5.619 175.35411159999998 5.647 179.09243660000024 4.478 187.17584830000013 5.066 178.20754050000014 4.629)
Error minima by case: (20.6617 1 3.2336 1 1.4655 9 0.0 0 0.0 0 1.0087 1 0.0 0 2.461 1 0.0 0 0.0 0 1.742 8 1.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 2.2507 1 0.0 0 0.0 0 13.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.223
Average program size in population (points): 178.223
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 125.6800145010675
Average age in population: 112.023306563919
Median age in population: 123.2984197198631
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.541
Error (vector) diversity:			 0.824
Behavioral diversity:				 0.83
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 263727144
--- Timings ---
Current time: 1529615232624 milliseconds
Total Time:         379.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        90.1 seconds, 23.7%
Fitness Testing:    230.2 seconds, 60.6%
Report:              59.3 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 33025.0
Test mean error for best: 16.51250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_836} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc tagged_836 integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 0.0 0 0.0 0 10.0 1 7.0 1 6.0 2 0.0 0 3.0 1 39.0 2 6.0 1 2.0 1 5.0 1 2.0 1 13.0 2]
Total: 560.0
Mean: 11.2
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5091.434191499999
Median total errors in population: 959.0
Error averages by case: (253.1474626000001 4.583 228.1332519 4.348 197.51606420000005 13.255 187.52018339999978 4.648 195.24123069999996 5.162 183.16729469999987 4.326 181.17055360000003 5.639 210.7976962 4.404 174.1225265999999 3.8 185.81228469999996 4.503 231.06633220000003 10.182 227.8703498000001 5.461 208.52188519999993 5.343 191.68760439999994 4.504 180.27372940000004 5.24 180.33114999999995 5.34 179.87266879999999 4.809 183.83843750000005 4.814 202.85911170000003 5.269 207.57365559999997 4.503 188.57075219999996 5.753 190.77536790000013 5.86 189.53249960000016 4.615 204.56002690000022 5.303 191.04807169999998 4.76)
Error minima by case: (17.6617 1 0.0737 1 0.4655 9 0.0 0 0.0 0 1.1476 1 0.0 0 0.7197 1 0.0 0 1.0 1 0.3076 8 1.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0 0 0.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.588
Average program size in population (points): 176.588
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 126.7233575739479
Average age in population: 111.577882794206
Median age in population: 124.4113914312909
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.528
Error (vector) diversity:			 0.822
Behavioral diversity:				 0.828
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 268117344
--- Timings ---
Current time: 1529615238041 milliseconds
Total Time:         385.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        91.1 seconds, 23.7%
Fitness Testing:    233.7 seconds, 60.7%
Report:              60.2 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 33025.0
Test mean error for best: 16.51250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_836} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_477})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc tagged_836 integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min integer_pop tagged_477)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 0.0 0 0.0 0 10.0 1 7.0 1 6.0 2 0.0 0 3.0 1 39.0 2 6.0 1 2.0 1 5.0 1 2.0 1 13.0 2]
Total: 560.0
Mean: 11.2
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5676.194092499999
Median total errors in population: 963.0
Error averages by case: (274.26232660000016 4.708 250.4483448000001 4.417 219.7518381999999 13.281 206.2181639999998 4.692 214.65870689999988 5.269 206.30996129999994 4.43 200.5085318 5.786 234.4119788999999 4.506 196.76813549999994 3.909 208.18444199999988 4.614 253.31425289999993 10.279 249.18726360000008 5.593 236.08624300000022 5.543 211.00180470000024 4.522 212.76727829999996 5.518 212.85001180000006 5.597 204.4213899000001 4.878 204.53684760000016 4.857 230.34171240000035 5.466 230.62102579999998 4.647 208.82370060000008 6.125 218.64414170000012 6.035 209.14031510000024 4.664 232.19068750000025 5.527 211.0599876000002 4.822)
Error minima by case: (6.6617 1 0.5653 1 8.4655 9 0.0 0 0.0 0 3.1476 1 0.0 0 0.4231 1 0.0 0 0.0 0 1.085 8 1.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0 0 6.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.464
Average program size in population (points): 175.464
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 127.7767309277146
Average age in population: 111.4707169244072
Median age in population: 125.7073826941534
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.542
Error (vector) diversity:			 0.802
Behavioral diversity:				 0.807
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 272479019
--- Timings ---
Current time: 1529615243423 milliseconds
Total Time:         390.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        92.2 seconds, 23.6%
Fitness Testing:    237.1 seconds, 60.7%
Report:              61.1 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 33518.0
Test mean error for best: 16.75900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 119.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 77.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 19.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_110} {:instruction float_dup_items} {:instruction float_div} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_shove} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (tag_integer_110 float_dup_items float_div in1 integer_dec in1 integer_dec integer_mult print_integer float_pop in1 float_inc integer_dec float_inc -46 integer_dec float_inc float_shove integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_min float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc integer_dec float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div integer_mod float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 10.0 1 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 0.0 0 0.0 0 10.0 1 7.0 1 6.0 2 6.0 1 3.0 1 39.0 2 0.0 0 2.0 1 5.0 1 2.0 1 13.0 2]
Total: 565.0
Mean: 11.3
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5540.965771799999
Median total errors in population: 963.0
Error averages by case: (269.6903103000001 4.942 245.1237304 4.623 215.67330789999994 13.265 206.9310479999997 4.952 209.67632479999997 5.413 201.39432459999986 4.632 196.35275810000002 5.757 229.28728429999992 4.7 192.82181159999993 4.117 207.0558228999999 4.919 248.06990969999995 10.398 245.01341630000005 5.79 226.76679520000013 5.538 207.3839982000001 4.685 199.1706715999999 5.482 198.84259090000015 5.507 197.3766016000001 5.17 201.35142480000016 5.052 221.31027290000011 5.441 224.7521814 5.026 200.7023771999999 6.19 212.2885789000001 6.027 208.00359900000018 4.779 222.6635087000002 5.536 210.23512250000027 5.087)
Error minima by case: (5.6617 1 0.8448 1 5.4655 8 0.0 0 0.0 0 1.3774 1 0.0 0 1.3506 1 0.0 0 1.0 1 1.915 8 0.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 5.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 173.928
Average program size in population (points): 174.928
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 129.2731676291715
Average age in population: 111.9464132302817
Median age in population: 126.9195779749141
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.543
Error (vector) diversity:			 0.809
Behavioral diversity:				 0.817
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 276827401
--- Timings ---
Current time: 1529615248870 milliseconds
Total Time:         396.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        93.3 seconds, 23.6%
Fitness Testing:    240.5 seconds, 60.7%
Report:              62.0 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 32741.0
Test mean error for best: 16.37050
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_836} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult print_integer float_pop integer_flush integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_shove integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc tagged_836 integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 3.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 2.0 2 0.0 0 8.0 1 5.0 1 6.0 2 1.0 1 5.0 1 39.0 2 7.0 1 4.0 3 5.0 1 0.0 0 13.0 2]
Total: 565.0
Mean: 11.3
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5852.4242518
Median total errors in population: 966.0
Error averages by case: (281.3001941 4.791 258.2720774000001 4.5 227.92363859999998 13.335 217.45797359999995 4.793 224.0721589 5.314 212.7233115 4.511 208.74181890000008 5.495 242.2323351999999 4.597 202.36974239999986 3.993 216.31073229999996 4.774 261.23932899999994 10.391 257.86703250000005 5.663 240.48910300000026 5.578 221.42328290000017 4.661 213.2051117999999 5.424 212.13388369999998 5.48 209.16989130000013 5.024 216.9492034000001 4.986 234.90022750000023 5.429 238.1904764 4.864 210.47235630000006 6.008 226.06736010000012 6.097 218.89678250000014 4.743 236.8874818000002 5.546 222.10374670000027 5.028)
Error minima by case: (19.6617 1 2.3029 1 4.4655 9 0.0 0 0.0 0 0.1368 1 0.0 0 0.5834 1 0.0 0 0.0 0 2.294 8 0.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 19.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 173.652
Average program size in population (points): 174.652
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 130.4892989047197
Average age in population: 112.0499307960731
Median age in population: 128.2052712593575
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.524
Error (vector) diversity:			 0.801
Behavioral diversity:				 0.808
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 281169392
--- Timings ---
Current time: 1529615254258 milliseconds
Total Time:         401.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        94.3 seconds, 23.5%
Fitness Testing:    244.0 seconds, 60.8%
Report:              63.0 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 32964.0
Test mean error for best: 16.48200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dup_items} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_pop} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction integer_pop} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (float_mult float_dup_items integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc integer_dup float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min float_inc integer_swap float_inc integer_div integer_dec integer_pop integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc integer_pop integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 2.0 1 3.0 2 15.0 2 1.0 1 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 0.0 0 0.0 0 10.0 1 7.0 1 6.0 2 1.0 1 3.0 1 39.0 2 7.0 1 2.0 1 5.0 1 2.0 1 13.0 2]
Total: 565.0
Mean: 11.3
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5986.134356199998
Median total errors in population: 977.0
Error averages by case: (288.8787769000001 5.06 263.4542789 4.716 233.44620529999992 13.294 221.8388405999998 4.881 227.82797589999996 5.45 220.35397549999988 4.735 213.6459714 5.82 247.9079625 4.793 212.83270189999985 4.223 222.8092831999999 4.897 266.04190399999993 10.394 264.4312765000001 5.929 243.65870989999993 5.69 225.95762420000008 4.624 218.05962320000003 5.632 217.9324707000001 5.715 218.48022130000007 5.19 217.49123150000025 5.03 238.040811 5.573 244.06850699999993 5.147 217.12926359999994 6.315 226.12915180000005 6.205 224.21382340000028 4.791 240.08820580000014 5.654 226.5955602000001 5.062)
Error minima by case: (8.3383 1 0.9263 1 2.4655 9 0.0 0 0.0 0 0.2093 1 0.0 0 0.3013 1 0.0 0 0.0 0 1.085 8 0.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 2.5176 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 172.292
Average program size in population (points): 173.292
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 132.2355790041721
Average age in population: 112.5693310288496
Median age in population: 129.5553828415602
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.526
Error (vector) diversity:			 0.781
Behavioral diversity:				 0.783
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 285477208
--- Timings ---
Current time: 1529615259608 milliseconds
Total Time:         406.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        95.4 seconds, 23.4%
Fitness Testing:    247.4 seconds, 60.8%
Report:              63.9 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 32806.0
Test mean error for best: 16.40300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction print_integer} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop integer_flush integer_dup_times in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc print_integer integer_min float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_stackdepth float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 2.0 2 0.0 0 8.0 1 5.0 1 6.0 2 0.0 0 5.0 1 39.0 2 6.0 1 4.0 3 5.0 1 0.0 0 13.0 2]
Total: 563.0
Mean: 11.26
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5362.598079199999
Median total errors in population: 965.5
Error averages by case: (267.4876487000001 4.889 239.50885910000002 4.495 206.853568 13.191 197.6445436999998 4.74 205.44350529999983 5.261 193.3838681999999 4.519 188.96312919999988 5.458 223.1686948999999 4.627 185.0895993999999 4.056 197.22822129999997 4.902 242.3352672 10.398 242.34493780000008 5.698 220.86433790000024 5.469 202.77693520000022 4.56 190.25547000000003 5.293 190.05658020000004 5.383 195.09724510000007 5.128 190.31512670000018 4.842 215.0837450000002 5.341 221.88009959999994 5.059 190.94026399999987 5.953 198.92747970000008 5.975 198.3658128000002 4.691 216.9696054000001 5.424 201.2815348000003 4.98)
Error minima by case: (3.6617 1 0.7341 1 3.268 9 0.0 0 0.0 0 0.3049 1 0.0 0 0.669 1 0.0 0 0.0 0 0.085 7 2.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.2498 1)
Average genome size in population (length): 172.142
Average program size in population (points): 173.142
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 133.0143854228866
Average age in population: 113.6125935973549
Median age in population: 130.8794840737425
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.531
Error (vector) diversity:			 0.812
Behavioral diversity:				 0.818
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 289780558
--- Timings ---
Current time: 1529615264960 milliseconds
Total Time:         412.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        96.4 seconds, 23.4%
Fitness Testing:    250.8 seconds, 60.9%
Report:              64.8 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 32806.0
Test mean error for best: 16.40300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 87.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction print_integer} {:instruction integer_min} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop integer_flush integer_dup_times in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc integer_div float_inc integer_div float_inc print_integer integer_min float_inc integer_swap float_inc integer_div integer_dec integer_dec integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_stackdepth float_inc float_inc integer_div integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 2.0 2 0.0 0 8.0 1 5.0 1 6.0 2 0.0 0 5.0 1 39.0 2 6.0 1 4.0 3 5.0 1 0.0 0 13.0 2]
Total: 563.0
Mean: 11.26
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6008.183788099998
Median total errors in population: 977.0
Error averages by case: (288.7560281000001 4.975 265.1737539000001 4.668 235.99487349999998 13.308 223.13386759999983 4.789 229.53902969999987 5.381 222.11880719999996 4.67 213.76026269999997 5.55 249.63183969999983 4.746 215.64584669999988 4.233 227.14883329999986 5.055 267.7905739 10.487 264.75611640000017 5.861 242.5837951000001 5.556 223.8719815000001 4.564 217.91276270000003 5.472 217.1640135000001 5.52 218.74154810000007 5.213 219.69282000000018 4.933 237.65551980000023 5.443 245.4133903999999 5.188 217.45795350000003 6.078 225.9489864000001 6.046 226.3161861000002 4.745 239.02929790000022 5.511 229.88870040000026 5.065)
Error minima by case: (19.6617 1 1.2698 1 0.8899 9 0.0 0 0.0 0 0.8138 1 0.0 0 0.3191 1 0.0 0 2.2976 1 1.3857 7 0.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 1)
Average genome size in population (length): 170.442
Average program size in population (points): 171.442
Average percent parens in population: 0.012
Minimum age in population: 0.0
Maximum age in population: 134.3377859156561
Average age in population: 112.7138926830961
Median age in population: 132.097976804553
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.51
Error (vector) diversity:			 0.792
Behavioral diversity:				 0.799
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 294041358
--- Timings ---
Current time: 1529615270177 milliseconds
Total Time:         417.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        97.4 seconds, 23.3%
Fitness Testing:    254.2 seconds, 60.9%
Report:              65.7 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 32793.0
Test mean error for best: 16.39650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 189.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 69.5127184446 
Correct output: 61.1705628788  | Program output: 67.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 132.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 99.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 171.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_swap integer_add float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div integer_max float_inc integer_div float_dup float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_inc float_inc float_inc float_inc integer_add float_inc integer_shove float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 1.0 2 1.0 1 9.0 1 6.0 1 6.0 2 0.0 0 4.0 1 39.0 2 6.0 1 3.0 3 3.0 1 1.0 1 13.0 2]
Total: 564.0
Mean: 11.28
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5602.4266779
Median total errors in population: 962.0
Error averages by case: (270.03096489999996 4.844 244.5100737 4.525 214.52723720000003 13.267 211.24887639999983 4.807 216.16021690000005 5.334 200.87012099999995 4.543 200.39134889999994 5.571 228.5875994000001 4.599 194.87858259999996 4.07 211.66805659999997 4.924 247.57132199999992 10.465 245.30169499999997 5.743 229.39996370000006 5.448 209.09611160000006 4.563 205.99777260000008 5.362 205.63215720000008 5.401 198.2086716999999 5.042 206.1882286000001 4.933 224.15589140000012 5.323 225.07055709999997 5.01 205.55632720000006 6.002 213.76900180000007 5.943 212.17701990000012 4.69 225.84721560000014 5.36 214.8576649000001 4.955)
Error minima by case: (1.6617 2 0.6633 1 0.4655 8 0.0 0 0.0 0 1.1476 1 0.0 0 0.2992 1 0.0 0 0.0 0 1.915 8 0.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.514
Average program size in population (points): 175.514
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 135.6208464927411
Average age in population: 116.930011096119
Median age in population: 133.5351896610787
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.526
Error (vector) diversity:			 0.803
Behavioral diversity:				 0.811
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 298403808
--- Timings ---
Current time: 1529615275557 milliseconds
Total Time:         422.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        98.5 seconds, 23.3%
Fitness Testing:    257.6 seconds, 60.9%
Report:              66.5 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 32691.0
Test mean error for best: 16.34550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_swap integer_add float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div integer_max float_inc integer_div float_dup float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_inc float_inc float_inc float_inc integer_add float_inc integer_shove float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_dec float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 2.0 2 1.0 1 8.0 1 5.0 1 6.0 2 0.0 0 5.0 1 39.0 2 6.0 1 4.0 3 3.0 1 0.0 0 13.0 2]
Total: 563.0
Mean: 11.26
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5960.652979299999
Median total errors in population: 966.0
Error averages by case: (286.3757265000001 5.032 261.39500649999997 4.697 231.64690839999997 13.313 224.43571229999975 4.993 228.08608309999994 5.525 218.38183279999993 4.728 212.51754880000001 5.662 246.03000239999992 4.792 210.48548239999982 4.278 221.2415198999999 5.034 264.3193719 10.485 261.9416313000001 5.902 243.63997960000015 5.666 225.40307660000013 4.838 218.74018199999983 5.52 218.43841990000016 5.547 212.47696130000008 5.27 213.30128840000026 5.088 237.97022370000002 5.534 241.78094689999992 5.214 219.57610149999985 6.164 223.1222017000001 6.116 227.2155045000002 4.935 240.0025551000001 5.601 227.04471180000016 5.15)
Error minima by case: (19.6617 1 1.1061 1 1.4655 10 0.0 0 0.0 0 1.8524 1 0.0 0 2.539 1 0.0 0 0.0 0 2.294 8 2.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 171.167
Average program size in population (points): 172.167
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 137.1450431365383
Average age in population: 115.3967172282124
Median age in population: 134.8409591470769
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.512
Error (vector) diversity:			 0.801
Behavioral diversity:				 0.808
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 302682633
--- Timings ---
Current time: 1529615280909 milliseconds
Total Time:         428.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        99.5 seconds, 23.3%
Fitness Testing:    261.0 seconds, 61.0%
Report:              67.4 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 32691.0
Test mean error for best: 16.34550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_swap integer_add float_inc float_inc integer_div float_inc integer_dup float_inc integer_inc float_inc integer_min integer_div float_inc integer_min integer_div integer_max float_inc integer_div float_dup float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_inc float_inc float_inc float_inc integer_add float_inc integer_shove float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_dec float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 2.0 2 1.0 1 8.0 1 5.0 1 6.0 2 0.0 0 5.0 1 39.0 2 6.0 1 4.0 3 3.0 1 0.0 0 13.0 2]
Total: 563.0
Mean: 11.26
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5390.576301499998
Median total errors in population: 956.0
Error averages by case: (263.15558950000013 4.865 242.17302220000008 4.535 212.81331379999997 13.431 198.9347528999998 4.919 203.5335241999999 5.397 198.38717269999987 4.564 190.9332135 5.664 227.26731809999993 4.63 189.85319999999993 4.038 199.4165164 4.957 245.5174391 10.58 238.51672160000007 5.803 217.99272040000008 5.513 196.9283648000001 4.688 196.31486369999985 5.482 196.68959390000012 5.494 190.30827110000007 5.111 195.18736690000011 5.016 211.55556010000004 5.328 216.87742129999995 5.041 195.08867809999978 6.133 203.6780663000001 5.951 201.07680840000006 4.814 213.65916570000016 5.392 202.35463680000007 5.017)
Error minima by case: (7.3383 1 8.9266 1 2.7908 9 0.0 0 0.0 0 3.8527 1 0.0 0 0.5387 1 0.0 0 0.0 0 2.085 8 0.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1)
Average genome size in population (length): 173.564
Average program size in population (points): 174.564
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 138.2508035759746
Average age in population: 118.5304596210998
Median age in population: 136.1186993325224
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.507
Error (vector) diversity:			 0.808
Behavioral diversity:				 0.815
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 307021208
--- Timings ---
Current time: 1529615286306 milliseconds
Total Time:         433.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       100.6 seconds, 23.2%
Fitness Testing:    264.5 seconds, 61.0%
Report:              68.3 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 33006.0
Test mean error for best: 16.50300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 191.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 71.5127184446 
Correct output: 61.1705628788  | Program output: 69.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 134.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 101.3014515582
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 173.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_flush} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec in1 integer_dec float_inc float_inc integer_dec integer_yank float_inc float_inc integer_dec integer_flush float_inc float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_div float_inc float_inc integer_div integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_div float_inc float_dup float_inc integer_div float_dup float_inc float_inc float_dup float_inc float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_stackdepth float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_shove integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_shove float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 1.0 1 0.0 0 11.0 2 8.0 1 6.0 2 0.0 0 2.0 1 39.0 2 6.0 1 1.0 1 4.0 1 3.0 1 13.0 2]
Total: 563.0
Mean: 11.26
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5537.331779499999
Median total errors in population: 980.0
Error averages by case: (267.35800810000006 4.842 242.3686691999999 4.56 213.25966649999998 13.202 206.5914310999999 4.762 213.71926159999992 5.305 198.92594909999994 4.587 195.76370400000002 5.514 226.65035479999997 4.59 191.45944769999997 3.999 206.89678019999988 4.811 245.2045919999999 10.389 242.70252230000014 5.782 229.63005860000007 5.482 206.9134170000001 4.488 203.88866809999988 5.596 202.70420810000024 5.627 194.7293301000001 5.036 205.0755712 4.899 223.10539810000023 5.352 222.2377015 5.076 200.38283589999992 6.043 212.99586160000013 5.939 207.43394780000023 4.592 226.0953813000001 5.365 210.54401360000014 4.857)
Error minima by case: (0.3383 1 0.0 0 0.4655 9 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.4477 1 1.085 7 1.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0 0 4.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 172.077
Average program size in population (points): 173.077
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 139.4315176417062
Average age in population: 117.7863277224254
Median age in population: 137.2847859361205
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.499
Error (vector) diversity:			 0.79
Behavioral diversity:				 0.797
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 311322308
--- Timings ---
Current time: 1529615291576 milliseconds
Total Time:         438.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       101.7 seconds, 23.2%
Fitness Testing:    267.8 seconds, 61.0%
Report:              69.2 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 32967.0
Test mean error for best: 16.48350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_284} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_784} {:instruction integer_yank} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_875} {:instruction float_inc} {:instruction print_integer} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_swap integer_add float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div integer_max float_inc integer_div float_dup float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_inc float_inc float_inc float_inc integer_add float_inc integer_shove float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc tagged_284 integer_div float_inc float_inc tag_integer_784 integer_yank integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc tag_integer_875 float_inc print_integer float_inc integer_div float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc float_inc 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 5.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 0.0 0 1.0 1 10.0 1 7.0 1 6.0 2 1.0 1 3.0 1 39.0 2 5.0 1 2.0 1 3.0 1 2.0 1 13.0 2]
Total: 562.0
Mean: 11.24
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5100.422474799999
Median total errors in population: 953.4526000000001
Error averages by case: (255.17648310000013 4.648 230.0776761999999 4.361 199.10134999999994 13.292 187.4171318999998 4.605 192.50098919999988 5.086 185.06808069999994 4.376 178.59840859999994 5.353 213.76620479999994 4.424 173.42879959999985 3.852 190.5729845 4.723 233.07751589999992 10.503 230.0226525000001 5.552 207.6410215000001 5.248 188.5005500000001 4.462 183.91475959999997 5.359 183.00244650000016 5.369 179.77214770000006 4.818 180.97035720000017 4.718 201.6694809000001 5.112 209.55244189999996 4.831 184.08762379999988 5.993 189.0619340000001 5.701 188.9019563000002 4.499 204.10472980000014 5.165 193.68274860000014 4.702)
Error minima by case: (5.6617 1 0.0737 1 0.339 8 0.0 0 0.0 0 0.816 1 0.0 0 0.539 1 0.0 0 0.0 0 2.085 8 1.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 0.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.112
Average program size in population (points): 176.112
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 140.8921773093297
Average age in population: 122.5955474285657
Median age in population: 138.5550173264307
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.535
Error (vector) diversity:			 0.812
Behavioral diversity:				 0.817
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 315699453
--- Timings ---
Current time: 1529615297064 milliseconds
Total Time:         444.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       102.7 seconds, 23.1%
Fitness Testing:    271.3 seconds, 61.1%
Report:              70.1 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 32691.0
Test mean error for best: 16.34550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_swap integer_add float_inc float_inc integer_div float_inc integer_dup float_inc integer_inc float_inc integer_min integer_div float_inc integer_min integer_div integer_max float_inc integer_div float_dup float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_inc float_inc float_inc float_inc integer_add float_inc integer_shove float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_dec float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 4.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 2.0 2 1.0 1 8.0 1 5.0 1 6.0 2 0.0 0 5.0 1 39.0 2 6.0 1 4.0 3 3.0 1 0.0 0 13.0 2]
Total: 563.0
Mean: 11.26
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5508.741640699998
Median total errors in population: 963.5
Error averages by case: (271.79455510000014 4.9 246.29027930000004 4.63 215.42852779999996 13.266 200.52725679999972 4.883 208.6377207 5.423 202.5456167999999 4.641 194.48596130000004 5.595 230.46611889999994 4.728 189.97142019999984 4.12 203.15986029999996 5.025 249.07566609999998 10.506 246.51488390000014 5.858 223.18146600000017 5.415 205.1368138000001 4.721 201.7452879 5.416 200.18899250000004 5.443 200.14058100000008 5.163 200.13444680000018 4.958 217.43830940000007 5.265 226.81322879999988 5.194 198.76932910000002 6.233 208.17544090000004 5.863 200.62898580000032 4.755 219.88796730000027 5.294 205.25592420000018 5.052)
Error minima by case: (8.3383 2 1.6149 1 3.5345 9 0.0 0 0.0 0 2.8524 1 0.0 0 0.4474 2 0.0 0 0.0 0 0.915 8 1.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0 0 4.2211 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 170.468
Average program size in population (points): 171.468
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 142.3946440120262
Average age in population: 118.8014790408546
Median age in population: 139.7336483026985
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.534
Error (vector) diversity:			 0.821
Behavioral diversity:				 0.826
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 319960703
--- Timings ---
Current time: 1529615302383 milliseconds
Total Time:         449.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       103.8 seconds, 23.1%
Fitness Testing:    274.6 seconds, 61.1%
Report:              71.0 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 32347.0
Test mean error for best: 16.17350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 82.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 15.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 87.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 187.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 67.5127184446 
Correct output: 61.1705628788  | Program output: 65.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 130.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 97.3014515582 
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 169.2225097733
Correct output: 92.3146270329  | Program output: 78.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_max} {:instruction float_inc} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -82} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_284} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_flush} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc -46 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_swap integer_add float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div integer_max float_inc integer_div float_dup float_inc -44 integer_min integer_dec float_inc integer_dup_items integer_sub float_inc float_inc integer_div float_inc integer_div float_max float_inc integer_min integer_dec float_inc float_inc integer_div float_inc float_inc float_inc -82 float_inc float_inc integer_div float_inc integer_dec float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc integer_div float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc integer_sub float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc tagged_284 integer_div float_inc float_inc float_inc float_inc integer_swap float_inc float_inc float_dup float_shove integer_div integer_dup integer_yank float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div integer_flush float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 3.0 2 4.0 2 14.0 2 4.0 1 50.0 1 3.0 1 8.0 2 75.0 10 60.0 2 3.0 2 0.0 0 7.0 1 4.0 1 5.0 2 0.0 0 6.0 1 38.0 2 6.0 1 5.0 3 1.0 1 1.0 2 14.0 2]
Total: 562.0
Mean: 11.24
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5833.970454199999
Median total errors in population: 966.0
Error averages by case: (280.64496020000007 4.857 257.2291836 4.539 227.47339790000004 13.193 217.47952299999972 4.742 223.50021849999993 5.249 214.7275729999999 4.567 209.42372189999998 5.469 241.92734129999994 4.614 208.14515989999992 4.036 219.15828009999993 4.912 260.8205181000001 10.417 257.2206335000001 5.829 235.22860800000007 5.309 216.01458820000016 4.697 215.359421 5.375 213.0421848 5.386 210.15385139999998 5.035 214.4676004000002 4.925 229.59153640000008 5.169 236.1435399 5.049 211.30297699999994 5.924 217.89844310000004 5.745 220.76266400000023 4.654 231.9598034000003 5.244 224.4257256000002 4.933)
Error minima by case: (3.6617 1 0.3231 1 2.4655 9 0.0 0 0.0 0 3.1476 1 0.0 0 1.1064 1 0.0 0 1.0 1 1.5406 8 17.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.5886 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 171.732
Average program size in population (points): 172.732
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 143.2429868532668
Average age in population: 121.4979642541563
Median age in population: 140.9683190550697
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.496
Error (vector) diversity:			 0.797
Behavioral diversity:				 0.803
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 324253553
--- Timings ---
Current time: 1529615307827 milliseconds
Total Time:         455.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       104.9 seconds, 23.1%
Fitness Testing:    278.1 seconds, 61.1%
Report:              71.9 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 32693.0
Test mean error for best: 16.34650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_flush} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_284} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec in1 integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc integer_dec integer_flush float_inc float_inc float_inc integer_div float_inc integer_div integer_dec float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_div float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_inc integer_div float_inc integer_div float_inc float_dup float_inc integer_div integer_div float_dup float_inc float_inc integer_div float_inc float_inc integer_add float_inc integer_div float_inc float_inc integer_stackdepth float_inc float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_shove float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_dec float_inc integer_dec float_inc float_inc tagged_284 integer_div float_inc float_inc float_inc float_inc integer_swap float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 2.0 1 4.0 2 15.0 2 1.0 1 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 0.0 0 2.0 1 10.0 1 7.0 1 6.0 2 0.0 0 3.0 1 39.0 2 6.0 1 2.0 1 1.0 1 2.0 1 13.0 2]
Total: 562.0
Mean: 11.24
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5236.683731999999
Median total errors in population: 930.5
Error averages by case: (259.7621465000001 4.576 233.35804510000006 4.298 202.6641261999999 13.272 196.44293249999978 4.546 200.02903159999983 5.055 188.82151969999998 4.288 187.10266049999993 5.392 217.13035040000003 4.353 180.90534659999994 3.777 194.33653159999986 4.607 236.3074629999999 10.47 233.26306240000017 5.544 210.54229700000008 5.012 199.58918710000012 4.367 188.72731090000002 5.164 187.69420640000007 5.205 186.87628290000004 4.782 189.2894381000002 4.659 205.56340640000005 4.89 214.35141069999992 4.764 191.83708730000006 5.778 194.1726017000001 5.473 197.10168480000019 4.391 207.46642720000017 4.93 199.10217540000016 4.654)
Error minima by case: (24.6617 1 0.0737 1 5.4655 9 0.0 0 0.0 0 0.549 1 0.0 0 0.461 1 0.0 0 0.0 0 0.915 8 2.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 2.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.096
Average program size in population (points): 175.096
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 145.226359789677
Average age in population: 125.2143816274753
Median age in population: 142.2137899285047
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.495
Error (vector) diversity:			 0.801
Behavioral diversity:				 0.806
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 328605503
--- Timings ---
Current time: 1529615313253 milliseconds
Total Time:         460.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       105.9 seconds, 23.0%
Fitness Testing:    281.6 seconds, 61.2%
Report:              72.8 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 32569.0
Test mean error for best: 16.28450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction float_dup_items} {:instruction integer_dec} {:instruction in1} {:instruction integer_shove} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_rot} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction tagged_316})
Best program: (integer_mult integer_mult print_integer float_pop float_dup_items integer_dec in1 integer_shove integer_dec in1 integer_dec float_inc float_rot float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_frominteger float_inc integer_min float_inc float_inc integer_min print_integer float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 integer_yank integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_dec integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min integer_pop tagged_316)
Errors: [91.0 2 72.0 2 34.0 13 0.0 0 4.0 2 15.0 2 1.0 1 51.0 2 2.0 1 5.0 1 76.0 10 61.0 3 0.0 0 2.0 1 10.0 1 7.0 1 6.0 2 0.0 0 3.0 1 39.0 2 6.0 1 2.0 1 4.0 1 2.0 1 11.0 2]
Total: 557.0
Mean: 11.14
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5401.1009828
Median total errors in population: 950.5
Error averages by case: (262.4842919000001 4.619 240.03930499999998 4.357 210.1543987 13.282 205.01154409999972 4.575 209.8282400999999 5.128 195.75190139999995 4.337 193.01104930000002 5.393 223.91351580000003 4.395 186.52414649999992 3.798 198.61996489999999 4.687 243.1331753 10.426 238.2497510000001 5.59 220.17260210000026 5.129 198.9495226000001 4.615 196.63304630000002 5.284 195.66351459999998 5.327 187.81366830000007 4.844 199.3648383000001 4.8 215.28137330000015 4.976 215.9964768999999 4.859 196.13981890000017 5.883 204.01908789999996 5.605 204.0008683000002 4.494 217.20057630000008 5.039 206.94630500000014 4.756)
Error minima by case: (68.3383 1 0.097 1 2.4655 8 0.0 0 0.0 0 0.2086 1 0.0 0 0.274 1 0.0 0 0.0 0 0.915 8 30.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 1.1365 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 173.723
Average program size in population (points): 174.723
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 146.226359789677
Average age in population: 125.5421891466623
Median age in population: 143.5196464246795
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.501
Error (vector) diversity:			 0.798
Behavioral diversity:				 0.804
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 332947718
--- Timings ---
Current time: 1529615318644 milliseconds
Total Time:         465.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       107.0 seconds, 23.0%
Fitness Testing:    285.0 seconds, 61.2%
Report:              73.7 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 32569.0
Test mean error for best: 16.28450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction float_dup_items} {:instruction integer_dec} {:instruction in1} {:instruction integer_shove} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_rot} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction float_yankdup})
Best program: (integer_mult integer_mult print_integer float_pop float_dup_items integer_dec in1 integer_shove integer_dec in1 integer_dec float_inc float_rot float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_frominteger float_inc integer_min float_inc float_inc integer_min print_integer float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 integer_yank integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_dec integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min integer_pop float_yankdup)
Errors: [91.0 2 72.0 2 34.0 13 0.0 0 4.0 2 15.0 2 1.0 1 51.0 2 2.0 1 5.0 1 76.0 10 61.0 3 0.0 0 2.0 1 10.0 1 7.0 1 6.0 2 0.0 0 3.0 1 39.0 2 6.0 1 2.0 1 4.0 1 2.0 1 11.0 2]
Total: 557.0
Mean: 11.14
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5794.100889799997
Median total errors in population: 987.0
Error averages by case: (281.01175760000007 4.833 255.81486400000006 4.547 225.8822908999999 13.205 215.36933769999973 4.896 219.37187459999998 5.44 212.6112810999999 4.561 207.9872565000001 5.54 240.21484929999988 4.605 202.8383636999999 3.967 215.70106319999988 4.993 258.7391859999999 10.354 256.89539490000016 5.788 234.8362485 5.572 217.52673470000028 4.717 211.7598126000001 5.573 211.3910314000001 5.59 211.42148100000009 5.04 211.25689360000018 5.043 228.73823780000015 5.399 237.54844699999995 5.044 211.08611080000003 6.049 218.9315115000001 6.017 214.80831150000023 4.755 231.25245380000018 5.416 219.15609610000027 5.006)
Error minima by case: (8.3383 1 0.9263 1 4.1679 10 0.0 0 0.0 0 0.4355 1 0.0 0 0.539 1 0.0 0 0.0 0 0.1352 8 6.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 3.7493 1 0.0 0 0.0 0 0.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.6854 1)
Average genome size in population (length): 169.801
Average program size in population (points): 170.801
Average percent parens in population: 0.012
Minimum age in population: 0.0
Maximum age in population: 147.3932196062389
Average age in population: 123.0848096951086
Median age in population: 144.8013491695545
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.498
Error (vector) diversity:			 0.769
Behavioral diversity:				 0.774
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 337192068
--- Timings ---
Current time: 1529615323994 milliseconds
Total Time:         471.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.0 seconds, 22.9%
Fitness Testing:    288.4 seconds, 61.2%
Report:              74.6 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 32569.0
Test mean error for best: 16.28450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction float_dup_items} {:instruction integer_dec} {:instruction in1} {:instruction integer_shove} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_rot} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_max} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min} {:instruction integer_pop} {:instruction float_yankdup})
Best program: (integer_mult integer_mult print_integer float_pop float_dup_items integer_dec in1 integer_shove integer_dec in1 integer_dec float_inc float_rot float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_frominteger float_inc integer_min float_inc float_inc integer_min print_integer float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 integer_yank integer_div float_inc integer_yankdup 11 integer_sub integer_max integer_dec integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min integer_pop float_yankdup)
Errors: [91.0 2 72.0 2 34.0 13 0.0 0 4.0 2 15.0 2 1.0 1 51.0 2 2.0 1 5.0 1 76.0 10 61.0 3 0.0 0 2.0 1 10.0 1 7.0 1 6.0 2 0.0 0 3.0 1 39.0 2 6.0 1 2.0 1 4.0 1 2.0 1 11.0 2]
Total: 557.0
Mean: 11.14
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5074.156797400001
Median total errors in population: 981.5
Error averages by case: (253.5527277000001 4.512 226.0641152 4.251 195.30382690000008 13.279 186.22107289999985 4.544 192.34485269999993 5.101 180.96762439999992 4.275 177.0102088 5.587 209.80630330000002 4.311 171.61130359999993 3.673 187.8459862 4.604 228.90606589999996 10.473 228.3720673000002 5.455 208.44599409999998 5.255 190.91629280000015 4.552 186.95911170000005 5.461 185.9908164 5.516 179.43064090000001 4.715 182.96366030000013 4.693 202.03410369999992 5.099 207.01008699999997 4.701 179.58428030000002 5.957 192.47272389999998 5.7 187.7455205000002 4.489 204.98673300000019 5.138 191.5946779000001 4.675)
Error minima by case: (4.6617 1 0.9263 1 1.4655 10 0.0 0 0.0 0 3.1476 1 0.0 0 2.3029 1 0.0 0 0.0 0 2.0933 6 0.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.194
Average program size in population (points): 176.194
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 148.5701821020868
Average age in population: 129.2360688504057
Median age in population: 146.1483433135088
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.551
Error (vector) diversity:			 0.832
Behavioral diversity:				 0.839
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 341571343
--- Timings ---
Current time: 1529615329435 milliseconds
Total Time:         476.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.1 seconds, 22.9%
Fitness Testing:    291.9 seconds, 61.2%
Report:              75.5 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 32613.0
Test mean error for best: 16.30650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_dup_items} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (float_mult float_dup_items integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc integer_dup float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_dec float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc integer_mult float_inc float_inc float_inc float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 3.0 2 15.0 2 0.0 0 51.0 2 2.0 1 7.0 2 76.0 10 61.0 3 2.0 2 0.0 0 8.0 1 5.0 1 6.0 2 1.0 1 5.0 1 39.0 2 7.0 1 4.0 3 0.0 0 0.0 0 13.0 2]
Total: 559.0
Mean: 11.18
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5351.0213802
Median total errors in population: 937.5
Error averages by case: (262.7112397000001 4.628 240.70299870000008 4.335 209.32295330000002 13.279 197.49131379999983 4.505 204.45840719999995 5.131 194.87909039999997 4.345 187.46766700000003 5.275 224.3840900999999 4.387 180.49520759999996 3.83 198.4843090999999 4.64 243.7666458 10.445 237.6538881000001 5.597 217.62468820000012 5.26 198.43804520000012 4.426 194.28478339999998 5.209 193.1478517000001 5.251 189.10782290000003 4.889 198.36386350000012 4.721 212.61845230000014 5.073 217.11031100000002 4.854 192.52963839999995 5.693 203.96338710000003 5.723 198.43090590000017 4.414 214.31718410000022 5.098 203.54263570000018 4.716)
Error minima by case: (6.6617 1 0.9263 1 9.4659 8 0.0 0 0.0 0 4.1476 1 0.0 0 1.461 1 0.0 0 0.0 0 2.4731 7 1.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.254
Average program size in population (points): 176.254
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 149.5875101120066
Average age in population: 131.1229469191353
Median age in population: 147.3787388307061
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.493
Error (vector) diversity:			 0.796
Behavioral diversity:				 0.802
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 345952718
--- Timings ---
Current time: 1529615334834 milliseconds
Total Time:         482.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.1 seconds, 22.8%
Fitness Testing:    295.3 seconds, 61.3%
Report:              76.4 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 32602.0
Test mean error for best: 16.30100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 92.7628386321 
Correct output: 95.2976348595  | Program output: 88.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 79.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction tagged_790} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 integer_dec in1 integer_dec float_inc integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec in1 integer_mult integer_dec in1 integer_dec float_inc integer_dec float_inc tagged_790 integer_dec float_inc float_inc integer_dec float_inc integer_dup float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_dec float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_dup float_inc float_inc integer_div float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc integer_mult float_inc float_inc float_inc float_inc integer_dec float_inc float_inc integer_min integer_div float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 3.0 2 15.0 2 0.0 0 51.0 2 1.0 1 7.0 2 76.0 10 61.0 3 2.0 2 0.0 0 8.0 1 5.0 1 6.0 2 1.0 1 5.0 1 39.0 2 7.0 1 4.0 3 0.0 0 0.0 0 13.0 2]
Total: 558.0
Mean: 11.16
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4825.292284499999
Median total errors in population: 900.0
Error averages by case: (244.19301820000013 4.256 219.18527650000001 4.045 186.7592621 13.248 175.74715949999987 4.162 181.42911389999992 4.803 172.85031459999996 4.038 171.0066457 5.128 201.2367072 4.083 162.2443510999999 3.383 176.72737659999999 4.346 221.33513380000002 10.397 218.79788610000008 5.246 194.3818511000001 4.937 179.6564751000001 4.149 177.2635962 5.095 176.2610530000001 5.085 170.52324630000007 4.468 175.22852420000012 4.372 189.05643100000006 4.733 198.07135349999993 4.437 175.69212129999997 5.598 181.58531860000005 5.413 176.81993430000017 4.091 190.23268760000028 4.764 180.3614470000001 4.369)
Error minima by case: (24.6617 1 1.8963 1 2.5345 10 0.0 0 0.0 0 3.1476 1 0.0 0 0.0249 1 0.0 0 0.0 0 2.03 8 2.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 11.0442 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.431
Average program size in population (points): 177.431
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 150.8524308790826
Average age in population: 134.3053633185844
Median age in population: 148.6355575356072
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.504
Error (vector) diversity:			 0.817
Behavioral diversity:				 0.825
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 350363068
--- Timings ---
Current time: 1529615340212 milliseconds
Total Time:         487.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       111.2 seconds, 22.8%
Fitness Testing:    298.7 seconds, 61.3%
Report:              77.3 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 34560.0
Test mean error for best: 17.28000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_yankdup} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_yankdup in1 integer_dec in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_frominteger float_inc integer_min float_inc float_inc integer_min print_integer float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 3.0 2 15.0 2 0.0 0 51.0 2 2.0 1 5.0 1 76.0 10 61.0 3 0.0 0 1.0 1 10.0 1 7.0 1 6.0 2 1.0 1 3.0 1 39.0 2 7.0 1 2.0 1 3.0 1 2.0 1 11.0 2]
Total: 557.0
Mean: 11.14
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5238.9397662
Median total errors in population: 969.0
Error averages by case: (258.4446318000001 4.503 235.22171310000004 4.258 202.87868899999992 13.234 193.7445837999998 4.63 201.3547715999999 5.184 190.19179379999994 4.261 186.4863942000001 5.326 217.9957939999999 4.297 179.63292769999995 3.701 192.8458183 4.641 237.2648743 10.408 233.61036910000016 5.506 211.22879059999997 5.252 192.77019080000017 4.495 191.88659410000002 5.372 191.11907879999998 5.392 186.69727060000002 4.799 194.42218660000006 4.762 205.70402660000008 5.129 213.64683569999994 4.799 185.8536192 5.848 197.60521690000004 5.679 194.65029770000015 4.467 208.42473160000029 5.148 199.43056630000007 4.737)
Error minima by case: (4.6617 1 0.0737 1 1.5345 9 0.0 0 0.0 0 2.1476 1 0.0 0 6.539 1 0.0 0 1.0 1 2.085 8 17.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 0.6606 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 1)
Average genome size in population (length): 174.957
Average program size in population (points): 175.957
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 152.2399342031473
Average age in population: 133.810869365423
Median age in population: 149.9015008224398
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.535
Error (vector) diversity:			 0.817
Behavioral diversity:				 0.822
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 354737243
--- Timings ---
Current time: 1529615345441 milliseconds
Total Time:         492.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.2 seconds, 22.8%
Fitness Testing:    302.1 seconds, 61.3%
Report:              78.2 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 34560.0
Test mean error for best: 17.28000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_yankdup} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_yankdup in1 integer_dec in1 integer_dec float_inc -46 integer_dec integer_max float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_frominteger float_inc integer_min float_inc float_inc integer_min print_integer float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 3.0 2 15.0 2 0.0 0 51.0 2 2.0 1 5.0 1 76.0 10 61.0 3 0.0 0 1.0 1 10.0 1 7.0 1 6.0 2 1.0 1 3.0 1 39.0 2 7.0 1 2.0 1 3.0 1 2.0 1 11.0 2]
Total: 557.0
Mean: 11.14
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5182.320098099999
Median total errors in population: 966.0
Error averages by case: (254.46898510000005 4.536 230.28186860000005 4.322 197.92412869999995 13.345 194.0086055999998 4.65 202.37021219999988 5.236 183.04655989999995 4.32 184.33672640000003 5.442 213.79885659999994 4.345 176.70336749999993 3.778 189.23446309999997 4.635 233.1509028 10.469 229.39425030000012 5.499 213.22620280000018 5.202 194.32625800000008 4.502 190.7217117999999 5.441 189.10637740000016 5.525 180.11935290000005 4.811 195.54209400000016 4.813 206.39776990000007 5.066 207.48732049999998 4.777 186.13310570000004 6.029 198.64797930000012 5.614 191.09544320000018 4.453 209.8834189000002 5.102 194.3111369000001 4.691)
Error minima by case: (17.6617 1 3.9263 1 0.5345 9 0.0 0 0.0 0 0.6951 1 0.0 0 0.3616 1 0.0 0 1.0 1 2.085 7 4.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 2.2507 1 0.0 0 0.0 0 0.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 173.768
Average program size in population (points): 174.768
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 153.5607970313699
Average age in population: 134.3040484047387
Median age in population: 151.1408425375664
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.515
Error (vector) diversity:			 0.805
Behavioral diversity:				 0.811
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 359081268
--- Timings ---
Current time: 1529615350689 milliseconds
Total Time:         497.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.2 seconds, 22.7%
Fitness Testing:    305.6 seconds, 61.4%
Report:              79.0 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 34560.0
Test mean error for best: 17.28000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -99.338275572 
Correct output: 12.0737210789  | Program output: 84.0737210789 
Correct output: -10.4655066097 | Program output: 23.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 32.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 72.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 90.2976348595 
Correct output: -3.08498271    | Program output: 72.91501729   
Correct output: -152.0436144918 | Program output: -91.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -37.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -47.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 81.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_yankdup} {:instruction in1} {:instruction integer_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_yankdup in1 integer_dec in1 integer_dec float_inc -46 integer_dec integer_max float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc float_dup_items integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_frominteger float_inc integer_min float_inc float_inc integer_min print_integer float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [91.0 2 72.0 2 34.0 13 1.0 1 3.0 2 15.0 2 0.0 0 51.0 2 2.0 1 5.0 1 76.0 10 61.0 3 0.0 0 1.0 1 10.0 1 7.0 1 6.0 2 1.0 1 3.0 1 39.0 2 7.0 1 2.0 1 3.0 1 2.0 1 11.0 2]
Total: 557.0
Mean: 11.14
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4574.8757962
Median total errors in population: 934.5
Error averages by case: (231.18170830000005 4.264 210.28517470000003 4.021 177.09537409999993 13.247 169.0284368999999 4.425 175.26572659999997 5.011 162.12911909999994 4.028 162.71564370000004 5.17 192.7112399 4.051 154.69020909999992 3.493 168.47681699999998 4.398 212.7850534 10.427 206.27676780000007 5.28 185.90211760000005 5.019 171.1687694000001 4.504 162.19094549999997 5.129 161.66330820000005 5.142 156.33519599999997 4.563 163.2684172 4.589 178.58223880000006 4.83 184.68192229999994 4.54 166.23388580000017 5.704 167.2097281 5.522 170.2821798000001 4.273 181.17950660000008 4.875 172.58131029999998 4.45)
Error minima by case: (5.6617 1 0.2251 1 7.4655 9 0.0 0 0.0 0 5.4657 1 0.0 0 5.3506 1 0.0 0 0.7024 1 0.085 7 16.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 0.328 1 0.0 0 0.0 0 2.8167 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.216
Average program size in population (points): 178.216
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 154.897447242261
Average age in population: 138.5804068047747
Median age in population: 152.358454253374
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.536
Error (vector) diversity:			 0.81
Behavioral diversity:				 0.815
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 363511718
--- Timings ---
Current time: 1529615355981 milliseconds
Total Time:         503.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       114.3 seconds, 22.7%
Fitness Testing:    309.0 seconds, 61.4%
Report:              79.8 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 32685.0
Test mean error for best: 16.34250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 87.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 78.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_mod float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div integer_yankdup float_inc integer_div float_yankdup float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_dup float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_div float_inc integer_div float_inc -98 float_inc integer_shove float_inc integer_yankdup 11 integer_sub integer_div integer_div integer_mod integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 6.0 2 14.0 2 1.0 1 50.0 1 3.0 1 8.0 2 75.0 10 60.0 2 0.0 0 2.0 1 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 4.0 1 2.0 1 14.0 2]
Total: 556.0
Mean: 11.12
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5082.471875399999
Median total errors in population: 965.5
Error averages by case: (247.6675285000001 4.49 227.3240431 4.225 195.8174827 13.293 187.18496709999982 4.603 194.73889429999988 5.261 181.65831399999993 4.212 180.4966618999999 5.487 210.7016634999999 4.234 174.2407212999999 3.799 187.22210059999998 4.588 230.24514489999996 10.432 222.39092150000008 5.397 210.3631392000002 5.315 187.55223960000012 4.676 187.8746027 5.488 186.8002082000001 5.482 175.41607980000003 4.666 186.2534221000002 4.831 203.8195109000002 5.206 202.39016809999995 4.653 182.11191229999997 6.053 195.49682550000006 5.776 190.6861205000002 4.547 206.91139810000016 5.237 190.52080500000008 4.636)
Error minima by case: (4.6617 1 1.0737 1 0.5345 9 0.0 0 0.0 0 0.161 1 0.0 0 2.3772 1 0.0 0 1.0 1 1.0407 8 0.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.412
Average program size in population (points): 178.412
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 155.8166865222932
Average age in population: 140.5010682781547
Median age in population: 153.6476927171511
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.539
Error (vector) diversity:			 0.813
Behavioral diversity:				 0.817
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 367946868
--- Timings ---
Current time: 1529615361458 milliseconds
Total Time:         508.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       115.3 seconds, 22.7%
Fitness Testing:    312.5 seconds, 61.4%
Report:              80.6 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 32545.0
Test mean error for best: 16.27250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 87.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 191.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 71.5127184446 
Correct output: 61.1705628788  | Program output: 69.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 134.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 101.3014515582
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 173.2225097733
Correct output: 92.3146270329  | Program output: 78.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction in2} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec in2 integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div integer_dup_times integer_div float_inc integer_dup_times integer_div integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_yank integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_mult float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div float_inc float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 2.0 1 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 8.0 2 75.0 10 60.0 2 1.0 1 0.0 0 11.0 2 8.0 1 5.0 2 0.0 0 2.0 1 38.0 2 6.0 1 1.0 1 2.0 1 3.0 1 14.0 2]
Total: 555.0
Mean: 11.1
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4833.002093499999
Median total errors in population: 951.0
Error averages by case: (243.16244080000007 4.284 219.17669920000006 4.08 187.60663279999997 13.284 178.44489319999988 4.43 183.45830169999988 4.938 173.58073679999995 4.115 172.35042550000003 5.295 203.08670859999995 4.11 162.70763469999994 3.591 175.42118510000003 4.368 222.34372989999994 10.432 217.88922110000004 5.285 193.94109870000005 4.974 182.2535577000002 4.424 172.83796949999996 5.094 172.62856540000007 5.138 170.11415020000007 4.578 175.22538000000017 4.568 189.35072470000003 4.832 198.13273629999995 4.527 173.91562709999997 5.727 180.02415210000004 5.43 180.40089580000017 4.304 190.62788820000011 4.832 183.15673840000005 4.524)
Error minima by case: (3.6617 1 0.8042 1 3.4655 10 0.0 0 0.0 0 0.1675 1 0.0 0 4.5501 1 0.0 0 0.0 0 2.085 8 8.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.934
Average program size in population (points): 178.934
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 157.0100429776874
Average age in population: 141.9517546581795
Median age in population: 154.8705968835227
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.553
Error (vector) diversity:			 0.823
Behavioral diversity:				 0.828
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 372395193
--- Timings ---
Current time: 1529615366960 milliseconds
Total Time:         514.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.4 seconds, 22.6%
Fitness Testing:    316.0 seconds, 61.5%
Report:              81.5 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 32171.0
Test mean error for best: 16.08550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 87.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 78.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 78.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction float_dup} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction tag_integer_514} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction integer_sub} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_swap integer_add float_inc float_inc integer_div float_inc integer_dup float_inc integer_inc float_inc integer_min integer_div float_inc integer_min integer_div integer_max float_inc integer_div float_dup float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_inc float_inc float_inc float_inc integer_add integer_div tag_integer_514 float_inc float_dec float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div integer_sub float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_dec float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_min float_inc integer_div float_inc float_inc float_inc float_dec float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_sub integer_div float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 8.0 2 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 1.0 1 5.0 1 38.0 2 7.0 1 4.0 3 4.0 2 0.0 0 14.0 2]
Total: 556.0
Mean: 11.12
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5265.206267899999
Median total errors in population: 964.0
Error averages by case: (257.25424090000007 4.481 236.92603430000003 4.243 205.91890430000007 13.305 193.63214639999984 4.537 199.10403739999995 5.021 191.42038179999994 4.25 187.16045099999997 5.429 220.29390989999993 4.228 181.37698969999994 3.778 193.11785720000003 4.522 239.92141829999997 10.454 232.4126213000001 5.45 213.27341820000015 5.1 196.0727462000001 4.556 194.87090509999996 5.294 193.88349950000008 5.351 184.91537610000003 4.836 191.53142240000014 4.688 208.84988220000008 4.979 212.52804369999998 4.809 191.2829203 6.021 200.45746889999995 5.583 196.42923720000022 4.534 210.25148850000016 5.024 197.18386710000001 4.664)
Error minima by case: (3.6617 1 3.2821 1 2.4655 9 0.0 0 0.0 0 0.1352 1 0.0 0 5.0443 1 0.0 0 0.0 0 2.294 7 1.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.2507 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.837
Average program size in population (points): 176.837
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 158.7197978822514
Average age in population: 141.6954856798051
Median age in population: 156.1388142855495
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.523
Error (vector) diversity:			 0.806
Behavioral diversity:				 0.812
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 376790943
--- Timings ---
Current time: 1529615372315 milliseconds
Total Time:         519.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.4 seconds, 22.6%
Fitness Testing:    319.5 seconds, 61.5%
Report:              82.5 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 34280.0
Test mean error for best: 17.14000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction float_min} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup float_min float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_frominteger float_inc integer_min float_inc float_inc integer_min print_integer float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 3.0 2 14.0 2 0.0 0 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 3.0 1 2.0 1 12.0 2]
Total: 549.0
Mean: 10.98
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4814.348193399999
Median total errors in population: 906.0
Error averages by case: (239.42406630000008 4.339 216.0162451 4.133 184.81409269999997 13.196 178.37275709999983 4.37 182.71726910000004 4.92 170.32944859999995 4.165 169.99550989999983 5.219 199.38536859999996 4.089 162.24011809999988 3.585 177.32053720000002 4.365 219.03813800000003 10.349 213.81923220000007 5.262 198.12673490000006 5.023 179.21006000000006 4.274 177.50978509999987 5.14 176.89766500000022 5.179 165.6218582 4.625 173.53119000000015 4.56 192.56115150000014 4.904 193.2273597 4.594 172.31660609999992 5.714 182.61259050000007 5.511 181.10842690000018 4.355 194.88213500000018 4.96 181.95984760000005 4.479)
Error minima by case: (6.6617 1 0.9263 1 0.4655 9 0.0 0 0.0 0 0.513 1 0.0 0 1.0448 1 0.0 0 0.0 0 0.085 6 8.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 2.9495 1 0.0 0 0.0 0 1.5839 1 0.4575 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.844
Average program size in population (points): 176.844
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 159.5550505731333
Average age in population: 143.1599540552801
Median age in population: 157.404087300084
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.524
Error (vector) diversity:			 0.828
Behavioral diversity:				 0.831
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 381186768
--- Timings ---
Current time: 1529615377727 milliseconds
Total Time:         524.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.5 seconds, 22.6%
Fitness Testing:    322.9 seconds, 61.5%
Report:              83.4 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 33673.0
Test mean error for best: 16.83650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yank integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div integer_rot integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 1.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5392.555918299999
Median total errors in population: 1006.0
Error averages by case: (259.58546960000007 4.396 239.4850743 4.217 207.9502826 13.278 203.28405129999962 4.602 210.1376015999998 5.162 194.29047169999993 4.226 189.2996161999999 5.535 223.00762759999998 4.146 183.1677943999999 3.73 201.30931089999987 4.526 242.52154580000004 10.448 234.90510260000013 5.415 221.96806430000024 5.233 202.74891170000018 4.593 197.19939389999988 5.549 195.7686195000001 5.578 186.92610250000007 4.819 201.5172116000002 4.817 216.52381540000025 5.096 214.38890389999992 4.812 192.04004589999994 6.109 207.12694660000005 5.679 205.2817613000002 4.519 218.8011856000002 5.114 207.00400750000014 4.718)
Error minima by case: (2.6617 1 0.0396 1 0.4655 8 0.0 0 0.0 0 2.8524 1 0.0 0 1.539 1 0.0 0 0.0 0 2.085 8 0.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.258
Average program size in population (points): 175.258
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 160.9181124056286
Average age in population: 142.6539736402529
Median age in population: 158.6070945588428
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.546
Error (vector) diversity:			 0.819
Behavioral diversity:				 0.823
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 385543143
--- Timings ---
Current time: 1529615383144 milliseconds
Total Time:         530.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.5 seconds, 22.5%
Fitness Testing:    326.3 seconds, 61.5%
Report:              84.3 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 33673.0
Test mean error for best: 16.83650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yank integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div integer_rot integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 1.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4443.1070321
Median total errors in population: 957.0
Error averages by case: (225.40145710000013 3.992 203.67631790000002 3.832 170.3537506 13.281 166.85341169999973 4.222 170.47257570000002 4.703 155.5836836999999 3.836 155.6678942999999 4.993 186.23767219999993 3.717 148.1445298999999 3.423 164.16093159999997 4.161 206.78454190000002 10.433 198.5584628000001 4.958 182.18836229999997 4.796 166.52953770000013 4.28 156.63257380000005 5.015 156.01228220000007 5.0 150.19985360000004 4.389 160.59865900000023 4.394 177.15546880000005 4.678 178.58286719999998 4.356 158.86748310000007 5.614 166.51462409999996 5.276 166.08778430000024 4.105 178.57109160000013 4.729 166.76921500000006 4.319)
Error minima by case: (4.6617 1 1.0737 1 7.2871 10 0.0 0 0.0 0 0.1417 1 0.0 0 2.6909 1 0.0 0 0.0 0 0.0934 8 2.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 3.2507 1 0.0 0 0.0 0 4.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 179.634
Average program size in population (points): 180.634
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 162.1621606449264
Average age in population: 149.6925954484865
Median age in population: 159.8760970293381
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.573
Error (vector) diversity:			 0.856
Behavioral diversity:				 0.86
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 390034193
--- Timings ---
Current time: 1529615388758 milliseconds
Total Time:         535.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       120.6 seconds, 22.5%
Fitness Testing:    330.0 seconds, 61.6%
Report:              85.2 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 33673.0
Test mean error for best: 16.83650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_619} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc tagged_619 integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yank integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div integer_rot integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 1.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4796.176557999999
Median total errors in population: 937.0
Error averages by case: (242.06400750000006 4.132 219.33945200000002 4.073 188.4265048999999 13.319 176.72039979999974 4.306 181.0138754999999 4.793 172.74334039999997 4.085 168.85529369999992 5.204 202.637589 3.929 163.22294399999993 3.635 174.0802689 4.265 222.54252939999998 10.463 215.6754704000001 5.1 193.07165360000002 4.825 176.63089350000013 4.294 174.74698890000005 5.101 173.98724960000004 5.197 167.18237060000004 4.589 171.8479272000002 4.464 187.858482 4.763 195.62288389999995 4.585 174.16863759999995 5.746 176.34423940000005 5.29 177.8095323000002 4.254 189.96006070000024 4.789 179.99096320000004 4.432)
Error minima by case: (70.3383 1 0.0737 1 0.5345 9 0.0 0 0.0 0 2.277 1 0.0 0 6.6333 1 0.0 0 0.0 0 0.1861 8 32.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 11.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.312
Average program size in population (points): 178.312
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 163.0790735091512
Average age in population: 147.9773733967207
Median age in population: 161.143626650446
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.54
Error (vector) diversity:			 0.843
Behavioral diversity:				 0.847
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 394467159
--- Timings ---
Current time: 1529615394113 milliseconds
Total Time:         541.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.6 seconds, 22.5%
Fitness Testing:    333.5 seconds, 61.6%
Report:              86.1 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 33673.0
Test mean error for best: 16.83650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_max float_inc float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yank integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div integer_rot integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 1.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4595.621249299999
Median total errors in population: 937.5
Error averages by case: (233.40016830000002 4.013 211.57153510000003 4.007 178.5127195999999 13.309 170.36206859999984 4.265 172.5952384 4.775 164.66205019999995 4.024 164.4733591 5.048 194.51411409999992 3.769 154.92668099999995 3.532 171.9117603 4.311 214.77083289999993 10.45 207.62073430000007 4.905 183.7008793000001 4.916 171.15739910000016 4.272 163.60583000000005 5.006 162.85199260000002 5.059 157.96836370000005 4.465 162.32712310000002 4.502 177.99249370000007 4.74 186.42734769999998 4.512 164.7172768 5.68 165.3173797000001 5.369 174.5872874000002 4.313 180.43125880000022 4.798 176.69635550000012 4.479)
Error minima by case: (12.6617 1 1.0737 1 8.4655 10 0.0 0 0.0 0 1.1476 1 0.0 0 3.461 1 0.0 0 0.0 0 1.085 7 0.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.212
Average program size in population (points): 178.212
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 164.3058750133612
Average age in population: 149.2991809107204
Median age in population: 162.3763289154767
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.549
Error (vector) diversity:			 0.855
Behavioral diversity:				 0.86
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 398897859
--- Timings ---
Current time: 1529615399395 milliseconds
Total Time:         546.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.6 seconds, 22.4%
Fitness Testing:    337.0 seconds, 61.7%
Report:              86.9 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 33673.0
Test mean error for best: 16.83650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_max float_inc float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yank integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div integer_rot integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 1.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4732.961640400001
Median total errors in population: 910.5
Error averages by case: (237.7701059 3.993 214.88001939999995 4.032 183.21748379999997 13.194 175.35573289999982 4.378 179.2091118999999 4.918 168.73748259999996 4.032 167.11193259999996 5.243 198.0158144 3.716 158.95451809999992 3.517 174.98185079999996 4.377 218.1947903 10.357 212.10730370000007 4.934 191.41362840000005 4.999 178.27082870000007 4.372 169.60688790000003 5.041 168.75263520000004 5.066 162.93183770000007 4.533 172.85211420000016 4.564 186.024176 4.791 190.96464559999995 4.511 171.2603216 5.564 177.95919870000003 5.471 178.81342930000022 4.369 187.98860750000017 4.868 178.2141832 4.533)
Error minima by case: (3.6617 1 0.791 1 5.4655 9 0.0 0 0.0 0 1.1476 1 0.0 0 2.3585 1 0.0 0 0.0 0 1.915 8 16.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.306
Average program size in population (points): 178.306
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 165.5860748797704
Average age in population: 150.1777812274327
Median age in population: 163.5391445148079
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.535
Error (vector) diversity:			 0.833
Behavioral diversity:				 0.837
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 403330609
--- Timings ---
Current time: 1529615404720 milliseconds
Total Time:         551.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       123.7 seconds, 22.4%
Fitness Testing:    340.5 seconds, 61.7%
Report:              87.7 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 33673.0
Test mean error for best: 16.83650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_max float_inc float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yank integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div integer_rot integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 1.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5251.032297799999
Median total errors in population: 961.0
Error averages by case: (260.57614570000004 4.201 235.01714680000003 4.327 204.45527400000003 13.343 194.6166384999997 4.688 199.5328773999999 5.334 190.56019419999993 4.327 186.10729510000007 5.598 218.969042 3.983 183.08600799999994 3.856 194.5568262 4.702 237.85588030000008 10.504 235.6656856000001 5.111 211.8529730000002 5.319 196.76818000000006 4.624 188.96165290000005 5.436 187.39999160000008 5.481 186.83633190000006 4.8 189.95213500000023 4.919 205.50524420000013 5.151 215.69154509999996 4.81 191.68004820000002 6.044 194.6520899000001 5.764 196.38183300000028 4.651 208.29316500000013 5.213 199.1160942000001 4.756)
Error minima by case: (14.6617 1 0.0457 1 0.4655 8 0.0 0 0.0 0 0.5205 1 0.0 0 4.8177 1 0.0 0 2.0 1 2.085 8 7.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 7.291 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.568
Average program size in population (points): 177.568
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 166.833924500376
Average age in population: 150.0205825134439
Median age in population: 164.80455516033
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.538
Error (vector) diversity:			 0.836
Behavioral diversity:				 0.841
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 407744934
--- Timings ---
Current time: 1529615410145 milliseconds
Total Time:         557.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.7 seconds, 22.4%
Fitness Testing:    344.0 seconds, 61.7%
Report:              88.5 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 32232.0
Test mean error for best: 16.11600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_yank} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_rot} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_yank integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div integer_swap float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_rot 11 float_inc integer_dec in2 float_inc integer_sub float_inc integer_mult float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 2.0 1 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 2.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4989.8278150999995
Median total errors in population: 976.5
Error averages by case: (250.90181750000008 4.061 224.3688168 4.172 191.8872362 13.198 182.77211439999985 4.539 188.2116426999999 5.152 178.4927770999999 4.199 174.65586340000013 5.393 208.23169349999995 3.772 172.9606620999999 3.741 182.12163659999987 4.528 227.31184710000005 10.379 226.3778347000001 4.969 205.89371660000015 5.275 186.1068129000001 4.523 179.79322580000002 5.455 179.9404923000001 5.481 177.46849290000003 4.756 176.6498248000001 4.759 200.0433868000001 5.16 205.88446069999998 4.77 178.04213180000002 5.968 186.90061450000002 5.709 182.75099850000018 4.485 202.11577300000022 5.22 185.6999424000002 4.58)
Error minima by case: (7.3383 1 0.9028 1 6.4655 9 0.0 0 0.0 0 0.549 1 0.0 0 3.7008 1 0.0 0 0.0 0 0.915 8 4.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 4.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.504
Average program size in population (points): 178.504
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 168.165402357091
Average age in population: 152.7277478707957
Median age in population: 166.1677545934384
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.576
Error (vector) diversity:			 0.843
Behavioral diversity:				 0.849
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 412182634
--- Timings ---
Current time: 1529615415651 milliseconds
Total Time:         562.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       125.7 seconds, 22.3%
Fitness Testing:    347.5 seconds, 61.8%
Report:              89.4 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 33673.0
Test mean error for best: 16.83650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_max float_inc float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yank integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div integer_rot integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 1.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4689.200056499999
Median total errors in population: 966.0
Error averages by case: (237.4395623000001 3.854 212.09886280000003 4.152 180.38668850000005 13.247 174.56106549999984 4.439 181.05369249999995 4.99 164.94092649999996 4.162 162.5057694 5.141 194.3881863999999 3.653 157.77746549999992 3.637 173.99778379999998 4.428 214.13010129999998 10.443 211.1401086000001 4.759 194.05458290000013 5.092 177.25678840000006 4.457 166.59499830000001 5.217 164.57711610000004 5.25 161.29683440000005 4.686 171.03380530000018 4.675 186.94975470000003 4.956 190.4101657999999 4.679 163.7252207 5.707 176.9099477 5.56 173.87389530000019 4.374 189.93686500000018 5.003 177.13686880000006 4.462)
Error minima by case: (4.6617 1 0.9078 1 1.5345 9 0.0 0 0.0 0 0.8526 1 0.0 0 0.3854 1 0.0 0 0.0 0 1.9441 8 5.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0 0 4.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.311
Average program size in population (points): 178.311
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 169.5703875605042
Average age in population: 152.8083939479464
Median age in population: 167.4622821655565
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.555
Error (vector) diversity:			 0.83
Behavioral diversity:				 0.837
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 416615759
--- Timings ---
Current time: 1529615421150 milliseconds
Total Time:         568.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.8 seconds, 22.3%
Fitness Testing:    351.1 seconds, 61.8%
Report:              90.3 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 33673.0
Test mean error for best: 16.83650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_max float_inc float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yank integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div integer_rot integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 1.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4893.995784999999
Median total errors in population: 962.5
Error averages by case: (246.30346030000007 3.803 218.88501620000008 4.107 187.4674905 13.325 179.36660369999993 4.48 187.59367089999995 5.073 172.73981479999992 4.109 168.30267709999993 5.361 202.12407089999996 3.57 164.7738546999999 3.563 180.15347970000008 4.412 221.9816304 10.509 220.7111662 4.732 203.5166441 5.172 186.7080388000001 4.446 176.07839509999997 5.28 175.35233080000017 5.299 172.6896345000001 4.596 176.2932964000001 4.678 196.30734070000005 4.982 200.98684289999994 4.583 173.8827756999999 6.088 185.67967460000008 5.6 181.93422340000015 4.444 199.98122050000018 5.073 182.4314321000001 4.466)
Error minima by case: (3.6617 1 2.0737 1 8.6093 9 0.0 0 0.0 0 0.8298 1 0.0 0 3.5509 1 0.0 0 0.0 0 2.1144 8 2.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.299
Average program size in population (points): 178.299
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 170.9973211589782
Average age in population: 154.9229910376383
Median age in population: 168.695251819832
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.582
Error (vector) diversity:			 0.855
Behavioral diversity:				 0.86
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 421048709
--- Timings ---
Current time: 1529615426545 milliseconds
Total Time:         573.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.8 seconds, 22.3%
Fitness Testing:    354.6 seconds, 61.8%
Report:              91.2 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 33673.0
Test mean error for best: 16.83650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div integer_max float_inc float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_shove integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yank integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div integer_rot integer_div integer_dec float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 7.0 1 2.0 1 1.0 1 2.0 1 12.0 2]
Total: 547.0
Mean: 10.94
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4882.548647299999
Median total errors in population: 943.0
Error averages by case: (243.88445280000002 3.763 222.47157510000005 4.072 190.57219920000003 13.298 181.9535281999998 4.468 184.63644759999994 4.936 176.33640859999997 4.076 175.05693600000006 5.366 205.4855448 3.506 166.48294339999993 3.59 181.76022680000003 4.483 225.39907690000004 10.473 219.25815470000006 4.646 195.2792733 4.977 183.0868028000001 4.517 174.6033973 5.117 175.20015529999986 5.13 169.50075240000007 4.621 173.76528580000013 4.646 191.00880429999995 4.842 199.14452719999994 4.606 178.18338120000024 5.778 178.34322710000004 5.437 182.50180480000012 4.444 192.83614410000007 4.91 185.54259759999997 4.553)
Error minima by case: (3.6617 1 0.0737 1 2.5345 9 0.0 0 0.0 0 4.1294 1 0.0 0 0.2621 1 0.0 0 0.0 0 0.9483 8 18.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.888
Average program size in population (points): 178.888
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 172.0595202881218
Average age in population: 156.966070190594
Median age in population: 170.0090988152338
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.544
Error (vector) diversity:			 0.826
Behavioral diversity:				 0.833
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 425496659
--- Timings ---
Current time: 1529615432044 milliseconds
Total Time:         579.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.9 seconds, 22.3%
Fitness Testing:    358.2 seconds, 61.8%
Report:              92.0 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 33671.0
Test mean error for best: 16.83550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 91.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 82.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction print_integer} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (print_integer print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_div float_inc float_inc integer_div integer_div integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc print_integer float_inc float_dec integer_div float_inc float_dup float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_dec float_inc integer_div float_inc integer_yankdup float_inc integer_rot integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_yank integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 2.0 1 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 1.0 1 5.0 1 38.0 2 7.0 1 4.0 3 3.0 1 0.0 0 10.0 1]
Total: 547.0
Mean: 10.94
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5063.5801741
Median total errors in population: 952.0
Error averages by case: (251.2086481000001 3.903 229.36631530000005 4.211 197.92512269999995 13.248 185.9107954999999 4.436 188.4407405999999 4.899 183.47513129999993 4.212 181.52095189999994 5.422 212.60250379999997 3.663 173.1743330999999 3.71 186.86563949999993 4.567 232.53077039999997 10.44 225.20908750000012 4.886 203.64177620000004 5.011 187.02959500000006 4.446 188.5002738 5.184 187.65988990000002 5.265 175.7283078 4.854 181.95596650000016 4.581 199.8183214000001 4.839 205.87467479999995 4.817 181.96907599999992 5.82 192.33658860000003 5.457 187.60040280000018 4.447 201.61522900000017 4.886 189.80803260000013 4.608)
Error minima by case: (5.6617 1 0.0737 1 3.5345 8 0.0 0 0.0 0 1.6909 1 0.0 0 1.0157 1 0.0 0 0.0 0 0.915 8 16.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.4505 1 0.0 0 0.0 0 5.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.452
Average program size in population (points): 176.452
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 173.3831406717113
Average age in population: 155.3870024774892
Median age in population: 171.2389930889196
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.505
Error (vector) diversity:			 0.809
Behavioral diversity:				 0.814
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 429882991
--- Timings ---
Current time: 1529615437431 milliseconds
Total Time:         584.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.0 seconds, 22.2%
Fitness Testing:    361.6 seconds, 61.9%
Report:              92.9 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 33671.0
Test mean error for best: 16.83550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 77.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 10.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 91.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 82.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction print_integer} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (print_integer print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_div float_inc float_inc integer_div integer_div integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc print_integer float_inc float_dec integer_div float_inc float_dup float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_dec float_inc integer_div float_inc integer_yankdup float_inc integer_rot integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_yank integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 2.0 1 3.0 2 14.0 2 1.0 1 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 1.0 1 5.0 1 38.0 2 7.0 1 4.0 3 3.0 1 0.0 0 10.0 1]
Total: 547.0
Mean: 10.94
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5126.676294
Median total errors in population: 946.0
Error averages by case: (253.20497580000008 3.823 229.0778356 4.128 197.06961570000004 13.198 190.18035269999984 4.398 195.1684504999999 4.962 182.61189729999987 4.15 181.73089940000008 5.363 212.22090519999992 3.581 175.7901889999999 3.575 186.98688239999998 4.417 232.12102700000008 10.382 227.83104610000015 4.717 211.8365669 5.014 193.17983720000015 4.445 189.4035309000001 5.29 188.85937489999998 5.302 181.0706568000001 4.799 183.79486470000012 4.566 206.50055720000003 4.885 207.1592397999999 4.731 186.2736404 5.826 194.1628117000001 5.459 191.10410650000014 4.339 208.89355479999998 4.945 189.66347550000012 4.485)
Error minima by case: (1.6617 1 1.9263 1 7.5345 9 0.0 0 0.0 0 1.8524 1 0.0 0 2.539 1 0.0 0 0.0 0 2.294 8 13.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.2507 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.93
Average program size in population (points): 177.93
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 174.4471729390678
Average age in population: 158.3382937769714
Median age in population: 172.6446074167618
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.541
Error (vector) diversity:			 0.814
Behavioral diversity:				 0.819
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 434306391
--- Timings ---
Current time: 1529615442971 milliseconds
Total Time:         590.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.0 seconds, 22.2%
Fitness Testing:    365.2 seconds, 61.9%
Report:              93.8 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 33778.0
Test mean error for best: 16.88900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 91.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 82.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction print_integer} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (print_integer print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_mult print_integer float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_div float_inc float_inc integer_div integer_div integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc print_integer float_inc float_dec integer_div float_inc float_dup float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_dec float_inc integer_div float_inc integer_yankdup float_inc integer_rot integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_yank integer_div float_inc float_inc float_inc float_dup_times float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 2.0 2 1.0 1 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 4.0 1 0.0 0 10.0 1]
Total: 545.0
Mean: 10.9
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4892.345827499998
Median total errors in population: 959.5
Error averages by case: (243.52149940000007 3.848 218.02927029999998 4.201 188.06927359999995 13.28 179.52485129999982 4.491 185.43071089999992 5.06 172.45302039999999 4.214 170.91249670000005 5.547 201.4676110999999 3.623 164.50807599999993 3.671 180.3994816 4.606 221.11713379999995 10.431 217.31678500000004 4.717 201.76108300000024 5.096 181.00510100000008 4.48 182.60073970000008 5.366 182.40753300000006 5.403 170.62025950000003 4.66 178.79894450000015 4.684 195.2308823000001 4.917 196.7594897 4.654 174.47042720000007 6.084 189.92925719999997 5.513 180.86784860000014 4.446 197.47832090000017 5.011 184.99173080000008 4.671)
Error minima by case: (7.3383 1 0.0425 1 4.4655 9 0.0 0 0.0 0 0.1476 1 0.0 0 2.5006 1 0.0 0 0.0 0 2.915 7 0.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 3.8609 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.24
Average program size in population (points): 177.24
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 175.7548922730187
Average age in population: 159.149373215063
Median age in population: 173.896406418115
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.559
Error (vector) diversity:			 0.834
Behavioral diversity:				 0.84
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 438712666
--- Timings ---
Current time: 1529615448449 milliseconds
Total Time:         595.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       132.0 seconds, 22.2%
Fitness Testing:    368.8 seconds, 61.9%
Report:              94.6 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 33778.0
Test mean error for best: 16.88900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 91.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 86.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 82.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction print_integer} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction print_integer} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (print_integer print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_mult print_integer float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_div float_inc float_inc integer_div integer_div integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc print_integer float_inc float_dec integer_div float_inc float_dup float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc integer_div float_inc float_inc float_inc integer_dec float_inc integer_div float_inc integer_yankdup float_inc integer_rot integer_dec float_inc float_inc integer_div float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_yank integer_div float_inc float_inc float_inc float_dup_times float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 2.0 2 1.0 1 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 4.0 1 0.0 0 10.0 1]
Total: 545.0
Mean: 10.9
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4707.925381399999
Median total errors in population: 903.0
Error averages by case: (239.37901620000008 3.678 217.62897549999997 4.005 185.85269379999997 13.236 171.95548829999981 4.384 175.07593569999992 4.914 171.36423359999998 4.022 165.16151249999993 5.316 200.7986692 3.444 159.33259169999997 3.475 169.7151779 4.377 220.8926269 10.408 213.27183630000005 4.599 188.86561899999995 4.956 173.21687400000013 4.45 169.75752840000007 5.047 169.41503490000002 5.073 165.83447360000008 4.595 168.81964480000002 4.572 182.94063400000002 4.83 193.70044299999995 4.539 166.82504699999993 5.857 175.7862742 5.456 173.13825050000023 4.276 185.53188320000018 4.866 174.83591720000013 4.454)
Error minima by case: (2.6617 1 0.4566 1 4.4655 7 0.0 0 0.0 0 2.8524 1 0.0 0 0.1113 1 0.0 0 0.0 0 1.4731 8 4.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.2445 1 0.0 0 0.0 0 2.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.63
Average program size in population (points): 178.63
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 177.2115561793116
Average age in population: 163.2746426064975
Median age in population: 175.161128424901
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.548
Error (vector) diversity:			 0.852
Behavioral diversity:				 0.854
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 443153516
--- Timings ---
Current time: 1529615453904 milliseconds
Total Time:         601.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.1 seconds, 22.1%
Fitness Testing:    372.4 seconds, 61.9%
Report:              95.5 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 34219.0
Test mean error for best: 17.10950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 92.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 191.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 71.5127184446 
Correct output: 61.1705628788  | Program output: 69.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 134.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 101.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 173.2225097733
Correct output: 92.3146270329  | Program output: 83.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction tag_integer_514} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_flush} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (print_integer print_integer float_pop in1 float_dec in1 integer_dec integer_dec float_inc in1 integer_dec float_inc -46 integer_dec integer_swap float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_max integer_div float_inc float_inc integer_div integer_div float_inc float_inc float_inc integer_div integer_div float_inc integer_add integer_div tag_integer_514 float_inc float_inc integer_div float_inc float_inc integer_add float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_swap float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_flush float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_dec integer_div float_inc integer_div float_inc integer_sub float_inc float_inc float_inc float_dec float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_mult float_inc integer_yankdup 11 integer_sub integer_div integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 6.0 2 14.0 2 0.0 0 50.0 1 3.0 1 3.0 1 75.0 10 60.0 2 1.0 1 1.0 1 11.0 2 8.0 1 5.0 2 2.0 1 2.0 1 38.0 2 4.0 1 1.0 1 0.0 0 3.0 1 9.0 2]
Total: 543.0
Mean: 10.86
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4402.940733099999
Median total errors in population: 844.5
Error averages by case: (224.0614946 3.434 203.7513105 3.825 170.85448469999997 13.243 159.53718879999983 4.027 167.91483599999995 4.704 155.96633599999996 3.833 151.23440319999997 4.93 186.3609609 3.252 146.04379399999996 3.285 156.4730614 4.057 206.17863169999998 10.416 197.35245980000008 4.355 182.0335025999999 4.73 161.4209660000001 4.031 160.0046875000001 4.895 158.84414239999998 4.913 149.12960640000003 4.312 160.5646234000001 4.343 176.53694360000006 4.575 178.1121602 4.246 157.06079049999997 5.576 168.36773390000008 5.149 161.8094071000002 4.004 178.91447750000015 4.637 161.4447304 4.196)
Error minima by case: (1.6617 1 1.0737 1 2.5585 10 0.0 0 0.0 0 0.1476 1 0.0 0 1.2764 1 0.0 0 0.0 0 0.915 8 3.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 180.195
Average program size in population (points): 181.195
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 178.3248066221494
Average age in population: 167.1018260733891
Median age in population: 176.4360623756349
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.521
Error (vector) diversity:			 0.831
Behavioral diversity:				 0.835
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 447658541
--- Timings ---
Current time: 1529615459487 milliseconds
Total Time:         606.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.1 seconds, 22.1%
Fitness Testing:    376.0 seconds, 62.0%
Report:              96.4 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 31901.0
Test mean error for best: 15.95050
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_672} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub integer_yankdup integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc integer_pop integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_div integer_dec float_inc float_inc 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc tagged_672 integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 0.0 0 0.0 0 12.0 2]
Total: 544.0
Mean: 10.88
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4633.954743599999
Median total errors in population: 904.0
Error averages by case: (236.24445600000007 3.614 213.51211039999998 4.014 180.67428120000005 13.205 169.42331969999978 4.271 174.28101149999986 4.822 166.9390388 4.008 162.14457110000006 5.203 196.27519150000003 3.435 158.39725429999993 3.511 168.0298592 4.258 216.5327861 10.391 210.64586880000004 4.502 189.61907540000007 4.848 170.7801321 4.11 165.61430130000002 4.948 165.58936480000008 4.989 161.80255310000007 4.517 161.52567020000012 4.411 183.65854249999998 4.719 190.48572229999996 4.477 165.53455119999992 5.617 169.9292338000001 5.308 170.79076950000018 4.136 186.0806162000001 4.787 173.01146260000002 4.332)
Error minima by case: (4.6617 1 0.2518 1 1.4655 9 0.0 0 0.0 0 0.1797 1 0.0 0 0.461 1 0.0 0 0.0 0 2.085 8 4.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 2.5063 1 0.0 0 0.0 0 0.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 178.311
Average program size in population (points): 179.311
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 179.6943738594574
Average age in population: 165.8393808300604
Median age in population: 177.6766803592112
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.539
Error (vector) diversity:			 0.829
Behavioral diversity:				 0.833
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 452116491
--- Timings ---
Current time: 1529615464978 milliseconds
Total Time:         612.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.2 seconds, 22.1%
Fitness Testing:    379.5 seconds, 62.0%
Report:              97.3 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 34067.0
Test mean error for best: 17.03350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 91.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 82.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (print_integer print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_shove float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div integer_div float_yankdup integer_div float_inc float_inc integer_mult float_inc float_inc float_inc float_inc float_dup integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_dec float_inc integer_div float_inc integer_yankdup float_inc integer_rot integer_dec float_inc float_inc float_dup_times float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_yank integer_div float_inc float_inc float_inc float_dup_times float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 6.0 2 14.0 2 0.0 0 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 3.0 1 2.0 1 10.0 1]
Total: 544.0
Mean: 10.88
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4909.481957799999
Median total errors in population: 898.0
Error averages by case: (246.31604020000003 3.611 223.7464048 3.952 191.55694759999997 13.23 180.50140049999987 4.165 185.78834519999992 4.738 176.87385989999999 3.969 174.16827829999994 5.234 206.68973289999994 3.417 167.02034929999988 3.465 180.54184849999993 4.26 226.92350080000003 10.416 220.99626930000002 4.603 196.36967740000009 4.771 182.58390740000002 4.116 178.92675699999995 4.915 178.0745305000002 4.987 172.5821231 4.624 178.6064732000001 4.328 193.0782195000001 4.604 201.48743599999995 4.527 176.66557329999992 5.627 184.33408590000002 5.229 181.52482590000017 4.14 194.3648500000001 4.62 183.8845213000002 4.328)
Error minima by case: (6.6617 1 4.0737 1 4.1617 10 0.0 0 0.0 0 9.1476 1 0.0 0 12.461 1 0.0 0 0.0 0 2.4731 7 15.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 0.6461 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.658
Average program size in population (points): 178.658
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 180.7899444152025
Average age in population: 166.6908128453062
Median age in population: 178.9998280163548
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.523
Error (vector) diversity:			 0.822
Behavioral diversity:				 0.826
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 456558341
--- Timings ---
Current time: 1529615470432 milliseconds
Total Time:         617.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       136.3 seconds, 22.1%
Fitness Testing:    383.0 seconds, 62.0%
Report:              98.2 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 34067.0
Test mean error for best: 17.03350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 91.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 82.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (print_integer print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_shove float_inc integer_div integer_mult float_inc float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc integer_dup_times integer_div integer_div float_yankdup integer_div float_inc float_inc integer_mult float_inc float_inc float_inc float_inc float_dup integer_div float_inc float_inc float_inc float_inc float_inc integer_add float_inc integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_dec integer_div float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_dec float_inc integer_div float_inc integer_yankdup float_inc integer_rot integer_dec float_inc float_inc float_dup_times float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_yank integer_div float_inc float_inc float_inc float_dup_times float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 6.0 2 14.0 2 0.0 0 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 3.0 1 2.0 1 10.0 1]
Total: 544.0
Mean: 10.88
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4270.479804
Median total errors in population: 880.0
Error averages by case: (223.28900050000004 3.374 200.66879280000003 3.741 167.59568509999997 13.139 155.30937849999984 4.054 158.14897069999995 4.562 152.88734409999995 3.773 149.36382839999996 5.1 183.1487263 3.164 143.47644989999998 3.228 155.31608639999996 4.09 203.97160449999996 10.371 197.0199460000001 4.316 170.07599039999997 4.512 156.74780630000012 4.106 151.43833809999998 4.868 150.57804330000005 4.912 148.58023730000005 4.351 148.8144897000001 4.164 166.27575919999998 4.381 176.91641029999997 4.31 154.05466269999997 5.495 154.74408590000004 5.023 156.22397770000015 3.979 166.01439700000014 4.408 158.2557929 4.143)
Error minima by case: (2.6617 1 1.0737 1 1.3794 8 0.0 0 0.0 0 2.8524 1 0.0 0 1.539 1 0.0 0 0.0 0 2.0741 7 6.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 2.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 179.606
Average program size in population (points): 180.606
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 182.1951837054494
Average age in population: 170.5818508325652
Median age in population: 180.2834337130819
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.51
Error (vector) diversity:			 0.818
Behavioral diversity:				 0.822
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 461048741
--- Timings ---
Current time: 1529615475943 milliseconds
Total Time:         623.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.3 seconds, 22.0%
Fitness Testing:    386.6 seconds, 62.0%
Report:              99.1 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 32059.0
Test mean error for best: 16.02950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_mod float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_div integer_dec float_inc integer_dec 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 5.0 2 14.0 2 0.0 0 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 0.0 0 2.0 1 12.0 2]
Total: 543.0
Mean: 10.86
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4611.8949422999995
Median total errors in population: 895.5
Error averages by case: (233.82075140000003 3.516 212.73338660000002 3.854 181.21748440000002 13.216 170.75884189999985 4.133 173.77401609999995 4.624 165.86386739999995 3.873 159.74499959999997 5.059 196.1719115 3.31 153.5464017 3.378 169.20511549999995 4.192 216.00754430000006 10.421 208.91746240000003 4.43 183.9642059 4.648 169.65856990000003 4.178 167.2864197 4.714 166.38161780000004 4.752 159.57152490000004 4.469 167.70580790000008 4.188 179.5762840000001 4.457 186.8942657 4.422 165.5283522999999 5.425 172.9422239000001 5.129 171.95475320000014 4.07 179.50081810000012 4.53 175.88031620000007 4.3)
Error minima by case: (3.6617 1 2.9263 1 9.4821 9 0.0 0 0.0 0 2.1476 1 0.0 0 3.7291 1 0.0 0 0.0 0 3.085 7 1.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.2507 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 180.684
Average program size in population (points): 181.684
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 183.4324694323731
Average age in population: 173.0532340647124
Median age in population: 181.5616791003917
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.52
Error (vector) diversity:			 0.814
Behavioral diversity:				 0.818
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 465565741
--- Timings ---
Current time: 1529615481400 milliseconds
Total Time:         628.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.4 seconds, 22.0%
Fitness Testing:    390.1 seconds, 62.1%
Report:              99.9 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 31576.0
Test mean error for best: 15.78800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction 11} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction tagged_461} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup integer_yankdup float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub 11 integer_sub integer_sub float_inc integer_yankdup 11 integer_sub tagged_461 float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_div integer_dec float_inc float_inc 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 0.0 0 0.0 0 12.0 2]
Total: 544.0
Mean: 10.88
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4557.8020529
Median total errors in population: 888.5
Error averages by case: (230.75179810000003 3.554 209.93271390000007 3.895 178.89064699999994 13.212 166.7820799999998 4.094 172.65153479999998 4.69 162.8259400999999 3.937 161.2398257 5.204 193.30639109999996 3.322 153.43673919999998 3.377 168.00765619999996 4.139 213.32941999999997 10.401 204.94253380000012 4.478 183.4131329 4.735 167.53864820000015 4.129 166.32045100000005 5.005 165.3643486999999 5.029 154.29995870000008 4.406 164.9405377000002 4.214 179.5599701000001 4.57 183.74466449999997 4.419 164.25681460000007 5.571 171.52602180000008 5.199 165.51641090000018 3.962 181.6537634000001 4.66 169.18105050000008 4.187)
Error minima by case: (1.6617 1 0.9263 1 5.4655 8 0.0 0 0.0 0 1.1476 1 0.0 0 0.3987 1 0.0 0 0.0 0 0.915 8 15.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 3.7493 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 181.504
Average program size in population (points): 182.504
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 184.8664167276011
Average age in population: 175.7024007441544
Median age in population: 182.817977081667
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.525
Error (vector) diversity:			 0.815
Behavioral diversity:				 0.822
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 470103341
--- Timings ---
Current time: 1529615486936 milliseconds
Total Time:         634.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.5 seconds, 22.0%
Fitness Testing:    393.7 seconds, 62.1%
Report:             100.8 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 32120.0
Test mean error for best: 16.06000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction tagged_461} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_rot} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_mod float_inc float_inc integer_yankdup float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_shove float_inc integer_yankdup 11 integer_sub tagged_461 float_inc float_inc integer_max integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_rot 11 float_inc integer_dec in2 float_inc integer_sub float_inc integer_mult float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 0.0 0 2.0 1 12.0 2]
Total: 541.0
Mean: 10.82
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4330.0355739
Median total errors in population: 889.60285
Error averages by case: (223.87007560000006 3.347 200.62953650000003 3.704 166.1682063 13.215 160.58976769999987 4.031 163.98511969999996 4.569 151.18754959999995 3.709 153.06301979999995 5.105 182.9460339 3.112 143.44031519999996 3.211 155.3972599 4.015 203.98102480000009 10.403 197.68718590000006 4.271 174.3901183999999 4.628 163.0469418000001 3.99 157.03777260000012 4.811 156.25217249999992 4.859 146.69323510000004 4.371 154.29390740000014 4.114 171.1102774999999 4.504 175.75197799999998 4.347 156.72429890000006 5.542 159.26168870000004 5.071 158.06977860000018 3.923 173.01445100000018 4.534 159.96085850000003 4.097)
Error minima by case: (3.6617 1 0.9263 1 10.4648 9 0.0 0 0.0 0 1.4577 1 0.0 0 2.4338 1 0.0 0 0.0 0 2.4593 8 3.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 180.147
Average program size in population (points): 181.147
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 185.8432629932658
Average age in population: 175.3734429944227
Median age in population: 183.9910413260822
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.545
Error (vector) diversity:			 0.838
Behavioral diversity:				 0.846
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 474607266
--- Timings ---
Current time: 1529615492488 milliseconds
Total Time:         639.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       140.5 seconds, 22.0%
Fitness Testing:    397.3 seconds, 62.1%
Report:             101.7 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 33611.0
Test mean error for best: 16.80550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 92.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 83.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dup_items} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_max integer_add float_inc float_inc integer_div float_inc integer_dup float_inc integer_inc integer_dec float_yank integer_div float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_inc integer_div float_inc float_inc integer_div integer_div integer_min float_inc float_inc integer_div float_inc float_inc integer_dup float_inc float_inc integer_add integer_dup_items integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dec float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_yank integer_div float_inc float_inc float_inc float_dup_times float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_min float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 3.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 3.0 1 2.0 1 9.0 2]
Total: 540.0
Mean: 10.8
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4389.466120399999
Median total errors in population: 866.0
Error averages by case: (225.45779050000004 3.372 201.95648420000006 3.724 169.2824454 13.164 160.0286076999999 3.937 165.19023009999995 4.562 154.11981709999998 3.756 155.2229564 4.972 184.5697581 3.137 144.46613449999992 3.223 157.34601209999997 4.012 205.13324319999998 10.344 199.4766749000001 4.277 177.38643400000007 4.574 161.85893870000012 3.963 161.7303586 4.763 160.40717610000007 4.8 149.0721974 4.26 160.0192914000001 4.136 173.89548770000005 4.39 179.3182516 4.209 156.1331527999999 5.472 167.38980470000004 5.052 160.67661480000018 3.839 176.2407265000001 4.425 162.63753190000006 4.087)
Error minima by case: (89.0 1 0.9028 1 0.4655 2 0.0 0 0.0 0 3.3644 1 0.0 0 3.461 1 0.0 0 0.0 0 2.4731 2 59.0 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 37.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 179.194
Average program size in population (points): 180.194
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 187.5696146531967
Average age in population: 175.8510399463309
Median age in population: 185.3000464028446
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.53
Error (vector) diversity:			 0.827
Behavioral diversity:				 0.832
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 479087241
--- Timings ---
Current time: 1529615497806 milliseconds
Total Time:         645.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       141.5 seconds, 21.9%
Fitness Testing:    400.7 seconds, 62.1%
Report:             102.6 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 32120.0
Test mean error for best: 16.06000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction tagged_461} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_rot} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_mod float_inc float_inc integer_yankdup float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_shove float_inc integer_yankdup 11 integer_sub tagged_461 float_inc float_inc integer_max integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_rot 11 float_inc integer_dec in2 float_inc integer_sub float_inc integer_mult float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 0.0 0 2.0 1 12.0 2]
Total: 541.0
Mean: 10.82
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4024.8087401
Median total errors in population: 804.5
Error averages by case: (211.62661900000003 3.123 191.71699199999998 3.53 157.20730069999996 13.163 147.18131169999992 3.824 151.32979279999998 4.427 142.40214239999995 3.565 140.70061860000004 4.833 173.33108770000007 2.915 134.61361949999994 3.06 145.08694480000003 3.842 194.94234679999997 10.324 185.3902966 4.013 158.32511160000004 4.384 147.5930240000001 3.836 143.7199206 4.579 143.25646059999997 4.625 133.4592363 4.061 143.9472369000001 3.985 155.8451708 4.181 164.04536259999998 4.049 141.9354118 5.217 149.06861270000005 4.849 146.29669520000004 3.755 157.4213606000001 4.257 148.0130638 3.956)
Error minima by case: (2.6617 1 3.8093 1 7.5345 9 0.0 0 0.0 0 1.3058 1 0.0 0 1.408 1 0.0 0 0.0 0 1.4458 7 2.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 3.0537 1 0.0 0 0.0 0 2.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 181.134
Average program size in population (points): 182.134
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 188.5805331133237
Average age in population: 180.56592793109
Median age in population: 186.5312759688171
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.51
Error (vector) diversity:			 0.834
Behavioral diversity:				 0.84
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 483615441
--- Timings ---
Current time: 1529615503444 milliseconds
Total Time:         650.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.6 seconds, 21.9%
Fitness Testing:    404.3 seconds, 62.2%
Report:             103.5 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 33602.0
Test mean error for best: 16.80100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec integer_dup integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_div integer_yankdup float_inc float_inc integer_add float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 1.0 1 2.0 1 7.0 2]
Total: 534.0
Mean: 10.68
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4297.4722606
Median total errors in population: 833.5
Error averages by case: (223.01817839999998 3.3 201.8807117 3.702 168.8751585 13.188 156.4952515999998 3.966 160.77685139999988 4.554 153.65190589999995 3.718 148.66084229999993 5.066 184.40622879999995 3.101 143.28621119999994 3.169 154.84612500000006 3.999 205.1727966 10.365 196.95722150000003 4.253 173.84632850000006 4.634 158.42653830000012 3.913 154.52872600000003 4.843 153.61022040000003 4.849 144.2617314 4.169 152.3899048000001 4.095 169.24599020000008 4.448 175.85316549999996 4.174 153.5650784999999 5.368 159.63201830000006 5.075 155.17626040000016 3.926 172.03725740000013 4.535 156.34955800000006 4.112)
Error minima by case: (16.6617 1 3.0737 1 4.4655 8 0.0 0 0.0 0 0.8524 1 0.0 0 3.539 1 0.0 0 0.0 0 0.9635 7 0.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0 0 7.2484 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 179.484
Average program size in population (points): 180.484
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 190.059838632068
Average age in population: 178.9261280711988
Median age in population: 187.7139558142267
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.532
Error (vector) diversity:			 0.825
Behavioral diversity:				 0.833
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 488102541
--- Timings ---
Current time: 1529615509053 milliseconds
Total Time:         656.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.7 seconds, 21.9%
Fitness Testing:    408.0 seconds, 62.2%
Report:             104.4 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 33387.0
Test mean error for best: 16.69350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 189.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 69.5127184446 
Correct output: 61.1705628788  | Program output: 67.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 132.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 99.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 171.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_div integer_yankdup float_inc float_inc integer_add float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 3.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 1.0 2 0.0 0 9.0 1 6.0 1 5.0 2 1.0 1 4.0 1 38.0 2 7.0 1 3.0 3 0.0 0 1.0 1 7.0 2]
Total: 536.0
Mean: 10.72
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4211.784901899999
Median total errors in population: 874.5
Error averages by case: (216.91153770000003 3.323 194.07626119999998 3.684 161.38620479999994 13.138 154.95758919999977 4.16 162.46539399999997 4.734 145.61513839999998 3.716 145.52785450000005 5.065 176.33193019999996 3.087 139.81687579999996 3.143 153.90296830000005 4.059 197.26104379999998 10.328 190.71054230000007 4.242 173.86938910000003 4.724 156.53011710000015 4.059 149.80856110000005 4.811 148.79553719999996 4.829 141.19455220000006 4.241 153.54584450000007 4.25 168.95566679999996 4.547 169.39799949999994 4.23 148.6182502000001 5.454 157.74151000000006 5.193 153.83264840000015 3.951 171.02621540000015 4.622 157.73827020000002 4.177)
Error minima by case: (1.6617 1 2.3131 1 6.4655 10 0.0 0 0.0 0 0.7213 1 0.0 0 0.5701 1 0.0 0 0.0 0 0.915 8 3.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 180.801
Average program size in population (points): 181.801
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 190.9752074602514
Average age in population: 181.3776265782541
Median age in population: 188.9136519773246
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.523
Error (vector) diversity:			 0.808
Behavioral diversity:				 0.813
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 492622757
--- Timings ---
Current time: 1529615514572 milliseconds
Total Time:         661.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.7 seconds, 21.9%
Fitness Testing:    411.6 seconds, 62.2%
Report:             105.3 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 33387.0
Test mean error for best: 16.69350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 189.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 69.5127184446 
Correct output: 61.1705628788  | Program output: 67.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 132.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 99.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 171.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_dec float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div integer_div integer_yankdup float_inc float_inc integer_add float_inc integer_yankdup float_inc float_inc float_dup float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 3.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 1.0 2 0.0 0 9.0 1 6.0 1 5.0 2 1.0 1 4.0 1 38.0 2 7.0 1 3.0 3 0.0 0 1.0 1 7.0 2]
Total: 536.0
Mean: 10.72
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4383.266022600001
Median total errors in population: 895.0
Error averages by case: (224.54942910000005 3.33 202.74587279999994 3.726 168.12126149999997 13.202 163.21609849999976 4.127 168.24998189999994 4.734 152.72789819999994 3.747 151.10760489999998 5.201 185.4280752 3.127 142.23495819999997 3.172 160.2741732 4.084 205.8783 10.393 198.50407490000012 4.209 179.6469059 4.795 163.45740130000016 4.098 155.6653663000001 4.868 154.7232095 4.891 147.20900460000004 4.199 157.79792950000015 4.27 175.88149190000001 4.641 175.8622792 4.182 156.3698205000001 5.676 164.9781715000001 5.269 163.0356753000002 3.984 177.1462474000002 4.706 165.65279130000002 4.171)
Error minima by case: (3.6617 1 0.9028 1 3.4655 9 0.0 0 0.0 0 0.2867 1 0.0 0 4.4338 1 0.0 0 0.0 0 0.915 8 1.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 1.8609 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 179.966
Average program size in population (points): 180.966
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 192.0815359824841
Average age in population: 181.2591221778304
Median age in population: 190.1738746801168
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.553
Error (vector) diversity:			 0.85
Behavioral diversity:				 0.856
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 497121857
--- Timings ---
Current time: 1529615520121 milliseconds
Total Time:         667.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       145.7 seconds, 21.8%
Fitness Testing:    415.2 seconds, 62.2%
Report:             106.2 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 32120.0
Test mean error for best: 16.06000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 89.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 80.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction tagged_461} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_rot} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_mod float_inc float_inc integer_yankdup float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_shove float_inc integer_yankdup 11 integer_sub tagged_461 float_inc float_inc integer_max integer_div integer_rot float_inc float_inc integer_dec integer_div float_inc float_inc integer_div float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_rot 11 float_inc integer_dec in2 float_inc integer_sub float_inc integer_mult float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 6.0 2 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 0.0 0 2.0 1 12.0 2]
Total: 541.0
Mean: 10.82
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4294.909280899999
Median total errors in population: 887.5
Error averages by case: (223.25209860000004 3.424 199.3160397 3.784 167.96160230000004 13.165 156.91519329999983 3.9 160.8095354 4.464 152.302913 3.816 151.5220338 5.052 182.25351699999993 3.179 144.26253919999996 3.265 154.5412686 3.99 202.59668000000005 10.332 195.85215220000012 4.351 170.78717699999996 4.471 159.75491630000013 3.99 154.59051179999997 4.698 153.87813920000002 4.761 148.14868780000003 4.383 153.80093500000015 3.978 166.55148300000008 4.345 175.74835569999996 4.314 153.834061 5.508 157.06170580000008 4.989 157.36778730000017 3.782 169.68827840000014 4.4 161.6596695000001 4.111)
Error minima by case: (11.6617 1 0.0737 1 1.2993 7 0.0 0 0.0 0 5.1476 1 0.0 0 2.6013 1 0.0 0 0.0 0 1.7579 7 5.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 3.7493 1 0.0 0 0.0 0 11.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 179.475
Average program size in population (points): 180.475
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 193.4042330925482
Average age in population: 182.6073193742741
Median age in population: 191.3592649634931
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.546
Error (vector) diversity:			 0.84
Behavioral diversity:				 0.845
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 501608707
--- Timings ---
Current time: 1529615525685 milliseconds
Total Time:         672.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.8 seconds, 21.8%
Fitness Testing:    418.8 seconds, 62.2%
Report:             107.1 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 33453.0
Test mean error for best: 16.72650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 91.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 82.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_rot} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_rot integer_max integer_div float_inc float_inc integer_div float_yankdup float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_shove float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_sub float_inc integer_yankdup integer_yankdup float_inc integer_yankdup integer_yankdup 11 integer_sub integer_div float_inc float_inc float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_div integer_dec float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc integer_sub float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 1.0 1 2.0 1 10.0 1]
Total: 539.0
Mean: 10.78
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4363.107198600001
Median total errors in population: 901.0
Error averages by case: (225.5851109000001 3.421 202.83195940000004 3.791 169.38930799999997 13.165 157.8999439999999 4.004 164.97734769999994 4.613 154.91837599999997 3.8 152.11626120000003 5.18 185.7170930999999 3.177 144.76564789999992 3.261 154.40507689999998 3.863 206.04807279999997 10.322 199.54307510000012 4.318 180.39280400000004 4.743 158.8131408000001 4.099 155.74551570000014 4.883 155.3376177999999 4.935 149.16040880000003 4.478 156.86875190000015 4.106 175.7748956 4.524 177.522471 4.404 157.4031402 5.583 163.9268972000001 5.205 156.88857970000015 3.821 177.01279140000014 4.607 157.76691150000002 3.993)
Error minima by case: (1.6617 1 0.0737 1 3.5345 10 0.0 0 0.0 0 1.1476 1 0.0 0 6.539 1 0.0 0 0.0 0 0.915 8 16.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 180.075
Average program size in population (points): 181.075
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 194.6479236832592
Average age in population: 183.8403971714754
Median age in population: 192.706279965035
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.543
Error (vector) diversity:			 0.834
Behavioral diversity:				 0.84
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 506110507
--- Timings ---
Current time: 1529615531262 milliseconds
Total Time:         678.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.8 seconds, 21.8%
Fitness Testing:    422.4 seconds, 62.3%
Report:             108.0 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 31370.0
Test mean error for best: 15.68500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc float_inc integer_dec float_inc integer_div integer_mult float_dec integer_stackdepth integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_inc integer_swap float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_mod float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc tagged_884 integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_div float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 2.0 2 1.0 1 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 2.0 1 0.0 0 7.0 2]
Total: 538.0
Mean: 10.76
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4597.1826276
Median total errors in population: 897.49515
Error averages by case: (234.00405950000004 3.475 211.7146962 3.86 179.82880079999998 13.209 170.18552409999987 4.106 174.03152849999995 4.657 164.67334549999995 3.868 162.48278649999997 4.832 194.56689859999994 3.258 155.15160069999996 3.364 163.5140393 3.986 214.96702 10.366 208.53622990000002 4.359 183.73565740000004 4.664 173.66400500000006 4.069 166.0129001000001 4.689 166.2267621 4.712 159.91765099999998 4.486 166.43555660000013 4.179 180.3154257 4.445 188.4036744 4.462 168.30112049999994 5.32 171.58800330000005 5.159 167.52689890000013 3.826 181.60587720000012 4.535 167.79356580000004 4.113)
Error minima by case: (3.6617 1 0.097 1 3.4655 9 0.0 0 0.0 0 3.1476 1 0.0 0 1.461 1 0.0 0 0.0 0 1.915 7 1.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 179.25
Average program size in population (points): 180.25
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 195.7702550261693
Average age in population: 182.8327699837736
Median age in population: 193.8331355239839
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.511
Error (vector) diversity:			 0.815
Behavioral diversity:				 0.82
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 510591957
--- Timings ---
Current time: 1529615536850 milliseconds
Total Time:         683.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       148.9 seconds, 21.8%
Fitness Testing:    426.0 seconds, 62.3%
Report:             108.9 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 31526.0
Test mean error for best: 15.76300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc float_inc integer_dec float_inc integer_div integer_mult integer_sub integer_stackdepth integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div integer_dup float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_inc integer_swap float_inc -44 integer_min integer_dec float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc integer_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_max float_inc float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 2.0 2 1.0 1 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 1.0 1 0.0 0 7.0 2]
Total: 537.0
Mean: 10.74
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4448.660943999999
Median total errors in population: 902.0
Error averages by case: (229.01220260000014 3.435 205.04580630000004 3.849 173.54535070000003 13.202 163.72010689999982 4.06 168.63119379999995 4.615 158.13891829999997 3.852 156.16907080000004 5.061 187.87814609999995 3.214 149.89555649999994 3.339 162.6106342 4.011 208.2869583 10.364 201.3655942000001 4.369 178.9354463 4.656 163.31470420000008 4.121 158.14680210000012 4.756 158.26475119999995 4.779 154.05341730000006 4.434 162.3916068000001 4.153 174.76747799999987 4.463 181.10719619999992 4.358 159.78501160000008 5.482 166.85318519999996 5.129 162.16758020000023 3.907 176.49497630000005 4.521 165.8272499 4.122)
Error minima by case: (7.6617 1 0.9338 1 10.4655 9 0.0 0 0.0 0 0.5914 1 0.0 0 0.1894 1 1.0 1 0.0 0 3.085 8 3.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 3.56 1 0.0 0 0.0 0 7.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 180.039
Average program size in population (points): 181.039
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 197.0087350365488
Average age in population: 183.4043766414006
Median age in population: 195.0786121142356
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.522
Error (vector) diversity:			 0.817
Behavioral diversity:				 0.822
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 515093107
--- Timings ---
Current time: 1529615542347 milliseconds
Total Time:         689.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.0 seconds, 21.8%
Fitness Testing:    429.5 seconds, 62.3%
Report:             109.9 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 32528.0
Test mean error for best: 16.26400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction in1} {:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult in1 float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_inc integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_shove float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_div integer_dec float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 1.0 1 2.0 1 7.0 2]
Total: 536.0
Mean: 10.72
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5021.822000799999
Median total errors in population: 924.5
Error averages by case: (246.53346640000007 3.726 224.75081060000005 4.133 192.93967170000002 13.213 188.2478221999999 4.361 195.16271869999994 5.019 178.31982979999992 4.148 175.77573199999992 5.209 207.9248577999999 3.497 170.88496829999997 3.569 185.2145826 4.344 227.6882702 10.369 220.8044066000001 4.664 207.73164640000013 5.079 186.38408630000006 4.323 185.31054590000002 5.152 183.95214010000012 5.175 171.56217870000003 4.658 185.7449992000001 4.506 202.33210140000014 4.887 199.22420219999998 4.591 180.85237419999999 5.765 192.50829570000002 5.511 188.83291420000018 4.253 204.4697487000002 4.931 189.16463090000005 4.422)
Error minima by case: (2.6617 1 2.9224 1 8.5216 10 0.0 0 0.0 0 2.1476 1 0.0 0 6.539 1 0.0 0 0.0 0 1.1411 8 4.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 5.0 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.176
Average program size in population (points): 177.176
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 198.5769368796595
Average age in population: 179.844994804056
Median age in population: 196.2405244269005
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.505
Error (vector) diversity:			 0.798
Behavioral diversity:				 0.805
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 519497532
--- Timings ---
Current time: 1529615547780 milliseconds
Total Time:         694.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       151.0 seconds, 21.7%
Fitness Testing:    433.0 seconds, 62.3%
Report:             110.8 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 32528.0
Test mean error for best: 16.26400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction in1} {:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult in1 float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_inc integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_shove float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_div integer_dec float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 1.0 1 2.0 1 7.0 2]
Total: 536.0
Mean: 10.72
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4925.957101599999
Median total errors in population: 880.5
Error averages by case: (244.30855200000008 3.783 224.23791710000003 4.137 191.32540210000005 13.212 181.16036599999984 4.324 186.19174689999988 4.965 175.86797959999996 4.163 172.22727079999996 5.432 206.76371629999994 3.522 163.44635749999992 3.616 178.26124030000008 4.331 227.30693930000004 10.393 217.72408960000007 4.649 201.97874910000002 4.958 183.05582289999992 4.306 184.22471080000014 5.28 183.45004889999998 5.357 169.30368460000003 4.575 179.6447998000001 4.462 197.53167979999995 4.819 197.8588933999999 4.608 176.76300359999996 5.95 190.0536952 5.406 181.1896720000001 4.232 198.94338460000014 4.867 183.3933794 4.397)
Error minima by case: (2.6617 1 1.0737 1 0.4655 9 0.0 0 0.0 0 1.558 1 0.0 0 0.1514 1 0.0 0 0.0 0 0.085 7 5.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 3.7493 1 0.0 0 0.0 0 2.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.371
Average program size in population (points): 178.371
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 199.7297358616772
Average age in population: 181.9178692911026
Median age in population: 197.4624847139641
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.507
Error (vector) diversity:			 0.81
Behavioral diversity:				 0.817
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 523931847
--- Timings ---
Current time: 1529615553042 milliseconds
Total Time:         700.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.1 seconds, 21.7%
Fitness Testing:    436.4 seconds, 62.3%
Report:             111.6 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 32528.0
Test mean error for best: 16.26400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction in1} {:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult in1 float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_inc integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_shove float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_div integer_dec float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 1.0 1 2.0 1 7.0 2]
Total: 536.0
Mean: 10.72
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5021.115427999999
Median total errors in population: 909.5
Error averages by case: (246.91300460000005 3.804 226.93286980000002 4.158 194.54632349999997 13.301 189.97867709999983 4.472 191.7177615999999 4.972 180.70927939999996 4.153 181.68830680000002 5.389 210.09041710000002 3.562 174.20723139999993 3.689 185.43439280000004 4.372 230.0158318 10.47 221.77696950000004 4.702 203.67427350000006 5.001 188.67312800000013 4.423 182.02178530000003 5.225 181.5284705 5.24 174.04557500000007 4.746 180.25029280000018 4.57 198.16271740000008 4.845 201.8028671 4.726 183.84811050000002 5.671 185.29525000000007 5.439 187.30446690000014 4.301 200.4634676000001 4.929 189.392958 4.481)
Error minima by case: (9.6617 1 1.9263 1 1.4655 9 0.0 0 0.0 0 2.0513 1 0.0 0 0.1766 1 0.0 0 0.0 0 2.915 7 3.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 3.0 1 0.0 0 0.0 0 9.0204 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.76
Average program size in population (points): 177.76
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 201.3596961409261
Average age in population: 181.7056942781934
Median age in population: 198.6929946957956
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.53
Error (vector) diversity:			 0.818
Behavioral diversity:				 0.824
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 528350797
--- Timings ---
Current time: 1529615558461 milliseconds
Total Time:         705.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.1 seconds, 21.7%
Fitness Testing:    440.0 seconds, 62.4%
Report:             112.4 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 32351.0
Test mean error for best: 16.17550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 93.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 84.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction in1} {:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult in1 float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_inc integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_shove float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_swap float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_div integer_dec float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc integer_add integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 2.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 0.0 0 0.0 0 8.0 2]
Total: 535.0
Mean: 10.7
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5182.207862599998
Median total errors in population: 967.0
Error averages by case: (252.59804790000007 3.868 229.98447110000006 4.225 198.82876429999996 13.27 194.1801219999998 4.784 200.70586519999983 5.305 184.9546477 4.232 186.40192919999993 5.789 213.47380589999992 3.619 177.08274859999995 3.716 188.80277429999995 4.541 233.05770169999997 10.437 227.22949210000013 4.829 213.5569937000002 5.258 195.1577178000001 4.674 191.7799727 5.623 191.19089320000003 5.689 179.6588255000001 4.821 188.8042177000001 4.828 207.66485900000018 5.062 206.52743259999994 4.795 189.01118149999994 6.013 197.10884009999998 5.682 195.32623030000025 4.577 210.1046817000001 5.183 193.49964680000005 4.696)
Error minima by case: (3.6617 1 0.9263 1 8.5345 9 0.0 0 0.0 0 0.0218 1 0.0 0 1.539 1 0.0 0 0.0 0 2.085 8 18.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 5.0 1 0.0 0 0.0 0 0.1147 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.091
Average program size in population (points): 177.091
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 202.1435883981128
Average age in population: 180.9024012645291
Median age in population: 200.0295274183702
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.555
Error (vector) diversity:			 0.833
Behavioral diversity:				 0.839
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 532752797
--- Timings ---
Current time: 1529615563934 milliseconds
Total Time:         711.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.1 seconds, 21.7%
Fitness Testing:    443.5 seconds, 62.4%
Report:             113.3 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 32435.0
Test mean error for best: 16.21750
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 93.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 84.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 float_rot float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_swap integer_div float_inc integer_min float_rot float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_shove float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_swap float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_div integer_dec float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc integer_add integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 2.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 0.0 0 0.0 0 8.0 2]
Total: 535.0
Mean: 10.7
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5168.855204699999
Median total errors in population: 982.0
Error averages by case: (252.35391950000007 3.98 229.31861480000006 4.307 198.19086659999996 13.21 194.18866109999976 4.744 200.15878229999993 5.289 184.40548869999995 4.308 183.5471465000001 5.639 213.1468217 3.718 176.26198759999994 3.806 189.81305889999993 4.477 232.23900969999997 10.413 226.21380610000014 4.905 215.8443180000002 5.367 194.79823740000023 4.652 189.9408385999999 5.471 189.27540940000023 5.516 177.6912518000001 4.865 187.85342680000008 4.796 209.62874710000017 5.233 205.77599190000004 4.846 187.38018430000002 5.967 195.7426909 5.802 193.09084370000008 4.559 212.27869490000012 5.287 193.9244064000002 4.635)
Error minima by case: (2.6617 1 0.1086 1 0.4655 8 0.0 0 0.0 0 0.6689 1 0.0 0 2.4994 1 0.0 0 0.0 0 1.085 8 7.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 2.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 173.798
Average program size in population (points): 174.798
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 203.3888494607269
Average age in population: 179.4304603074299
Median age in population: 201.2607141910924
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.551
Error (vector) diversity:			 0.814
Behavioral diversity:				 0.819
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 537097697
--- Timings ---
Current time: 1529615569299 milliseconds
Total Time:         716.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       155.2 seconds, 21.7%
Fitness Testing:    446.9 seconds, 62.4%
Report:             114.2 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 31479.0
Test mean error for best: 15.73950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 93.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 84.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction integer_rot} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc float_inc integer_dec float_inc integer_div integer_mult integer_sub integer_stackdepth integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div integer_dup float_inc integer_add float_inc integer_stackdepth integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_inc integer_swap float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_yankdup float_yankdup float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_mod float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc tagged_884 integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_div float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 integer_rot integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 2.0 1 75.0 10 60.0 2 2.0 2 1.0 1 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 2.0 1 0.0 0 8.0 2]
Total: 540.0
Mean: 10.8
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4960.7371748
Median total errors in population: 911.6028
Error averages by case: (245.39670850000005 3.827 223.7367705 4.126 192.51310659999996 13.239 183.7511492999998 4.271 188.8669071 4.872 178.14502299999992 4.128 176.84466849999995 5.287 207.15318819999996 3.55 172.37433499999997 3.667 183.42027779999998 4.159 226.7841134 10.391 219.92858600000014 4.723 201.2746237000002 4.93 182.58064500000012 4.188 180.62730330000002 5.186 179.1329111000001 5.251 172.20180170000003 4.709 182.6792887000001 4.365 196.5897444 4.799 199.49855879999998 4.684 181.42116 5.707 189.05217349999998 5.408 183.92273950000023 4.083 198.1663312000002 4.885 185.99006000000014 4.25)
Error minima by case: (8.3383 1 1.0737 1 2.5345 9 0.0 0 0.0 0 2.6282 1 0.0 0 0.539 1 0.0 0 0.0 0 0.585 7 7.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 8.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.498
Average program size in population (points): 176.498
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 204.5615382497428
Average age in population: 184.1846798105322
Median age in population: 202.5547871810058
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.502
Error (vector) diversity:			 0.798
Behavioral diversity:				 0.802
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 541484947
--- Timings ---
Current time: 1529615574769 milliseconds
Total Time:         721.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.2 seconds, 21.6%
Fitness Testing:    450.4 seconds, 62.4%
Report:             115.1 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 31456.0
Test mean error for best: 15.72800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 189.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 69.5127184446 
Correct output: 61.1705628788  | Program output: 67.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 132.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 99.3014515582 
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 171.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_inc integer_div float_yankdup integer_div float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_shove float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub float_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 1.0 2 1.0 1 9.0 1 6.0 1 5.0 2 1.0 1 4.0 1 38.0 2 5.0 1 3.0 3 1.0 1 1.0 1 6.0 2]
Total: 537.0
Mean: 10.74
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4997.912770199999
Median total errors in population: 916.5
Error averages by case: (249.01879000000002 3.877 223.66576360000008 4.229 191.37106500000002 13.242 186.68150149999974 4.46 193.4817598999999 5.076 177.89252259999992 4.252 173.68787909999995 5.49 207.0993522999999 3.613 172.29739509999993 3.764 187.18736409999994 4.303 226.72622109999998 10.416 223.09629160000011 4.799 204.6523538000001 5.039 187.0509549000002 4.404 180.84872550000003 5.199 180.04909720000015 5.236 175.77240730000008 4.781 182.94573030000015 4.569 199.42403210000003 4.829 202.8613936 4.691 177.22018139999997 5.85 187.7352820000001 5.47 185.11265300000028 4.329 201.53374910000016 4.858 189.25930410000012 4.465)
Error minima by case: (1.6617 1 0.9263 1 4.4655 9 0.0 0 0.0 0 0.1476 1 0.0 0 0.8555 1 0.0 0 0.0 0 2.085 8 2.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.683
Average program size in population (points): 176.683
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 206.0427791142979
Average age in population: 185.0285590132658
Median age in population: 203.9195041003805
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.529
Error (vector) diversity:			 0.825
Behavioral diversity:				 0.833
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 545877197
--- Timings ---
Current time: 1529615580037 milliseconds
Total Time:         727.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       157.3 seconds, 21.6%
Fitness Testing:    453.8 seconds, 62.4%
Report:             116.0 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 31725.0
Test mean error for best: 15.86250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_inc} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_rot} {:instruction print_integer} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yank} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_inc print_integer float_pop in1 float_dec in1 float_rot print_integer integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_swap integer_div float_inc integer_min float_inc float_dup_items integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_yank float_dup float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_yankdup float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc integer_yankdup float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 6.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 3.0 1 2.0 1 6.0 2]
Total: 536.0
Mean: 10.72
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5053.302055099999
Median total errors in population: 956.0
Error averages by case: (249.27924490000012 3.99 223.47513640000003 4.273 192.48018729999995 13.194 189.21358969999977 4.682 196.0919329999999 5.232 178.0178861999999 4.294 180.0832498999999 5.736 207.1721043999999 3.69 170.46192359999992 3.88 186.97151989999995 4.427 226.44527139999997 10.382 223.60323350000007 4.9 209.94225850000012 5.24 187.33159730000006 4.548 186.73654490000007 5.427 186.26520320000014 5.464 174.5622807000001 4.785 184.86152700000022 4.77 204.10060660000005 5.13 202.9729877999999 4.764 182.23507439999995 6.033 192.4916660000001 5.716 188.59238540000027 4.541 206.41522750000024 5.175 188.62841560000012 4.598)
Error minima by case: (1.6617 1 0.0737 1 1.0054 8 0.0 0 0.0 0 1.3906 1 0.0 0 0.7076 1 0.0 0 0.0 0 2.8306 8 19.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.983
Average program size in population (points): 177.983
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 207.4409423251087
Average age in population: 187.0275448256445
Median age in population: 205.2369292784447
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.552
Error (vector) diversity:			 0.816
Behavioral diversity:				 0.822
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 550301672
--- Timings ---
Current time: 1529615585540 milliseconds
Total Time:         732.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       158.3 seconds, 21.6%
Fitness Testing:    457.4 seconds, 62.4%
Report:             116.8 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 31296.0
Test mean error for best: 15.64800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_inc integer_div float_yankdup integer_div float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_shove float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc integer_yankdup float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub float_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 2.0 2 1.0 1 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 1.0 1 0.0 0 6.0 2]
Total: 534.0
Mean: 10.68
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4690.465249099998
Median total errors in population: 955.5
Error averages by case: (236.79750620000013 3.847 212.5414117 4.117 181.1451389 13.275 170.4878481999999 4.397 177.34754179999993 4.918 166.65406769999993 4.146 164.9337523 5.514 195.97399520000008 3.561 160.30449909999993 3.698 170.52605690000004 4.182 215.39439030000003 10.446 210.9721452000001 4.807 191.30579079999998 4.928 171.71967460000005 4.362 170.578137 5.271 169.77859219999996 5.307 160.85867030000003 4.862 173.31433840000017 4.538 185.92681190000002 4.795 190.0187197 4.773 169.1303800999999 5.909 181.03105900000003 5.44 171.83681270000017 4.33 188.16394980000013 4.866 173.0419591 4.393)
Error minima by case: (6.6617 1 3.9263 1 5.4655 10 0.0 0 0.0 0 0.1476 1 0.0 0 0.3604 1 0.0 0 0.0 0 0.915 7 4.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.1609 1 0.0 0 0.0 0 5.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.41
Average program size in population (points): 177.41
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 208.3817131561818
Average age in population: 186.9459632467173
Median age in population: 206.5008862923878
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.563
Error (vector) diversity:			 0.851
Behavioral diversity:				 0.859
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 554711997
--- Timings ---
Current time: 1529615590958 milliseconds
Total Time:         738.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.4 seconds, 21.6%
Fitness Testing:    460.9 seconds, 62.4%
Report:             117.7 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 31296.0
Test mean error for best: 15.64800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_inc integer_div float_yankdup integer_div float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_dup_items float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_shove float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc integer_yankdup float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub float_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 2.0 2 1.0 1 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 1.0 1 0.0 0 6.0 2]
Total: 534.0
Mean: 10.68
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4949.0598261
Median total errors in population: 956.0
Error averages by case: (247.6595638000001 3.985 224.90330989999998 4.297 192.9980507 13.227 182.72252899999978 4.412 186.47137899999993 4.967 179.08021189999988 4.281 175.2390346 5.73 208.33562779999994 3.729 171.36553379999987 3.841 180.3242314 4.107 227.7272116 10.421 222.29625160000012 4.927 200.13582069999995 5.023 182.65760460000013 4.329 179.33145550000003 5.427 178.7309373 5.535 173.61630580000008 5.007 177.13881030000013 4.55 194.99084560000003 4.849 200.7557215 4.915 178.9603992 6.044 184.91436820000007 5.474 184.42294760000024 4.341 196.98453390000023 4.992 184.5071408000001 4.38)
Error minima by case: (0.6617 1 1.209 1 4.1297 8 0.0 0 0.0 0 6.0248 1 0.0 0 1.6334 1 0.0 0 0.0 0 0.915 8 6.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 0.8133 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.737
Average program size in population (points): 175.737
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 209.7377431956638
Average age in population: 185.9052578099518
Median age in population: 207.7455876722391
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.539
Error (vector) diversity:			 0.816
Behavioral diversity:				 0.821
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 559080397
--- Timings ---
Current time: 1529615596329 milliseconds
Total Time:         743.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.4 seconds, 21.6%
Fitness Testing:    464.3 seconds, 62.5%
Report:             118.6 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 31296.0
Test mean error for best: 15.64800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_inc integer_div float_yankdup integer_div float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_dup_items float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_shove float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc integer_yankdup float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub float_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 2.0 2 1.0 1 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 1.0 1 0.0 0 6.0 2]
Total: 534.0
Mean: 10.68
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5503.540978699999
Median total errors in population: 1000.0
Error averages by case: (264.9921795000001 4.222 241.03509650000004 4.536 210.92628029999995 13.202 207.2980932999998 4.772 211.98366619999996 5.394 196.77396689999995 4.555 200.68446279999995 5.784 224.90187429999986 3.976 191.3749286999999 4.052 202.40692959999996 4.41 244.04900600000002 10.434 239.96860520000007 5.13 227.8534762 5.486 207.17753230000014 4.75 205.18639890000003 5.779 204.49402210000008 5.856 191.86798500000006 5.139 201.43014100000016 4.921 222.4803505000001 5.357 219.29608229999994 5.097 202.19866189999996 6.212 209.14134070000011 5.929 205.9761079000002 4.699 224.96242190000015 5.447 205.2493687000002 4.693)
Error minima by case: (2.6617 1 0.0737 1 5.4655 9 0.0 0 0.0 0 0.8524 1 0.0 0 2.6027 1 0.0 0 0.0 0 0.085 7 5.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 2.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.29
Average program size in population (points): 175.29
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 211.1707461744309
Average age in population: 186.3247166074597
Median age in population: 209.0100127326917
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.536
Error (vector) diversity:			 0.818
Behavioral diversity:				 0.824
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 563437672
--- Timings ---
Current time: 1529615601649 milliseconds
Total Time:         748.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       161.5 seconds, 21.6%
Fitness Testing:    467.8 seconds, 62.5%
Report:             119.5 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 33387.0
Test mean error for best: 16.69350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 99.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 90.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction in1} {:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yank} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult in1 float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_mult float_stackdepth float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_yank float_dup float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc integer_mod float_inc integer_div float_inc integer_min integer_yankdup float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 6.0 2 14.0 2 1.0 1 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 2.0 1 2.0 1 2.0 1]
Total: 535.0
Mean: 10.7
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5170.538795899999
Median total errors in population: 936.0618
Error averages by case: (254.10889830000005 4.076 231.21795410000001 4.371 200.30541250000002 13.293 190.71100889999977 4.519 196.24042439999988 5.184 186.11194159999994 4.391 186.75294079999998 5.949 214.88210079999993 3.811 180.64726349999992 3.909 187.34810589999998 4.272 234.12311329999997 10.47 229.08325550000006 5.003 208.78124910000008 5.2 192.62315000000012 4.5 190.90345229999997 5.602 190.2876632000001 5.686 181.8874125 4.931 189.74789350000006 4.703 204.14240679999995 5.042 208.8809939999999 4.897 190.38398480000004 6.371 196.70845090000006 5.666 191.03165890000017 4.47 205.7296432000001 5.092 191.95741710000004 4.533)
Error minima by case: (6.6617 1 1.3884 1 3.5345 9 0.0 0 0.0 0 0.1476 1 0.0 0 1.4472 1 0.0 0 0.0 0 2.085 7 4.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 1.2256 1 0.0 0 0.0 0 6.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 171.796
Average program size in population (points): 172.796
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 212.6509976501654
Average age in population: 183.1208882142018
Median age in population: 210.2507688494433
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.532
Error (vector) diversity:			 0.822
Behavioral diversity:				 0.83
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 567732622
--- Timings ---
Current time: 1529615607034 milliseconds
Total Time:         754.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.5 seconds, 21.5%
Fitness Testing:    471.2 seconds, 62.5%
Report:             120.3 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 33387.0
Test mean error for best: 16.69350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 99.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 90.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction in1} {:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction in2} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yank} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult in1 float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_mult float_stackdepth float_inc integer_div float_inc integer_dup float_inc integer_add float_inc in2 integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_rot integer_div float_yankdup integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_div float_yank float_dup float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc integer_mod float_inc integer_div float_inc integer_dup_times integer_yankdup float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 6.0 2 14.0 2 1.0 1 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 2.0 1 2.0 1 2.0 1]
Total: 535.0
Mean: 10.7
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5178.1968689
Median total errors in population: 965.5
Error averages by case: (255.5100583 4.126 229.21116000000012 4.371 199.59820769999993 13.319 193.2083073999998 4.678 198.28056549999982 5.269 185.99961919999996 4.382 185.0763189 5.84 213.6169810999999 3.802 180.9214216999999 3.958 188.48404179999994 4.297 232.67580660000007 10.462 230.70386190000008 5.065 209.17202850000004 5.209 195.6014445000001 4.72 189.26402829999995 5.539 188.44915450000002 5.607 182.99881080000003 5.01 191.5500680000001 4.819 202.90732400000002 5.048 209.61919919999997 4.916 188.73247600000002 6.129 196.72143250000005 5.676 194.53949460000015 4.609 204.98745600000012 5.141 193.77260190000007 4.603)
Error minima by case: (0.6617 1 0.0737 1 3.4655 9 0.0 0 0.0 0 0.6282 1 0.0 0 0.3173 1 0.0 0 0.0 0 0.3023 7 18.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 173.777
Average program size in population (points): 174.777
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 213.6860315547726
Average age in population: 186.6376271960714
Median age in population: 211.4894668122428
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.542
Error (vector) diversity:			 0.819
Behavioral diversity:				 0.827
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 572077197
--- Timings ---
Current time: 1529615612391 milliseconds
Total Time:         759.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.6 seconds, 21.5%
Fitness Testing:    474.6 seconds, 62.5%
Report:             121.2 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 31094.0
Test mean error for best: 15.54700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_inc} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_rot} {:instruction print_integer} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_mult} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_inc print_integer float_pop in1 float_dec in1 float_rot print_integer integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_div float_inc integer_dup_items float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_inc float_inc float_inc -44 integer_min integer_dec integer_stackdepth float_inc integer_mult float_yankdup integer_max float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_mod float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc tagged_884 integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_div float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_inc integer_yank float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc integer_sub integer_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 2.0 1 2.0 1 7.0 2]
Total: 535.0
Mean: 10.7
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5416.8879412999995
Median total errors in population: 953.0
Error averages by case: (265.6321583 4.219 240.63315180000012 4.501 209.83874229999998 13.203 202.61064549999975 4.65 207.3730996999999 5.283 197.3258050999999 4.476 194.07357799999988 5.763 224.95092549999995 3.933 189.38928269999994 4.0 204.83376749999994 4.369 243.59409200000005 10.378 240.81529870000008 5.158 219.75483180000006 5.284 204.57122170000008 4.528 196.22280680000006 5.562 196.1976828 5.61 191.26852170000006 4.931 194.62711080000014 4.75 214.4543002 5.173 219.41779289999994 4.941 197.15259469999998 6.191 200.5093118000001 5.735 203.60261520000023 4.522 216.4337171000003 5.228 204.62888670000018 4.588)
Error minima by case: (0.6617 1 0.1197 1 9.4655 9 0.0 0 0.0 0 0.1476 1 0.0 0 0.4207 1 0.0 0 0.0 0 2.085 7 21.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 2.7493 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.582
Average program size in population (points): 176.582
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 215.0961845695038
Average age in population: 190.4640303025071
Median age in population: 212.6738825255411
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.543
Error (vector) diversity:			 0.809
Behavioral diversity:				 0.818
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 576466447
--- Timings ---
Current time: 1529615617796 milliseconds
Total Time:         764.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       164.6 seconds, 21.5%
Fitness Testing:    478.1 seconds, 62.5%
Report:             122.1 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 33510.0
Test mean error for best: 16.75500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 99.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 90.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction in1} {:instruction float_sub} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction tagged_677} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult in1 float_sub float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc float_rot float_inc integer_dup float_inc integer_add float_inc float_inc integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_inc float_inc float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc integer_max integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc integer_mod float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec integer_dec float_inc integer_sub float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec tagged_677 float_inc integer_sub float_inc float_inc float_inc 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 6.0 2 14.0 2 1.0 1 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 0.0 0 2.0 1 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 0.0 0 2.0 1 2.0 1]
Total: 533.0
Mean: 10.66
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5268.762648199999
Median total errors in population: 952.0
Error averages by case: (261.5233697000001 4.1 237.56745730000014 4.401 206.9989552 13.237 195.79626539999973 4.616 199.28474119999996 5.173 193.76043839999986 4.418 185.3447417999998 5.508 222.49364839999987 3.831 185.05463919999994 3.993 191.48066039999992 4.246 240.53557939999996 10.411 236.37315240000015 5.054 212.9541389000001 5.188 195.95880580000008 4.433 190.51660969999983 5.378 189.70102210000007 5.42 186.9215959000001 5.111 189.60586130000013 4.676 208.4439182000001 5.049 216.01812499999994 5.044 189.9017488999999 5.995 198.06976330000012 5.651 193.3982084000003 4.454 210.41247520000013 5.105 195.59272670000016 4.562)
Error minima by case: (1.6617 1 0.7191 1 0.4655 8 0.0 0 0.0 0 1.8524 1 0.0 0 0.6044 1 0.0 0 0.0 0 0.085 7 20.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.403
Average program size in population (points): 177.403
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 216.0626349027332
Average age in population: 193.401542046394
Median age in population: 213.9989427889733
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.551
Error (vector) diversity:			 0.829
Behavioral diversity:				 0.836
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 580875947
--- Timings ---
Current time: 1529615623332 milliseconds
Total Time:         770.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.7 seconds, 21.5%
Fitness Testing:    481.6 seconds, 62.5%
Report:             123.0 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 31094.0
Test mean error for best: 15.54700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_inc} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_rot} {:instruction print_integer} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_mult} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_inc print_integer float_pop in1 float_dec in1 float_rot print_integer integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_div float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_inc float_inc float_inc -44 integer_min integer_dec integer_stackdepth float_inc integer_mult float_yankdup float_frominteger float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_mod float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc tagged_884 integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_div float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_inc integer_yank float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc integer_sub integer_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 2.0 1 2.0 1 7.0 2]
Total: 535.0
Mean: 10.7
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5352.614067599999
Median total errors in population: 947.5
Error averages by case: (264.00870610000004 4.173 239.43505329999994 4.437 208.41062820000008 13.209 197.96088079999976 4.61 204.29023619999992 5.17 195.25592749999993 4.447 191.50660680000007 5.778 223.22151540000004 3.875 186.5091501999999 4.012 194.82526030000002 4.313 242.46760030000007 10.411 239.14462000000012 5.118 216.12389110000004 5.198 201.66214410000015 4.445 194.28443960000004 5.454 193.90786010000002 5.533 190.81974290000008 5.026 195.0281209000001 4.717 211.1030573 5.06 218.70067669999992 4.996 196.83594980000012 6.006 200.27574550000006 5.686 198.46317740000012 4.529 213.0725064000002 5.099 199.4085707 4.59)
Error minima by case: (2.6617 1 4.0737 1 6.5268 9 0.0 0 0.0 0 3.5978 1 0.0 0 0.8024 1 0.0 0 0.0 0 2.085 8 8.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 2.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.147
Average program size in population (points): 175.147
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 217.2300496990069
Average age in population: 191.1700809708094
Median age in population: 215.1739617936882
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.541
Error (vector) diversity:			 0.808
Behavioral diversity:				 0.815
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 585230122
--- Timings ---
Current time: 1529615628837 milliseconds
Total Time:         775.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.8 seconds, 21.5%
Fitness Testing:    485.1 seconds, 62.5%
Report:             123.9 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 31094.0
Test mean error for best: 15.54700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_inc} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_rot} {:instruction print_integer} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_mult} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_inc print_integer float_pop in1 float_dec in1 float_rot print_integer integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_div float_inc integer_add float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_inc float_inc float_inc -44 integer_min integer_dec integer_stackdepth float_inc integer_mult float_yankdup float_frominteger float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_mod float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc tagged_884 integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_div float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_inc integer_yank float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc integer_sub integer_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 4.0 2 14.0 2 1.0 1 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 2.0 1 2.0 1 7.0 2]
Total: 535.0
Mean: 10.7
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5156.8677646
Median total errors in population: 937.0
Error averages by case: (255.45294950000016 4.036 231.74077450000001 4.339 202.04563010000004 13.253 189.83028519999974 4.536 197.22707339999994 5.152 187.2617721999999 4.384 183.6867377000001 5.578 216.60583179999992 3.789 180.97119379999987 3.974 188.95078840000002 4.254 235.55430510000002 10.434 230.54113960000012 4.936 208.1063642 5.103 191.0864937000002 4.391 187.59442299999998 5.328 186.62384900000015 5.408 182.7127207000001 4.945 186.87179190000012 4.655 202.20367660000014 4.969 210.0371352 4.884 186.33236940000012 5.911 193.38349280000006 5.573 191.36656970000024 4.432 204.03633850000023 5.022 192.81205860000014 4.546)
Error minima by case: (5.6617 1 0.0737 1 0.5345 10 0.0 0 0.0 0 2.8524 1 0.0 0 1.539 1 0.0 0 0.0 0 2.085 8 3.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.3964 1 0.0 0 0.0 0 5.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.983
Average program size in population (points): 176.983
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 218.2383765052336
Average age in population: 194.3790723477838
Median age in population: 216.3501567560876
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.538
Error (vector) diversity:			 0.82
Behavioral diversity:				 0.824
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 589629647
--- Timings ---
Current time: 1529615634278 milliseconds
Total Time:         781.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.8 seconds, 21.5%
Fitness Testing:    488.6 seconds, 62.5%
Report:             124.8 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 33094.0
Test mean error for best: 16.54700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 99.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 79.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 90.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction integer_mult} {:instruction float_inc} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction tagged_677} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer float_pop in1 integer_mult float_inc print_integer float_pop in1 float_dec in1 float_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_min float_inc integer_min integer_div float_inc integer_min integer_div float_inc float_inc integer_div float_inc float_inc float_inc -44 integer_min integer_dec float_inc float_inc integer_mult float_yankdup integer_div float_inc integer_dup_times integer_div float_inc float_inc float_inc integer_mod float_inc float_inc float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_inc float_inc float_dup float_inc float_inc float_inc integer_yank integer_div float_inc integer_div float_inc integer_add integer_div float_inc integer_div float_inc integer_mod float_inc integer_div float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_yankdup 11 float_inc integer_dec integer_dec float_inc in2 float_inc float_inc float_inc integer_yankdup 11 float_inc integer_dec tagged_677 float_inc integer_sub float_inc float_inc float_inc 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 4.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 3.0 2 0.0 0 2.0 1]
Total: 535.0
Mean: 10.7
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5433.372650899999
Median total errors in population: 982.0
Error averages by case: (268.20497930000005 4.131 240.04999129999996 4.362 208.7757797999999 13.234 203.97663759999972 4.653 206.7278323 5.168 195.55195679999989 4.385 195.15857310000004 5.966 223.63502009999993 3.814 189.9933695999999 4.008 199.89961869999996 4.33 242.99609989999996 10.411 242.2403456000001 5.063 220.76615950000016 5.192 206.4201602000001 4.598 198.94747850000005 5.629 198.37022149999999 5.701 192.60952880000008 5.065 197.8911987000001 4.662 215.16104190000013 5.071 221.48026479999996 5.033 200.27563330000004 6.297 204.6761767000001 5.666 202.6971676000003 4.549 217.68463120000018 5.101 202.4857841000001 4.608)
Error minima by case: (78.3383 1 3.9431 1 4.4655 9 0.0 0 0.0 0 1.8524 1 0.0 0 1.8924 1 0.0 0 0.0 0 0.915 8 48.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 4.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 173.766
Average program size in population (points): 174.766
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 219.7734039447267
Average age in population: 191.3534807556948
Median age in population: 217.5827830432525
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.553
Error (vector) diversity:			 0.814
Behavioral diversity:				 0.821
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 593974172
--- Timings ---
Current time: 1529615639704 milliseconds
Total Time:         786.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       168.9 seconds, 21.5%
Fitness Testing:    492.0 seconds, 62.5%
Report:             125.8 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 33586.0
Test mean error for best: 16.79300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 93.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 84.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction print_integer} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc -46 integer_dec integer_dec float_rot float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_dec integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_inc integer_div integer_dec float_yank integer_div float_inc float_inc float_inc float_inc integer_shove float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_min float_inc integer_div float_inc float_dup_times integer_div float_dup_times integer_div float_inc float_inc float_inc integer_div float_inc integer_div integer_dup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div integer_dup_times float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc integer_sub float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank print_integer 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 2.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 0.0 0 2.0 1 8.0 2]
Total: 532.0
Mean: 10.64
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5505.243409399999
Median total errors in population: 975.0
Error averages by case: (270.28601590000005 4.152 246.5577736000001 4.463 214.22917730000003 13.321 205.86775639999976 4.733 209.6900308999999 5.206 200.0781851999999 4.478 194.55446359999993 5.986 229.40259639999994 3.891 195.3116372999999 4.113 202.5901681999999 4.439 248.38778110000004 10.52 245.84397670000007 5.07 221.51693830000008 5.206 208.1748005000001 4.61 202.30227819999993 5.509 201.2739703 5.603 198.2759483 5.047 199.00540560000016 4.724 215.43909700000023 5.075 225.74408629999996 4.996 200.93630140000005 6.281 205.1803454000001 5.634 204.65117060000026 4.643 217.33391100000014 5.13 205.0855939000002 4.694)
Error minima by case: (6.6617 1 1.8188 1 1.4655 6 0.0 0 0.0 0 0.8717 1 0.0 0 2.5031 1 0.0 0 0.0 0 0.6582 8 15.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 6.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.622
Average program size in population (points): 177.622
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 221.0610618895899
Average age in population: 196.6654498307229
Median age in population: 218.9154885361027
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.551
Error (vector) diversity:			 0.826
Behavioral diversity:				 0.83
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 598389554
--- Timings ---
Current time: 1529615645170 milliseconds
Total Time:         792.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.9 seconds, 21.4%
Fitness Testing:    495.5 seconds, 62.5%
Report:             126.7 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 31484.0
Test mean error for best: 15.74200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_rot float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_dec integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc tagged_899 float_inc float_inc float_inc float_frominteger float_inc integer_div integer_dec float_rot integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup integer_div float_inc integer_div integer_div float_inc float_inc float_inc integer_max float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc integer_dec float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 0.0 0 0.0 0 7.0 2]
Total: 533.0
Mean: 10.66
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5517.7147962
Median total errors in population: 980.5
Error averages by case: (266.7446774000001 4.255 245.90784450000007 4.549 215.40464289999994 13.366 206.67146469999977 4.883 209.5616015999999 5.439 200.74915789999994 4.548 199.90349779999994 5.988 229.27276719999986 3.998 196.03870919999991 4.149 205.85254209999988 4.551 248.62733250000002 10.541 242.66079800000009 5.131 220.54585940000013 5.353 207.7450552000001 4.758 203.17000879999998 5.622 202.6625079000001 5.727 194.78874120000003 5.114 201.04975020000012 4.982 215.7075149000001 5.24 222.73950539999996 5.091 203.2224333 6.252 206.25874220000003 5.817 207.3528565000002 4.797 217.18672530000015 5.288 207.60306010000025 4.848)
Error minima by case: (1.6617 1 2.1941 1 0.4655 9 0.0 0 0.0 0 1.1777 1 0.0 0 2.2519 1 0.0 0 0.0 0 2.085 8 15.9564 2 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.047
Average program size in population (points): 176.047
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 222.444513532953
Average age in population: 195.5975810543728
Median age in population: 220.1691201776781
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.543
Error (vector) diversity:			 0.815
Behavioral diversity:				 0.818
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 602765970
--- Timings ---
Current time: 1529615650674 milliseconds
Total Time:         797.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       171.0 seconds, 21.4%
Fitness Testing:    499.1 seconds, 62.6%
Report:             127.6 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 31484.0
Test mean error for best: 15.74200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_rot float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_dec integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc tagged_899 float_inc float_inc float_inc float_frominteger float_inc integer_div integer_dec float_rot integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup integer_div float_inc integer_div integer_div float_inc float_inc float_inc integer_max float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc integer_dec float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 0.0 0 0.0 0 7.0 2]
Total: 533.0
Mean: 10.66
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5862.207818599999
Median total errors in population: 1016.0
Error averages by case: (279.8002304000001 4.375 260.36240590000006 4.644 229.49889880000003 13.227 219.46408829999973 5.017 225.36969599999983 5.525 216.72177129999992 4.66 208.18157330000008 6.261 244.5043343999999 4.102 206.6317351999998 4.292 215.89564149999987 4.722 263.1899007 10.465 255.94647740000008 5.26 238.2509006000002 5.497 219.3703404000002 4.826 214.5858518 5.908 214.04058959999998 5.987 209.64929690000008 5.303 217.86278740000017 5.162 232.8879382000001 5.372 235.55321779999994 5.295 209.13763060000005 6.475 225.52594879999998 5.994 219.39132210000028 4.933 234.86292910000012 5.465 221.70131210000028 5.054)
Error minima by case: (1.6617 1 0.9263 1 2.0563 9 0.0 0 0.0 0 2.4795 1 0.0 0 1.5497 1 0.0 0 0.0 0 0.085 7 8.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 0.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 171.506
Average program size in population (points): 172.506
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 223.5898678663471
Average age in population: 190.7511684678769
Median age in population: 221.4339333770193
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.994
Total error diversity:				 0.59
Error (vector) diversity:			 0.824
Behavioral diversity:				 0.829
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 607053795
--- Timings ---
Current time: 1529615656097 milliseconds
Total Time:         803.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.0 seconds, 21.4%
Fitness Testing:    502.6 seconds, 62.6%
Report:             128.5 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 31484.0
Test mean error for best: 15.74200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_rot float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_dec integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc tagged_899 float_inc float_inc float_inc float_frominteger float_inc integer_div integer_dec float_rot integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup integer_div float_inc integer_div integer_div float_inc float_inc float_inc integer_max float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc integer_dec float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 0.0 0 0.0 0 7.0 2]
Total: 533.0
Mean: 10.66
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4752.759583299998
Median total errors in population: 993.5
Error averages by case: (241.77793690000016 3.985 214.5991153 4.266 183.32306390000002 13.192 173.6510154999998 4.561 178.6912465999999 5.103 168.71283029999998 4.287 164.48998500000008 5.686 197.4970966 3.705 161.68838819999988 3.912 171.8191922 4.191 216.9535932 10.415 216.10992750000008 4.914 197.76550410000002 5.291 175.23932720000013 4.375 172.5762737999999 5.532 170.89858230000002 5.661 167.1795881000001 4.896 169.59320910000017 4.722 190.5508796 5.198 194.77242660000002 4.859 170.7411348000001 6.25 179.9059166 5.762 173.69202420000016 4.429 192.83901540000008 5.244 172.72931030000012 4.527)
Error minima by case: (8.3383 1 0.9263 1 4.4655 8 0.0 0 0.0 0 2.2165 1 0.0 0 0.6167 1 0.0 0 0.0 0 0.0663 7 4.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 8.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.893
Average program size in population (points): 177.893
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 224.8607432184956
Average age in population: 200.4701512608492
Median age in population: 222.6628197645241
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.604
Error (vector) diversity:			 0.848
Behavioral diversity:				 0.854
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 611476470
--- Timings ---
Current time: 1529615661451 milliseconds
Total Time:         808.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.0 seconds, 21.4%
Fitness Testing:    506.1 seconds, 62.6%
Report:             129.4 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 31484.0
Test mean error for best: 15.74200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult print_integer integer_mult integer_mult print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_rot float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc float_dec integer_div float_inc integer_min float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc tagged_899 float_inc float_inc float_inc float_frominteger float_inc integer_div integer_dec float_rot integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup integer_div float_inc integer_div integer_div float_inc float_inc float_inc integer_max float_inc integer_div integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc integer_dec float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_shove print_integer float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 0.0 0 5.0 1 38.0 2 6.0 1 4.0 3 0.0 0 0.0 0 7.0 2]
Total: 533.0
Mean: 10.66
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5049.076766799998
Median total errors in population: 1010.0
Error averages by case: (248.77591730000012 4.108 225.5602050000001 4.374 195.5340638 13.247 187.74213859999972 4.764 191.0598559 5.252 179.9352231999999 4.387 180.3073778 6.065 209.74208229999988 3.825 176.83927339999988 4.039 185.6867265999999 4.543 229.00575070000002 10.417 224.02825710000013 5.043 205.6811542000002 5.321 185.34707220000004 4.616 184.18397989999997 5.674 185.11530260000004 5.778 174.90677040000006 5.1 185.84868480000017 4.895 199.75056770000012 5.229 203.1830587 4.957 184.20450489999996 6.366 193.65826000000007 5.83 186.76428310000026 4.665 202.0929830000002 5.282 185.4902736000001 4.856)
Error minima by case: (11.6617 1 0.1305 1 9.4655 9 0.0 0 0.0 0 1.1476 1 0.0 0 3.9537 1 0.0 0 0.0 0 1.8271 8 9.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 1.4169 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.299
Average program size in population (points): 175.299
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 226.5191838825846
Average age in population: 198.8780815076348
Median age in population: 223.8658838326703
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.557
Error (vector) diversity:			 0.806
Behavioral diversity:				 0.814
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 615833970
--- Timings ---
Current time: 1529615666905 milliseconds
Total Time:         814.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.1 seconds, 21.4%
Fitness Testing:    509.6 seconds, 62.6%
Report:             130.2 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 33391.0
Test mean error for best: 16.69550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 110.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 68.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 10.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_mult} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mod integer_mult print_integer float_pop integer_mult print_integer print_integer float_pop in1 float_dec in1 in1 float_dec in1 integer_dec integer_rot integer_dec integer_swap float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc integer_min float_inc integer_div float_inc float_inc integer_div integer_yank integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 1.0 2 14.0 2 0.0 0 50.0 1 2.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 3.0 2 3.0 1 38.0 2 9.0 1 2.0 1 0.0 0 2.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5131.4960986999995
Median total errors in population: 982.0
Error averages by case: (255.08726040000008 4.119 231.24666890000003 4.307 200.66917809999995 13.234 188.8066574999998 4.566 194.3834640999999 5.012 185.26201959999997 4.332 182.94903639999995 5.955 215.54604059999988 3.784 177.73437229999988 3.947 188.01342989999992 4.201 235.33075200000002 10.4 230.0667894000001 5.047 208.1811180000002 5.082 192.91178010000016 4.503 184.7896542 5.446 184.18311170000013 5.568 180.88944440000006 5.016 185.29824920000019 4.719 202.40156820000018 4.972 208.6721884999999 5.028 187.50083639999986 6.202 193.23149640000005 5.617 190.2843026000002 4.484 203.8995951000001 5.039 188.93908470000008 4.638)
Error minima by case: (9.6617 1 0.9371 1 1.5345 9 0.0 0 0.0 0 1.0601 1 0.0 0 0.461 1 0.0 0 0.0 0 0.915 7 7.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 6.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.048
Average program size in population (points): 176.048
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 227.1547903403112
Average age in population: 201.3204858295781
Median age in population: 225.0818619750443
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.58
Error (vector) diversity:			 0.823
Behavioral diversity:				 0.83
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 620210411
--- Timings ---
Current time: 1529615672186 milliseconds
Total Time:         819.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.1 seconds, 21.4%
Fitness Testing:    513.0 seconds, 62.6%
Report:             131.1 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 33606.0
Test mean error for best: 16.80300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 80.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 13.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction float_mod} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_dup_times} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_add} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult float_mod float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc float_inc integer_div integer_add float_inc integer_div float_inc integer_dup float_inc integer_div float_inc integer_add float_inc float_inc integer_div float_inc integer_dup float_inc float_inc tagged_899 float_inc float_inc float_inc float_frominteger float_inc integer_div integer_yank float_rot integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_yank float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_dup_items float_inc float_inc float_inc integer_yankdup integer_div float_inc integer_div integer_div float_inc float_inc float_inc integer_max integer_dec float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc integer_rot float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_dup_times 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_mult integer_dec float_yank integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_add float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub integer_min float_inc float_inc float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 2 4.0 2 14.0 2 2.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 531.0
Mean: 10.62
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5396.427186399998
Median total errors in population: 955.0
Error averages by case: (263.5149533000001 4.211 240.84024860000002 4.443 209.8376456 13.298 199.50502649999981 4.69 204.28714009999996 5.201 196.25753729999997 4.452 194.0715543 6.135 224.61756629999985 3.912 188.18810129999991 4.04 196.79772679999988 4.41 243.863044 10.509 238.58822070000005 5.137 218.74777120000016 5.286 200.90652630000005 4.569 200.00242819999994 5.675 199.26983720000015 5.821 190.94742830000007 5.006 194.8383073000002 4.817 214.61883010000008 5.23 218.48969229999994 5.042 198.53361040000007 6.369 204.70578600000002 5.739 200.77177090000018 4.676 215.84713910000013 5.244 199.62029430000007 4.847)
Error minima by case: (13.6617 1 1.6669 1 3.4655 9 0.0 0 0.0 0 0.8524 1 0.0 0 0.592 1 0.0 0 0.0 0 1.3982 8 6.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.6805 1 0.0 0 0.0 0 7.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.828
Average program size in population (points): 175.828
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 228.4690291415371
Average age in population: 201.328638925094
Median age in population: 226.363815290916
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.546
Error (vector) diversity:			 0.823
Behavioral diversity:				 0.829
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 624581393
--- Timings ---
Current time: 1529615677504 milliseconds
Total Time:         824.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.2 seconds, 21.4%
Fitness Testing:    516.4 seconds, 62.6%
Report:             132.0 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 33606.0
Test mean error for best: 16.80300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 80.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 13.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction float_mod} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_add} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_dup_times} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_add} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_mult float_mod float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc float_inc integer_div integer_add float_inc integer_div float_inc integer_dup float_inc integer_div float_inc integer_add float_inc float_inc integer_div float_inc integer_dup float_inc float_inc tagged_899 float_inc float_inc float_inc float_frominteger float_inc integer_div integer_yank float_rot integer_div float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_yank float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_dup_items float_inc float_inc float_inc integer_yankdup integer_div float_inc integer_div integer_div float_inc float_inc float_inc integer_max integer_dec float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc integer_rot float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div float_inc float_inc integer_sub float_inc float_inc integer_dec float_inc float_inc integer_div float_inc float_inc integer_dec integer_max integer_dup_times 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_mult integer_dec float_yank integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_add float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc in2 float_inc integer_sub integer_min float_inc float_inc float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 2 4.0 2 14.0 2 2.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 531.0
Mean: 10.62
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4965.603564899999
Median total errors in population: 992.0
Error averages by case: (249.09571590000004 3.94 224.29244819999997 4.218 192.2297089 13.241 181.1710527999999 4.605 187.6557240999999 5.217 178.40219339999993 4.271 172.39920959999998 6.153 207.58133239999995 3.685 169.71884389999994 3.842 180.06865859999994 4.266 227.2219483 10.446 223.16411140000008 4.892 205.1803865000001 5.24 185.26052800000008 4.464 180.71747529999996 5.798 180.1894051000002 5.913 173.06223620000003 4.885 181.74636860000012 4.876 198.18117330000015 5.134 200.34784399999995 4.839 174.236226 6.551 190.20545260000003 5.677 183.41089070000015 4.535 201.20083130000015 5.232 182.29579980000014 4.648)
Error minima by case: (4.6617 1 1.0737 1 2.3248 9 0.0 0 0.0 0 0.1787 1 0.0 0 0.4508 1 0.0 0 0.0 0 2.085 8 17.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.7521 1 0.0 0 0.0 0 0.7516 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.76
Average program size in population (points): 177.76
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 229.7047189070168
Average age in population: 206.3536364446171
Median age in population: 227.6804053381078
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.995
Total error diversity:				 0.597
Error (vector) diversity:			 0.853
Behavioral diversity:				 0.86
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 629001168
--- Timings ---
Current time: 1529615682909 milliseconds
Total Time:         830.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       177.2 seconds, 21.4%
Fitness Testing:    519.9 seconds, 62.6%
Report:             132.8 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 33392.0
Test mean error for best: 16.69600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_inc} {:instruction print_integer} {:instruction integer_dup_items} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_rot} {:instruction float_inc} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction tagged_461} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_mult} {:instruction 11} {:instruction 11} {:instruction float_inc} {:instruction integer_shove} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_min float_inc print_integer integer_dup_items in1 float_dec in1 float_rot float_inc in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_rot float_inc -46 integer_dec integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_inc integer_div float_inc integer_dup float_inc float_inc integer_div float_inc float_inc integer_swap float_inc float_inc integer_div integer_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc tagged_884 integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc integer_div float_inc integer_yankdup float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div integer_yankdup float_stackdepth integer_sub tagged_461 float_inc float_inc integer_max integer_div integer_rot float_inc float_inc integer_dec float_inc integer_rot integer_yankdup integer_dec float_inc float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_mult 11 11 float_inc integer_shove in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_dec float_inc float_inc in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 2.0 1 2.0 1 6.0 2]
Total: 534.0
Mean: 10.68
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5314.4527389999985
Median total errors in population: 1010.0
Error averages by case: (263.2875645000001 4.327 234.61568880000004 4.55 204.1062743999999 13.209 197.5362049999997 4.877 201.3955064999999 5.33 190.0998942999999 4.591 189.63289459999973 6.137 218.85607299999992 4.035 187.4964135999999 4.182 198.61314539999995 4.652 237.3919359 10.459 237.8641314000001 5.244 214.89155080000015 5.456 198.93468980000003 4.757 195.25121869999987 5.846 195.55884790000016 5.952 188.52237110000007 5.215 194.82390940000025 4.982 208.81109440000012 5.347 216.01700399999987 5.197 190.32189959999997 6.396 201.21606450000007 5.923 198.19118500000025 4.803 211.22820980000017 5.405 197.8919666000002 5.025)
Error minima by case: (11.6617 1 0.0737 1 1.273 7 0.0 0 0.0 0 0.8213 1 0.0 0 1.461 1 0.0 0 0.0 0 1.085 8 6.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 0.5177 1 0.0 0 0.0 0 7.0875 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 171.797
Average program size in population (points): 172.797
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 231.4353119897813
Average age in population: 199.7190035127952
Median age in population: 228.9291255549869
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.56
Error (vector) diversity:			 0.811
Behavioral diversity:				 0.817
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 633296409
--- Timings ---
Current time: 1529615688154 milliseconds
Total Time:         835.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.3 seconds, 21.3%
Fitness Testing:    523.3 seconds, 62.6%
Report:             133.7 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 31531.0
Test mean error for best: 15.76550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 94.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 83.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 85.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_pop} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction -46} {:instruction integer_dec} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction float_inc} {:instruction float_rot} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction float_yank} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (float_sub float_pop float_pop in1 float_dec in1 integer_dec float_inc -46 integer_dec integer_max float_inc float_inc float_inc integer_div integer_shove float_inc float_inc integer_div float_inc float_inc integer_shove integer_max integer_add float_inc float_inc float_inc float_inc integer_mult integer_div float_inc float_rot integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc tagged_884 float_yank float_inc integer_div float_inc float_dup float_inc float_inc integer_div float_inc float_dup integer_dup integer_div float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_inc integer_yankdup float_inc float_shove float_inc float_inc float_inc float_inc integer_mult float_inc integer_dec integer_dec float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_inc float_shove integer_yankdup float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc integer_max integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 5.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 1.0 1 2.0 1 7.0 2]
Total: 534.0
Mean: 10.68
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5235.541789999999
Median total errors in population: 1022.5
Error averages by case: (257.8773257000001 3.974 233.5678427 4.233 201.3049227 13.169 195.3615731999998 4.539 204.12560459999995 5.09 188.06047079999993 4.253 185.2207457 5.855 217.36321919999995 3.729 180.83967689999997 3.892 192.41266420000002 4.256 236.47948609999997 10.411 232.8742899000001 4.876 215.31263800000008 5.135 195.86173460000012 4.438 189.03064680000008 5.609 188.6464734 5.717 185.37443100000004 4.967 193.48290440000025 4.753 208.55877409999988 5.072 212.3828777999999 4.924 191.4714854 6.328 197.05081390000004 5.614 193.80584630000007 4.484 211.0515539000002 5.082 193.02578870000005 4.598)
Error minima by case: (0.6617 1 1.2578 1 1.3334 8 0.0 0 0.0 0 1.1476 1 0.0 0 0.6044 1 0.0 0 0.0 0 0.915 8 6.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 0.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.083
Average program size in population (points): 177.083
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 232.2981572547339
Average age in population: 208.2221588886693
Median age in population: 230.2444568898718
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.59
Error (vector) diversity:			 0.84
Behavioral diversity:				 0.845
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 637698934
--- Timings ---
Current time: 1529615693586 milliseconds
Total Time:         840.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.3 seconds, 21.3%
Fitness Testing:    526.8 seconds, 62.7%
Report:             134.5 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 33073.0
Test mean error for best: 16.53650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_mult} {:instruction print_integer} {:instruction print_integer} {:instruction float_rot} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_shove} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction tagged_461} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_mult} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer float_pop integer_mult print_integer print_integer float_rot in1 float_dec in1 in1 float_dec in1 integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_shove integer_div float_inc float_inc integer_add float_inc float_inc integer_div float_inc integer_dup float_inc float_inc integer_div float_inc integer_swap float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc tagged_884 integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_shove float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_yankdup float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc integer_swap float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc integer_max integer_dec float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div integer_yankdup float_stackdepth integer_sub tagged_461 float_inc float_inc integer_max integer_div integer_rot float_inc float_inc integer_dec float_inc integer_rot integer_div integer_dec float_inc float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_sub integer_dec float_yank integer_mult in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 2.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 3.0 1 2.0 1 6.0 2]
Total: 532.0
Mean: 10.64
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5073.474438799999
Median total errors in population: 960.0
Error averages by case: (252.22480100000016 4.066 224.8633140000001 4.298 194.54065469999998 13.244 190.25749759999977 4.593 193.71024759999995 5.128 180.2327178999999 4.348 184.03556050000006 5.996 208.64649819999985 3.772 175.36236019999993 3.922 184.8471305999999 4.236 227.7429196999999 10.427 226.11612180000012 4.961 206.28636010000014 5.087 192.42261840000018 4.487 186.24679 5.672 185.7752375000001 5.775 177.3257250000001 4.863 184.69250050000014 4.722 200.28056370000016 4.975 205.76293159999992 4.851 187.61631129999995 6.315 190.51434560000004 5.526 189.02124330000012 4.454 202.81784710000025 5.04 186.74714090000023 4.627)
Error minima by case: (13.6617 1 1.0737 1 1.5345 9 0.0 0 0.0 0 1.1133 1 0.0 0 2.4338 1 0.0 0 0.0 0 1.4034 8 7.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2951 1 0.0 0 0.0 0 11.7071 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.902
Average program size in population (points): 175.902
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 233.609650096493
Average age in population: 207.2728825232059
Median age in population: 231.5225843826102
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.555
Error (vector) diversity:			 0.819
Behavioral diversity:				 0.827
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 642072150
--- Timings ---
Current time: 1529615699048 milliseconds
Total Time:         846.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.3 seconds, 21.3%
Fitness Testing:    530.3 seconds, 62.7%
Report:             135.4 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 33073.0
Test mean error for best: 16.53650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_mult} {:instruction print_integer} {:instruction print_integer} {:instruction float_rot} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_shove} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_shove} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction tagged_461} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_mult} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer float_pop integer_mult print_integer print_integer float_rot in1 float_dec in1 in1 float_dec in1 integer_dec float_inc integer_dec float_inc float_inc float_inc integer_div integer_mult integer_sub float_shove integer_div float_inc float_inc integer_add float_inc float_inc integer_div float_inc integer_dup float_inc float_inc integer_div float_inc integer_swap float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc tagged_884 integer_div float_inc integer_div float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_shove float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_yankdup float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc integer_swap float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc integer_max integer_dec float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div integer_yankdup float_stackdepth integer_sub tagged_461 float_inc float_inc integer_max integer_div integer_rot float_inc float_inc integer_dec float_inc integer_rot integer_div integer_dec float_inc float_inc integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_sub integer_dec float_yank integer_mult in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 2.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 3.0 1 2.0 1 6.0 2]
Total: 532.0
Mean: 10.64
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5912.083355299999
Median total errors in population: 1010.0
Error averages by case: (283.39972690000013 4.449 259.78212479999996 4.66 230.809746 13.31 221.53411989999978 4.817 224.8931233 5.406 216.46030859999993 4.65 212.37178190000006 6.173 244.17395270000003 4.161 206.95615759999995 4.319 220.44707720000005 4.567 262.62033870000005 10.492 258.59242280000007 5.422 237.61902270000007 5.33 223.37529460000013 4.783 219.54143370000003 5.843 219.21797460000008 5.958 211.17922650000008 5.306 220.53720410000014 5.02 233.5254625000002 5.29 238.877441 5.287 216.84621950000002 6.629 227.44193660000008 5.76 222.75814680000016 4.78 235.59581250000016 5.297 220.87829980000018 4.94)
Error minima by case: (16.6617 1 0.0907 1 1.5345 10 0.0 0 0.0 0 0.8395 1 0.0 0 5.4977 1 0.0 0 0.0 0 0.8558 7 5.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 13.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 172.554
Average program size in population (points): 173.554
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 235.1083800709164
Average age in population: 205.5610694225107
Median age in population: 232.6866187804961
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.548
Error (vector) diversity:			 0.78
Behavioral diversity:				 0.788
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 646386890
--- Timings ---
Current time: 1529615704383 milliseconds
Total Time:         851.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.4 seconds, 21.3%
Fitness Testing:    533.7 seconds, 62.7%
Report:             136.3 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 33521.0
Test mean error for best: 16.76050
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 111.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 69.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 11.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_82} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mod integer_mult print_integer float_pop integer_flush print_integer print_integer float_pop in1 float_dec in1 in1 float_dec in1 integer_dec integer_rot integer_dec integer_swap float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc integer_min float_inc integer_div float_inc float_inc integer_div integer_yank integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc tag_integer_82 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup integer_yankdup 11 float_inc float_dup integer_max float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 2.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 2.0 2 3.0 1 38.0 2 8.0 1 2.0 1 0.0 0 2.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5279.158317499999
Median total errors in population: 1010.0
Error averages by case: (262.26004090000004 4.112 240.25041710000002 4.302 209.6346309 13.323 192.5709177999999 4.586 197.2453357999999 5.137 195.44293849999988 4.309 186.27570510000012 6.161 223.94034229999994 3.772 182.56474039999998 3.936 193.79237499999996 4.354 243.27476970000004 10.511 237.46463320000004 4.99 210.71931520000015 5.067 195.01596980000008 4.605 193.46950979999994 5.805 193.10686480000018 5.976 189.37730299999998 4.892 190.99455010000005 4.746 205.57190570000012 5.058 216.73044179999994 4.963 190.87650950000003 6.649 197.8552194 5.563 193.7806186000001 4.523 207.48222060000018 5.086 192.32904250000013 4.706)
Error minima by case: (2.6617 1 0.0737 1 2.4655 9 0.0 0 0.0 0 0.1476 1 0.0 0 0.6971 1 0.0 0 0.0 0 0.085 7 8.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 0.7493 1 0.0 0 0.0 0 2.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.932
Average program size in population (points): 176.932
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 236.113677823546
Average age in population: 211.7121593781789
Median age in population: 233.86798935262
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.571
Error (vector) diversity:			 0.814
Behavioral diversity:				 0.821
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 650786540
--- Timings ---
Current time: 1529615709939 milliseconds
Total Time:         857.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.4 seconds, 21.3%
Fitness Testing:    537.3 seconds, 62.7%
Report:             137.2 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 33521.0
Test mean error for best: 16.76050
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 111.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 69.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 11.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_82} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mod integer_mult print_integer float_pop integer_flush print_integer print_integer float_pop in1 float_dec in1 in1 float_dec in1 integer_dec integer_rot integer_dec integer_swap float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc integer_min float_inc integer_div float_inc float_inc integer_div integer_yank integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc tag_integer_82 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup integer_yankdup 11 float_inc float_dup integer_max float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 2.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 2.0 2 3.0 1 38.0 2 8.0 1 2.0 1 0.0 0 2.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5327.437841599999
Median total errors in population: 1010.0
Error averages by case: (258.6237810000001 4.114 235.16660220000014 4.366 204.6717338 13.318 199.48738839999976 4.623 203.92853519999986 5.121 190.69021099999992 4.376 191.56594459999994 6.261 219.0292467999998 3.827 182.1594333999999 4.004 194.0958869999999 4.341 238.1173929 10.505 233.13998810000012 4.956 220.3097392000002 5.132 202.2236525000001 4.582 196.48502329999997 5.84 196.2057358000002 5.997 185.8783031000001 4.883 194.5979918000001 4.778 215.7682418000002 5.055 212.85574559999995 4.844 197.9741331999999 6.655 203.47184670000004 5.563 199.3830025000002 4.555 216.97494240000026 5.121 197.0403393000002 4.776)
Error minima by case: (13.6617 1 0.8384 1 0.5345 10 0.0 0 0.0 0 0.4779 1 0.0 0 1.539 1 0.0 0 0.0 0 1.8907 8 6.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 7.3201 1 0.0701 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.893
Average program size in population (points): 175.893
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 237.1416774200672
Average age in population: 212.1094622850135
Median age in population: 235.0854438522992
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.586
Error (vector) diversity:			 0.818
Behavioral diversity:				 0.825
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 655159490
--- Timings ---
Current time: 1529615715420 milliseconds
Total Time:         862.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.5 seconds, 21.3%
Fitness Testing:    540.8 seconds, 62.7%
Report:             138.1 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 33521.0
Test mean error for best: 16.76050
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 111.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 69.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 11.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_82} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mod integer_mult print_integer float_pop integer_flush print_integer print_integer float_pop in1 float_dec in1 in1 float_dec in1 integer_dec integer_rot integer_dec integer_swap float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc integer_min float_inc integer_div float_inc float_inc integer_div integer_yank integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc tag_integer_82 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup integer_yankdup 11 float_inc float_dup integer_max float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 2.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 2.0 2 3.0 1 38.0 2 8.0 1 2.0 1 0.0 0 2.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4887.4577661
Median total errors in population: 955.5
Error averages by case: (246.05958410000005 3.818 224.33621059999996 4.091 191.4748355 13.236 178.56216009999983 4.33 182.5430951 4.826 177.18114889999995 4.094 174.68308209999998 5.714 207.35837739999994 3.525 170.28769509999992 3.666 180.0082267 3.952 227.50144589999994 10.429 220.80401240000003 4.77 194.6680584 4.822 180.81956130000006 4.207 176.05110489999996 5.41 175.45652459999994 5.539 172.6060377 4.614 175.69140100000007 4.496 190.1220543 4.705 200.06384839999996 4.615 175.5024938 6.093 181.9357755 5.278 180.9024843000002 4.29 191.8008404000002 4.751 181.2067076 4.56)
Error minima by case: (3.6617 1 0.0737 1 1.4655 8 0.0 0 0.0 0 1.1988 1 0.0 0 0.461 1 0.0 0 0.0 0 0.7463 8 6.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.574
Average program size in population (points): 178.574
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 238.5595221062079
Average age in population: 216.7009415093174
Median age in population: 236.2085104687879
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.561
Error (vector) diversity:			 0.832
Behavioral diversity:				 0.835
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 659599690
--- Timings ---
Current time: 1529615720890 milliseconds
Total Time:         868.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       184.5 seconds, 21.3%
Fitness Testing:    544.3 seconds, 62.7%
Report:             139.0 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 33521.0
Test mean error for best: 16.76050
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 111.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 69.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 11.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_82} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mod integer_mult print_integer float_pop integer_flush print_integer print_integer float_pop in1 float_dec in1 in1 float_dec in1 integer_dec integer_rot integer_dec integer_swap float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc integer_min float_inc integer_div float_inc float_inc integer_div integer_yank integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc tag_integer_82 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup integer_yankdup 11 float_inc float_dup integer_max float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 2.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 2.0 2 3.0 1 38.0 2 8.0 1 2.0 1 0.0 0 2.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4779.218836499999
Median total errors in population: 975.5
Error averages by case: (244.93668600000012 3.967 218.31245090000007 4.227 187.58200250000004 13.185 174.90266389999988 4.49 177.78284640000004 4.944 173.7491179999999 4.236 165.5840993 5.966 202.0827713999999 3.7 162.72049629999992 3.811 172.60882160000003 4.068 221.40284259999999 10.414 218.79152520000002 4.886 194.39210200000005 4.982 176.8814356 4.465 171.43138230000002 5.694 171.13684169999993 5.886 169.2913958 4.754 167.43681120000008 4.63 188.3457399 4.94 197.91222169999995 4.767 172.3232006 6.392 176.97874540000007 5.449 174.1520928000001 4.376 190.88014450000003 4.954 173.78139890000003 4.636)
Error minima by case: (14.6617 1 0.976 1 0.9312 9 0.0 0 0.0 0 0.2012 1 0.0 0 0.886 1 0.0 0 0.0 0 2.085 7 7.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 14.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.495
Average program size in population (points): 178.495
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 239.7489101908126
Average age in population: 215.9567184971614
Median age in population: 237.5122202376902
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.586
Error (vector) diversity:			 0.844
Behavioral diversity:				 0.851
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 664037590
--- Timings ---
Current time: 1529615726305 milliseconds
Total Time:         873.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.6 seconds, 21.2%
Fitness Testing:    547.8 seconds, 62.7%
Report:             140.0 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 33524.0
Test mean error for best: 16.76200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 109.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 67.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 9.4574635021  
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_mult} {:instruction print_integer} {:instruction float_pop} {:instruction integer_flush} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_min} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_82} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mod integer_mult print_integer float_pop integer_flush print_integer print_integer float_pop in1 float_dec in1 integer_min float_dec in1 integer_dec integer_rot integer_dec integer_swap float_inc float_inc float_inc float_inc float_inc integer_div integer_div float_inc integer_min float_inc integer_div float_inc float_inc integer_div integer_yank integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc tag_integer_82 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub float_inc float_inc integer_max integer_max float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc integer_div float_inc float_inc integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup integer_yankdup 11 float_inc float_dup integer_max float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 0.0 0 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 4.0 2 3.0 1 38.0 2 10.0 1 2.0 1 0.0 0 2.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5665.805663599998
Median total errors in population: 1010.0
Error averages by case: (274.89191120000004 4.446 249.36600129999997 4.65 217.7646522 13.24 212.92492259999977 4.894 218.5476429999999 5.451 205.37640389999993 4.679 205.07772789999999 6.259 232.9231662 4.125 198.77922109999992 4.261 211.31467959999992 4.462 251.31918439999993 10.47 249.04066250000008 5.319 231.78679990000003 5.466 211.7608396000001 4.813 207.4089618 5.979 207.5526121000001 6.091 202.52023100000005 5.245 205.3837546 5.096 225.5364936000001 5.389 228.63218179999993 5.24 209.57159470000005 6.679 209.84020470000004 5.908 213.69954390000024 4.796 228.18593790000014 5.418 213.1823321000001 5.042)
Error minima by case: (8.6617 1 0.0737 1 0.1181 8 0.0 0 0.0 0 0.8801 1 0.0 0 2.6282 1 0.0 0 0.0 0 0.915 8 5.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 0.595 1 0.0 0 0.0 0 6.1349 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.665
Average program size in population (points): 175.665
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 240.9019542274323
Average age in population: 212.0382568250268
Median age in population: 238.6695093430791
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.542
Error (vector) diversity:			 0.782
Behavioral diversity:				 0.788
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 668404856
--- Timings ---
Current time: 1529615731625 milliseconds
Total Time:         878.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.6 seconds, 21.2%
Fitness Testing:    551.3 seconds, 62.7%
Report:             140.8 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 33239.0
Test mean error for best: 16.61950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 109.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 67.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 9.4574635021  
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_82} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction tagged_461} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_add} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_mult} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer print_integer float_pop in1 float_dec in1 integer_dec float_inc float_inc float_inc integer_div integer_div float_inc integer_add float_inc integer_min integer_min integer_div float_inc integer_dup float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_yank integer_div float_inc float_inc float_inc float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc tag_integer_82 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div integer_yankdup float_stackdepth integer_sub tagged_461 float_inc float_inc integer_max integer_div integer_rot float_inc float_inc integer_dec float_inc integer_mult integer_div integer_dec float_inc integer_add integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_mult in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 0.0 0 14.0 2 0.0 0 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 4.0 2 3.0 1 38.0 2 10.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 531.0
Mean: 10.62
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5161.421235399999
Median total errors in population: 996.5
Error averages by case: (253.80583900000013 4.008 230.29553580000004 4.216 197.59556599999996 13.162 189.95216879999984 4.492 193.77026309999994 5.01 182.96894649999987 4.237 185.1261888 5.997 213.06135719999995 3.675 176.56184669999985 3.858 190.53509960000002 4.207 232.5339594 10.372 228.53963990000005 4.929 213.24353880000012 5.057 193.0889104000001 4.516 191.98298320000006 5.715 191.06048410000005 5.881 179.187779 4.865 186.95726820000013 4.706 207.37191310000017 4.982 207.9034618 4.887 188.25711560000005 6.381 200.89197290000007 5.539 191.84003940000014 4.435 209.97522890000013 5.037 190.07912920000012 4.671)
Error minima by case: (11.6617 1 1.3385 1 1.4655 7 0.0 0 0.0 0 0.2465 1 0.0 0 0.408 1 0.0 0 0.0 0 0.915 8 3.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 1.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.631
Average program size in population (points): 175.631
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 242.2051084995319
Average age in population: 213.9132387575076
Median age in population: 239.9904421978937
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.564
Error (vector) diversity:			 0.81
Behavioral diversity:				 0.817
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 672771206
--- Timings ---
Current time: 1529615737096 milliseconds
Total Time:         884.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       187.7 seconds, 21.2%
Fitness Testing:    554.8 seconds, 62.7%
Report:             141.6 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 33239.0
Test mean error for best: 16.61950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 109.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 67.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 9.4574635021  
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_min} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_82} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_div} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction tagged_461} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_add} {:instruction integer_yankdup} {:instruction 11} {:instruction tagged_918} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_mult} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer print_integer float_pop in1 float_dec in1 integer_dec float_inc float_inc float_inc integer_div integer_div float_inc integer_add float_inc integer_min integer_min integer_div float_inc integer_dup float_inc float_inc integer_div float_inc float_inc float_inc float_inc integer_yank integer_div float_inc float_inc float_inc float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc tag_integer_82 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_div integer_yankdup float_stackdepth integer_sub tagged_461 float_inc float_inc integer_max integer_div integer_rot float_inc float_inc integer_dec float_inc integer_mult integer_div integer_dec float_inc integer_add integer_yankdup 11 tagged_918 integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_div integer_dec float_yank integer_mult in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 0.0 0 14.0 2 0.0 0 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 4.0 2 3.0 1 38.0 2 10.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 531.0
Mean: 10.62
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5229.703121999999
Median total errors in population: 996.0
Error averages by case: (257.21235520000005 4.019 235.40799540000006 4.321 205.62082329999996 13.228 194.21729109999984 4.623 199.72424159999986 5.211 190.41242699999998 4.313 186.11782270000012 5.861 219.0324644999999 3.759 179.52122259999993 3.901 187.81037789999996 4.089 238.44219159999994 10.403 232.01977140000008 4.951 212.12384440000025 5.255 196.77002660000008 4.497 190.87444709999986 5.611 189.91072200000025 5.713 184.69772550000002 4.935 190.69415810000015 4.868 206.9986597000001 5.127 212.4363405 4.895 190.23590590000006 6.465 196.6866919 5.705 195.15835210000023 4.489 208.9208923000001 5.171 192.56237160000012 4.684)
Error minima by case: (13.6617 1 1.0797 1 0.4655 9 0.0 0 0.0 0 1.538 1 0.0 0 0.408 1 0.0 0 0.0 0 2.085 8 7.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 5.0 1 0.0 0 0.0 0 6.4103 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.743
Average program size in population (points): 176.743
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 243.5584881143449
Average age in population: 216.9823888897571
Median age in population: 241.289999584614
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.565
Error (vector) diversity:			 0.818
Behavioral diversity:				 0.825
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 677165131
--- Timings ---
Current time: 1529615742392 milliseconds
Total Time:         889.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       188.7 seconds, 21.2%
Fitness Testing:    558.2 seconds, 62.7%
Report:             142.5 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 32710.0
Test mean error for best: 16.35500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 112.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 188.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 68.5127184446 
Correct output: 61.1705628788  | Program output: 66.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 70.2733863439 
Correct output: 136.9572654004 | Program output: 131.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 12.4574635021 
Correct output: 102.3014515582 | Program output: 98.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 170.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_pop} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction float_yank} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_82} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_max} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer integer_mult integer_pop print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dup float_inc integer_dec integer_dec integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_rot float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc tagged_884 float_yank float_inc integer_div float_inc float_dup float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc integer_dup integer_dup float_dup integer_max float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_dup integer_shove float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_dup_times integer_div float_inc integer_div float_inc float_inc float_inc tag_integer_82 integer_rot float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_max float_inc integer_max integer_max float_inc integer_dec float_inc float_inc float_inc integer_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_yankdup integer_dec float_yank 11 float_inc in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 3.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 2.0 2 0.0 0 8.0 1 5.0 1 5.0 2 1.0 1 5.0 1 38.0 2 7.0 1 4.0 3 0.0 0 0.0 0 5.0 2]
Total: 533.0
Mean: 10.66
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5249.329427399999
Median total errors in population: 976.0
Error averages by case: (255.17006580000003 3.877 232.5396262000001 4.205 200.73043330000002 13.229 197.33611559999986 4.639 201.81312989999992 5.116 187.08088179999996 4.21 184.78368679999994 5.901 215.98622109999997 3.629 180.73185469999996 3.82 192.75694019999995 4.099 235.66845990000004 10.426 230.14515160000005 4.8 217.49091690000014 5.133 197.9257850000001 4.528 195.56092100000004 5.676 194.17307310000012 5.796 182.61757520000006 4.755 191.58097240000015 4.795 212.1331528000001 5.065 210.17005369999998 4.748 188.31547590000005 6.391 200.71298840000014 5.607 197.76771480000025 4.553 214.27004330000017 5.072 197.06918800000005 4.729)
Error minima by case: (15.6617 1 0.9263 1 1.4655 8 0.0 0 0.0 0 0.5579 1 0.0 0 0.6735 1 0.0 0 0.0 0 1.4731 8 6.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 15.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.8
Average program size in population (points): 178.8
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 244.4777846256611
Average age in population: 222.0079404867207
Median age in population: 242.5668850449192
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.583
Error (vector) diversity:			 0.828
Behavioral diversity:				 0.835
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 681610431
--- Timings ---
Current time: 1529615747943 milliseconds
Total Time:         895.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.8 seconds, 21.2%
Fitness Testing:    561.8 seconds, 62.8%
Report:             143.4 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 32892.0
Test mean error for best: 16.44600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 189.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 69.5127184446 
Correct output: 61.1705628788  | Program output: 67.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 132.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 99.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 171.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_pop} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction float_yank} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_max} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer integer_mult integer_pop print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dup float_inc integer_dec integer_dec integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_rot float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc tagged_884 float_yank float_inc integer_div float_inc float_dup float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc integer_dup integer_dup float_dup integer_max float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_dup integer_shove float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc integer_max float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_max float_inc integer_max integer_max float_inc integer_dec float_inc float_inc float_inc integer_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_yankdup integer_dec float_yank 11 float_inc in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 1.0 2 0.0 0 9.0 1 6.0 1 5.0 2 0.0 0 4.0 1 38.0 2 6.0 1 3.0 3 0.0 0 1.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5693.106281699998
Median total errors in population: 1008.0
Error averages by case: (278.0078838000001 4.263 252.87103500000003 4.487 220.5767595 13.233 209.59729199999984 4.753 215.85187559999991 5.352 205.49606799999992 4.514 202.60135849999992 6.003 235.7397499999999 3.965 200.1790508999999 4.093 205.47095239999985 4.397 255.47315249999997 10.463 252.5066747000002 5.154 235.28628820000023 5.426 216.23853129999998 4.585 211.56788749999993 5.844 211.40432250000026 5.956 204.52415500000004 5.101 203.21165710000017 4.917 229.18623820000022 5.345 234.41527439999993 5.054 212.68872670000002 6.405 213.41021060000008 5.923 208.42564740000014 4.654 231.07214860000002 5.394 207.10434130000036 4.918)
Error minima by case: (12.6617 1 2.2267 1 3.9957 8 0.0 0 0.0 0 0.3311 1 0.0 0 0.539 1 0.0 0 0.0 0 1.915 7 1.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 2.2507 1 0.0 0 0.0 0 12.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.309
Average program size in population (points): 175.309
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 245.9829356862282
Average age in population: 217.0680777527303
Median age in population: 243.8142488896717
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.564
Error (vector) diversity:			 0.803
Behavioral diversity:				 0.809
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 685968663
--- Timings ---
Current time: 1529615753390 milliseconds
Total Time:         900.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.9 seconds, 21.2%
Fitness Testing:    565.2 seconds, 62.8%
Report:             144.3 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 32892.0
Test mean error for best: 16.44600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 189.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 69.5127184446 
Correct output: 61.1705628788  | Program output: 67.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 132.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 99.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 171.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_pop} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction float_yank} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_max} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer integer_mult integer_pop print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dup float_inc integer_dec integer_dec integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_rot float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc tagged_884 float_yank float_inc integer_div float_inc float_dup float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc integer_dup integer_dup float_dup integer_max float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_dup integer_shove float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc integer_max float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_max float_inc integer_max integer_max float_inc integer_dec float_inc float_inc float_inc integer_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_yankdup integer_dec float_yank 11 float_inc in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 1.0 2 0.0 0 9.0 1 6.0 1 5.0 2 0.0 0 4.0 1 38.0 2 6.0 1 3.0 3 0.0 0 1.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5362.223053599998
Median total errors in population: 999.5
Error averages by case: (262.6431721000001 4.109 238.33588570000006 4.33 206.9337361 13.247 198.71441659999974 4.66 203.0180847999999 5.156 193.3252496999999 4.366 193.96560879999996 5.975 221.89274329999992 3.781 186.00150139999997 3.962 195.28717029999999 4.239 241.26611759999997 10.417 237.89305980000015 5.051 216.24051020000005 5.095 204.87298030000017 4.655 199.54851619999997 5.688 199.18628470000002 5.818 192.1986105000001 4.998 193.55340610000016 4.794 211.77447230000013 5.045 218.75890189999998 4.954 197.19815940000007 6.364 201.33865170000004 5.596 199.64624290000017 4.58 213.17717210000018 5.046 198.7793991000002 4.747)
Error minima by case: (9.6617 1 2.0737 1 0.4655 10 0.0 0 0.0 0 1.8524 1 0.0 0 1.5023 1 0.0 0 0.0 0 0.085 8 3.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2507 1 0.0 0 0.0 0 9.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.095
Average program size in population (points): 176.095
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 247.3226672838413
Average age in population: 219.1888065952247
Median age in population: 245.0913918172153
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.559
Error (vector) diversity:			 0.816
Behavioral diversity:				 0.82
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 690346563
--- Timings ---
Current time: 1529615758875 milliseconds
Total Time:         906.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       191.9 seconds, 21.2%
Fitness Testing:    568.7 seconds, 62.8%
Report:             145.2 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 32892.0
Test mean error for best: 16.44600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 189.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 69.5127184446 
Correct output: 61.1705628788  | Program output: 67.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 132.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 99.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 171.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_pop} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction float_yank} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_max} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer integer_mult integer_pop print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dup float_inc integer_dec float_shove integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_rot float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc tagged_884 float_yank float_inc integer_div float_inc float_dup float_inc integer_dup_times integer_pop float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc integer_dup integer_dup float_dup integer_max float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_dup integer_shove float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc integer_max float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_max float_inc integer_max integer_max float_inc integer_dec float_inc float_inc float_inc integer_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_yankdup integer_dec float_yank 11 float_inc in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 1.0 2 0.0 0 9.0 1 6.0 1 5.0 2 0.0 0 4.0 1 38.0 2 6.0 1 3.0 3 0.0 0 1.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4587.951607299999
Median total errors in population: 982.0
Error averages by case: (236.0827192000001 3.913 206.02728020000004 4.169 174.50234259999996 13.175 166.38709819999983 4.449 172.5538380999999 4.911 158.9152276999999 4.183 159.1722361 5.909 188.5274026999999 3.62 154.21885349999988 3.696 162.1561781 3.902 208.42466399999998 10.391 210.03246290000016 4.862 193.56219470000002 4.945 173.14098380000016 4.314 168.17491750000005 5.602 167.53772049999995 5.761 159.01100830000001 4.862 162.92592950000008 4.482 187.58466040000013 4.85 188.42658569999995 4.834 165.68922100000003 6.248 175.54481680000012 5.421 164.09235580000018 4.247 189.5189928000001 4.896 163.64191720000005 4.458)
Error minima by case: (2.3383 1 0.0704 1 2.5345 9 0.0 0 0.0 0 0.1476 1 0.0 0 0.4159 1 0.0 0 0.0 0 1.915 7 6.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 2.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.954
Average program size in population (points): 175.954
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 248.5094284129
Average age in population: 219.3161442682685
Median age in population: 246.3599177442698
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.574
Error (vector) diversity:			 0.84
Behavioral diversity:				 0.846
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 694721229
--- Timings ---
Current time: 1529615764242 milliseconds
Total Time:         911.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.0 seconds, 21.2%
Fitness Testing:    572.2 seconds, 62.8%
Report:             146.1 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 32892.0
Test mean error for best: 16.44600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 189.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 69.5127184446 
Correct output: 61.1705628788  | Program output: 67.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 132.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 99.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 171.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_pop} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction float_yank} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -97} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction integer_max} {:instruction float_inc} {:instruction integer_max} {:instruction integer_max} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult print_integer integer_mult integer_pop print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dup float_inc integer_dec float_shove integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_rot float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc tagged_884 float_yank float_inc integer_div float_inc float_dup float_inc integer_dup_times integer_pop float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc integer_dup integer_dup float_dup integer_max float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_dup integer_shove float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc integer_max float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -97 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 12 integer_sub integer_max float_inc integer_max integer_max float_inc integer_dec float_inc float_inc float_inc integer_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_yankdup integer_dec float_yank 11 float_inc in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 1.0 2 0.0 0 9.0 1 6.0 1 5.0 2 0.0 0 4.0 1 38.0 2 6.0 1 3.0 3 0.0 0 1.0 1 5.0 2]
Total: 532.0
Mean: 10.64
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5601.733147599999
Median total errors in population: 997.0
Error averages by case: (266.9328744000002 4.287 242.88075160000002 4.527 213.58612809999997 13.287 213.26316289999986 4.904 219.51158679999986 5.431 198.39158039999992 4.55 206.087157 6.14 227.86618849999988 3.999 192.4993895999999 4.191 205.21379129999994 4.388 246.77462799999992 10.486 243.0038732000001 5.186 232.7734058000002 5.441 213.83578680000008 4.808 209.7858189999999 5.856 209.3815801 5.97 193.80514620000005 5.111 204.61104880000008 5.016 225.7772620000001 5.324 221.22157389999992 5.042 208.62662999999992 6.54 212.64597760000004 5.864 213.67926700000018 4.776 228.84705400000018 5.387 209.27148460000018 4.949)
Error minima by case: (12.6617 1 0.0737 1 0.8804 10 0.0 0 0.0 0 1.6909 1 0.0 0 2.6164 1 0.0 0 0.0 0 0.5655 8 1.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 2.2507 1 0.0 0 0.0 0 0.1333 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.586
Average program size in population (points): 175.586
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 249.6907783246087
Average age in population: 218.9279318867418
Median age in population: 247.545984547269
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.568
Error (vector) diversity:			 0.823
Behavioral diversity:				 0.831
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 699086154
--- Timings ---
Current time: 1529615769520 milliseconds
Total Time:         916.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       194.0 seconds, 21.2%
Fitness Testing:    575.6 seconds, 62.8%
Report:             147.0 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 33156.0
Test mean error for best: 16.57800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 85.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_mult} {:instruction float_pop} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_div} {:instruction integer_yankdup} {:instruction integer_min} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -98} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dec} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_yank} {:instruction print_float} {:instruction float_min})
Best program: (integer_mult integer_mult float_pop float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec print_integer float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_div integer_yankdup integer_min float_inc integer_min float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_inc integer_div integer_dec float_inc integer_dup float_inc float_inc float_inc float_inc integer_div float_inc float_dup integer_dup float_inc float_inc integer_div float_inc float_inc float_dup float_inc integer_yank float_inc float_inc float_inc integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc integer_yankdup integer_div float_inc integer_div integer_div float_dec integer_mult float_inc integer_dec float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc float_inc integer_max float_shove float_inc float_shove float_inc float_shove float_inc float_inc float_inc integer_max integer_dec float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -98 float_inc integer_div float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_dec 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc float_inc integer_mult integer_div integer_dec float_yank integer_yankdup in2 float_inc integer_sub float_inc float_inc float_inc integer_mult integer_div integer_dec 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc in2 float_inc integer_sub float_inc float_yank print_float float_min)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 3.0 1 2.0 1 6.0 2]
Total: 533.0
Mean: 10.66
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5528.166420799998
Median total errors in population: 971.0
Error averages by case: (269.55045050000007 4.275 244.04607330000005 4.514 214.6849279999999 13.266 206.2416041999999 4.792 212.2156082 5.324 200.42604869999994 4.532 200.4052636999999 5.794 228.10275529999993 3.964 194.47728889999996 4.104 205.02816159999998 4.268 247.06717789999993 10.425 244.91122300000012 5.199 223.1165156000002 5.377 207.50553340000013 4.669 201.41301409999997 5.597 200.51871820000005 5.69 195.9852749000001 5.055 205.17230630000012 4.967 217.69803890000014 5.254 224.23880420000003 5.05 204.70520979999998 6.129 210.46510910000006 5.802 204.7615076000002 4.666 219.7869731000001 5.267 206.7458323000002 4.917)
Error minima by case: (9.6617 1 1.1616 1 5.6325 8 0.0 0 0.0 0 0.1476 1 0.0 0 0.5413 1 0.0 0 0.0 0 1.085 7 6.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 1.5544 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 174.518
Average program size in population (points): 175.518
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 250.8142357597019
Average age in population: 220.8129670773624
Median age in population: 248.8508673556052
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.554
Error (vector) diversity:			 0.817
Behavioral diversity:				 0.822
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 703449579
--- Timings ---
Current time: 1529615774931 milliseconds
Total Time:         922.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       195.1 seconds, 21.2%
Fitness Testing:    579.0 seconds, 62.8%
Report:             147.8 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 31345.0
Test mean error for best: 15.67250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 113.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -55.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 71.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 13.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 84.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_pop} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_dup} {:instruction integer_max} {:instruction float_dup_items} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction integer_mult} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction 11} {:instruction integer_sub} {:instruction float_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_inc} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_pop float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_rot float_inc integer_dup float_inc integer_add float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_mult integer_div float_inc float_inc integer_swap integer_add integer_dup_items float_inc float_inc float_dup float_inc tagged_884 integer_flush float_inc integer_div float_inc float_dup float_inc float_inc float_dup float_inc integer_div float_inc float_dup integer_dup integer_max float_dup_items float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_swap integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_dup_times float_inc integer_yankdup float_inc float_dec integer_mult float_inc integer_dec float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_inc integer_yankdup float_shove float_inc float_inc integer_mult float_inc integer_dec float_inc float_inc float_dup float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 integer_mult integer_div float_inc integer_yankdup 11 integer_sub float_inc float_inc integer_dec 11 integer_sub float_dec float_inc float_inc integer_max integer_sub float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_inc 11 float_inc float_inc in2 float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 4.0 2 14.0 2 0.0 0 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 0.0 0 3.0 1 38.0 2 6.0 1 2.0 1 2.0 1 2.0 1 6.0 2]
Total: 532.0
Mean: 10.64
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5560.606308699999
Median total errors in population: 999.5
Error averages by case: (271.0816201000001 4.184 244.9617768000001 4.399 214.77805869999997 13.196 207.2903035999999 4.713 214.32950639999996 5.295 200.26216169999992 4.435 196.86993439999998 5.879 229.11744309999995 3.898 193.72117039999998 4.081 200.4260419999999 4.229 247.87945800000006 10.396 245.73141960000004 5.069 230.84488000000002 5.376 208.74827700000014 4.584 204.27602889999997 5.831 203.17245330000003 5.972 198.97507040000005 4.992 204.4876713000001 4.87 225.92239140000004 5.283 225.86461279999992 5.004 202.67042170000002 6.547 214.0925588 5.811 205.26579580000015 4.619 227.0932049000001 5.326 203.87404760000013 4.881)
Error minima by case: (6.6617 1 0.9263 1 5.4655 9 0.0 0 0.0 0 0.3906 1 0.0 0 0.3046 1 0.0 1 0.0 0 0.085 7 11.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 0.7435 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.3
Average program size in population (points): 176.3
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 252.5580997702923
Average age in population: 223.9710498138267
Median age in population: 250.1242692175501
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.563
Error (vector) diversity:			 0.819
Behavioral diversity:				 0.825
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 707832054
--- Timings ---
Current time: 1529615780251 milliseconds
Total Time:         927.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.1 seconds, 21.1%
Fitness Testing:    582.5 seconds, 62.8%
Report:             148.7 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 31488.0
Test mean error for best: 15.74400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 109.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 67.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 9.4574635021  
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_mod} {:instruction float_pop} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction integer_stackdepth} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_shove} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_pop} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_inc} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_mod float_pop float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_inc integer_dec float_inc integer_dec integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div integer_stackdepth tagged_899 float_inc float_inc float_inc float_inc float_shove integer_div float_shove float_inc integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_div float_inc float_inc float_inc float_inc float_inc integer_div integer_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_pop float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_inc 11 float_inc float_inc in2 float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 0.0 0 14.0 2 0.0 0 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 4.0 2 3.0 1 38.0 2 10.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 533.0
Mean: 10.66
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5711.9093592
Median total errors in population: 1000.0
Error averages by case: (279.3855470000001 4.369 257.74374420000004 4.558 226.84973540000001 13.29 212.08127289999985 4.821 217.71748949999986 5.357 212.60081489999993 4.595 204.9026505000001 6.067 241.2500921 4.057 199.42807989999994 4.186 203.84912959999994 4.249 260.3139955 10.518 254.57949310000012 5.348 228.93012560000008 5.388 212.70788390000013 4.702 208.64810770000005 5.919 208.05196080000002 6.055 206.4257986000001 5.288 211.16467600000013 4.947 223.67513990000003 5.294 233.21330799999998 5.299 207.61889640000015 6.436 215.55801730000002 5.849 210.4311155000002 4.658 225.48838350000014 5.279 207.88290140000004 4.882)
Error minima by case: (6.6617 1 0.0737 1 1.2917 9 0.0 0 0.0 0 0.5258 1 0.0 0 3.461 1 0.0 0 0.0 0 2.085 8 9.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 2.2022 1 0.0 0 0.0 0 4.2108 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 173.781
Average program size in population (points): 174.781
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 253.5775851977937
Average age in population: 222.7969932841165
Median age in population: 251.3682327852786
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.546
Error (vector) diversity:			 0.812
Behavioral diversity:				 0.815
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 712176504
--- Timings ---
Current time: 1529615785726 milliseconds
Total Time:         932.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       197.2 seconds, 21.1%
Fitness Testing:    585.9 seconds, 62.8%
Report:             149.6 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 31488.0
Test mean error for best: 15.74400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 109.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -53.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 67.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 9.4574635021  
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_mod} {:instruction float_pop} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_max} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_div} {:instruction integer_stackdepth} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction integer_div} {:instruction float_shove} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_pop} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_inc} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_mod float_pop float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_inc integer_dec float_inc integer_dec integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_max integer_div float_inc float_inc integer_div float_yankdup integer_div integer_stackdepth tagged_899 float_inc float_inc float_inc float_inc float_shove integer_div float_shove float_inc integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_div float_inc float_inc float_inc float_inc float_inc integer_div integer_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div integer_pop float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_inc integer_yankdup 11 integer_sub integer_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_inc 11 float_inc float_inc in2 float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 0.0 0 14.0 2 0.0 0 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 1.0 1 10.0 1 7.0 1 5.0 2 4.0 2 3.0 1 38.0 2 10.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 533.0
Mean: 10.66
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5568.254275199999
Median total errors in population: 996.0
Error averages by case: (271.3616059000001 4.272 248.49873620000005 4.526 217.4626835 13.277 208.33859459999968 4.807 214.04996349999982 5.314 203.3324586999999 4.555 199.41934530000006 5.985 231.47134699999984 3.997 197.2035642999999 4.183 207.53493179999998 4.224 250.37096429999994 10.481 246.2165115000001 5.216 223.79840280000016 5.308 208.2581451000002 4.646 203.9585624999999 5.626 202.61151420000004 5.732 200.5124130000001 5.116 204.17468000000025 4.972 216.47312740000012 5.224 227.21286269999993 5.129 203.42091980000006 6.42 207.58511450000015 5.738 207.12542920000024 4.627 219.71094860000022 5.233 208.63344880000014 4.91)
Error minima by case: (6.6617 1 2.0737 1 3.5345 10 0.0 0 0.0 0 0.1474 1 0.0 0 2.6301 1 0.0 0 0.0 0 0.085 8 7.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 1.2507 1 0.0 0 0.0 0 4.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.348
Average program size in population (points): 177.348
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 254.880425430046
Average age in population: 228.1571569355579
Median age in population: 252.5743327129551
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.527
Error (vector) diversity:			 0.789
Behavioral diversity:				 0.796
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 716585204
--- Timings ---
Current time: 1529615791185 milliseconds
Total Time:         938.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.2 seconds, 21.1%
Fitness Testing:    589.4 seconds, 62.8%
Report:             150.6 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 31416.0
Test mean error for best: 15.70800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_pop} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 10} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dec} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 12} {:instruction float_inc} {:instruction integer_inc} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_pop float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_rot float_inc integer_dup float_inc integer_add float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_mult integer_div float_inc float_inc integer_swap integer_add integer_dup_items float_inc float_inc float_dup float_inc tagged_884 integer_flush float_inc integer_div float_inc float_dup float_inc float_inc float_dup float_inc integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_swap integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_dup_times float_inc integer_yankdup float_inc float_dec integer_mult float_inc float_yankdup float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dup_items float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 10 integer_sub float_inc integer_dec 11 integer_sub integer_div float_inc float_inc integer_max integer_mod float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 12 float_inc integer_inc 11 float_inc float_inc in2 float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 529.0
Mean: 10.58
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5013.823610799999
Median total errors in population: 961.17435
Error averages by case: (253.38289240000006 3.905 224.17870709999994 4.196 193.3170762 13.199 184.25862849999973 4.535 190.82118159999985 5.025 178.34732879999996 4.223 175.6187606999999 5.818 207.50716600000004 3.615 171.09842239999995 3.74 177.32710649999999 3.847 227.11630269999998 10.451 228.27860630000015 4.847 205.3712563000001 5.086 189.98787980000014 4.516 182.99340089999993 5.564 181.46439620000004 5.652 179.38037070000007 4.721 183.13722740000017 4.672 199.68926600000006 4.969 208.14728119999998 4.696 184.26423509999998 6.097 190.35731820000007 5.547 183.1482800000002 4.409 202.00478410000025 4.966 179.73973570000004 4.59)
Error minima by case: (10.6617 1 2.9263 1 0.4655 9 0.0 0 0.0 0 1.1738 1 0.0 0 1.3013 1 0.0 0 0.0 0 1.5239 8 8.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2382 1 0.0 0 0.0 0 10.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.529
Average program size in population (points): 176.529
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 255.8365501140911
Average age in population: 227.8263471550803
Median age in population: 253.8964034644367
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.54
Error (vector) diversity:			 0.813
Behavioral diversity:				 0.823
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 720973629
--- Timings ---
Current time: 1529615796627 milliseconds
Total Time:         943.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       199.3 seconds, 21.1%
Fitness Testing:    592.9 seconds, 62.8%
Report:             151.5 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 31416.0
Test mean error for best: 15.70800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_pop} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 10} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dec} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 12} {:instruction float_inc} {:instruction integer_inc} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_pop float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_rot float_inc integer_dup float_inc integer_add float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_mult integer_div float_inc float_inc integer_swap integer_add integer_dup_items float_inc float_inc float_dup float_inc tagged_884 integer_flush float_inc integer_div float_inc float_dup float_inc float_inc float_dup float_inc integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_swap integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_dup_times float_inc integer_yankdup float_inc float_dec integer_mult float_inc float_yankdup float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dup_items float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 10 integer_sub float_inc integer_dec 11 integer_sub integer_div float_inc float_inc integer_max integer_mod float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 12 float_inc integer_inc 11 float_inc float_inc in2 float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 529.0
Mean: 10.58
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5128.9718654
Median total errors in population: 996.0
Error averages by case: (254.61249620000018 4.059 231.17653660000005 4.318 199.48036480000005 13.222 190.0148096999998 4.549 197.7441200999999 5.072 185.7383721999999 4.336 178.65282129999989 5.977 214.56236639999997 3.786 177.1814717999999 3.872 188.1038667999999 4.033 234.01099080000003 10.421 229.22499200000013 4.955 210.4120631000001 5.025 190.59574060000017 4.456 183.5624517 5.685 183.28229769999996 5.831 182.2256825000001 4.867 186.28263460000016 4.702 205.62677400000013 4.966 209.12518169999996 4.844 185.18239530000002 6.477 192.72656500000005 5.516 189.22385150000017 4.401 207.39428650000025 4.975 187.79273250000014 4.691)
Error minima by case: (6.6617 1 1.609 1 0.4655 8 0.0 0 0.0 0 0.1787 1 0.0 0 2.6906 1 0.0 0 0.0 0 1.085 8 8.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.0918 1 0.0 0 0.0 0 6.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.887
Average program size in population (points): 177.887
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 257.3669436555967
Average age in population: 232.6477280492395
Median age in population: 255.2925460016089
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.548
Error (vector) diversity:			 0.816
Behavioral diversity:				 0.821
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 725396279
--- Timings ---
Current time: 1529615802122 milliseconds
Total Time:         949.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       200.4 seconds, 21.1%
Fitness Testing:    596.4 seconds, 62.8%
Report:             152.4 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 31416.0
Test mean error for best: 15.70800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_pop} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 10} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dec} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 12} {:instruction float_inc} {:instruction integer_inc} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_pop float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_rot float_inc integer_dup float_inc integer_add float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_mult integer_div float_inc float_inc integer_swap integer_add integer_dup_items float_inc float_inc float_dup float_inc tagged_884 integer_flush float_inc integer_div float_inc float_dup float_inc float_inc float_dup float_inc integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_swap integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_dup_times float_inc integer_yankdup float_inc float_dec integer_mult float_inc float_yankdup float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dup_items float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 10 integer_sub float_inc integer_dec 11 integer_sub integer_div float_inc float_inc integer_max integer_mod float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 12 float_inc integer_inc 11 float_inc float_inc in2 float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 529.0
Mean: 10.58
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5370.410001099999
Median total errors in population: 982.5
Error averages by case: (262.72039880000005 4.165 239.08379569999997 4.403 207.07136239999997 13.269 203.35271389999988 4.686 207.99363099999994 5.222 194.24959579999995 4.436 189.72115270000003 6.016 222.7960415 3.864 182.5136844 3.962 197.56040720000001 4.071 242.03504100000004 10.495 236.80276550000013 5.093 221.1096278000001 5.27 202.63496900000004 4.607 193.71430770000006 5.762 192.46507099999994 5.883 190.86372070000007 5.004 196.20295850000014 4.878 214.7513261 5.214 217.3263591 4.967 193.31019669999995 6.36 203.20066790000004 5.733 202.89283090000012 4.573 216.97289550000013 5.23 201.12348030000004 4.778)
Error minima by case: (3.6617 1 0.4642 1 9.4655 7 0.0 0 0.0 0 0.2079 1 0.0 0 1.9435 1 0.0 0 0.0 0 0.0043 7 2.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 3.2507 1 0.0 0 0.0 0 3.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.093
Average program size in population (points): 177.093
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 258.6200491716642
Average age in population: 231.4677664189546
Median age in population: 256.538362585339
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.573
Error (vector) diversity:			 0.822
Behavioral diversity:				 0.828
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 729798579
--- Timings ---
Current time: 1529615807591 milliseconds
Total Time:         954.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.4 seconds, 21.1%
Fitness Testing:    599.9 seconds, 62.8%
Report:             153.2 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 31416.0
Test mean error for best: 15.70800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 114.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 72.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 14.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_pop} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction float_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 10} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dec} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 12} {:instruction float_inc} {:instruction integer_inc} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_pop float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dec float_inc integer_dec integer_dec float_rot float_inc integer_dup float_inc integer_add float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_mult integer_div float_inc float_inc integer_swap integer_add integer_dup_items float_inc float_inc float_dup float_inc tagged_884 integer_flush float_inc integer_div float_inc float_dup float_inc float_inc float_dup float_inc integer_div float_inc tagged_899 float_inc float_inc float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_swap integer_div float_inc integer_div integer_div float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_dup_times float_inc integer_yankdup float_inc float_dec integer_mult float_inc float_yankdup float_inc float_inc float_inc float_shove float_inc float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_dup_items float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 10 integer_sub float_inc integer_dec 11 integer_sub integer_div float_inc float_inc integer_max integer_mod float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 12 float_inc integer_inc 11 float_inc float_inc in2 float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 0.0 0 5.0 2 14.0 2 1.0 1 50.0 1 3.0 1 0.0 0 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 1.0 1 3.0 1 38.0 2 5.0 1 2.0 1 0.0 0 2.0 1 6.0 2]
Total: 529.0
Mean: 10.58
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4799.442519899999
Median total errors in population: 946.5
Error averages by case: (241.86135130000005 3.697 218.17283830000005 4.03 183.95361810000006 13.232 179.08621259999978 4.375 185.42213399999991 4.949 170.86831869999997 4.054 170.1410642999999 5.79 200.27222879999997 3.465 162.45307429999994 3.591 172.97965429999994 3.827 221.36528449999997 10.431 215.4466509000001 4.668 198.31204529999997 4.904 179.1128532000001 4.292 171.83383470000004 5.382 172.18780430000007 5.476 165.8595791 4.62 171.1969577000002 4.565 193.6779227 4.815 194.3081915 4.6 177.42560259999996 6.16 176.49564490000003 5.361 176.8705117000002 4.298 195.20585520000014 4.818 174.97428690000007 4.559)
Error minima by case: (89.0 1 0.0638 1 3.4655 9 0.0 0 0.0 0 1.5965 1 0.0 0 4.4994 1 0.0 0 0.0 0 0.3941 8 53.4905 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 11.9692 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 179.369
Average program size in population (points): 180.369
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 259.8364237078024
Average age in population: 238.5899696069983
Median age in population: 257.8977634671954
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.55
Error (vector) diversity:			 0.824
Behavioral diversity:				 0.831
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 734282729
--- Timings ---
Current time: 1529615813044 milliseconds
Total Time:         960.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.5 seconds, 21.1%
Fitness Testing:    603.4 seconds, 62.8%
Report:             154.1 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 31418.0
Test mean error for best: 15.70900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_pop} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction float_yank} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_flush} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_yank print_integer integer_mult integer_pop print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dup float_inc integer_dec integer_dec integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_rot float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc tagged_884 float_yank float_inc integer_div float_inc float_dup float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc integer_dup integer_dup float_dup integer_max float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_dup integer_shove float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_div float_inc float_dec integer_sub float_inc integer_flush float_inc float_inc float_frominteger float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_yank float_inc float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 12 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult float_inc float_inc float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 6.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 0.0 0 2.0 1 5.0 2]
Total: 531.0
Mean: 10.62
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5005.546588599999
Median total errors in population: 981.5
Error averages by case: (251.86252770000007 3.844 226.54607210000006 4.107 194.52137669999996 13.179 183.23914189999985 4.421 188.95454380000004 4.993 179.4967278999999 4.158 175.63697869999996 5.942 208.74866059999997 3.599 171.06788569999995 3.752 177.92523140000003 3.838 228.5875828 10.426 224.77414500000006 4.805 205.33231070000008 4.991 185.3663596000001 4.316 188.89647940000003 5.637 186.81527670000003 5.78 177.24247880000004 4.84 182.10942700000012 4.569 199.2582728 4.897 204.12554609999998 4.79 183.03995029999993 6.306 190.95880720000005 5.432 179.37417380000014 4.296 200.54889140000006 4.907 178.76174050000012 4.531)
Error minima by case: (6.6617 1 0.3105 1 2.4655 8 0.0 0 0.0 0 1.8524 1 0.0 0 2.539 1 0.0 0 0.0 0 0.733 8 8.0436 2 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 1.3334 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 179.078
Average program size in population (points): 180.078
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 261.1622451950984
Average age in population: 238.9924596419559
Median age in population: 259.1461596177382
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.553
Error (vector) diversity:			 0.835
Behavioral diversity:				 0.839
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 738759543
--- Timings ---
Current time: 1529615818495 milliseconds
Total Time:         965.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       203.6 seconds, 21.1%
Fitness Testing:    606.9 seconds, 62.9%
Report:             155.0 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 31418.0
Test mean error for best: 15.70900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_pop} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction float_yank} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_flush} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_yank print_integer integer_mult integer_pop print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dup float_inc integer_dec integer_dec integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_rot float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc tagged_884 float_yank float_inc integer_div float_inc float_dup float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc integer_dup integer_dup float_dup integer_max float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_dup integer_shove float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_div float_inc float_dec integer_sub float_inc integer_flush float_inc float_inc float_frominteger float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_yank float_inc float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 12 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult float_inc float_inc float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 6.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 0.0 0 2.0 1 5.0 2]
Total: 531.0
Mean: 10.62
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5235.0390019
Median total errors in population: 994.0
Error averages by case: (257.23698010000004 4.074 234.20060249999995 4.284 202.2830369 13.201 196.71253399999978 4.569 202.21680419999996 5.087 189.38661849999994 4.293 184.3743431 6.096 218.01676099999997 3.768 181.82222869999995 3.885 188.4040962999999 3.939 237.16127869999988 10.399 231.3863928000001 4.932 215.50091370000013 5.079 198.70251310000006 4.592 188.77211999999997 5.792 188.72479039999996 5.919 184.3395265000001 4.945 190.8002084000001 4.691 210.28613660000013 4.985 211.89022349999996 4.868 193.17568350000008 6.357 195.9914872 5.496 194.27154620000016 4.408 212.36055880000018 5.041 191.7506172000001 4.571)
Error minima by case: (5.6617 1 1.7059 1 0.4655 8 0.0 0 0.0 0 0.1476 1 0.0 0 4.539 1 0.0 0 0.0 0 2.6305 8 5.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 5.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.425
Average program size in population (points): 176.425
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 262.4010775024073
Average age in population: 234.1087424738908
Median age in population: 260.3430624217042
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.548
Error (vector) diversity:			 0.821
Behavioral diversity:				 0.827
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 743145543
--- Timings ---
Current time: 1529615824032 milliseconds
Total Time:         971.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       204.6 seconds, 21.1%
Fitness Testing:    610.5 seconds, 62.9%
Report:             155.9 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 31418.0
Test mean error for best: 15.70900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -100.338275572
Correct output: 12.0737210789  | Program output: 83.0737210789 
Correct output: -10.4655066097 | Program output: 22.5344933903 
Correct output: 79.3049767458  | Program output: 78.3049767458 
Correct output: 109.3816555251 | Program output: 115.3816555251
Correct output: 17.1475953645  | Program output: 31.1475953645 
Correct output: 11.1076208156  | Program output: 11.1076208156 
Correct output: 21.5390260682  | Program output: 71.5390260682 
Correct output: 93.7628386321  | Program output: 90.7628386321 
Correct output: 95.2976348595  | Program output: 96.2976348595 
Correct output: -3.08498271    | Program output: 71.91501729   
Correct output: -152.0436144918 | Program output: -92.0436144918
Correct output: 190.0106062966 | Program output: 190.0106062966
Correct output: -54.99029604   | Program output: -54.99029604  
Correct output: 60.5127184446  | Program output: 70.5127184446 
Correct output: 61.1705628788  | Program output: 68.1705628788 
Correct output: -43.2506843864 | Program output: -38.2506843864
Correct output: 71.2733863439  | Program output: 73.2733863439 
Correct output: 136.9572654004 | Program output: 133.9572654004
Correct output: -86.5838714881 | Program output: -48.5838714881
Correct output: 19.4574635021  | Program output: 15.4574635021 
Correct output: 102.3014515582 | Program output: 100.3014515582
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 172.2225097733
Correct output: 92.3146270329  | Program output: 87.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_mult} {:instruction integer_pop} {:instruction print_integer} {:instruction float_pop} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dec} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_add} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction tagged_884} {:instruction float_yank} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup} {:instruction integer_dup} {:instruction float_dup} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dec} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_flush} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_shove} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 12} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult integer_yank print_integer integer_mult integer_pop print_integer float_pop in1 float_dec in1 integer_dec float_inc integer_dec float_inc integer_dup float_inc integer_dec integer_dec integer_mult float_inc float_inc integer_sub float_inc integer_div float_inc integer_dup float_inc integer_add float_inc integer_rot float_inc float_inc float_inc float_inc integer_add integer_div float_inc float_inc integer_div float_inc float_inc float_dup float_inc tagged_884 float_yank float_inc integer_div float_inc float_dup float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc integer_dup integer_dup float_dup integer_max float_inc float_inc integer_div float_inc float_dup_times float_inc integer_div float_inc float_inc float_inc float_dup integer_shove float_inc float_inc float_inc float_inc integer_div float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc integer_div float_inc float_dec integer_sub float_inc integer_flush float_inc float_inc float_frominteger float_shove float_inc float_shove float_inc float_inc float_inc float_inc integer_dec float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc float_inc integer_yank float_inc float_inc float_frominteger float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 12 integer_sub float_inc integer_yankdup 11 integer_sub integer_div float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dec float_yank integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc integer_mult float_inc float_inc float_yank 11 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [90.0 1 71.0 2 33.0 13 1.0 1 6.0 2 14.0 2 0.0 0 50.0 1 3.0 1 1.0 1 75.0 10 60.0 2 0.0 0 0.0 0 10.0 1 7.0 1 5.0 2 2.0 1 3.0 1 38.0 2 4.0 1 2.0 1 0.0 0 2.0 1 5.0 2]
Total: 531.0
Mean: 10.62
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4714.5048922999995
Median total errors in population: 971.0
Error averages by case: (238.25478870000006 3.777 212.78319830000004 3.981 180.21511610000005 13.21 171.65075259999986 4.155 179.2795390999999 4.806 165.40479219999995 4.014 163.23752800000005 5.755 195.9570348999999 3.448 160.03773479999995 3.586 169.94093849999993 3.802 215.8737671 10.426 212.21616230000006 4.66 195.79545040000005 4.854 174.09213170000015 4.179 175.01810880000002 5.568 174.53229479999993 5.725 163.29466989999997 4.622 170.14563660000005 4.395 190.90594980000003 4.763 191.6689163 4.548 169.0852035 6.275 180.6937345000002 5.344 171.35346480000013 4.048 192.7562759000001 4.768 171.19670270000012 4.406)
Error minima by case: (69.3383 1 0.8384 1 3.4655 8 0.0 0 0.0 0 0.2859 1 0.0 0 1.539 1 0.0 0 0.0 0 1.3414 8 31.0436 1 0.0 0 0.0 0 0.0 0 0.0 0 1.7493 1 0.0 0 0.0 0 0.5839 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.766
Average program size in population (points): 178.766
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 263.5824000196523
Average age in population: 238.6444556560176
Median age in population: 261.603992636983
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.561
Error (vector) diversity:			 0.835
Behavioral diversity:				 0.84
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 747589568
--- Timings ---
Current time: 1529615829565 milliseconds
Total Time:         976.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.7 seconds, 21.1%
Fitness Testing:    614.1 seconds, 62.9%
Report:             156.8 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 30951.0
Test mean error for best: 15.47550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -190.338275572 | Program output: -101.338275572
Correct output: 12.0737210789  | Program output: 82.0737210789 
Correct output: -10.4655066097 | Program output: 21.5344933903 
Correct output: 79.3049767458  | Program output: 79.3049767458 
Correct output: 109.3816555251 | Program output: 110.3816555251
Correct output: 17.1475953645  | Program output: 30.1475953645 
Correct output: 11.1076208156  | Program output: 12.1076208156 
Correct output: 21.5390260682  | Program output: 70.5390260682 
Correct output: 93.7628386321  | Program output: 91.7628386321 
Correct output: 95.2976348595  | Program output: 95.2976348595 
Correct output: -3.08498271    | Program output: 70.91501729   
Correct output: -152.0436144918 | Program output: -93.0436144918
Correct output: 190.0106062966 | Program output: 187.0106062966
Correct output: -54.99029604   | Program output: -52.99029604  
Correct output: 60.5127184446  | Program output: 67.5127184446 
Correct output: 61.1705628788  | Program output: 65.1705628788 
Correct output: -43.2506843864 | Program output: -39.2506843864
Correct output: 71.2733863439  | Program output: 68.2733863439 
Correct output: 136.9572654004 | Program output: 130.9572654004
Correct output: -86.5838714881 | Program output: -49.5838714881
Correct output: 19.4574635021  | Program output: 10.4574635021 
Correct output: 102.3014515582 | Program output: 97.3014515582 
Correct output: 82.9352078558  | Program output: 82.9352078558 
Correct output: 170.2225097733 | Program output: 169.2225097733
Correct output: 92.3146270329  | Program output: 86.3146270329 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_inc} {:instruction print_integer} {:instruction integer_dup_items} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction float_rot} {:instruction float_inc} {:instruction integer_mod} {:instruction integer_mult} {:instruction print_integer} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction print_integer} {:instruction print_integer} {:instruction float_pop} {:instruction in2} {:instruction float_dec} {:instruction in1} {:instruction in1} {:instruction float_dec} {:instruction in1} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_div} {:instruction integer_div} {:instruction float_inc} {:instruction integer_add} {:instruction integer_pop} {:instruction float_yank} {:instruction integer_min} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -44} {:instruction integer_min} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_899} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction integer_pop} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction float_shove} {:instruction integer_div} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_pop} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -99} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction 11} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_yankdup} {:instruction 10} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_max} {:instruction integer_yankdup} {:instruction 11} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dec} {:instruction integer_div} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_yank} {:instruction integer_pop} {:instruction 11} {:instruction float_inc} {:instruction integer_inc} {:instruction 11} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_dec} {:instruction float_yank} {:instruction 10} {:instruction float_inc} {:instruction integer_dec} {:instruction in2} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_yank} {:instruction print_float})
Best program: (integer_mult float_inc print_integer integer_dup_items in1 float_dec in1 float_rot float_inc integer_mod integer_mult print_integer float_stackdepth integer_flush print_integer print_integer float_pop in2 float_dec in1 in1 float_dec in1 integer_dec float_inc integer_div integer_div float_inc integer_add integer_pop float_yank integer_min integer_sub float_inc integer_min integer_div float_inc float_inc integer_div float_inc float_inc float_inc -44 integer_min integer_dec float_inc float_inc tagged_899 float_inc float_inc float_inc float_inc float_yankdup integer_div float_inc integer_dup_times integer_div float_inc integer_yank float_inc integer_mod float_inc float_inc integer_div float_inc float_dup integer_div float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc float_inc float_dup float_inc float_inc float_inc float_inc float_inc integer_add integer_pop float_inc float_dup float_inc float_inc float_inc float_inc 1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_dup float_shove integer_div integer_dup float_inc float_inc float_inc float_inc float_inc integer_mod float_inc float_inc integer_div float_inc float_inc float_inc integer_div integer_pop float_inc float_inc float_inc float_inc float_inc float_inc float_shove float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc -99 float_inc integer_div float_inc integer_yankdup 11 integer_sub float_dec integer_yankdup 10 integer_sub integer_dec float_inc float_inc integer_max float_inc float_inc integer_dec integer_max integer_yankdup 11 float_inc integer_dec in2 float_inc integer_sub integer_dec integer_div float_inc integer_mult integer_dup integer_dup integer_dec float_yank integer_pop 11 float_inc integer_inc 11 float_inc float_inc float_inc in2 float_inc float_inc float_inc integer_mult integer_div integer_dec float_yank 10 float_inc integer_dec in2 float_inc integer_sub float_inc float_inc float_inc float_yank print_float)
Errors: [89.0 2 70.0 1 32.0 12 0.0 0 1.0 2 13.0 2 1.0 1 49.0 2 2.0 1 0.0 0 74.0 10 59.0 3 3.0 2 2.0 1 7.0 1 4.0 1 4.0 2 3.0 2 6.0 1 37.0 2 9.0 1 5.0 3 0.0 0 1.0 2 6.0 2]
Total: 533.0
Mean: 10.66
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4894.935101099999
Median total errors in population: 955.0
Error averages by case: (246.54805340000001 3.937 219.51721290000003 4.225 186.86920579999997 13.19 181.20801799999984 4.484 187.49339289999998 4.993 173.64272259999993 4.275 171.9596346 5.904 202.3008953 3.666 166.38140589999995 3.882 175.78023990000005 3.926 221.44242819999994 10.393 221.0528049 4.856 204.1409252000001 5.114 180.3754634000001 4.307 179.4478192 5.7 178.4389781 5.883 172.60084450000002 4.699 176.20291800000012 4.612 197.1691711 4.979 201.1900158 4.703 176.73247290000012 6.119 185.4793721000001 5.565 179.13696600000023 4.263 199.6454515000002 5.014 176.88268890000006 4.607)
Error minima by case: (9.3383 1 0.0839 1 8.4655 8 0.0 0 0.0 0 0.9549 1 0.0 0 0.3311 1 0.0 0 0.0 0 1.085 8 3.9564 1 0.0 0 0.0 0 0.0 0 0.0 0 1.9621 1 0.0 0 0.0 0 6.4161 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 175.947
Average program size in population (points): 176.947
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 264.9848848972997
Average age in population: 236.1353318551575
Median age in population: 262.8926985816214
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.544
Error (vector) diversity:			 0.839
Behavioral diversity:				 0.844
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 751988784
--- Timings ---
Current time: 1529615835016 milliseconds
Total Time:         982.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.7 seconds, 21.0%
Fitness Testing:    617.6 seconds, 62.9%
Report:             157.7 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
