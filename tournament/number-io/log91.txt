Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-93.74793723128016 97] 3.2520627687198385]
Train Case:   1 | Input/Output: [[78.56155115900879 94] 172.5615511590088]
Train Case:   2 | Input/Output: [[-25.560885597010625 39] 13.439114402989375]
Train Case:   3 | Input/Output: [[-84.79091930354647 -69] -153.79091930354647]
Train Case:   4 | Input/Output: [[-64.50267432916314 -38] -102.50267432916314]
Train Case:   5 | Input/Output: [[41.08590825462704 100] 141.08590825462704]
Train Case:   6 | Input/Output: [[91.24827076720157 81] 172.24827076720157]
Train Case:   7 | Input/Output: [[-99.62544199821164 21] -78.62544199821164]
Train Case:   8 | Input/Output: [[-4.870491480646464 4] -0.8704914806464643]
Train Case:   9 | Input/Output: [[-99.19014767194395 -6] -105.19014767194395]
Train Case:  10 | Input/Output: [[8.319296994086073 -20] -11.680703005913927]
Train Case:  11 | Input/Output: [[-44.77524799307646 31] -13.775247993076462]
Train Case:  12 | Input/Output: [[1.683804723091626 24] 25.683804723091626]
Train Case:  13 | Input/Output: [[32.437306751704654 -87] -54.562693248295346]
Train Case:  14 | Input/Output: [[1.106496165384499 65] 66.1064961653845]
Train Case:  15 | Input/Output: [[-14.223308763390222 -96] -110.22330876339022]
Train Case:  16 | Input/Output: [[94.90887549337702 -19] 75.90887549337702]
Train Case:  17 | Input/Output: [[48.00448166780558 14] 62.00448166780558]
Train Case:  18 | Input/Output: [[65.93306189830278 87] 152.93306189830278]
Train Case:  19 | Input/Output: [[-30.70651156295945 -60] -90.70651156295945]
Train Case:  20 | Input/Output: [[62.358037203832424 2] 64.35803720383242]
Train Case:  21 | Input/Output: [[41.44185892731866 -24] 17.441858927318663]
Train Case:  22 | Input/Output: [[-17.890063605821922 41] 23.109936394178078]
Train Case:  23 | Input/Output: [[54.98944731850335 87] 141.98944731850335]
Train Case:  24 | Input/Output: [[-35.191015456152115 51] 15.808984543847885]
Test Case:   0 | Input/Output: [[-37.43572262254773 -63] -100.43572262254773]
Test Case:   1 | Input/Output: [[16.628426100221546 89] 105.62842610022155]
Test Case:   2 | Input/Output: [[21.37704754298953 73] 94.37704754298953]
Test Case:   3 | Input/Output: [[10.551978792653443 44] 54.55197879265344]
Test Case:   4 | Input/Output: [[-50.62205427186475 87] 36.37794572813525]
Test Case:   5 | Input/Output: [[-73.49065706206602 -42] -115.49065706206602]
Test Case:   6 | Input/Output: [[73.43961255495589 -61] 12.439612554955886]
Test Case:   7 | Input/Output: [[-70.88427003025126 -65] -135.88427003025126]
Test Case:   8 | Input/Output: [[19.98079156498119 91] 110.98079156498119]
Test Case:   9 | Input/Output: [[65.45529948885593 59] 124.45529948885593]
Test Case:  10 | Input/Output: [[91.07370061975183 -67] 24.073700619751833]
Test Case:  11 | Input/Output: [[42.545830671936216 33] 75.54583067193622]
Test Case:  12 | Input/Output: [[24.051269874091076 -69] -44.948730125908924]
Test Case:  13 | Input/Output: [[18.13788160188051 15] 33.13788160188051]
Test Case:  14 | Input/Output: [[-99.85263944285778 -20] -119.85263944285778]
Test Case:  15 | Input/Output: [[80.95398482260069 84] 164.9539848226007]
Test Case:  16 | Input/Output: [[58.699733234307786 67] 125.69973323430779]
Test Case:  17 | Input/Output: [[-9.486430896761306 -53] -62.486430896761306]
Test Case:  18 | Input/Output: [[56.61886341094856 -34] 22.618863410948563]
Test Case:  19 | Input/Output: [[96.15168525436462 13] 109.15168525436462]
Test Case:  20 | Input/Output: [[-86.84856998537373 5] -81.84856998537373]
Test Case:  21 | Input/Output: [[-58.2187042633701 96] 37.7812957366299]
Test Case:  22 | Input/Output: [[-60.18667764622647 55] -5.186677646226471]
Test Case:  23 | Input/Output: [[-72.1380881260254 -94] -166.1380881260254]
Test Case:  24 | Input/Output: [[20.333676403222995 40] 60.333676403222995]
Test Case:  25 | Input/Output: [[84.01833584736801 65] 149.018335847368]
Test Case:  26 | Input/Output: [[-88.15178483455071 -29] -117.15178483455071]
Test Case:  27 | Input/Output: [[-93.00143738374942 -58] -151.00143738374942]
Test Case:  28 | Input/Output: [[60.00772394421125 64] 124.00772394421125]
Test Case:  29 | Input/Output: [[-5.7019536356276035 14] 8.298046364372397]
Test Case:  30 | Input/Output: [[22.805095196603247 -80] -57.19490480339675]
Test Case:  31 | Input/Output: [[18.65640896827601 91] 109.65640896827601]
Test Case:  32 | Input/Output: [[-42.161362098724744 -90] -132.16136209872474]
Test Case:  33 | Input/Output: [[-31.50139668161394 48] 16.49860331838606]
Test Case:  34 | Input/Output: [[89.45041419633472 -13] 76.45041419633472]
Test Case:  35 | Input/Output: [[11.5764276364865 -8] 3.5764276364864998]
Test Case:  36 | Input/Output: [[-74.15009503151984 -75] -149.15009503151984]
Test Case:  37 | Input/Output: [[2.170897382113708 57] 59.17089738211371]
Test Case:  38 | Input/Output: [[-65.14808089088964 -17] -82.14808089088964]
Test Case:  39 | Input/Output: [[79.94744193020807 -35] 44.94744193020807]
Test Case:  40 | Input/Output: [[-96.01696853702468 96] -0.01696853702468104]
Test Case:  41 | Input/Output: [[-34.976076529205514 40] 5.023923470794486]
Test Case:  42 | Input/Output: [[99.1364980092361 68] 167.1364980092361]
Test Case:  43 | Input/Output: [[-87.46465053287386 49] -38.46465053287386]
Test Case:  44 | Input/Output: [[-71.94978089054949 -4] -75.94978089054949]
Test Case:  45 | Input/Output: [[-79.38761682961848 5] -74.38761682961848]
Test Case:  46 | Input/Output: [[-82.35285066322014 100] 17.64714933677986]
Test Case:  47 | Input/Output: [[-89.0148295535912 29] -60.0148295535912]
Test Case:  48 | Input/Output: [[-55.5027597367737 -25] -80.5027597367737]
Test Case:  49 | Input/Output: [[-44.112399634398635 34] -10.112399634398635]
Test Case:  50 | Input/Output: [[70.04681749891998 20] 90.04681749891998]
Test Case:  51 | Input/Output: [[-49.5287110378273 -23] -72.52871103782729]
Test Case:  52 | Input/Output: [[14.655618258556387 99] 113.65561825855639]
Test Case:  53 | Input/Output: [[-83.89778749153191 -1] -84.89778749153191]
Test Case:  54 | Input/Output: [[-51.74220598671282 -30] -81.74220598671282]
Test Case:  55 | Input/Output: [[26.33637917865572 -16] 10.336379178655719]
Test Case:  56 | Input/Output: [[-93.33024120307793 13] -80.33024120307793]
Test Case:  57 | Input/Output: [[56.618484453363436 -18] 38.618484453363436]
Test Case:  58 | Input/Output: [[-86.15194817908977 77] -9.151948179089771]
Test Case:  59 | Input/Output: [[-11.81490950448729 -32] -43.81490950448729]
Test Case:  60 | Input/Output: [[37.7407215746631 -12] 25.740721574663098]
Test Case:  61 | Input/Output: [[44.33348754571688 -74] -29.666512454283122]
Test Case:  62 | Input/Output: [[-36.016791565865034 85] 48.983208434134966]
Test Case:  63 | Input/Output: [[92.01869132964825 -55] 37.01869132964825]
Test Case:  64 | Input/Output: [[93.66260465328912 -7] 86.66260465328912]
Test Case:  65 | Input/Output: [[32.300490089823 -20] 12.300490089823]
Test Case:  66 | Input/Output: [[-97.63494134287916 36] -61.63494134287916]
Test Case:  67 | Input/Output: [[-27.647048126220056 -91] -118.64704812622006]
Test Case:  68 | Input/Output: [[-20.12369710217348 64] 43.87630289782652]
Test Case:  69 | Input/Output: [[-0.39018858494104336 34] 33.60981141505896]
Test Case:  70 | Input/Output: [[35.550166870891985 -81] -45.449833129108015]
Test Case:  71 | Input/Output: [[43.92349301149153 16] 59.92349301149153]
Test Case:  72 | Input/Output: [[94.08591593335373 -98] -3.914084066646268]
Test Case:  73 | Input/Output: [[-86.0445014909629 -82] -168.0445014909629]
Test Case:  74 | Input/Output: [[85.20591518837895 -19] 66.20591518837895]
Test Case:  75 | Input/Output: [[-18.61511227264245 71] 52.38488772735755]
Test Case:  76 | Input/Output: [[-60.49340913032195 -7] -67.49340913032195]
Test Case:  77 | Input/Output: [[-45.41460394205878 47] 1.5853960579412174]
Test Case:  78 | Input/Output: [[-20.100118959683115 -41] -61.100118959683115]
Test Case:  79 | Input/Output: [[-98.15555672960762 -41] -139.1555567296076]
Test Case:  80 | Input/Output: [[78.30246767926096 -43] 35.30246767926096]
Test Case:  81 | Input/Output: [[41.207845597668324 39] 80.20784559766832]
Test Case:  82 | Input/Output: [[-7.536500964713412 -46] -53.53650096471341]
Test Case:  83 | Input/Output: [[23.076985364735265 -73] -49.923014635264735]
Test Case:  84 | Input/Output: [[-86.03168922584233 93] 6.968310774157672]
Test Case:  85 | Input/Output: [[-77.24575714964723 64] -13.245757149647233]
Test Case:  86 | Input/Output: [[-98.45643136599733 -55] -153.45643136599733]
Test Case:  87 | Input/Output: [[-24.96781215494947 -27] -51.96781215494947]
Test Case:  88 | Input/Output: [[22.917743421654208 -92] -69.08225657834579]
Test Case:  89 | Input/Output: [[33.74084398010689 -96] -62.25915601989311]
Test Case:  90 | Input/Output: [[-23.298081151044542 -32] -55.29808115104454]
Test Case:  91 | Input/Output: [[-49.86994714000383 -49] -98.86994714000383]
Test Case:  92 | Input/Output: [[29.63250865906707 -67] -37.36749134093293]
Test Case:  93 | Input/Output: [[-35.11866095274168 14] -21.118660952741678]
Test Case:  94 | Input/Output: [[-7.612265061498235 -21] -28.612265061498235]
Test Case:  95 | Input/Output: [[-98.10361000557054 11] -87.10361000557054]
Test Case:  96 | Input/Output: [[-66.54612852380595 26] -40.54612852380595]
Test Case:  97 | Input/Output: [[16.62325902300101 -33] -16.37674097699899]
Test Case:  98 | Input/Output: [[3.045508102052267 -59] -55.95449189794773]
Test Case:  99 | Input/Output: [[-34.44294052860421 53] 18.55705947139579]
Test Case: 100 | Input/Output: [[-70.27946688914602 -67] -137.27946688914602]
Test Case: 101 | Input/Output: [[14.179522635476374 52] 66.17952263547637]
Test Case: 102 | Input/Output: [[-89.5769042677929 43] -46.5769042677929]
Test Case: 103 | Input/Output: [[22.269879756882858 67] 89.26987975688286]
Test Case: 104 | Input/Output: [[5.84525486919722 -49] -43.15474513080278]
Test Case: 105 | Input/Output: [[-81.043108603979 16] -65.043108603979]
Test Case: 106 | Input/Output: [[-30.053023623920822 49] 18.946976376079178]
Test Case: 107 | Input/Output: [[-47.63377910932272 -61] -108.63377910932272]
Test Case: 108 | Input/Output: [[-12.373308654343006 84] 71.626691345657]
Test Case: 109 | Input/Output: [[-82.97262161937982 -79] -161.97262161937982]
Test Case: 110 | Input/Output: [[-75.28641673697676 82] 6.713583263023239]
Test Case: 111 | Input/Output: [[62.70453804233222 23] 85.70453804233222]
Test Case: 112 | Input/Output: [[16.8964449620359 76] 92.8964449620359]
Test Case: 113 | Input/Output: [[-51.270510704260474 -20] -71.27051070426047]
Test Case: 114 | Input/Output: [[-31.477797000524376 -38] -69.47779700052438]
Test Case: 115 | Input/Output: [[5.317905459456426 16] 21.317905459456426]
Test Case: 116 | Input/Output: [[33.22443442753183 2] 35.22443442753183]
Test Case: 117 | Input/Output: [[-37.79392134489665 -63] -100.79392134489666]
Test Case: 118 | Input/Output: [[-18.85506846696039 7] -11.85506846696039]
Test Case: 119 | Input/Output: [[68.3007359559692 -72] -3.699264044030798]
Test Case: 120 | Input/Output: [[-9.101929517802205 -96] -105.1019295178022]
Test Case: 121 | Input/Output: [[59.77074523627584 55] 114.77074523627584]
Test Case: 122 | Input/Output: [[-38.65668750161648 -23] -61.65668750161648]
Test Case: 123 | Input/Output: [[-78.75340025642778 -58] -136.75340025642777]
Test Case: 124 | Input/Output: [[-99.71805822303443 40] -59.71805822303443]
Test Case: 125 | Input/Output: [[-60.003368790045286 58] -2.003368790045286]
Test Case: 126 | Input/Output: [[-96.74085690694379 -8] -104.74085690694379]
Test Case: 127 | Input/Output: [[41.77649831809015 45] 86.77649831809015]
Test Case: 128 | Input/Output: [[92.26751878624495 28] 120.26751878624495]
Test Case: 129 | Input/Output: [[-2.9603895928063366 62] 59.03961040719366]
Test Case: 130 | Input/Output: [[56.72373774682384 55] 111.72373774682384]
Test Case: 131 | Input/Output: [[-80.94376138678521 -77] -157.9437613867852]
Test Case: 132 | Input/Output: [[-30.780167137233747 -34] -64.78016713723375]
Test Case: 133 | Input/Output: [[18.085880244293833 -10] 8.085880244293833]
Test Case: 134 | Input/Output: [[-3.05142900427073 -62] -65.05142900427073]
Test Case: 135 | Input/Output: [[-34.53792393308805 -53] -87.53792393308805]
Test Case: 136 | Input/Output: [[-3.547618459404717 11] 7.452381540595283]
Test Case: 137 | Input/Output: [[27.653589065094963 32] 59.65358906509496]
Test Case: 138 | Input/Output: [[-20.126284627534403 -25] -45.1262846275344]
Test Case: 139 | Input/Output: [[13.477398442638517 -97] -83.52260155736148]
Test Case: 140 | Input/Output: [[82.05998124373991 50] 132.0599812437399]
Test Case: 141 | Input/Output: [[-23.32936721123302 -15] -38.32936721123302]
Test Case: 142 | Input/Output: [[74.11535537056355 -56] 18.11535537056355]
Test Case: 143 | Input/Output: [[-29.225574472286482 92] 62.77442552771352]
Test Case: 144 | Input/Output: [[74.63465014675793 27] 101.63465014675793]
Test Case: 145 | Input/Output: [[-99.44971149855913 6] -93.44971149855913]
Test Case: 146 | Input/Output: [[92.26049090247318 -61] 31.26049090247318]
Test Case: 147 | Input/Output: [[-47.059552407104775 47] -0.05955240710477483]
Test Case: 148 | Input/Output: [[-2.507553431566663 -16] -18.507553431566663]
Test Case: 149 | Input/Output: [[-95.44569975996183 87] -8.445699759961826]
Test Case: 150 | Input/Output: [[16.76644336593816 -6] 10.766443365938159]
Test Case: 151 | Input/Output: [[-56.46667662893894 -97] -153.46667662893896]
Test Case: 152 | Input/Output: [[56.33479991294848 6] 62.33479991294848]
Test Case: 153 | Input/Output: [[-46.38257308519018 -14] -60.38257308519018]
Test Case: 154 | Input/Output: [[-84.54510093035563 -38] -122.54510093035563]
Test Case: 155 | Input/Output: [[98.70093213239451 -46] 52.70093213239451]
Test Case: 156 | Input/Output: [[-78.79689253915356 -3] -81.79689253915356]
Test Case: 157 | Input/Output: [[40.48841817043197 94] 134.48841817043197]
Test Case: 158 | Input/Output: [[-9.537389493190872 -37] -46.53738949319087]
Test Case: 159 | Input/Output: [[31.99622456826816 66] 97.99622456826816]
Test Case: 160 | Input/Output: [[-97.74781051260621 79] -18.747810512606208]
Test Case: 161 | Input/Output: [[3.180352655677396 58] 61.180352655677396]
Test Case: 162 | Input/Output: [[-46.92637585678514 -23] -69.92637585678514]
Test Case: 163 | Input/Output: [[-24.31736760131797 -37] -61.31736760131797]
Test Case: 164 | Input/Output: [[-40.91848766881261 -39] -79.91848766881262]
Test Case: 165 | Input/Output: [[-12.402649089420436 -71] -83.40264908942044]
Test Case: 166 | Input/Output: [[89.37270433747227 -80] 9.372704337472271]
Test Case: 167 | Input/Output: [[40.195040021143285 -71] -30.804959978856715]
Test Case: 168 | Input/Output: [[-40.218335026852394 13] -27.218335026852394]
Test Case: 169 | Input/Output: [[42.164534475152436 71] 113.16453447515244]
Test Case: 170 | Input/Output: [[-73.50663117668815 -14] -87.50663117668815]
Test Case: 171 | Input/Output: [[-89.18561672148041 12] -77.18561672148041]
Test Case: 172 | Input/Output: [[-60.094614232455946 65] 4.905385767544054]
Test Case: 173 | Input/Output: [[-23.379081682347675 76] 52.620918317652325]
Test Case: 174 | Input/Output: [[95.77733341796687 81] 176.77733341796687]
Test Case: 175 | Input/Output: [[96.73863367986587 -93] 3.7386336798658704]
Test Case: 176 | Input/Output: [[2.7397267488448875 -18] -15.260273251155112]
Test Case: 177 | Input/Output: [[-41.91229459010035 51] 9.087705409899648]
Test Case: 178 | Input/Output: [[-43.55938863015363 -43] -86.55938863015362]
Test Case: 179 | Input/Output: [[-75.33056377844343 80] 4.669436221556566]
Test Case: 180 | Input/Output: [[-42.32056192828122 -52] -94.32056192828122]
Test Case: 181 | Input/Output: [[9.85468478565248 26] 35.85468478565248]
Test Case: 182 | Input/Output: [[-10.783109988754205 11] 0.21689001124579477]
Test Case: 183 | Input/Output: [[-13.771624901217464 -92] -105.77162490121746]
Test Case: 184 | Input/Output: [[66.36787490008729 100] 166.3678749000873]
Test Case: 185 | Input/Output: [[-24.203480532267577 -87] -111.20348053226758]
Test Case: 186 | Input/Output: [[5.83414304978605 90] 95.83414304978605]
Test Case: 187 | Input/Output: [[-21.428597563047845 81] 59.571402436952155]
Test Case: 188 | Input/Output: [[-21.068819930057884 97] 75.93118006994212]
Test Case: 189 | Input/Output: [[-96.99826085526617 29] -67.99826085526617]
Test Case: 190 | Input/Output: [[-44.85897034794122 39] -5.8589703479412165]
Test Case: 191 | Input/Output: [[55.310267411626626 27] 82.31026741162663]
Test Case: 192 | Input/Output: [[17.543194656401354 -80] -62.456805343598646]
Test Case: 193 | Input/Output: [[24.964728128269712 -65] -40.03527187173029]
Test Case: 194 | Input/Output: [[-80.51566009594563 -55] -135.51566009594563]
Test Case: 195 | Input/Output: [[65.74417227184205 67] 132.74417227184205]
Test Case: 196 | Input/Output: [[48.32253450872858 -49] -0.6774654912714198]
Test Case: 197 | Input/Output: [[-71.99450234465792 -99] -170.99450234465792]
Test Case: 198 | Input/Output: [[19.35987035215456 -91] -71.64012964784544]
Test Case: 199 | Input/Output: [[45.037344936156416 62] 107.03734493615642]
Test Case: 200 | Input/Output: [[45.48070582598248 -90] -44.51929417401752]
Test Case: 201 | Input/Output: [[53.21650384183633 63] 116.21650384183633]
Test Case: 202 | Input/Output: [[79.03969774619651 23] 102.03969774619651]
Test Case: 203 | Input/Output: [[-50.77961940529845 57] 6.2203805947015525]
Test Case: 204 | Input/Output: [[36.86138634519091 -53] -16.13861365480909]
Test Case: 205 | Input/Output: [[-14.199845040912635 -85] -99.19984504091263]
Test Case: 206 | Input/Output: [[-81.71257365636562 -64] -145.71257365636563]
Test Case: 207 | Input/Output: [[-5.87695543012255 -39] -44.87695543012255]
Test Case: 208 | Input/Output: [[-60.3067649382498 -61] -121.3067649382498]
Test Case: 209 | Input/Output: [[-34.976938806237 8] -26.976938806237]
Test Case: 210 | Input/Output: [[-94.86556509230863 -32] -126.86556509230863]
Test Case: 211 | Input/Output: [[6.314736872114565 -4] 2.3147368721145654]
Test Case: 212 | Input/Output: [[42.579329732969995 16] 58.579329732969995]
Test Case: 213 | Input/Output: [[-0.6592467677471348 85] 84.34075323225287]
Test Case: 214 | Input/Output: [[-31.734326980410074 -69] -100.73432698041007]
Test Case: 215 | Input/Output: [[77.65585028562467 32] 109.65585028562467]
Test Case: 216 | Input/Output: [[48.2427485901822 -30] 18.242748590182202]
Test Case: 217 | Input/Output: [[30.569429176140346 25] 55.569429176140346]
Test Case: 218 | Input/Output: [[24.11299190894347 -42] -17.88700809105653]
Test Case: 219 | Input/Output: [[59.99064669011821 -15] 44.99064669011821]
Test Case: 220 | Input/Output: [[50.3305893349841 -5] 45.3305893349841]
Test Case: 221 | Input/Output: [[-92.90051825144336 60] -32.90051825144336]
Test Case: 222 | Input/Output: [[-4.69182260735343 7] 2.30817739264657]
Test Case: 223 | Input/Output: [[-30.319978110190533 -59] -89.31997811019053]
Test Case: 224 | Input/Output: [[61.48082980321729 47] 108.48082980321729]
Test Case: 225 | Input/Output: [[-5.288208399061261 -45] -50.28820839906126]
Test Case: 226 | Input/Output: [[-0.4364407791814955 4] 3.5635592208185045]
Test Case: 227 | Input/Output: [[73.67866456282604 7] 80.67866456282604]
Test Case: 228 | Input/Output: [[-31.960843348308117 -22] -53.96084334830812]
Test Case: 229 | Input/Output: [[-86.11552236984235 6] -80.11552236984235]
Test Case: 230 | Input/Output: [[36.24419694037573 -39] -2.75580305962427]
Test Case: 231 | Input/Output: [[12.615953970018651 -87] -74.38404602998135]
Test Case: 232 | Input/Output: [[51.37605260635604 -89] -37.62394739364396]
Test Case: 233 | Input/Output: [[-93.77294073563496 -13] -106.77294073563496]
Test Case: 234 | Input/Output: [[70.42559203812885 -28] 42.425592038128855]
Test Case: 235 | Input/Output: [[-77.86973511420044 88] 10.130264885799562]
Test Case: 236 | Input/Output: [[-44.418221232072995 81] 36.581778767927005]
Test Case: 237 | Input/Output: [[-48.12208086404004 48] -0.12208086404004348]
Test Case: 238 | Input/Output: [[-55.85970910437581 97] 41.14029089562419]
Test Case: 239 | Input/Output: [[-64.87340446974466 39] -25.873404469744656]
Test Case: 240 | Input/Output: [[53.19754225958272 -94] -40.80245774041728]
Test Case: 241 | Input/Output: [[70.66074905075354 49] 119.66074905075354]
Test Case: 242 | Input/Output: [[93.90866558568922 8] 101.90866558568922]
Test Case: 243 | Input/Output: [[-9.75451830787091 78] 68.24548169212909]
Test Case: 244 | Input/Output: [[15.899809479407253 -74] -58.10019052059275]
Test Case: 245 | Input/Output: [[55.07503422434479 11] 66.07503422434479]
Test Case: 246 | Input/Output: [[68.52014416940065 -54] 14.520144169400652]
Test Case: 247 | Input/Output: [[12.686137984514673 46] 58.68613798451467]
Test Case: 248 | Input/Output: [[-78.76132038800134 -33] -111.76132038800134]
Test Case: 249 | Input/Output: [[12.383903099638019 -87] -74.61609690036198]
Test Case: 250 | Input/Output: [[5.732423966340178 -11] -5.267576033659822]
Test Case: 251 | Input/Output: [[-26.017372905643896 60] 33.982627094356104]
Test Case: 252 | Input/Output: [[-29.63596442651695 -36] -65.63596442651695]
Test Case: 253 | Input/Output: [[98.99404442506167 15] 113.99404442506167]
Test Case: 254 | Input/Output: [[76.63601178851846 20] 96.63601178851846]
Test Case: 255 | Input/Output: [[-26.54198747485887 -40] -66.54198747485887]
Test Case: 256 | Input/Output: [[27.658085773594166 77] 104.65808577359417]
Test Case: 257 | Input/Output: [[-15.297893473959448 -39] -54.29789347395945]
Test Case: 258 | Input/Output: [[27.597774042606858 22] 49.59777404260686]
Test Case: 259 | Input/Output: [[74.78465879502406 97] 171.78465879502406]
Test Case: 260 | Input/Output: [[98.31761557771603 35] 133.31761557771603]
Test Case: 261 | Input/Output: [[22.53968669601494 84] 106.53968669601494]
Test Case: 262 | Input/Output: [[57.672205651647204 -12] 45.672205651647204]
Test Case: 263 | Input/Output: [[71.28707891414027 67] 138.28707891414027]
Test Case: 264 | Input/Output: [[20.199828801970128 -18] 2.1998288019701278]
Test Case: 265 | Input/Output: [[-51.70790456307013 31] -20.70790456307013]
Test Case: 266 | Input/Output: [[-90.77053920053152 73] -17.770539200531516]
Test Case: 267 | Input/Output: [[-30.50135343328813 -22] -52.50135343328813]
Test Case: 268 | Input/Output: [[80.89108976365546 97] 177.89108976365546]
Test Case: 269 | Input/Output: [[99.85446183188728 -69] 30.854461831887278]
Test Case: 270 | Input/Output: [[-69.73311279297184 -33] -102.73311279297184]
Test Case: 271 | Input/Output: [[-26.571168830993287 49] 22.428831169006713]
Test Case: 272 | Input/Output: [[-79.02688729993532 -82] -161.0268872999353]
Test Case: 273 | Input/Output: [[-79.5377510142288 -78] -157.5377510142288]
Test Case: 274 | Input/Output: [[33.69412293606811 57] 90.69412293606811]
Test Case: 275 | Input/Output: [[-23.947346936848717 51] 27.052653063151283]
Test Case: 276 | Input/Output: [[33.97458566040129 53] 86.97458566040129]
Test Case: 277 | Input/Output: [[14.862240820153971 -52] -37.13775917984603]
Test Case: 278 | Input/Output: [[14.095045821111142 -64] -49.90495417888886]
Test Case: 279 | Input/Output: [[73.36973955222342 -68] 5.369739552223422]
Test Case: 280 | Input/Output: [[-30.620445428234873 21] -9.620445428234873]
Test Case: 281 | Input/Output: [[56.27818254044513 -43] 13.27818254044513]
Test Case: 282 | Input/Output: [[55.22057666012762 -70] -14.77942333987238]
Test Case: 283 | Input/Output: [[46.23104633883145 39] 85.23104633883145]
Test Case: 284 | Input/Output: [[44.552902875730496 60] 104.5529028757305]
Test Case: 285 | Input/Output: [[45.015789208534386 1] 46.015789208534386]
Test Case: 286 | Input/Output: [[-27.137122115365656 -89] -116.13712211536566]
Test Case: 287 | Input/Output: [[-40.55355725339294 -14] -54.55355725339294]
Test Case: 288 | Input/Output: [[-78.2713184478225 -63] -141.2713184478225]
Test Case: 289 | Input/Output: [[-44.25392527123337 -39] -83.25392527123337]
Test Case: 290 | Input/Output: [[-87.78316850642425 78] -9.783168506424246]
Test Case: 291 | Input/Output: [[-79.43897619234349 3] -76.43897619234349]
Test Case: 292 | Input/Output: [[43.65483893849472 85] 128.65483893849472]
Test Case: 293 | Input/Output: [[71.57172965179188 -85] -13.428270348208116]
Test Case: 294 | Input/Output: [[-23.472035494835737 -94] -117.47203549483574]
Test Case: 295 | Input/Output: [[-65.28967627482137 -52] -117.28967627482137]
Test Case: 296 | Input/Output: [[-0.00451137078107422 -8] -8.004511370781074]
Test Case: 297 | Input/Output: [[-96.65113054158559 -78] -174.6511305415856]
Test Case: 298 | Input/Output: [[-22.02171003604299 31] 8.97828996395701]
Test Case: 299 | Input/Output: [[42.48185779087555 -48] -5.5181422091244485]
Test Case: 300 | Input/Output: [[-50.39281489414507 -35] -85.39281489414506]
Test Case: 301 | Input/Output: [[-82.24227242154649 26] -56.24227242154649]
Test Case: 302 | Input/Output: [[5.7513545406616515 34] 39.75135454066165]
Test Case: 303 | Input/Output: [[-94.42391650426447 -74] -168.42391650426447]
Test Case: 304 | Input/Output: [[-99.86170023377802 8] -91.86170023377802]
Test Case: 305 | Input/Output: [[-41.94777277948339 -59] -100.94777277948339]
Test Case: 306 | Input/Output: [[-24.678366477219484 -84] -108.67836647721948]
Test Case: 307 | Input/Output: [[-3.5960454949421177 33] 29.403954505057882]
Test Case: 308 | Input/Output: [[-40.36121204973904 -31] -71.36121204973904]
Test Case: 309 | Input/Output: [[30.46535448427494 -88] -57.53464551572506]
Test Case: 310 | Input/Output: [[-25.199747394675526 22] -3.1997473946755264]
Test Case: 311 | Input/Output: [[99.05182984340001 -13] 86.05182984340001]
Test Case: 312 | Input/Output: [[-96.97819609903344 35] -61.97819609903344]
Test Case: 313 | Input/Output: [[40.516126298647265 -63] -22.483873701352735]
Test Case: 314 | Input/Output: [[32.24954839582196 94] 126.24954839582196]
Test Case: 315 | Input/Output: [[-95.6741257599133 74] -21.674125759913295]
Test Case: 316 | Input/Output: [[77.77447910032043 -59] 18.774479100320434]
Test Case: 317 | Input/Output: [[91.32245706091476 19] 110.32245706091476]
Test Case: 318 | Input/Output: [[-14.906759528238084 39] 24.093240471761916]
Test Case: 319 | Input/Output: [[49.02405397234273 -33] 16.024053972342728]
Test Case: 320 | Input/Output: [[-62.93018265933996 -81] -143.93018265933995]
Test Case: 321 | Input/Output: [[-32.16532725281735 -28] -60.16532725281735]
Test Case: 322 | Input/Output: [[69.86002535411711 -51] 18.860025354117113]
Test Case: 323 | Input/Output: [[-73.45104626628229 -49] -122.45104626628229]
Test Case: 324 | Input/Output: [[35.89705648501396 -78] -42.10294351498604]
Test Case: 325 | Input/Output: [[-3.884091320208441 -12] -15.88409132020844]
Test Case: 326 | Input/Output: [[82.42065987038634 -13] 69.42065987038634]
Test Case: 327 | Input/Output: [[96.86035982484071 45] 141.8603598248407]
Test Case: 328 | Input/Output: [[-10.934313263398423 -33] -43.93431326339842]
Test Case: 329 | Input/Output: [[-16.096584785010364 56] 39.903415214989636]
Test Case: 330 | Input/Output: [[51.70104372167725 -4] 47.70104372167725]
Test Case: 331 | Input/Output: [[-10.842778562007084 59] 48.157221437992916]
Test Case: 332 | Input/Output: [[57.60160369676004 15] 72.60160369676004]
Test Case: 333 | Input/Output: [[-12.573331213345028 36] 23.42666878665497]
Test Case: 334 | Input/Output: [[-16.295703199934252 -58] -74.29570319993425]
Test Case: 335 | Input/Output: [[-40.156318897786946 84] 43.843681102213054]
Test Case: 336 | Input/Output: [[68.72875374893727 11] 79.72875374893727]
Test Case: 337 | Input/Output: [[82.13677468951678 -70] 12.136774689516784]
Test Case: 338 | Input/Output: [[40.01146021233609 88] 128.0114602123361]
Test Case: 339 | Input/Output: [[67.56701653846926 93] 160.56701653846926]
Test Case: 340 | Input/Output: [[-40.40054493557192 62] 21.599455064428078]
Test Case: 341 | Input/Output: [[6.9769066344450295 -98] -91.02309336555497]
Test Case: 342 | Input/Output: [[-34.49402187809653 -61] -95.49402187809653]
Test Case: 343 | Input/Output: [[-53.792878794201805 96] 42.207121205798195]
Test Case: 344 | Input/Output: [[61.66556472225412 -10] 51.66556472225412]
Test Case: 345 | Input/Output: [[-81.43759142251712 -25] -106.43759142251712]
Test Case: 346 | Input/Output: [[-30.44130509897971 -64] -94.44130509897971]
Test Case: 347 | Input/Output: [[20.70443613255361 -89] -68.29556386744639]
Test Case: 348 | Input/Output: [[-11.784859809286345 27] 15.215140190713655]
Test Case: 349 | Input/Output: [[78.895678454555 57] 135.895678454555]
Test Case: 350 | Input/Output: [[-6.8256520723437575 -80] -86.82565207234376]
Test Case: 351 | Input/Output: [[-2.799288837394016 -74] -76.79928883739402]
Test Case: 352 | Input/Output: [[83.84040335786881 87] 170.8404033578688]
Test Case: 353 | Input/Output: [[68.40675704492662 5] 73.40675704492662]
Test Case: 354 | Input/Output: [[18.669756749510896 46] 64.6697567495109]
Test Case: 355 | Input/Output: [[16.43693311203836 51] 67.43693311203836]
Test Case: 356 | Input/Output: [[8.883174127424383 -51] -42.11682587257562]
Test Case: 357 | Input/Output: [[33.8189500365709 -62] -28.181049963429103]
Test Case: 358 | Input/Output: [[75.0058416099138 -9] 66.0058416099138]
Test Case: 359 | Input/Output: [[-2.361216111362637 -100] -102.36121611136264]
Test Case: 360 | Input/Output: [[27.840470517636803 -34] -6.159529482363197]
Test Case: 361 | Input/Output: [[40.277922830614386 77] 117.27792283061439]
Test Case: 362 | Input/Output: [[58.45600918286016 89] 147.45600918286016]
Test Case: 363 | Input/Output: [[62.8249051253363 -40] 22.8249051253363]
Test Case: 364 | Input/Output: [[77.61916823744167 97] 174.61916823744167]
Test Case: 365 | Input/Output: [[29.08960212958837 84] 113.08960212958837]
Test Case: 366 | Input/Output: [[-45.03918089531509 -15] -60.03918089531509]
Test Case: 367 | Input/Output: [[19.480413547790192 -70] -50.51958645220981]
Test Case: 368 | Input/Output: [[5.4679156696138165 -67] -61.53208433038618]
Test Case: 369 | Input/Output: [[-3.143830019217077 -41] -44.14383001921708]
Test Case: 370 | Input/Output: [[-57.78896350352443 9] -48.78896350352443]
Test Case: 371 | Input/Output: [[-70.10033799440154 93] 22.899662005598458]
Test Case: 372 | Input/Output: [[-53.448855917988006 -68] -121.448855917988]
Test Case: 373 | Input/Output: [[74.61799176185136 32] 106.61799176185136]
Test Case: 374 | Input/Output: [[28.501864352709163 47] 75.50186435270916]
Test Case: 375 | Input/Output: [[62.852985987745825 56] 118.85298598774583]
Test Case: 376 | Input/Output: [[30.137654300296816 -63] -32.862345699703184]
Test Case: 377 | Input/Output: [[45.88660472649252 -65] -19.11339527350748]
Test Case: 378 | Input/Output: [[53.283627230373185 -31] 22.283627230373185]
Test Case: 379 | Input/Output: [[95.43906786043428 34] 129.43906786043428]
Test Case: 380 | Input/Output: [[-4.96650705386034 15] 10.03349294613966]
Test Case: 381 | Input/Output: [[35.37080771819009 93] 128.3708077181901]
Test Case: 382 | Input/Output: [[-43.57969141430067 -65] -108.57969141430067]
Test Case: 383 | Input/Output: [[84.97771413698081 8] 92.97771413698081]
Test Case: 384 | Input/Output: [[-71.82137814966063 -52] -123.82137814966063]
Test Case: 385 | Input/Output: [[-36.812159057546666 15] -21.812159057546666]
Test Case: 386 | Input/Output: [[39.43112828439874 -62] -22.56887171560126]
Test Case: 387 | Input/Output: [[98.16370078709488 -85] 13.163700787094882]
Test Case: 388 | Input/Output: [[91.00162991080234 57] 148.00162991080234]
Test Case: 389 | Input/Output: [[38.020736104823584 16] 54.020736104823584]
Test Case: 390 | Input/Output: [[-71.38058380428298 -76] -147.380583804283]
Test Case: 391 | Input/Output: [[-22.971522258642366 -84] -106.97152225864237]
Test Case: 392 | Input/Output: [[-16.76808863007099 -87] -103.76808863007099]
Test Case: 393 | Input/Output: [[-57.29101735508719 -94] -151.2910173550872]
Test Case: 394 | Input/Output: [[-68.50805106955042 -11] -79.50805106955042]
Test Case: 395 | Input/Output: [[18.661972111465403 -94] -75.3380278885346]
Test Case: 396 | Input/Output: [[-98.62098568289224 -21] -119.62098568289224]
Test Case: 397 | Input/Output: [[3.7980893998886813 -25] -21.20191060011132]
Test Case: 398 | Input/Output: [[-5.913825208495609 -18] -23.91382520849561]
Test Case: 399 | Input/Output: [[-16.521070387574596 19] 2.4789296124254037]
Test Case: 400 | Input/Output: [[41.36585405608932 -40] 1.3658540560893186]
Test Case: 401 | Input/Output: [[-22.476907451027657 68] 45.52309254897234]
Test Case: 402 | Input/Output: [[-69.55187922066341 64] -5.551879220663409]
Test Case: 403 | Input/Output: [[15.906706933206195 -8] 7.906706933206195]
Test Case: 404 | Input/Output: [[-33.77927766631454 -40] -73.77927766631454]
Test Case: 405 | Input/Output: [[21.93929825837384 68] 89.93929825837384]
Test Case: 406 | Input/Output: [[96.08910974046628 33] 129.08910974046628]
Test Case: 407 | Input/Output: [[79.13703832155193 58] 137.13703832155193]
Test Case: 408 | Input/Output: [[-92.92855499101857 -94] -186.9285549910186]
Test Case: 409 | Input/Output: [[69.56749659277705 21] 90.56749659277705]
Test Case: 410 | Input/Output: [[80.11063599326422 84] 164.11063599326422]
Test Case: 411 | Input/Output: [[31.526828117859566 -62] -30.473171882140434]
Test Case: 412 | Input/Output: [[-97.74820141169262 -16] -113.74820141169262]
Test Case: 413 | Input/Output: [[-37.48202595995367 88] 50.51797404004633]
Test Case: 414 | Input/Output: [[72.16173981803306 81] 153.16173981803306]
Test Case: 415 | Input/Output: [[-98.61195560685552 -20] -118.61195560685552]
Test Case: 416 | Input/Output: [[45.3540071229321 -16] 29.354007122932103]
Test Case: 417 | Input/Output: [[-43.09127394816174 -88] -131.09127394816176]
Test Case: 418 | Input/Output: [[-57.53406716256582 86] 28.46593283743418]
Test Case: 419 | Input/Output: [[-28.107006744237935 53] 24.892993255762065]
Test Case: 420 | Input/Output: [[-20.120707257890544 -89] -109.12070725789054]
Test Case: 421 | Input/Output: [[31.88847132440347 87] 118.88847132440347]
Test Case: 422 | Input/Output: [[60.8386009135956 -45] 15.838600913595599]
Test Case: 423 | Input/Output: [[-37.70889846845482 2] -35.70889846845482]
Test Case: 424 | Input/Output: [[92.21113887680002 75] 167.21113887680002]
Test Case: 425 | Input/Output: [[13.73658157225401 -38] -24.26341842774599]
Test Case: 426 | Input/Output: [[46.18630472692382 26] 72.18630472692382]
Test Case: 427 | Input/Output: [[99.95137715782465 43] 142.95137715782465]
Test Case: 428 | Input/Output: [[-22.897305526355566 33] 10.102694473644434]
Test Case: 429 | Input/Output: [[-2.491928258454095 -30] -32.491928258454095]
Test Case: 430 | Input/Output: [[-2.5074393729253757 -50] -52.507439372925376]
Test Case: 431 | Input/Output: [[88.57714724961639 54] 142.5771472496164]
Test Case: 432 | Input/Output: [[-35.56205005061075 16] -19.56205005061075]
Test Case: 433 | Input/Output: [[-69.58463865939729 -45] -114.58463865939729]
Test Case: 434 | Input/Output: [[-95.0551297768268 97] 1.9448702231731971]
Test Case: 435 | Input/Output: [[33.08448152678332 -26] 7.084481526783321]
Test Case: 436 | Input/Output: [[-73.05649125774893 -96] -169.05649125774892]
Test Case: 437 | Input/Output: [[-76.78977171694912 34] -42.78977171694912]
Test Case: 438 | Input/Output: [[-30.98232380076371 24] -6.982323800763709]
Test Case: 439 | Input/Output: [[8.976769026087965 -96] -87.02323097391204]
Test Case: 440 | Input/Output: [[-95.55820093607907 -4] -99.55820093607907]
Test Case: 441 | Input/Output: [[77.35455545570181 15] 92.35455545570181]
Test Case: 442 | Input/Output: [[-48.612447778127546 -91] -139.61244777812755]
Test Case: 443 | Input/Output: [[-22.93821056549102 -5] -27.93821056549102]
Test Case: 444 | Input/Output: [[-29.19476756248018 73] 43.80523243751982]
Test Case: 445 | Input/Output: [[-52.745716291980614 -71] -123.74571629198061]
Test Case: 446 | Input/Output: [[33.52060756937783 -87] -53.47939243062217]
Test Case: 447 | Input/Output: [[34.86745808378791 -65] -30.13254191621209]
Test Case: 448 | Input/Output: [[70.51423891625566 80] 150.51423891625566]
Test Case: 449 | Input/Output: [[84.33652955115895 53] 137.33652955115895]
Test Case: 450 | Input/Output: [[-21.53322762549297 96] 74.46677237450703]
Test Case: 451 | Input/Output: [[-85.53923852311978 3] -82.53923852311978]
Test Case: 452 | Input/Output: [[-13.79423323100552 -17] -30.79423323100552]
Test Case: 453 | Input/Output: [[36.93419649918184 42] 78.93419649918184]
Test Case: 454 | Input/Output: [[-52.84953097584781 -24] -76.84953097584781]
Test Case: 455 | Input/Output: [[-88.3984498738718 34] -54.3984498738718]
Test Case: 456 | Input/Output: [[3.7465042122816925 37] 40.74650421228169]
Test Case: 457 | Input/Output: [[-75.92377886996952 -59] -134.9237788699695]
Test Case: 458 | Input/Output: [[-82.62449992994043 -54] -136.62449992994044]
Test Case: 459 | Input/Output: [[-54.88378397281364 18] -36.88378397281364]
Test Case: 460 | Input/Output: [[-30.102177027877985 -88] -118.10217702787799]
Test Case: 461 | Input/Output: [[81.58270380197763 -100] -18.41729619802237]
Test Case: 462 | Input/Output: [[17.068107837970416 -69] -51.931892162029584]
Test Case: 463 | Input/Output: [[-62.73676327258286 73] 10.263236727417137]
Test Case: 464 | Input/Output: [[40.84310169195271 -39] 1.843101691952711]
Test Case: 465 | Input/Output: [[86.41030095901328 -98] -11.589699040986716]
Test Case: 466 | Input/Output: [[-59.73579263314461 1] -58.73579263314461]
Test Case: 467 | Input/Output: [[-16.31879481546885 -24] -40.31879481546885]
Test Case: 468 | Input/Output: [[-3.970230774526712 90] 86.02976922547329]
Test Case: 469 | Input/Output: [[-22.081827697649743 34] 11.918172302350257]
Test Case: 470 | Input/Output: [[23.58318216909467 -95] -71.41681783090533]
Test Case: 471 | Input/Output: [[-80.27913248191005 72] -8.279132481910054]
Test Case: 472 | Input/Output: [[-23.414614153776128 85] 61.58538584622387]
Test Case: 473 | Input/Output: [[38.37500410639302 21] 59.37500410639302]
Test Case: 474 | Input/Output: [[43.62541023993458 48] 91.62541023993458]
Test Case: 475 | Input/Output: [[-75.10373880614915 90] 14.896261193850847]
Test Case: 476 | Input/Output: [[3.9052919301811926 93] 96.90529193018119]
Test Case: 477 | Input/Output: [[-78.6184749406761 61] -17.618474940676094]
Test Case: 478 | Input/Output: [[-41.75887009232875 54] 12.241129907671251]
Test Case: 479 | Input/Output: [[54.17458144967341 -47] 7.174581449673411]
Test Case: 480 | Input/Output: [[-67.40876136685996 88] 20.591238633140037]
Test Case: 481 | Input/Output: [[14.801156658696499 38] 52.8011566586965]
Test Case: 482 | Input/Output: [[-57.61980353458021 -12] -69.6198035345802]
Test Case: 483 | Input/Output: [[-43.1719727557808 93] 49.8280272442192]
Test Case: 484 | Input/Output: [[-92.5427572905289 66] -26.542757290528897]
Test Case: 485 | Input/Output: [[-95.5615107586556 60] -35.5615107586556]
Test Case: 486 | Input/Output: [[-3.080395351650367 42] 38.91960464834963]
Test Case: 487 | Input/Output: [[28.335664323058836 -89] -60.664335676941164]
Test Case: 488 | Input/Output: [[40.91518886318829 -25] 15.915188863188291]
Test Case: 489 | Input/Output: [[66.6620861768499 -50] 16.662086176849897]
Test Case: 490 | Input/Output: [[23.60343303060087 -73] -49.39656696939913]
Test Case: 491 | Input/Output: [[-20.759630571271174 43] 22.240369428728826]
Test Case: 492 | Input/Output: [[82.68256511065115 88] 170.68256511065115]
Test Case: 493 | Input/Output: [[-75.91145736260081 4] -71.91145736260081]
Test Case: 494 | Input/Output: [[-94.10319127905467 -38] -132.10319127905467]
Test Case: 495 | Input/Output: [[94.28526324274239 -41] 53.28526324274239]
Test Case: 496 | Input/Output: [[-72.3070670556828 -19] -91.3070670556828]
Test Case: 497 | Input/Output: [[-24.386860916263544 66] 41.613139083736456]
Test Case: 498 | Input/Output: [[65.54232302268613 -81] -15.457676977313866]
Test Case: 499 | Input/Output: [[-66.75267295546658 4] -62.75267295546658]
Test Case: 500 | Input/Output: [[-39.02958243990429 98] 58.97041756009571]
Test Case: 501 | Input/Output: [[-51.99212400217959 -73] -124.9921240021796]
Test Case: 502 | Input/Output: [[-27.401545101587118 27] -0.40154510158711787]
Test Case: 503 | Input/Output: [[-28.458985382220206 10] -18.458985382220206]
Test Case: 504 | Input/Output: [[20.254493059712757 18] 38.25449305971276]
Test Case: 505 | Input/Output: [[-72.24575346960809 41] -31.24575346960809]
Test Case: 506 | Input/Output: [[96.51181235125708 60] 156.51181235125708]
Test Case: 507 | Input/Output: [[27.040919774212142 -31] -3.959080225787858]
Test Case: 508 | Input/Output: [[20.5508939214629 70] 90.5508939214629]
Test Case: 509 | Input/Output: [[-52.083544623240385 59] 6.916455376759615]
Test Case: 510 | Input/Output: [[-56.76589297813379 -53] -109.76589297813379]
Test Case: 511 | Input/Output: [[-96.74907096810448 73] -23.749070968104476]
Test Case: 512 | Input/Output: [[45.016297837457586 86] 131.01629783745759]
Test Case: 513 | Input/Output: [[64.71036769847078 32] 96.71036769847078]
Test Case: 514 | Input/Output: [[-3.8803493852580715 93] 89.11965061474193]
Test Case: 515 | Input/Output: [[-9.97435621427978 66] 56.02564378572022]
Test Case: 516 | Input/Output: [[-83.5705631075836 -50] -133.5705631075836]
Test Case: 517 | Input/Output: [[15.203133007750182 73] 88.20313300775018]
Test Case: 518 | Input/Output: [[-91.6521905857982 -9] -100.6521905857982]
Test Case: 519 | Input/Output: [[-30.237478653523993 14] -16.237478653523993]
Test Case: 520 | Input/Output: [[-80.81320835296441 -18] -98.81320835296441]
Test Case: 521 | Input/Output: [[-35.74926230598395 -2] -37.74926230598395]
Test Case: 522 | Input/Output: [[13.745748884793457 10] 23.745748884793457]
Test Case: 523 | Input/Output: [[84.11737067215074 -23] 61.11737067215074]
Test Case: 524 | Input/Output: [[70.13682085257145 88] 158.13682085257145]
Test Case: 525 | Input/Output: [[-13.545138228097102 -50] -63.5451382280971]
Test Case: 526 | Input/Output: [[81.64348253759485 47] 128.64348253759485]
Test Case: 527 | Input/Output: [[35.27362754405732 -65] -29.72637245594268]
Test Case: 528 | Input/Output: [[-83.1358918355187 88] 4.864108164481294]
Test Case: 529 | Input/Output: [[73.80502285636854 -86] -12.194977143631462]
Test Case: 530 | Input/Output: [[-85.88963022705451 41] -44.88963022705451]
Test Case: 531 | Input/Output: [[73.08135733030164 24] 97.08135733030164]
Test Case: 532 | Input/Output: [[1.8231167799525707 -30] -28.17688322004743]
Test Case: 533 | Input/Output: [[46.80227297966994 -93] -46.19772702033006]
Test Case: 534 | Input/Output: [[-20.555058028481568 -25] -45.55505802848157]
Test Case: 535 | Input/Output: [[-36.321850299825044 -12] -48.321850299825044]
Test Case: 536 | Input/Output: [[-20.62658877761052 -45] -65.62658877761052]
Test Case: 537 | Input/Output: [[77.37705748439089 -68] 9.377057484390889]
Test Case: 538 | Input/Output: [[61.20799093287428 43] 104.20799093287428]
Test Case: 539 | Input/Output: [[23.236236447850615 41] 64.23623644785062]
Test Case: 540 | Input/Output: [[-46.313757439772175 -28] -74.31375743977217]
Test Case: 541 | Input/Output: [[-47.88917589793502 -70] -117.88917589793502]
Test Case: 542 | Input/Output: [[10.742044108762741 -80] -69.25795589123726]
Test Case: 543 | Input/Output: [[-33.75598580998549 77] 43.24401419001451]
Test Case: 544 | Input/Output: [[-69.7105980499829 31] -38.710598049982906]
Test Case: 545 | Input/Output: [[-89.49909784929253 -96] -185.49909784929253]
Test Case: 546 | Input/Output: [[37.86450278465563 71] 108.86450278465563]
Test Case: 547 | Input/Output: [[-83.14493498280217 99] 15.85506501719783]
Test Case: 548 | Input/Output: [[95.85924675027755 -43] 52.85924675027755]
Test Case: 549 | Input/Output: [[38.49540491246401 54] 92.49540491246401]
Test Case: 550 | Input/Output: [[30.855535945771095 66] 96.8555359457711]
Test Case: 551 | Input/Output: [[15.02645955546727 -16] -0.9735404445327305]
Test Case: 552 | Input/Output: [[-1.8272972303127801 -76] -77.82729723031278]
Test Case: 553 | Input/Output: [[16.30199020478122 37] 53.30199020478122]
Test Case: 554 | Input/Output: [[-15.056761316433125 -55] -70.05676131643312]
Test Case: 555 | Input/Output: [[-76.6175688682499 54] -22.617568868249904]
Test Case: 556 | Input/Output: [[1.9204523245124108 -2] -0.07954767548758923]
Test Case: 557 | Input/Output: [[80.50461754201126 -60] 20.50461754201126]
Test Case: 558 | Input/Output: [[36.68424925412688 -91] -54.31575074587312]
Test Case: 559 | Input/Output: [[-75.9348233842056 -36] -111.9348233842056]
Test Case: 560 | Input/Output: [[-38.63527838068488 -32] -70.63527838068488]
Test Case: 561 | Input/Output: [[-11.255900477532236 87] 75.74409952246776]
Test Case: 562 | Input/Output: [[-55.486438981558365 -35] -90.48643898155836]
Test Case: 563 | Input/Output: [[-71.65914544496039 -97] -168.6591454449604]
Test Case: 564 | Input/Output: [[-47.82154074447278 84] 36.17845925552722]
Test Case: 565 | Input/Output: [[-16.735015581801505 95] 78.2649844181985]
Test Case: 566 | Input/Output: [[-84.52605579678287 -69] -153.52605579678288]
Test Case: 567 | Input/Output: [[-55.15198176738592 -48] -103.15198176738592]
Test Case: 568 | Input/Output: [[-88.64307434826186 58] -30.643074348261862]
Test Case: 569 | Input/Output: [[9.541442853175553 -74] -64.45855714682445]
Test Case: 570 | Input/Output: [[-49.47209375909287 -38] -87.47209375909287]
Test Case: 571 | Input/Output: [[68.46665776544779 47] 115.46665776544779]
Test Case: 572 | Input/Output: [[31.935165011036105 28] 59.935165011036105]
Test Case: 573 | Input/Output: [[-91.85489688420563 -15] -106.85489688420563]
Test Case: 574 | Input/Output: [[62.63686467208126 -16] 46.63686467208126]
Test Case: 575 | Input/Output: [[-49.19585327745102 -22] -71.19585327745102]
Test Case: 576 | Input/Output: [[-8.344768622996696 29] 20.655231377003304]
Test Case: 577 | Input/Output: [[-37.19872310811028 65] 27.80127689188972]
Test Case: 578 | Input/Output: [[-69.04530309093593 77] 7.954696909064069]
Test Case: 579 | Input/Output: [[-38.33228090012286 -59] -97.33228090012287]
Test Case: 580 | Input/Output: [[-89.43172752257497 -67] -156.431727522575]
Test Case: 581 | Input/Output: [[-22.05416474669515 -25] -47.05416474669515]
Test Case: 582 | Input/Output: [[21.201444771181002 10] 31.201444771181002]
Test Case: 583 | Input/Output: [[78.86241895336934 -10] 68.86241895336934]
Test Case: 584 | Input/Output: [[3.855994678922187 -25] -21.144005321077813]
Test Case: 585 | Input/Output: [[67.70477710238296 -78] -10.295222897617037]
Test Case: 586 | Input/Output: [[38.619521031122105 -6] 32.619521031122105]
Test Case: 587 | Input/Output: [[30.664252099708136 8] 38.664252099708136]
Test Case: 588 | Input/Output: [[4.771823933940112 61] 65.77182393394011]
Test Case: 589 | Input/Output: [[62.39154546317911 27] 89.39154546317911]
Test Case: 590 | Input/Output: [[-88.23277526634527 26] -62.23277526634527]
Test Case: 591 | Input/Output: [[-81.91483093915153 60] -21.91483093915153]
Test Case: 592 | Input/Output: [[-43.10449422931437 76] 32.89550577068563]
Test Case: 593 | Input/Output: [[-61.73333254318876 -68] -129.73333254318877]
Test Case: 594 | Input/Output: [[-67.81084618778038 70] 2.1891538122196152]
Test Case: 595 | Input/Output: [[33.62088556350338 -85] -51.37911443649662]
Test Case: 596 | Input/Output: [[-30.053558078516247 -81] -111.05355807851625]
Test Case: 597 | Input/Output: [[32.89597899461958 97] 129.89597899461958]
Test Case: 598 | Input/Output: [[1.5109899841911698 -64] -62.48901001580883]
Test Case: 599 | Input/Output: [[98.20530130718814 47] 145.20530130718814]
Test Case: 600 | Input/Output: [[55.37343806419108 -92] -36.62656193580892]
Test Case: 601 | Input/Output: [[-20.696463172234985 -29] -49.696463172234985]
Test Case: 602 | Input/Output: [[64.268575999619 83] 147.268575999619]
Test Case: 603 | Input/Output: [[-2.2302797932543825 -6] -8.230279793254383]
Test Case: 604 | Input/Output: [[74.58055936515473 -91] -16.419440634845273]
Test Case: 605 | Input/Output: [[83.23209168392339 0] 83.23209168392339]
Test Case: 606 | Input/Output: [[-87.01911125102211 99] 11.98088874897789]
Test Case: 607 | Input/Output: [[25.88814602331159 74] 99.88814602331159]
Test Case: 608 | Input/Output: [[-33.78553708648131 20] -13.785537086481312]
Test Case: 609 | Input/Output: [[-51.21812729727622 5] -46.21812729727622]
Test Case: 610 | Input/Output: [[94.3648172494809 -24] 70.3648172494809]
Test Case: 611 | Input/Output: [[36.72161730666065 55] 91.72161730666065]
Test Case: 612 | Input/Output: [[60.74507922003647 23] 83.74507922003647]
Test Case: 613 | Input/Output: [[-16.07945367023511 70] 53.92054632976489]
Test Case: 614 | Input/Output: [[-20.08756170708122 71] 50.91243829291878]
Test Case: 615 | Input/Output: [[60.10176674598486 -68] -7.898233254015139]
Test Case: 616 | Input/Output: [[-1.3501331137024408 2] 0.6498668862975592]
Test Case: 617 | Input/Output: [[10.503145059988157 -58] -47.49685494001184]
Test Case: 618 | Input/Output: [[93.70798282189176 -96] -2.292017178108239]
Test Case: 619 | Input/Output: [[44.40864298482293 -16] 28.408642984822933]
Test Case: 620 | Input/Output: [[4.235654945827889 45] 49.23565494582789]
Test Case: 621 | Input/Output: [[-27.517569040389333 -25] -52.51756904038933]
Test Case: 622 | Input/Output: [[51.29541610065198 -32] 19.295416100651977]
Test Case: 623 | Input/Output: [[-87.51763312902588 68] -19.51763312902588]
Test Case: 624 | Input/Output: [[-32.16655821134064 54] 21.833441788659357]
Test Case: 625 | Input/Output: [[65.34831975721522 31] 96.34831975721522]
Test Case: 626 | Input/Output: [[68.33063422402799 55] 123.33063422402799]
Test Case: 627 | Input/Output: [[45.4442611546458 18] 63.4442611546458]
Test Case: 628 | Input/Output: [[39.127836974169895 -10] 29.127836974169895]
Test Case: 629 | Input/Output: [[-24.91212322860183 -93] -117.91212322860183]
Test Case: 630 | Input/Output: [[31.581469119175438 -13] 18.581469119175438]
Test Case: 631 | Input/Output: [[65.6089748956453 -30] 35.608974895645304]
Test Case: 632 | Input/Output: [[35.3905490300412 78] 113.3905490300412]
Test Case: 633 | Input/Output: [[69.10492096500329 -48] 21.104920965003288]
Test Case: 634 | Input/Output: [[5.075321018310547 -91] -85.92467898168945]
Test Case: 635 | Input/Output: [[-72.24807356785632 -61] -133.24807356785632]
Test Case: 636 | Input/Output: [[95.8857435484829 -81] 14.885743548482907]
Test Case: 637 | Input/Output: [[97.46340510443403 -24] 73.46340510443403]
Test Case: 638 | Input/Output: [[-5.976468034088441 1] -4.976468034088441]
Test Case: 639 | Input/Output: [[43.505495538379364 -65] -21.494504461620636]
Test Case: 640 | Input/Output: [[44.66989480977847 -17] 27.66989480977847]
Test Case: 641 | Input/Output: [[-88.52451233580545 -55] -143.52451233580547]
Test Case: 642 | Input/Output: [[-1.67824692571115 -43] -44.67824692571115]
Test Case: 643 | Input/Output: [[-87.43498216815355 -20] -107.43498216815355]
Test Case: 644 | Input/Output: [[20.086737617582102 -79] -58.9132623824179]
Test Case: 645 | Input/Output: [[91.40972794096203 0] 91.40972794096203]
Test Case: 646 | Input/Output: [[-31.55335341837622 -49] -80.55335341837622]
Test Case: 647 | Input/Output: [[-93.87727648659781 87] -6.8772764865978075]
Test Case: 648 | Input/Output: [[-73.32892673531717 34] -39.32892673531717]
Test Case: 649 | Input/Output: [[-89.3054608146513 -15] -104.3054608146513]
Test Case: 650 | Input/Output: [[62.131665432323615 0] 62.131665432323615]
Test Case: 651 | Input/Output: [[-65.92563571788001 14] -51.92563571788001]
Test Case: 652 | Input/Output: [[-24.01342012443699 -46] -70.01342012443699]
Test Case: 653 | Input/Output: [[-43.631989000229666 -96] -139.63198900022968]
Test Case: 654 | Input/Output: [[-44.9060831021941 74] 29.093916897805897]
Test Case: 655 | Input/Output: [[-94.79586632754811 -70] -164.7958663275481]
Test Case: 656 | Input/Output: [[-14.538708237330383 -31] -45.53870823733038]
Test Case: 657 | Input/Output: [[-61.189449450734855 -8] -69.18944945073486]
Test Case: 658 | Input/Output: [[-8.984497006792353 -52] -60.98449700679235]
Test Case: 659 | Input/Output: [[62.71732917911558 13] 75.71732917911558]
Test Case: 660 | Input/Output: [[43.36681151380267 38] 81.36681151380267]
Test Case: 661 | Input/Output: [[90.61263759076422 41] 131.61263759076422]
Test Case: 662 | Input/Output: [[-40.48545610732188 -6] -46.48545610732188]
Test Case: 663 | Input/Output: [[38.51593633110767 -61] -22.484063668892333]
Test Case: 664 | Input/Output: [[-93.43340196487897 -20] -113.43340196487897]
Test Case: 665 | Input/Output: [[90.52347545885664 -42] 48.52347545885664]
Test Case: 666 | Input/Output: [[67.98562840229846 -55] 12.98562840229846]
Test Case: 667 | Input/Output: [[-78.18832445870999 62] -16.188324458709985]
Test Case: 668 | Input/Output: [[-23.057146075594076 -90] -113.05714607559408]
Test Case: 669 | Input/Output: [[83.89463810157119 -1] 82.89463810157119]
Test Case: 670 | Input/Output: [[-81.10783534878887 -64] -145.10783534878885]
Test Case: 671 | Input/Output: [[-21.545176404585092 -33] -54.54517640458509]
Test Case: 672 | Input/Output: [[-63.57176653397853 4] -59.57176653397853]
Test Case: 673 | Input/Output: [[3.0791839791129547 88] 91.07918397911295]
Test Case: 674 | Input/Output: [[36.90905627247378 86] 122.90905627247378]
Test Case: 675 | Input/Output: [[-64.49380382671546 81] 16.506196173284536]
Test Case: 676 | Input/Output: [[-56.84701750703047 75] 18.152982492969528]
Test Case: 677 | Input/Output: [[53.327999874539415 50] 103.32799987453942]
Test Case: 678 | Input/Output: [[-62.90564510479497 -42] -104.90564510479497]
Test Case: 679 | Input/Output: [[-85.234644123938 -11] -96.234644123938]
Test Case: 680 | Input/Output: [[17.455513933231813 -32] -14.544486066768187]
Test Case: 681 | Input/Output: [[-34.583818753950396 -63] -97.5838187539504]
Test Case: 682 | Input/Output: [[21.848156311277506 64] 85.8481563112775]
Test Case: 683 | Input/Output: [[57.82984448079063 -41] 16.829844480790626]
Test Case: 684 | Input/Output: [[-9.540286143691176 95] 85.45971385630882]
Test Case: 685 | Input/Output: [[94.39903975656114 44] 138.39903975656114]
Test Case: 686 | Input/Output: [[-74.05344545797783 -37] -111.05344545797783]
Test Case: 687 | Input/Output: [[21.368351397753656 57] 78.36835139775366]
Test Case: 688 | Input/Output: [[-39.44474618166187 37] -2.44474618166187]
Test Case: 689 | Input/Output: [[20.252011026227464 78] 98.25201102622746]
Test Case: 690 | Input/Output: [[43.22977503543689 86] 129.2297750354369]
Test Case: 691 | Input/Output: [[10.871014252262285 44] 54.871014252262285]
Test Case: 692 | Input/Output: [[43.89601126891506 -11] 32.89601126891506]
Test Case: 693 | Input/Output: [[-49.50081433094626 38] -11.500814330946262]
Test Case: 694 | Input/Output: [[69.03165060121927 -17] 52.03165060121927]
Test Case: 695 | Input/Output: [[71.97277436368094 25] 96.97277436368094]
Test Case: 696 | Input/Output: [[84.60369488087466 -4] 80.60369488087466]
Test Case: 697 | Input/Output: [[57.33189949846178 99] 156.33189949846178]
Test Case: 698 | Input/Output: [[-98.58799815495172 -20] -118.58799815495172]
Test Case: 699 | Input/Output: [[38.53646616446656 -32] 6.53646616446656]
Test Case: 700 | Input/Output: [[38.58252096667289 72] 110.58252096667289]
Test Case: 701 | Input/Output: [[10.360307848779172 -72] -61.63969215122083]
Test Case: 702 | Input/Output: [[46.87833069373525 -34] 12.87833069373525]
Test Case: 703 | Input/Output: [[-80.49302312119933 88] 7.506976878800671]
Test Case: 704 | Input/Output: [[92.89637361735993 91] 183.89637361735993]
Test Case: 705 | Input/Output: [[99.94791333395193 -50] 49.94791333395193]
Test Case: 706 | Input/Output: [[-16.431500709171146 7] -9.431500709171146]
Test Case: 707 | Input/Output: [[-62.024794351977874 -71] -133.02479435197787]
Test Case: 708 | Input/Output: [[29.848146102742703 -59] -29.151853897257297]
Test Case: 709 | Input/Output: [[98.96760267270321 35] 133.9676026727032]
Test Case: 710 | Input/Output: [[-87.7242443436747 -57] -144.72424434367468]
Test Case: 711 | Input/Output: [[-86.04937904761194 3] -83.04937904761194]
Test Case: 712 | Input/Output: [[95.38214715701338 -54] 41.38214715701338]
Test Case: 713 | Input/Output: [[-84.63685934411257 -62] -146.63685934411257]
Test Case: 714 | Input/Output: [[-31.21361596477594 34] 2.78638403522406]
Test Case: 715 | Input/Output: [[-33.891580948028334 -47] -80.89158094802833]
Test Case: 716 | Input/Output: [[11.942084327351395 81] 92.9420843273514]
Test Case: 717 | Input/Output: [[61.40041125181148 17] 78.40041125181148]
Test Case: 718 | Input/Output: [[33.11283697595928 93] 126.11283697595928]
Test Case: 719 | Input/Output: [[-77.85918824947129 74] -3.8591882494712877]
Test Case: 720 | Input/Output: [[24.98987568424711 23] 47.98987568424711]
Test Case: 721 | Input/Output: [[-36.841988608429155 36] -0.8419886084291548]
Test Case: 722 | Input/Output: [[69.10602146136097 71] 140.10602146136097]
Test Case: 723 | Input/Output: [[-64.58289618227812 -81] -145.58289618227812]
Test Case: 724 | Input/Output: [[-25.19749818774315 1] -24.19749818774315]
Test Case: 725 | Input/Output: [[-55.61683295599609 84] 28.383167044003912]
Test Case: 726 | Input/Output: [[-62.617157360981054 -29] -91.61715736098105]
Test Case: 727 | Input/Output: [[49.759226133048 81] 130.759226133048]
Test Case: 728 | Input/Output: [[-80.79637961884525 -37] -117.79637961884525]
Test Case: 729 | Input/Output: [[84.21345823480283 -39] 45.21345823480283]
Test Case: 730 | Input/Output: [[51.73049405505893 -63] -11.269505944941073]
Test Case: 731 | Input/Output: [[-98.23565530049339 -71] -169.2356553004934]
Test Case: 732 | Input/Output: [[-25.93231366551329 -89] -114.93231366551329]
Test Case: 733 | Input/Output: [[-31.038060505842708 49] 17.961939494157292]
Test Case: 734 | Input/Output: [[21.977894602170835 -50] -28.022105397829165]
Test Case: 735 | Input/Output: [[77.03427711382892 60] 137.03427711382892]
Test Case: 736 | Input/Output: [[20.404023820457738 31] 51.40402382045774]
Test Case: 737 | Input/Output: [[-78.02940971568448 37] -41.02940971568448]
Test Case: 738 | Input/Output: [[99.44426573586898 -44] 55.44426573586898]
Test Case: 739 | Input/Output: [[84.69785790141333 -24] 60.69785790141333]
Test Case: 740 | Input/Output: [[42.18488317853502 15] 57.18488317853502]
Test Case: 741 | Input/Output: [[58.353383966637296 45] 103.3533839666373]
Test Case: 742 | Input/Output: [[-96.33359166411111 -17] -113.33359166411111]
Test Case: 743 | Input/Output: [[80.00397709658984 52] 132.00397709658984]
Test Case: 744 | Input/Output: [[18.79111308564474 -79] -60.20888691435526]
Test Case: 745 | Input/Output: [[8.838712895299466 -70] -61.161287104700534]
Test Case: 746 | Input/Output: [[72.68495602833192 97] 169.68495602833192]
Test Case: 747 | Input/Output: [[-40.815385818102534 81] 40.184614181897466]
Test Case: 748 | Input/Output: [[36.46156873784378 31] 67.46156873784378]
Test Case: 749 | Input/Output: [[-27.358482104269413 -70] -97.35848210426941]
Test Case: 750 | Input/Output: [[57.98597229756402 -70] -12.014027702435982]
Test Case: 751 | Input/Output: [[43.31890930193549 2] 45.31890930193549]
Test Case: 752 | Input/Output: [[23.0336314589578 -10] 13.0336314589578]
Test Case: 753 | Input/Output: [[-44.257221953944835 -90] -134.25722195394485]
Test Case: 754 | Input/Output: [[-82.09475724468027 -40] -122.09475724468027]
Test Case: 755 | Input/Output: [[91.02422312798939 -13] 78.02422312798939]
Test Case: 756 | Input/Output: [[-50.03155800105867 45] -5.03155800105867]
Test Case: 757 | Input/Output: [[-48.621819535570324 -21] -69.62181953557032]
Test Case: 758 | Input/Output: [[-58.4774907948856 -35] -93.4774907948856]
Test Case: 759 | Input/Output: [[-36.171214021845 60] 23.828785978154997]
Test Case: 760 | Input/Output: [[79.66277733655488 99] 178.66277733655488]
Test Case: 761 | Input/Output: [[82.83278756501863 -94] -11.167212434981366]
Test Case: 762 | Input/Output: [[-46.55228305827235 -66] -112.55228305827235]
Test Case: 763 | Input/Output: [[37.21961952647533 72] 109.21961952647533]
Test Case: 764 | Input/Output: [[-83.14469017655045 -29] -112.14469017655045]
Test Case: 765 | Input/Output: [[92.81149584698724 8] 100.81149584698724]
Test Case: 766 | Input/Output: [[32.233183226858046 69] 101.23318322685805]
Test Case: 767 | Input/Output: [[-37.43418121885394 -49] -86.43418121885394]
Test Case: 768 | Input/Output: [[-38.92113216339956 -79] -117.92113216339956]
Test Case: 769 | Input/Output: [[-63.594670419058176 -69] -132.59467041905816]
Test Case: 770 | Input/Output: [[-45.18762727775621 60] 14.812372722243794]
Test Case: 771 | Input/Output: [[-17.855667775713854 -100] -117.85566777571385]
Test Case: 772 | Input/Output: [[-20.50900512690373 46] 25.49099487309627]
Test Case: 773 | Input/Output: [[26.39964569729827 62] 88.39964569729827]
Test Case: 774 | Input/Output: [[6.682672248046089 90] 96.68267224804609]
Test Case: 775 | Input/Output: [[72.01689505814375 55] 127.01689505814375]
Test Case: 776 | Input/Output: [[-68.26636105527547 -55] -123.26636105527547]
Test Case: 777 | Input/Output: [[96.00008301891415 69] 165.00008301891415]
Test Case: 778 | Input/Output: [[-27.378383119747824 -27] -54.378383119747824]
Test Case: 779 | Input/Output: [[-26.506336975580652 -62] -88.50633697558065]
Test Case: 780 | Input/Output: [[-47.95890737504842 93] 45.04109262495158]
Test Case: 781 | Input/Output: [[-33.92448988695371 34] 0.07551011304629185]
Test Case: 782 | Input/Output: [[-43.36132722710586 -3] -46.36132722710586]
Test Case: 783 | Input/Output: [[52.841595866528735 18] 70.84159586652873]
Test Case: 784 | Input/Output: [[57.54676269462209 77] 134.5467626946221]
Test Case: 785 | Input/Output: [[65.72094403508265 30] 95.72094403508265]
Test Case: 786 | Input/Output: [[-52.2781879247604 9] -43.2781879247604]
Test Case: 787 | Input/Output: [[33.433740425664126 -17] 16.433740425664126]
Test Case: 788 | Input/Output: [[-75.10377050811665 15] -60.103770508116654]
Test Case: 789 | Input/Output: [[-48.074789863688096 72] 23.925210136311904]
Test Case: 790 | Input/Output: [[-52.76162350935327 58] 5.238376490646729]
Test Case: 791 | Input/Output: [[-78.31252115088813 -88] -166.31252115088813]
Test Case: 792 | Input/Output: [[-69.14584872758431 15] -54.14584872758431]
Test Case: 793 | Input/Output: [[-45.8711740008217 4] -41.8711740008217]
Test Case: 794 | Input/Output: [[17.459850225929756 -23] -5.540149774070244]
Test Case: 795 | Input/Output: [[25.658013515327085 -76] -50.341986484672915]
Test Case: 796 | Input/Output: [[-81.77080907863304 -1] -82.77080907863304]
Test Case: 797 | Input/Output: [[-90.57171643782935 -8] -98.57171643782935]
Test Case: 798 | Input/Output: [[53.860507207209395 -96] -42.139492792790605]
Test Case: 799 | Input/Output: [[-0.03243972165596176 64] 63.96756027834404]
Test Case: 800 | Input/Output: [[50.746113760312824 36] 86.74611376031282]
Test Case: 801 | Input/Output: [[94.44489991517213 67] 161.44489991517213]
Test Case: 802 | Input/Output: [[28.740290725862025 60] 88.74029072586202]
Test Case: 803 | Input/Output: [[-21.950606719021067 35] 13.049393280978933]
Test Case: 804 | Input/Output: [[-19.465068501545787 47] 27.534931498454213]
Test Case: 805 | Input/Output: [[62.712431041002276 0] 62.712431041002276]
Test Case: 806 | Input/Output: [[-90.61923548654374 -24] -114.61923548654374]
Test Case: 807 | Input/Output: [[-60.20031131496899 34] -26.200311314968992]
Test Case: 808 | Input/Output: [[75.29928472833245 75] 150.29928472833245]
Test Case: 809 | Input/Output: [[71.05876148498362 35] 106.05876148498362]
Test Case: 810 | Input/Output: [[27.929990143440506 8] 35.929990143440506]
Test Case: 811 | Input/Output: [[35.58084772903172 -57] -21.419152270968283]
Test Case: 812 | Input/Output: [[75.21547719076952 61] 136.21547719076952]
Test Case: 813 | Input/Output: [[-97.70844465948976 -22] -119.70844465948976]
Test Case: 814 | Input/Output: [[61.16257280903622 -60] 1.1625728090362202]
Test Case: 815 | Input/Output: [[-65.56713486034494 37] -28.567134860344936]
Test Case: 816 | Input/Output: [[26.233535062831905 -24] 2.233535062831905]
Test Case: 817 | Input/Output: [[-7.115131086722528 -56] -63.11513108672253]
Test Case: 818 | Input/Output: [[-22.90526682482792 84] 61.09473317517208]
Test Case: 819 | Input/Output: [[-36.56146573848132 -9] -45.56146573848132]
Test Case: 820 | Input/Output: [[19.800274421869602 89] 108.8002744218696]
Test Case: 821 | Input/Output: [[-45.039350514594176 61] 15.960649485405824]
Test Case: 822 | Input/Output: [[-14.45337077245712 74] 59.54662922754288]
Test Case: 823 | Input/Output: [[-1.643733432983268 -45] -46.64373343298327]
Test Case: 824 | Input/Output: [[24.926964294394367 -44] -19.073035705605633]
Test Case: 825 | Input/Output: [[-79.6474858527904 8] -71.6474858527904]
Test Case: 826 | Input/Output: [[44.18091037511752 -62] -17.81908962488248]
Test Case: 827 | Input/Output: [[43.96297293330102 5] 48.96297293330102]
Test Case: 828 | Input/Output: [[53.92604288212479 50] 103.92604288212479]
Test Case: 829 | Input/Output: [[14.211352631064571 -20] -5.788647368935429]
Test Case: 830 | Input/Output: [[-56.01631146753236 -3] -59.01631146753236]
Test Case: 831 | Input/Output: [[36.497576558301006 3] 39.497576558301006]
Test Case: 832 | Input/Output: [[62.74611418151042 94] 156.74611418151042]
Test Case: 833 | Input/Output: [[76.04856320310171 49] 125.04856320310171]
Test Case: 834 | Input/Output: [[53.76993888028517 -80] -26.230061119714833]
Test Case: 835 | Input/Output: [[-11.484013268203029 -19] -30.48401326820303]
Test Case: 836 | Input/Output: [[-36.00647711567178 -61] -97.00647711567177]
Test Case: 837 | Input/Output: [[31.495902890724977 50] 81.49590289072498]
Test Case: 838 | Input/Output: [[-1.1181266158081087 -21] -22.11812661580811]
Test Case: 839 | Input/Output: [[-60.685130040584426 29] -31.685130040584426]
Test Case: 840 | Input/Output: [[-64.04426113938794 97] 32.95573886061206]
Test Case: 841 | Input/Output: [[79.32465497520639 -26] 53.324654975206386]
Test Case: 842 | Input/Output: [[98.79860512305453 20] 118.79860512305453]
Test Case: 843 | Input/Output: [[-90.64061019547786 -29] -119.64061019547786]
Test Case: 844 | Input/Output: [[88.6769941117897 23] 111.6769941117897]
Test Case: 845 | Input/Output: [[-54.24056677882918 -43] -97.24056677882918]
Test Case: 846 | Input/Output: [[-64.77534664078118 -23] -87.77534664078118]
Test Case: 847 | Input/Output: [[98.27096699613779 -48] 50.27096699613779]
Test Case: 848 | Input/Output: [[-2.461867757000462 -75] -77.46186775700046]
Test Case: 849 | Input/Output: [[-90.15547246989647 84] -6.155472469896466]
Test Case: 850 | Input/Output: [[-34.27307670360007 81] 46.72692329639993]
Test Case: 851 | Input/Output: [[-60.310470992694356 12] -48.310470992694356]
Test Case: 852 | Input/Output: [[-49.3701258244875 -77] -126.3701258244875]
Test Case: 853 | Input/Output: [[56.17054534063993 93] 149.17054534063993]
Test Case: 854 | Input/Output: [[55.25590864944573 19] 74.25590864944573]
Test Case: 855 | Input/Output: [[15.408886633188217 -17] -1.5911133668117827]
Test Case: 856 | Input/Output: [[-72.71540647482466 -65] -137.71540647482465]
Test Case: 857 | Input/Output: [[-44.993403452496516 51] 6.006596547503484]
Test Case: 858 | Input/Output: [[9.059764984146625 55] 64.05976498414663]
Test Case: 859 | Input/Output: [[-77.91984450748433 -40] -117.91984450748433]
Test Case: 860 | Input/Output: [[-55.87905388856704 -5] -60.87905388856704]
Test Case: 861 | Input/Output: [[55.37372251395885 -63] -7.626277486041147]
Test Case: 862 | Input/Output: [[16.860519671067692 26] 42.86051967106769]
Test Case: 863 | Input/Output: [[-17.41711787152967 68] 50.58288212847033]
Test Case: 864 | Input/Output: [[-70.97271466943518 48] -22.972714669435177]
Test Case: 865 | Input/Output: [[77.77580457795338 -3] 74.77580457795338]
Test Case: 866 | Input/Output: [[-36.54646819288221 -41] -77.5464681928822]
Test Case: 867 | Input/Output: [[47.063783675224954 66] 113.06378367522495]
Test Case: 868 | Input/Output: [[-95.58112446164782 -93] -188.58112446164782]
Test Case: 869 | Input/Output: [[-77.47443994476744 57] -20.47443994476744]
Test Case: 870 | Input/Output: [[49.27379302236585 -62] -12.726206977634149]
Test Case: 871 | Input/Output: [[46.29445603503919 -62] -15.70554396496081]
Test Case: 872 | Input/Output: [[-41.16526596819183 -72] -113.16526596819183]
Test Case: 873 | Input/Output: [[-12.493675222528779 34] 21.50632477747122]
Test Case: 874 | Input/Output: [[76.30228414852121 -65] 11.30228414852121]
Test Case: 875 | Input/Output: [[91.9369176893947 13] 104.9369176893947]
Test Case: 876 | Input/Output: [[-40.811838636344454 -1] -41.811838636344454]
Test Case: 877 | Input/Output: [[-30.55866761939822 -100] -130.55866761939822]
Test Case: 878 | Input/Output: [[-18.4551869598629 -50] -68.4551869598629]
Test Case: 879 | Input/Output: [[36.184676902918824 69] 105.18467690291882]
Test Case: 880 | Input/Output: [[-67.23104932406154 15] -52.231049324061544]
Test Case: 881 | Input/Output: [[89.13778048186725 -33] 56.13778048186725]
Test Case: 882 | Input/Output: [[-58.57295054011671 -49] -107.57295054011671]
Test Case: 883 | Input/Output: [[89.89373437175678 -12] 77.89373437175678]
Test Case: 884 | Input/Output: [[25.65257022743603 75] 100.65257022743603]
Test Case: 885 | Input/Output: [[-38.57091067233635 -37] -75.57091067233635]
Test Case: 886 | Input/Output: [[-3.8160891064282936 -93] -96.8160891064283]
Test Case: 887 | Input/Output: [[-20.273856969033062 -43] -63.27385696903306]
Test Case: 888 | Input/Output: [[-0.17837269693021085 -77] -77.17837269693021]
Test Case: 889 | Input/Output: [[-36.64497065233987 -4] -40.64497065233987]
Test Case: 890 | Input/Output: [[-24.80048066250498 -44] -68.80048066250498]
Test Case: 891 | Input/Output: [[94.53530631280807 17] 111.53530631280807]
Test Case: 892 | Input/Output: [[-30.79379101500885 -75] -105.79379101500885]
Test Case: 893 | Input/Output: [[-70.54255591341666 45] -25.542555913416663]
Test Case: 894 | Input/Output: [[-41.26071417782173 -41] -82.26071417782174]
Test Case: 895 | Input/Output: [[-67.7145851581534 95] 27.285414841846602]
Test Case: 896 | Input/Output: [[8.075297845172045 -100] -91.92470215482795]
Test Case: 897 | Input/Output: [[-25.043482368381916 -85] -110.04348236838192]
Test Case: 898 | Input/Output: [[-25.189438291407157 -68] -93.18943829140716]
Test Case: 899 | Input/Output: [[44.42101598301039 18] 62.42101598301039]
Test Case: 900 | Input/Output: [[13.333223291562575 -21] -7.666776708437425]
Test Case: 901 | Input/Output: [[-13.832391525468026 -61] -74.83239152546803]
Test Case: 902 | Input/Output: [[10.924462224345149 -45] -34.07553777565485]
Test Case: 903 | Input/Output: [[-6.458526933672786 75] 68.54147306632721]
Test Case: 904 | Input/Output: [[40.23412331503127 78] 118.23412331503127]
Test Case: 905 | Input/Output: [[-85.47927139286492 -15] -100.47927139286492]
Test Case: 906 | Input/Output: [[-11.705259092285857 43] 31.294740907714143]
Test Case: 907 | Input/Output: [[43.90008151904047 1] 44.90008151904047]
Test Case: 908 | Input/Output: [[15.989712487773389 -96] -80.01028751222661]
Test Case: 909 | Input/Output: [[90.07935632355546 5] 95.07935632355546]
Test Case: 910 | Input/Output: [[8.001268781298279 -26] -17.99873121870172]
Test Case: 911 | Input/Output: [[55.38507242328038 -61] -5.614927576719623]
Test Case: 912 | Input/Output: [[-4.838076897223559 12] 7.161923102776441]
Test Case: 913 | Input/Output: [[84.39506518371425 -58] 26.39506518371425]
Test Case: 914 | Input/Output: [[-32.28505335156177 61] 28.71494664843823]
Test Case: 915 | Input/Output: [[-87.28682988295304 -55] -142.28682988295304]
Test Case: 916 | Input/Output: [[-21.636798486845407 49] 27.363201513154593]
Test Case: 917 | Input/Output: [[42.51696963341044 -33] 9.51696963341044]
Test Case: 918 | Input/Output: [[26.515771361675377 59] 85.51577136167538]
Test Case: 919 | Input/Output: [[-79.85544687442479 -51] -130.85544687442479]
Test Case: 920 | Input/Output: [[-7.110741779465329 -60] -67.11074177946533]
Test Case: 921 | Input/Output: [[-78.22717417688759 -30] -108.22717417688759]
Test Case: 922 | Input/Output: [[-76.23477697832087 -70] -146.23477697832087]
Test Case: 923 | Input/Output: [[40.21846615928462 -15] 25.218466159284617]
Test Case: 924 | Input/Output: [[32.10227143667771 -56] -23.89772856332229]
Test Case: 925 | Input/Output: [[-48.91246037367587 -68] -116.91246037367587]
Test Case: 926 | Input/Output: [[-60.81014555638424 87] 26.189854443615758]
Test Case: 927 | Input/Output: [[2.965170307210201 74] 76.9651703072102]
Test Case: 928 | Input/Output: [[-87.40985223298041 -78] -165.40985223298043]
Test Case: 929 | Input/Output: [[16.23352252730173 29] 45.23352252730173]
Test Case: 930 | Input/Output: [[-0.5295120540668847 -55] -55.529512054066885]
Test Case: 931 | Input/Output: [[-94.16539418189984 43] -51.16539418189984]
Test Case: 932 | Input/Output: [[-81.406874741397 27] -54.406874741397004]
Test Case: 933 | Input/Output: [[-74.24570292411727 -58] -132.24570292411727]
Test Case: 934 | Input/Output: [[48.361915625636215 -68] -19.638084374363785]
Test Case: 935 | Input/Output: [[-86.44724174918083 41] -45.44724174918083]
Test Case: 936 | Input/Output: [[-37.843135851022765 18] -19.843135851022765]
Test Case: 937 | Input/Output: [[4.915595025050095 -83] -78.0844049749499]
Test Case: 938 | Input/Output: [[5.472169534908517 -53] -47.52783046509148]
Test Case: 939 | Input/Output: [[86.71939529497621 64] 150.7193952949762]
Test Case: 940 | Input/Output: [[-66.41497587229703 -90] -156.41497587229702]
Test Case: 941 | Input/Output: [[23.257925298031196 -93] -69.7420747019688]
Test Case: 942 | Input/Output: [[-48.62118256338081 33] -15.621182563380813]
Test Case: 943 | Input/Output: [[32.42708809766913 -90] -57.57291190233087]
Test Case: 944 | Input/Output: [[-49.16932993409067 89] 39.83067006590933]
Test Case: 945 | Input/Output: [[60.631885978459195 -4] 56.631885978459195]
Test Case: 946 | Input/Output: [[15.645219331837097 19] 34.6452193318371]
Test Case: 947 | Input/Output: [[-43.51097953545355 -59] -102.51097953545354]
Test Case: 948 | Input/Output: [[-5.7844824164423585 18] 12.215517583557642]
Test Case: 949 | Input/Output: [[-12.84015707667136 -44] -56.84015707667136]
Test Case: 950 | Input/Output: [[39.23250993829774 84] 123.23250993829774]
Test Case: 951 | Input/Output: [[-49.57853144693394 38] -11.578531446933937]
Test Case: 952 | Input/Output: [[25.75607926048555 2] 27.75607926048555]
Test Case: 953 | Input/Output: [[-11.891923348913892 -3] -14.891923348913892]
Test Case: 954 | Input/Output: [[92.8333749959624 -52] 40.8333749959624]
Test Case: 955 | Input/Output: [[93.73186119315622 -48] 45.73186119315622]
Test Case: 956 | Input/Output: [[-48.90740287940103 -8] -56.90740287940103]
Test Case: 957 | Input/Output: [[16.28999263717637 61] 77.28999263717637]
Test Case: 958 | Input/Output: [[12.816092589921823 -49] -36.18390741007818]
Test Case: 959 | Input/Output: [[-45.51973686281843 -2] -47.51973686281843]
Test Case: 960 | Input/Output: [[-74.34611631891957 69] -5.34611631891957]
Test Case: 961 | Input/Output: [[40.61242029254524 -76] -35.38757970745476]
Test Case: 962 | Input/Output: [[67.54177062858048 21] 88.54177062858048]
Test Case: 963 | Input/Output: [[40.71559240681208 -67] -26.28440759318792]
Test Case: 964 | Input/Output: [[-99.23432674148715 78] -21.234326741487152]
Test Case: 965 | Input/Output: [[89.58723367723042 61] 150.58723367723042]
Test Case: 966 | Input/Output: [[8.161891949822461 -36] -27.83810805017754]
Test Case: 967 | Input/Output: [[82.81146604234897 38] 120.81146604234897]
Test Case: 968 | Input/Output: [[75.13705328619616 8] 83.13705328619616]
Test Case: 969 | Input/Output: [[-63.65215542833662 80] 16.34784457166338]
Test Case: 970 | Input/Output: [[-48.46394235601623 -9] -57.46394235601623]
Test Case: 971 | Input/Output: [[88.82930260595737 85] 173.82930260595737]
Test Case: 972 | Input/Output: [[-29.69876744405397 48] 18.30123255594603]
Test Case: 973 | Input/Output: [[-34.518486157330614 53] 18.481513842669386]
Test Case: 974 | Input/Output: [[-0.3618191890407445 -27] -27.361819189040745]
Test Case: 975 | Input/Output: [[42.0755869239014 63] 105.0755869239014]
Test Case: 976 | Input/Output: [[-89.43501327177492 -38] -127.43501327177492]
Test Case: 977 | Input/Output: [[13.886558004843778 -94] -80.11344199515622]
Test Case: 978 | Input/Output: [[43.656518458073265 57] 100.65651845807326]
Test Case: 979 | Input/Output: [[6.6939541965315215 -53] -46.30604580346848]
Test Case: 980 | Input/Output: [[-31.21700848607145 -88] -119.21700848607145]
Test Case: 981 | Input/Output: [[-67.03554155905726 13] -54.035541559057265]
Test Case: 982 | Input/Output: [[99.40870470376589 39] 138.4087047037659]
Test Case: 983 | Input/Output: [[55.34815870723142 17] 72.34815870723142]
Test Case: 984 | Input/Output: [[70.09323681335437 69] 139.09323681335437]
Test Case: 985 | Input/Output: [[-92.80684493329031 50] -42.80684493329031]
Test Case: 986 | Input/Output: [[60.735250820023566 44] 104.73525082002357]
Test Case: 987 | Input/Output: [[-98.8304870179802 69] -29.830487017980204]
Test Case: 988 | Input/Output: [[-49.915490511092145 -9] -58.915490511092145]
Test Case: 989 | Input/Output: [[28.53135372267056 23] 51.53135372267056]
Test Case: 990 | Input/Output: [[-75.99153742430363 -83] -158.99153742430363]
Test Case: 991 | Input/Output: [[37.75506160124357 73] 110.75506160124357]
Test Case: 992 | Input/Output: [[88.46030278809167 15] 103.46030278809167]
Test Case: 993 | Input/Output: [[14.085106221122217 -32] -17.914893778877783]
Test Case: 994 | Input/Output: [[-54.67586321367317 -88] -142.67586321367315]
Test Case: 995 | Input/Output: [[-48.03131304110353 -83] -131.03131304110354]
Test Case: 996 | Input/Output: [[17.92262455487743 56] 73.92262455487743]
Test Case: 997 | Input/Output: [[-16.220530470186787 37] 20.779469529813213]
Test Case: 998 | Input/Output: [[-70.15575934194682 36] -34.15575934194682]
Test Case: 999 | Input/Output: [[-95.2568702911212 7] -88.2568702911212]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 118 65 76 -45 92 -89 126 67 -9 -114 41 47 -97 101 113 121
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 54356.0
Test mean error for best: 27.17800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -92.7479372313
Correct output: 172.561551159  | Program output: 79.561551159  
Correct output: 13.439114403   | Program output: -24.560885597 
Correct output: -153.7909193035 | Program output: -83.7909193035
Correct output: -102.5026743292 | Program output: -63.5026743292
Correct output: 141.0859082546 | Program output: 42.0859082546 
Correct output: 172.2482707672 | Program output: 92.2482707672 
Correct output: -78.6254419982 | Program output: -98.6254419982
Correct output: -0.8704914806  | Program output: -3.8704914806 
Correct output: -105.1901476719 | Program output: -98.1901476719
Correct output: -11.6807030059 | Program output: 9.3192969941  
Correct output: -13.7752479931 | Program output: -43.7752479931
Correct output: 25.6838047231  | Program output: 2.6838047231  
Correct output: -54.5626932483 | Program output: 33.4373067517 
Correct output: 66.1064961654  | Program output: 2.1064961654  
Correct output: -110.2233087634 | Program output: -13.2233087634
Correct output: 75.9088754934  | Program output: 95.9088754934 
Correct output: 62.0044816678  | Program output: 49.0044816678 
Correct output: 152.9330618983 | Program output: 66.9330618983 
Correct output: -90.706511563  | Program output: -29.706511563 
Correct output: 64.3580372038  | Program output: 63.3580372038 
Correct output: 17.4418589273  | Program output: 42.4418589273 
Correct output: 23.1099363942  | Program output: -16.8900636058
Correct output: 141.9894473185 | Program output: 55.9894473185 
Correct output: 15.8089845438  | Program output: -34.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_yankdup integer_dec integer_div float_yank float_div integer_dup_times integer_mult float_cos float_cos integer_dup_times float_rot float_inc float_add 35.372239689310504 in1 float_inc print_float integer_div)
Errors: [96.0 12 93.0 2 38.0 12 70.0 2 39.0 3 99.0 2 80.0 2 20.0 1 3.0 1 7.0 3 21.0 13 30.0 1 23.0 1 88.0 13 64.0 2 97.0 2 20.0 1 13.0 2 86.0 3 61.0 2 1.0 1 25.0 2 40.0 11 86.0 3 50.0 12]
Total: 1359.0
Mean: 27.18
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 18292.1642921
Median total errors in population: 25339.0
Error averages by case: (718.1555015999995 12.352 741.5321405000014 12.52 707.3580918000005 12.271 745.1263113000022 13.976 726.6230541999983 13.947 734.0756669999977 12.981 740.7591861999977 13.223 719.5016753000017 13.157 691.5005449999989 12.122 723.1587778000006 13.897 701.6269165000017 13.774 707.0169500000004 13.137 693.8696210999998 12.244 723.6883356000008 13.944 708.7748207999992 12.255 735.1793307999988 13.913 719.5952443000008 12.426 706.4831063000008 12.423 737.0717848000023 13.225 727.1875465999967 12.189 700.1346604000006 12.283 708.2911778999983 12.457 706.5451574999993 13.001 734.4961332999992 13.238 710.4245555000006 13.033)
Error minima by case: (0.2521 8 1.5616 2 0.2264 8 24.1715 2 4.1293 3 29.9141 1 1.2483 2 0.6513 1 0.0191 1 5.0 2 0.3193 7 0.395 1 0.6838 1 0.5461 8 0.1065 2 11.8499 2 0.5959 1 1.9336 2 18.0669 2 0.2935 1 0.42 1 0.1683 2 0.1099 7 29.0106 2 0.629 7)
Average genome size in population (length): 51.742
Average program size in population (points): 52.742
Average percent parens in population: 0.040
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.315
Error (vector) diversity:			 0.341
Behavioral diversity:				 0.363
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1296791
--- Timings ---
Current time: 1529615975121 milliseconds
Total Time:           3.4 seconds
Initialization:       0.1 seconds,  3.4%
Reproduction:         0.6 seconds, 16.4%
Fitness Testing:      2.7 seconds, 80.2%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 54356.0
Test mean error for best: 27.17800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -92.7479372313
Correct output: 172.561551159  | Program output: 79.561551159  
Correct output: 13.439114403   | Program output: -24.560885597 
Correct output: -153.7909193035 | Program output: -83.7909193035
Correct output: -102.5026743292 | Program output: -63.5026743292
Correct output: 141.0859082546 | Program output: 42.0859082546 
Correct output: 172.2482707672 | Program output: 92.2482707672 
Correct output: -78.6254419982 | Program output: -98.6254419982
Correct output: -0.8704914806  | Program output: -3.8704914806 
Correct output: -105.1901476719 | Program output: -98.1901476719
Correct output: -11.6807030059 | Program output: 9.3192969941  
Correct output: -13.7752479931 | Program output: -43.7752479931
Correct output: 25.6838047231  | Program output: 2.6838047231  
Correct output: -54.5626932483 | Program output: 33.4373067517 
Correct output: 66.1064961654  | Program output: 2.1064961654  
Correct output: -110.2233087634 | Program output: -13.2233087634
Correct output: 75.9088754934  | Program output: 95.9088754934 
Correct output: 62.0044816678  | Program output: 49.0044816678 
Correct output: 152.9330618983 | Program output: 66.9330618983 
Correct output: -90.706511563  | Program output: -29.706511563 
Correct output: 64.3580372038  | Program output: 63.3580372038 
Correct output: 17.4418589273  | Program output: 42.4418589273 
Correct output: 23.1099363942  | Program output: -16.8900636058
Correct output: 141.9894473185 | Program output: 55.9894473185 
Correct output: 15.8089845438  | Program output: -34.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_yankdup integer_dec integer_div float_yank float_div integer_dup_times integer_mult float_cos float_cos integer_dup_times float_rot float_inc float_add 35.372239689310504 in1 float_inc print_float integer_div)
Errors: [96.0 12 93.0 2 38.0 12 70.0 2 39.0 3 99.0 2 80.0 2 20.0 1 3.0 1 7.0 3 21.0 13 30.0 1 23.0 1 88.0 13 64.0 2 97.0 2 20.0 1 13.0 2 86.0 3 61.0 2 1.0 1 25.0 2 40.0 11 86.0 3 50.0 12]
Total: 1359.0
Mean: 27.18
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 7094.0334259000065
Median total errors in population: 2170.1189999999997
Error averages by case: (262.5239228000006 11.994 325.7667443999997 10.222 242.15339109999977 11.893 326.6661997000014 11.423 291.7633273000017 11.291 308.81385610000143 10.081 323.4001493999997 10.777 273.3624311999986 10.616 214.8807389999989 9.527 287.05494790000165 11.186 237.3894191999997 12.997 243.23088220000085 10.596 230.19941319999953 9.824 278.99350870000063 13.298 259.2548225999984 9.806 305.54925600000223 11.069 274.23521300000107 10.161 251.09228760000147 10.075 313.0127887000002 10.686 289.09541739999895 9.617 240.12873930000077 9.801 246.91503870000122 10.2 243.07584290000057 12.174 306.37170359999993 10.714 246.79238390000035 12.283)
Error minima by case: (0.2521 7 1.5616 2 0.2264 8 21.2091 2 8.7355 3 0.0 1 1.2483 2 0.6513 1 0.0191 1 5.0 1 0.3193 6 0.7752 1 0.6838 1 3.4373 8 0.1065 2 5.2233 2 0.0911 1 1.9336 2 13.0 2 0.2935 1 0.42 1 0.1683 2 2.1092 8 13.0 2 0.629 7)
Average genome size in population (length): 61.727
Average program size in population (points): 62.727
Average percent parens in population: 0.022
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.493
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.794
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.794
Total error diversity:				 0.305
Error (vector) diversity:			 0.322
Behavioral diversity:				 0.356
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2843841
--- Timings ---
Current time: 1529615980886 milliseconds
Total Time:           9.4 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.0 seconds, 43.2%
Fitness Testing:      4.7 seconds, 50.0%
Report:               0.5 seconds,  5.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 54356.0
Test mean error for best: 27.17800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -92.7479372313
Correct output: 172.561551159  | Program output: 79.561551159  
Correct output: 13.439114403   | Program output: -24.560885597 
Correct output: -153.7909193035 | Program output: -83.7909193035
Correct output: -102.5026743292 | Program output: -63.5026743292
Correct output: 141.0859082546 | Program output: 42.0859082546 
Correct output: 172.2482707672 | Program output: 92.2482707672 
Correct output: -78.6254419982 | Program output: -98.6254419982
Correct output: -0.8704914806  | Program output: -3.8704914806 
Correct output: -105.1901476719 | Program output: -98.1901476719
Correct output: -11.6807030059 | Program output: 9.3192969941  
Correct output: -13.7752479931 | Program output: -43.7752479931
Correct output: 25.6838047231  | Program output: 2.6838047231  
Correct output: -54.5626932483 | Program output: 33.4373067517 
Correct output: 66.1064961654  | Program output: 2.1064961654  
Correct output: -110.2233087634 | Program output: -13.2233087634
Correct output: 75.9088754934  | Program output: 95.9088754934 
Correct output: 62.0044816678  | Program output: 49.0044816678 
Correct output: 152.9330618983 | Program output: 66.9330618983 
Correct output: -90.706511563  | Program output: -29.706511563 
Correct output: 64.3580372038  | Program output: 63.3580372038 
Correct output: 17.4418589273  | Program output: 42.4418589273 
Correct output: 23.1099363942  | Program output: -16.8900636058
Correct output: 141.9894473185 | Program output: 55.9894473185 
Correct output: 15.8089845438  | Program output: -34.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_pop} {:instruction print_integer} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction integer_add} {:instruction integer_add} {:instruction float_sub} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_dec} {:instruction in1} {:instruction float_inc} {:instruction float_max} {:instruction float_pop} {:instruction integer_dup_items} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_rot} {:instruction float_sin} {:instruction 81.7769458245786} {:instruction float_swap} {:instruction float_tan} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_dup} {:instruction 48.39563327920854} {:instruction integer_dup_items} {:instruction float_min} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_cos} {:instruction float_swap} {:instruction integer_shove} {:instruction tagged_345} {:instruction integer_dup} {:instruction float_div} {:instruction float_dup_items} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_max} {:instruction in1} {:instruction float_inc} {:instruction print_float} {:instruction integer_pop} {:instruction float_inc} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction integer_add} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_yank} {:instruction float_min} {:instruction integer_add} {:instruction float_rot} {:instruction in1} {:instruction float_sin} {:instruction in2} {:instruction float_sin} {:instruction float_swap} {:instruction float_max} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_add} {:instruction float_sub} {:instruction float_max})
Best program: (float_rot float_pop print_integer integer_swap integer_dup_items integer_add integer_add float_sub integer_mod float_mod integer_dec in1 float_inc float_max float_pop integer_dup_items integer_fromfloat float_tan integer_rot float_sin 81.7769458245786 float_swap float_tan float_sin integer_mod integer_div integer_dup 48.39563327920854 integer_dup_items float_min float_yankdup float_inc float_cos float_swap integer_shove tagged_345 integer_dup float_div float_dup_items integer_dup_times integer_shove integer_max in1 float_inc print_float integer_pop float_inc float_frominteger integer_sub integer_dec float_stackdepth integer_add integer_dup_items integer_mult integer_fromfloat integer_yank float_min integer_add float_rot in1 float_sin in2 float_sin float_swap float_max integer_rot integer_sub float_dup integer_add float_sub float_max)
Errors: [96.0 12 93.0 2 38.0 12 70.0 2 39.0 3 99.0 2 80.0 2 20.0 1 3.0 1 7.0 3 21.0 13 30.0 1 23.0 1 88.0 13 64.0 2 97.0 2 20.0 1 13.0 2 86.0 3 61.0 2 1.0 1 25.0 2 40.0 11 86.0 3 50.0 12]
Total: 1359.0
Mean: 27.18
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 4349.444481100001
Median total errors in population: 1388.0
Error averages by case: (200.0865630999998 12.602 207.0451622999995 5.401 152.31454070000004 12.601 191.8331843000001 6.627 164.09562620000008 6.717 205.05037760000047 4.712 198.25815250000056 6.158 150.7634445 5.728 122.38591290000011 4.809 144.23555030000045 6.622 135.80373510000013 13.303 148.06789570000026 5.692 136.5444173999999 5.171 191.12117779999997 13.379 169.9210494999995 5.204 200.15575230000036 5.953 150.04036639999995 5.539 138.82017909999996 5.62 199.3873177999995 5.903 175.523411 4.882 128.24915119999963 4.854 143.03960680000029 5.596 153.6188247999999 11.987 198.1221067999999 5.832 161.96897500000006 12.1)
Error minima by case: (0.2521 7 77.5616 2 0.2264 9 62.7909 2 11.5027 3 40.0859 1 78.0 2 12.3746 1 0.0934 1 5.0 1 7.3193 6 9.7752 1 0.6838 1 31.4373 9 0.1065 2 13.2233 2 18.0 1 11.0 2 64.9331 2 0.2935 1 1.0 1 0.1683 2 3.7442 8 53.9894 2 0.629 7)
Average genome size in population (length): 51.778
Average program size in population (points): 52.778
Average percent parens in population: 0.031
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.982
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 46
Genome diversity (% unique Plush genomes):	 0.663
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.663
Total error diversity:				 0.132
Error (vector) diversity:			 0.14
Behavioral diversity:				 0.157
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4140566
--- Timings ---
Current time: 1529615984836 milliseconds
Total Time:          13.0 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.6 seconds, 43.2%
Fitness Testing:      6.4 seconds, 49.2%
Report:               0.9 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 54422.0
Test mean error for best: 27.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -91.7479372313
Correct output: 172.561551159  | Program output: 80.561551159  
Correct output: 13.439114403   | Program output: -23.560885597 
Correct output: -153.7909193035 | Program output: -82.7909193035
Correct output: -102.5026743292 | Program output: -62.5026743292
Correct output: 141.0859082546 | Program output: 43.0859082546 
Correct output: 172.2482707672 | Program output: 93.2482707672 
Correct output: -78.6254419982 | Program output: -97.6254419982
Correct output: -0.8704914806  | Program output: -2.8704914806 
Correct output: -105.1901476719 | Program output: -97.1901476719
Correct output: -11.6807030059 | Program output: 10.3192969941 
Correct output: -13.7752479931 | Program output: -42.7752479931
Correct output: 25.6838047231  | Program output: 3.6838047231  
Correct output: -54.5626932483 | Program output: 34.4373067517 
Correct output: 66.1064961654  | Program output: 3.1064961654  
Correct output: -110.2233087634 | Program output: -12.2233087634
Correct output: 75.9088754934  | Program output: 96.9088754934 
Correct output: 62.0044816678  | Program output: 50.0044816678 
Correct output: 152.9330618983 | Program output: 67.9330618983 
Correct output: -90.706511563  | Program output: -28.706511563 
Correct output: 64.3580372038  | Program output: 64.3580372038 
Correct output: 17.4418589273  | Program output: 43.4418589273 
Correct output: 23.1099363942  | Program output: -15.8900636058
Correct output: 141.9894473185 | Program output: 56.9894473185 
Correct output: 15.8089845438  | Program output: -33.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_yankdup integer_dec integer_div float_yank float_div integer_dup_times integer_mult float_cos float_cos integer_dup_times float_rot float_inc float_add 35.372239689310504 in1 float_inc float_inc print_float integer_div)
Errors: [95.0 13 92.0 3 37.0 11 71.0 3 40.0 2 98.0 2 79.0 3 19.0 2 2.0 1 8.0 3 22.0 12 29.0 2 22.0 2 89.0 12 63.0 2 98.0 2 21.0 2 12.0 2 85.0 3 62.0 2 0.0 0 26.0 2 39.0 11 85.0 3 49.0 12]
Total: 1355.0
Mean: 27.1
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 4240.073817099999
Median total errors in population: 1367.0
Error averages by case: (205.3011557 12.367 201.9439239 3.383 154.7933031 12.36 181.81831640000001 4.199 154.3778813 4.526 206.96740210000002 2.93 190.5798556 4.047 139.73258500000003 3.302 124.307122 2.573 126.4954018 4.52 136.0032722 13.285 147.92443600000001 3.27 139.796478 3.077 194.92830269999996 13.307 175.8499832 3.352 205.0156415 3.644 135.3402715 3.137 131.2496755 3.48 195.6884057 3.875 173.4675268 2.9 120.7816351 2.594 139.4178999 3.443 156.5544435 11.579 195.6101141 3.857 165.24978449999998 11.872)
Error minima by case: (1.5715 9 91.0 2 5.4391 9 68.0 2 37.0 2 97.0 1 78.0 2 18.0 1 0.9662 1 5.0 1 11.7764 9 11.7634 1 10.6884 1 54.6584 10 29.7343 2 95.0 2 16.9882 1 11.0 2 84.0 2 59.0 1 0.0 0 9.4419 2 13.2623 9 84.0 2 7.809 9)
Average genome size in population (length): 35.988
Average program size in population (points): 36.988
Average percent parens in population: 0.049
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.50825
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 163
Genome diversity (% unique Plush genomes):	 0.515
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 163
Syntactic diversity (% unique Push programs):	 0.515
Total error diversity:				 0.033
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5042316
--- Timings ---
Current time: 1529615988279 milliseconds
Total Time:          16.7 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.2 seconds, 42.8%
Fitness Testing:      8.0 seconds, 47.6%
Report:               1.5 seconds,  8.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 54422.0
Test mean error for best: 27.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -91.7479372313
Correct output: 172.561551159  | Program output: 80.561551159  
Correct output: 13.439114403   | Program output: -23.560885597 
Correct output: -153.7909193035 | Program output: -82.7909193035
Correct output: -102.5026743292 | Program output: -62.5026743292
Correct output: 141.0859082546 | Program output: 43.0859082546 
Correct output: 172.2482707672 | Program output: 93.2482707672 
Correct output: -78.6254419982 | Program output: -97.6254419982
Correct output: -0.8704914806  | Program output: -2.8704914806 
Correct output: -105.1901476719 | Program output: -97.1901476719
Correct output: -11.6807030059 | Program output: 10.3192969941 
Correct output: -13.7752479931 | Program output: -42.7752479931
Correct output: 25.6838047231  | Program output: 3.6838047231  
Correct output: -54.5626932483 | Program output: 34.4373067517 
Correct output: 66.1064961654  | Program output: 3.1064961654  
Correct output: -110.2233087634 | Program output: -12.2233087634
Correct output: 75.9088754934  | Program output: 96.9088754934 
Correct output: 62.0044816678  | Program output: 50.0044816678 
Correct output: 152.9330618983 | Program output: 67.9330618983 
Correct output: -90.706511563  | Program output: -28.706511563 
Correct output: 64.3580372038  | Program output: 64.3580372038 
Correct output: 17.4418589273  | Program output: 43.4418589273 
Correct output: 23.1099363942  | Program output: -15.8900636058
Correct output: 141.9894473185 | Program output: 56.9894473185 
Correct output: 15.8089845438  | Program output: -33.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_dup_items} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_yankdup integer_dec integer_div float_yank float_div integer_dup_times integer_mult float_cos float_dup_items integer_dup_times float_rot float_inc float_add 35.372239689310504 in1 float_inc float_inc print_float integer_div)
Errors: [95.0 13 92.0 3 37.0 11 71.0 3 40.0 2 98.0 2 79.0 3 19.0 2 2.0 1 8.0 3 22.0 12 29.0 2 22.0 2 89.0 12 63.0 2 98.0 2 21.0 2 12.0 2 85.0 3 62.0 2 0.0 0 26.0 2 39.0 11 85.0 3 49.0 12]
Total: 1355.0
Mean: 27.1
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2757.4517936
Median total errors in population: 1359.0
Error averages by case: (147.93995840000002 12.104 146.0655798 2.73 93.70495779999999 12.097 124.70244919999999 2.923 95.35843120000001 3.768 151.41777489999996 2.699 133.92107339999998 2.86 77.50229070000002 1.944 61.1023548 1.784 65.4572436 3.774 77.85108079999999 13.11 86.35833930000001 1.936 79.677451 1.878 140.7729766 13.112 118.162241 2.703 149.6140288 2.83 77.02310260000002 1.882 70.50386739999999 2.733 139.37055180000002 3.625 115.81515190000003 2.651 59.3406962 1.784 81.45243599999999 2.73 95.53827469999999 11.226 139.28300300000004 3.635 104.9274787 12.071)
Error minima by case: (1.3549 8 58.6278 2 3.6278 9 69.0 2 38.0 2 64.6278 1 45.6278 2 14.3722 1 1.0 1 6.0 3 12.1381 9 4.3722 1 9.6884 1 55.0201 9 27.782 2 96.0 2 19.0 1 11.0 2 51.6278 2 60.0 1 0.0 0 15.5447 2 5.6278 10 51.6278 2 13.9118 9)
Average genome size in population (length): 28.497
Average program size in population (points): 29.497
Average percent parens in population: 0.042
Minimum age in population: 4.0
Maximum age in population: 7.625
Average age in population: 6.049875
Median age in population: 6.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 350
Genome diversity (% unique Plush genomes):	 0.425
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 350
Syntactic diversity (% unique Push programs):	 0.425
Total error diversity:				 0.021
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5754891
--- Timings ---
Current time: 1529615991406 milliseconds
Total Time:          20.0 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.7 seconds, 43.4%
Fitness Testing:      9.3 seconds, 46.8%
Report:               1.8 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 54422.0
Test mean error for best: 27.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -91.7479372313
Correct output: 172.561551159  | Program output: 80.561551159  
Correct output: 13.439114403   | Program output: -23.560885597 
Correct output: -153.7909193035 | Program output: -82.7909193035
Correct output: -102.5026743292 | Program output: -62.5026743292
Correct output: 141.0859082546 | Program output: 43.0859082546 
Correct output: 172.2482707672 | Program output: 93.2482707672 
Correct output: -78.6254419982 | Program output: -97.6254419982
Correct output: -0.8704914806  | Program output: -2.8704914806 
Correct output: -105.1901476719 | Program output: -97.1901476719
Correct output: -11.6807030059 | Program output: 10.3192969941 
Correct output: -13.7752479931 | Program output: -42.7752479931
Correct output: 25.6838047231  | Program output: 3.6838047231  
Correct output: -54.5626932483 | Program output: 34.4373067517 
Correct output: 66.1064961654  | Program output: 3.1064961654  
Correct output: -110.2233087634 | Program output: -12.2233087634
Correct output: 75.9088754934  | Program output: 96.9088754934 
Correct output: 62.0044816678  | Program output: 50.0044816678 
Correct output: 152.9330618983 | Program output: 67.9330618983 
Correct output: -90.706511563  | Program output: -28.706511563 
Correct output: 64.3580372038  | Program output: 64.3580372038 
Correct output: 17.4418589273  | Program output: 43.4418589273 
Correct output: 23.1099363942  | Program output: -15.8900636058
Correct output: 141.9894473185 | Program output: 56.9894473185 
Correct output: 15.8089845438  | Program output: -33.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_yankdup integer_dec integer_div float_yank float_div integer_dup_times integer_mult float_cos float_cos integer_dup_times float_rot float_inc float_add 35.372239689310504 in1 float_inc float_inc print_float integer_div)
Errors: [95.0 13 92.0 3 37.0 11 71.0 3 40.0 2 98.0 2 79.0 3 19.0 2 2.0 1 8.0 3 22.0 12 29.0 2 22.0 2 89.0 12 63.0 2 98.0 2 21.0 2 12.0 2 85.0 3 62.0 2 0.0 0 26.0 2 39.0 11 85.0 3 49.0 12]
Total: 1355.0
Mean: 27.1
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2534.5933695999997
Median total errors in population: 1359.0
Error averages by case: (139.80046800000002 12.122 137.7826038 2.615 84.90805269999998 12.057 116.21051119999998 2.705 86.6077816 3.595 143.26374999999996 2.629 125.49572400000001 2.665 68.45551820000001 1.728 51.09539810000001 1.631 56.38390640000001 3.628 68.35880250000001 13.067 77.516417 1.718 69.8493439 1.673 132.62514159999998 13.07 108.76584079999999 2.567 140.85699219999998 2.672 68.2716876 1.677 61.519261199999995 2.588 131.04983280000002 3.569 107.32245640000001 2.58 50.19338280000001 1.612 72.759468 2.588 86.5363896 11.186 130.9841712 3.575 96.33046799999998 12.133)
Error minima by case: (1.7946 9 92.0 2 11.9817 9 69.0 2 38.0 2 98.0 1 79.0 2 19.0 1 0.9662 1 6.0 3 11.7764 10 13.8709 1 10.6884 1 54.6584 10 26.9672 2 96.0 2 19.0 1 12.0 2 85.0 2 60.0 1 0.0 0 15.9844 2 13.2623 10 85.0 2 14.3515 10)
Average genome size in population (length): 27.279
Average program size in population (points): 28.279
Average percent parens in population: 0.040
Minimum age in population: 5.0
Maximum age in population: 9.25
Average age in population: 7.5383125
Median age in population: 7.625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 302
Genome diversity (% unique Plush genomes):	 0.495
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 302
Syntactic diversity (% unique Push programs):	 0.495
Total error diversity:				 0.015
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6436866
--- Timings ---
Current time: 1529615994361 milliseconds
Total Time:          22.9 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.0 seconds, 43.8%
Fitness Testing:     10.7 seconds, 46.6%
Report:               2.1 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 54422.0
Test mean error for best: 27.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -91.7479372313
Correct output: 172.561551159  | Program output: 80.561551159  
Correct output: 13.439114403   | Program output: -23.560885597 
Correct output: -153.7909193035 | Program output: -82.7909193035
Correct output: -102.5026743292 | Program output: -62.5026743292
Correct output: 141.0859082546 | Program output: 43.0859082546 
Correct output: 172.2482707672 | Program output: 93.2482707672 
Correct output: -78.6254419982 | Program output: -97.6254419982
Correct output: -0.8704914806  | Program output: -2.8704914806 
Correct output: -105.1901476719 | Program output: -97.1901476719
Correct output: -11.6807030059 | Program output: 10.3192969941 
Correct output: -13.7752479931 | Program output: -42.7752479931
Correct output: 25.6838047231  | Program output: 3.6838047231  
Correct output: -54.5626932483 | Program output: 34.4373067517 
Correct output: 66.1064961654  | Program output: 3.1064961654  
Correct output: -110.2233087634 | Program output: -12.2233087634
Correct output: 75.9088754934  | Program output: 96.9088754934 
Correct output: 62.0044816678  | Program output: 50.0044816678 
Correct output: 152.9330618983 | Program output: 67.9330618983 
Correct output: -90.706511563  | Program output: -28.706511563 
Correct output: 64.3580372038  | Program output: 64.3580372038 
Correct output: 17.4418589273  | Program output: 43.4418589273 
Correct output: 23.1099363942  | Program output: -15.8900636058
Correct output: 141.9894473185 | Program output: 56.9894473185 
Correct output: 15.8089845438  | Program output: -33.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction in2} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_mult} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger in2 integer_dec integer_div float_yank float_div integer_dup_times integer_mult float_cos float_cos integer_dup_times float_rot float_mult float_add 35.372239689310504 in1 float_inc float_inc print_float integer_div)
Errors: [95.0 13 92.0 3 37.0 11 71.0 3 40.0 2 98.0 2 79.0 3 19.0 2 2.0 1 8.0 3 22.0 12 29.0 2 22.0 2 89.0 12 63.0 2 98.0 2 21.0 2 12.0 2 85.0 3 62.0 2 0.0 0 26.0 2 39.0 11 85.0 3 49.0 12]
Total: 1355.0
Mean: 27.1
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2466.2598419
Median total errors in population: 1359.0
Error averages by case: (137.1156801 12.193 134.75945659999996 2.728 82.04311880000002 11.858 113.55930589999998 2.822 83.8838644 3.43 140.29607860000002 2.601 122.42089010000002 2.775 65.3954784 1.828 48.8737034 1.6 53.5293019 3.604 66.3477544 12.888 74.5612274 1.821 67.7713847 1.782 130.1451644 12.881 106.73752239999999 2.548 138.96446749999998 2.647 65.3489293 1.781 58.326216099999996 2.559 128.0183141 3.546 104.70288390000002 2.557 46.9452769 1.435 70.03211069999999 2.558 83.9121064 11.119 127.96359609999999 3.552 93.42400940000002 12.069)
Error minima by case: (2.7946 9 90.7846 2 12.9817 10 69.0 2 38.0 2 59.309 1 79.0 2 19.0 1 1.3279 1 6.0 3 12.1381 11 14.2327 1 10.6884 1 55.0201 10 15.6704 2 96.0 2 5.8681 1 12.0 2 71.1561 2 60.0 1 0.0 0 16.9844 2 13.2623 10 60.2125 2 15.3515 10)
Average genome size in population (length): 26.792
Average program size in population (points): 27.792
Average percent parens in population: 0.040
Minimum age in population: 6.5
Maximum age in population: 10.96875
Average age in population: 9.01975
Median age in population: 9.0625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 184
Genome diversity (% unique Plush genomes):	 0.539
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 184
Syntactic diversity (% unique Push programs):	 0.539
Total error diversity:				 0.011
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7106666
--- Timings ---
Current time: 1529615997656 milliseconds
Total Time:          26.2 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.7 seconds, 44.8%
Fitness Testing:     12.0 seconds, 45.6%
Report:               2.4 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2510.9492874999996
Median total errors in population: 1355.0
Error averages by case: (137.56465300000005 12.641 135.95053739999997 3.348 83.2229087 11.318 117.42130249999998 3.468 87.52544079999998 3.056 140.95587809999995 2.751 123.8025314 3.402 68.0416807 2.471 50.67684740000001 1.727 57.7191995 3.731 68.0293037 12.361 76.160333 2.456 68.07295509999997 2.423 131.4198485999999 12.331 106.82517229999995 2.671 141.78402419999995 2.766 67.3136164 2.414 59.12858500000001 2.676 129.03956350000004 3.642 107.82549000000003 2.675 47.97108130000001 1.063 71.38437409999997 2.671 84.98817810000001 11.089 128.82965129999997 3.682 94.41813139999998 12.045)
Error minima by case: (0.6131 9 90.0 2 10.8252 9 69.0 2 38.0 2 96.0 1 77.0 2 17.0 1 0.0 0 6.0 2 10.6863 10 12.9672 1 9.0046 1 54.1272 9 28.7343 2 96.0 1 19.0 1 10.0 1 83.0 2 60.0 1 0.0 0 14.7631 2 12.2623 8 83.0 2 13.1166 10)
Average genome size in population (length): 25.54
Average program size in population (points): 26.54
Average percent parens in population: 0.039
Minimum age in population: 7.75
Maximum age in population: 12.34375
Average age in population: 10.451671875
Median age in population: 10.484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 139
Genome diversity (% unique Plush genomes):	 0.479
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 139
Syntactic diversity (% unique Push programs):	 0.479
Total error diversity:				 0.018
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 7745166
--- Timings ---
Current time: 1529616000613 milliseconds
Total Time:          29.2 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.2 seconds, 45.1%
Fitness Testing:     13.3 seconds, 45.4%
Report:               2.6 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2222.0230089999995
Median total errors in population: 1355.0
Error averages by case: (127.15456950000001 12.94 125.22641679999998 3.406 71.47984649999998 11.074 105.37575570000001 3.49 75.30916119999999 2.565 130.6731361 2.513 112.80859709999999 3.45 55.0452662 2.498 37.3145054 1.498 44.773348500000004 3.498 56.723464400000005 12.068 64.1078014 2.487 56.25065879999999 2.453 121.6727013 12.079 95.5817265 2.461 130.12616150000002 2.514 56.6255425 2.46 47.83140290000001 2.465 118.36476030000001 3.454 96.1730754 2.464 36.442585199999996 0.581 61.079643499999996 2.464 73.08382939999998 11.07 118.2662679 3.468 83.06978500000001 12.043)
Error minima by case: (1.9796 8 90.0 2 12.1666 9 70.0 2 39.0 2 96.0 2 77.0 2 17.0 1 0.0 0 7.0 2 12.9532 8 15.0477 1 7.0046 1 2.694 10 8.405 2 58.3546 1 20.0 1 10.0 1 83.0 3 38.8378 2 0.0 0 16.1694 2 13.2623 10 83.0 3 14.5365 10)
Average genome size in population (length): 25.333
Average program size in population (points): 26.333
Average percent parens in population: 0.039
Minimum age in population: 9.375
Maximum age in population: 13.7890625
Average age in population: 11.9158984375
Median age in population: 11.95703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 163
Genome diversity (% unique Plush genomes):	 0.441
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 163
Syntactic diversity (% unique Push programs):	 0.441
Total error diversity:				 0.013
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 8378491
--- Timings ---
Current time: 1529616003797 milliseconds
Total Time:          32.3 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        14.7 seconds, 45.4%
Fitness Testing:     14.6 seconds, 45.2%
Report:               2.9 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_min} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add float_min integer_sub float_frominteger integer_yankdup integer_dec integer_div float_yank float_div integer_dup_times integer_mult float_cos float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2296.6290486000003
Median total errors in population: 1355.0
Error averages by case: (129.70611150000002 12.982 127.6988636 3.405 74.3469337 11.222 108.16818919999997 3.526 78.2356501 2.664 133.16495799999996 2.553 115.30704710000002 3.483 57.74032549999999 2.534 41.0394603 1.501 47.72672090000001 3.501 60.4264334 12.067 66.84227680000001 2.532 59.989410899999996 2.451 124.5774462 12.161 99.24399729999998 2.501 133.59720329999996 2.467 59.518179499999995 2.495 50.5739987 2.471 120.87041740000002 3.49 99.11243190000002 2.508 39.4507852 0.712 64.0945383 2.504 76.21502020000001 11.087 120.78282699999997 3.504 85.7928226 12.086)
Error minima by case: (34.1202 7 90.0 2 23.9331 10 69.0 2 38.0 2 96.0 1 77.0 2 17.0 1 0.0 0 6.0 2 17.0951 9 7.3722 1 11.6884 1 23.1585 9 27.5189 2 78.3944 1 19.0 1 10.0 1 83.0 2 59.2538 1 0.0 0 18.9304 2 14.2623 9 83.0 2 21.5633 8)
Average genome size in population (length): 25.369
Average program size in population (points): 26.369
Average percent parens in population: 0.039
Minimum age in population: 10.375
Maximum age in population: 15.078125
Average age in population: 13.41355078125
Median age in population: 13.484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 101
Genome diversity (% unique Plush genomes):	 0.544
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 101
Syntactic diversity (% unique Push programs):	 0.544
Total error diversity:				 0.016
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 9012716
--- Timings ---
Current time: 1529616007045 milliseconds
Total Time:          35.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.2 seconds, 45.7%
Fitness Testing:     15.9 seconds, 44.8%
Report:               3.3 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2535.1862923
Median total errors in population: 1351.0
Error averages by case: (137.8663644 12.957 136.25647609999996 3.352 83.2534093 11.614 118.46960019999999 3.69 88.78565409999999 3.035 141.55043579999997 2.713 124.0331399 3.634 67.23238090000001 2.697 50.493661900000006 1.465 58.7028255 3.465 70.90369690000001 11.86 75.95246420000001 2.688 69.10756719999999 2.411 134.3508494 12.352 107.85681149999998 2.641 143.4144261 2.22 70.00561609999998 2.649 59.891478799999994 2.417 129.46049990000003 3.622 109.34249150000001 2.648 50.1595269 1.283 74.43801979999999 2.647 85.08496109999999 10.897 129.34014989999997 3.651 94.5407849 12.085)
Error minima by case: (1.3744 9 54.6278 2 0.3722 7 69.0 2 38.0 2 60.6278 1 41.6278 2 16.3722 1 0.0 0 6.0 2 12.232 10 6.3722 1 11.6884 1 56.0849 10 25.6278 2 96.0 1 19.0 1 10.0 1 47.6278 2 60.0 1 0.0 0 17.0075 2 1.6278 10 47.6278 2 11.6278 9)
Average genome size in population (length): 25.351
Average program size in population (points): 26.351
Average percent parens in population: 0.039
Minimum age in population: 12.265625
Maximum age in population: 16.736328125
Average age in population: 14.826080078125
Median age in population: 14.8408203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 131
Genome diversity (% unique Plush genomes):	 0.515
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 131
Syntactic diversity (% unique Push programs):	 0.515
Total error diversity:				 0.018
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 9646491
--- Timings ---
Current time: 1529616010074 milliseconds
Total Time:          38.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.6 seconds, 45.6%
Fitness Testing:     17.3 seconds, 44.8%
Report:               3.6 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2339.2533349
Median total errors in population: 1341.0
Error averages by case: (129.67131050000003 12.965 128.12402249999997 2.724 74.60269119999998 12.026 112.47991249999998 3.614 82.46687639999998 2.794 133.35336399999994 2.634 115.83463630000001 3.563 58.845595499999995 2.629 41.66802560000001 0.846 52.26450130000002 2.816 64.18536840000002 11.992 67.40769269999998 2.606 60.22626539999999 1.77 128.10071639999995 12.893 99.22865239999997 2.564 137.38496489999997 1.713 63.19588469999999 2.577 50.976223100000006 1.776 121.23422350000006 3.546 103.09173090000003 2.573 43.1491734 1.608 67.6026763 2.574 76.36130000000001 10.314 121.08101309999996 3.581 85.9335139 12.085)
Error minima by case: (32.1202 9 88.0 2 21.9331 9 70.0 2 39.0 2 94.0 2 75.0 2 15.0 1 0.0 0 7.0 2 21.0 11 25.0 1 9.0046 1 58.4976 9 26.7343 1 97.0 1 20.0 1 8.0 1 81.0 3 61.0 2 0.0 0 17.9304 1 12.2623 10 81.0 3 19.5633 11)
Average genome size in population (length): 23.168
Average program size in population (points): 24.168
Average percent parens in population: 0.042
Minimum age in population: 13.7890625
Maximum age in population: 18.1533203125
Average age in population: 16.144490234375
Median age in population: 16.18798828125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 349
Genome diversity (% unique Plush genomes):	 0.348
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 349
Syntactic diversity (% unique Push programs):	 0.348
Total error diversity:				 0.022
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 10225691
--- Timings ---
Current time: 1529616013061 milliseconds
Total Time:          41.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.0 seconds, 45.7%
Fitness Testing:     18.6 seconds, 44.7%
Report:               3.9 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_yank} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_flush} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add float_yank integer_sub float_frominteger integer_sub float_frominteger float_flush integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2428.6269326
Median total errors in population: 1341.0
Error averages by case: (133.04423130000004 12.95 131.6103674 2.683 78.16254369999999 12.017 116.14743499999999 3.662 86.30019419999999 2.747 136.77811439999994 2.719 119.38560910000001 3.634 62.4245784 2.673 44.710426500000004 0.788 56.15592300000001 2.754 67.54418000000001 12.098 71.03707669999999 2.657 63.0763927 1.712 131.93171089999996 13.009 101.87637149999998 2.614 140.47674159999994 1.765 67.26870349999999 2.653 54.84885770000001 1.739 124.73596520000005 3.614 106.89718820000003 2.622 47.358904599999995 1.7 71.67072639999996 2.643 79.69099130000002 10.198 124.57045919999996 3.653 89.5422401 12.077)
Error minima by case: (1.6535 9 55.6278 2 0.6278 8 70.0 2 39.0 2 61.6278 2 42.6278 2 13.0 1 0.0 0 7.0 2 11.9008 11 7.3722 1 10.6884 1 55.6826 10 23.9672 1 97.0 1 20.0 1 6.0 1 48.6278 3 61.0 2 0.0 0 16.9564 1 2.6278 10 48.6278 3 12.6278 10)
Average genome size in population (length): 22.532
Average program size in population (points): 23.532
Average percent parens in population: 0.043
Minimum age in population: 15.08203125
Maximum age in population: 19.44384765625
Average age in population: 17.61570556640625
Median age in population: 17.63525390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 348
Genome diversity (% unique Plush genomes):	 0.387
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 348
Syntactic diversity (% unique Push programs):	 0.387
Total error diversity:				 0.022
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 10788991
--- Timings ---
Current time: 1529616015879 milliseconds
Total Time:          44.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        20.3 seconds, 45.7%
Fitness Testing:     19.9 seconds, 44.7%
Report:               4.1 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_mult float_add integer_yankdup integer_dec integer_div float_yank float_div integer_dup_times integer_mult float_cos float_cos float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2649.5319653
Median total errors in population: 1341.0
Error averages by case: (141.23756260000005 13.007 139.7726502 2.764 86.99113030000001 12.092 124.59512159999997 3.771 95.00537369999999 2.848 144.92399179999992 2.806 127.65226400000003 3.727 71.3939701 2.787 54.5361551 0.888 65.18431120000001 2.86 77.03068770000002 12.169 79.8809175 2.764 72.83694919999999 1.811 140.09915369999996 13.059 111.28554589999997 2.72 149.21974149999997 1.871 75.95351240000001 2.739 63.6648508 1.819 132.97385120000007 3.7 115.37802440000003 2.728 56.219801200000006 1.786 80.37502559999997 2.737 88.73140990000002 10.264 132.82064079999992 3.744 98.15632289999998 12.152)
Error minima by case: (32.1202 9 86.0 2 21.9331 10 71.0 3 40.0 2 92.0 2 73.0 2 13.0 2 0.0 0 8.0 2 22.0 11 23.0 2 9.6884 1 89.0 9 24.7343 1 98.0 1 21.0 2 6.0 1 79.0 3 62.0 2 0.0 0 17.9304 1 12.2623 10 79.0 3 19.5633 11)
Average genome size in population (length): 22.623
Average program size in population (points): 23.623
Average percent parens in population: 0.043
Minimum age in population: 16.08203125
Maximum age in population: 21.23046875
Average age in population: 19.14601220703125
Median age in population: 19.182373046875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 260
Genome diversity (% unique Plush genomes):	 0.467
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 260
Syntactic diversity (% unique Push programs):	 0.467
Total error diversity:				 0.026
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 11354566
--- Timings ---
Current time: 1529616019014 milliseconds
Total Time:          47.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.8 seconds, 46.0%
Fitness Testing:     21.2 seconds, 44.5%
Report:               4.4 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2604.8287302999997
Median total errors in population: 1341.0
Error averages by case: (139.1045939 12.956 138.34088049999997 2.757 85.02326079999999 12.049 122.95915359999998 3.774 93.22400049999997 2.864 143.39039529999994 2.806 126.23196300000002 3.716 69.57701789999999 2.791 52.583069500000015 0.915 63.47746520000001 2.873 75.03785720000003 12.139 77.89849459999998 2.77 70.97343149999998 1.817 138.05635629999995 13.039 109.53622339999997 2.718 147.35327109999997 1.894 74.2972728 2.73 61.9859422 1.819 131.49042110000005 3.702 113.49907490000002 2.729 54.546549800000015 1.788 78.47656269999999 2.735 86.82034080000001 10.239 131.30621649999995 3.733 96.17891519999998 12.107)
Error minima by case: (0.0204 7 87.0 2 10.1666 9 69.0 2 33.1782 2 93.0 1 74.0 2 9.301 1 0.0 0 6.0 2 13.5748 11 15.9853 1 9.6884 1 14.7618 9 26.7343 1 40.8988 1 19.0 1 7.0 1 80.0 2 21.382 1 1.0 1 14.1694 2 12.2623 9 80.0 2 12.5365 9)
Average genome size in population (length): 22.647
Average program size in population (points): 23.647
Average percent parens in population: 0.043
Minimum age in population: 18.15625
Maximum age in population: 22.553466796875
Average age in population: 20.57413586425781
Median age in population: 20.61798095703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 209
Genome diversity (% unique Plush genomes):	 0.497
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 209
Syntactic diversity (% unique Push programs):	 0.497
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 11920741
--- Timings ---
Current time: 1529616022050 milliseconds
Total Time:          50.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.3 seconds, 46.1%
Fitness Testing:     22.5 seconds, 44.4%
Report:               4.7 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction -22} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_mult float_frominteger integer_yankdup integer_dec integer_div float_yank float_div integer_dup_times integer_mult float_cos float_cos -22 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2382.1665556
Median total errors in population: 1341.0
Error averages by case: (130.98606020000003 12.934 130.00199079999996 2.652 76.21372050000001 12.009 114.52000199999998 3.656 84.5593745 2.736 135.14372699999996 2.681 117.76390800000003 3.604 60.649442300000004 2.669 42.6621528 0.776 54.4505186 2.746 65.49676830000001 12.085 69.07403459999999 2.649 61.1299656 1.697 129.95674329999997 12.996 100.04675979999998 2.609 138.66691239999997 1.756 65.3660783 2.618 52.951247699999996 1.702 123.10091250000002 3.586 105.06229710000002 2.61 45.427265900000016 1.667 69.63717709999997 2.614 77.77468760000002 10.181 123.01104309999994 3.622 87.59776559999999 12.061)
Error minima by case: (0.294 8 86.0 2 8.3787 9 69.0 2 38.0 2 92.0 1 73.0 2 13.0 1 0.0 0 6.0 2 11.232 10 7.3722 1 10.5039 1 55.0849 9 23.9672 2 96.0 1 19.0 1 6.0 1 79.0 2 60.0 1 0.0 0 12.3814 1 13.2623 9 79.0 2 10.7486 9)
Average genome size in population (length): 22.772
Average program size in population (points): 23.772
Average percent parens in population: 0.043
Minimum age in population: 19.412109375
Maximum age in population: 24.19921875
Average age in population: 22.06587243652344
Median age in population: 22.0902099609375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 162
Genome diversity (% unique Plush genomes):	 0.549
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 162
Syntactic diversity (% unique Push programs):	 0.549
Total error diversity:				 0.022
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 12490041
--- Timings ---
Current time: 1529616024835 milliseconds
Total Time:          53.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.6 seconds, 46.0%
Fitness Testing:     23.8 seconds, 44.5%
Report:               5.0 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add integer_mult float_cos float_cos integer_dup_times float_rot integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2287.2628664000003
Median total errors in population: 1341.0
Error averages by case: (127.36368850000002 12.936 126.50059029999998 2.623 72.3011615 12.005 110.79837759999998 3.613 80.6839394 2.682 131.62900769999996 2.64 114.2232592 3.583 56.691016499999996 2.62 38.6274915 0.754 50.48658340000001 2.694 61.75084300000002 12.076 65.21497859999998 2.599 57.3737363 1.658 126.25296699999997 12.993 96.41907969999995 2.569 134.90167709999997 1.709 61.596094799999996 2.591 49.1001662 1.665 119.55885370000001 3.56 101.17393800000002 2.571 41.574971 1.622 65.8298804 2.583 73.87316580000002 10.164 119.37125469999998 3.589 83.81714450000001 12.05)
Error minima by case: (1.2546 8 86.0 2 8.3787 9 71.0 3 33.0831 2 92.0 2 73.0 2 9.2058 2 0.0 0 8.0 2 10.7326 10 12.9285 2 9.6884 1 14.8569 9 26.7343 1 40.8037 1 21.0 2 6.0 1 79.0 2 21.2869 2 0.0 0 12.3814 1 12.2623 10 79.0 2 10.7486 10)
Average genome size in population (length): 22.894
Average program size in population (points): 23.894
Average percent parens in population: 0.043
Minimum age in population: 21.01123046875
Maximum age in population: 25.55264282226562
Average age in population: 23.53242526245117
Median age in population: 23.60403442382812
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 115
Genome diversity (% unique Plush genomes):	 0.538
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 115
Syntactic diversity (% unique Push programs):	 0.538
Total error diversity:				 0.021
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 13062391
--- Timings ---
Current time: 1529616027797 milliseconds
Total Time:          56.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.0 seconds, 46.1%
Fitness Testing:     25.0 seconds, 44.4%
Report:               5.2 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_yankdup integer_dec in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 2455.2346738
Median total errors in population: 1341.0
Error averages by case: (134.0230003 12.953 132.4274019 2.648 79.2546734 12.021 116.8714677 3.657 87.0743092 2.742 137.7391347 2.676 120.1648926 3.6 63.25278250000001 2.667 46.44670659999999 0.802 56.92786990000001 2.75 69.10805540000001 12.106 71.95176819999999 2.651 65.0515033 1.699 132.75408639999998 13.016 103.90927299999998 2.61 141.85341719999997 1.769 68.2007474 2.615 55.818603499999995 1.705 125.61036640000002 3.593 107.6905528 2.619 48.28052679999999 1.663 72.64319739999999 2.612 81.0731615 10.2 125.48998679999998 3.616 90.55418890000001 12.073)
Error minima by case: (1.427 9 56.2406 2 1.2406 9 69.0 2 38.0 2 62.2406 1 43.2406 2 14.0 1 0.0 0 6.0 2 3.3181 10 1.2236 1 9.6884 1 39.5639 9 26.7343 1 95.2245 1 19.0 1 7.0 1 49.2406 2 60.0 1 0.0 0 12.6237 1 3.2406 10 49.2406 2 11.0708 8)
Average genome size in population (length): 23.011
Average program size in population (points): 24.011
Average percent parens in population: 0.043
Minimum age in population: 22.01123046875
Maximum age in population: 27.23533630371094
Average age in population: 25.03076728820801
Median age in population: 25.049072265625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 99
Genome diversity (% unique Plush genomes):	 0.555
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 99
Syntactic diversity (% unique Push programs):	 0.555
Total error diversity:				 0.021
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 13637666
--- Timings ---
Current time: 1529616030815 milliseconds
Total Time:          59.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.5 seconds, 46.3%
Fitness Testing:     26.3 seconds, 44.3%
Report:               5.5 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_sub float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2734.3173393
Median total errors in population: 1341.0
Error averages by case: (144.80924789999997 12.994 143.53165280000002 2.773 90.6065686 12.067 128.2553651 3.802 98.7734602 2.891 148.69556169999996 2.802 131.4506363 3.733 75.2960472 2.821 56.76262529999999 0.958 69.1153315 2.9 79.4522653 12.156 83.6641799 2.799 74.1015141 1.84 143.5761813 13.051 112.76527219999998 2.742 151.44677259999997 1.931 80.0845207 2.751 67.82167710000002 1.847 136.77334630000001 3.719 118.9717373 2.757 59.59575840000001 1.804 84.27640799999996 2.749 91.88450400000004 10.274 136.62275579999996 3.735 101.95794970000001 12.13)
Error minima by case: (0.2546 9 55.6278 2 0.6278 8 69.0 2 38.0 2 61.6278 1 42.6278 2 14.0 1 0.0 0 6.0 2 8.7003 9 7.3722 1 9.291 1 55.7718 9 10.405 1 96.0 1 19.0 1 7.0 1 48.6278 2 60.0 1 0.0 0 14.6084 1 2.6278 8 48.6278 2 12.6278 9)
Average genome size in population (length): 23.184
Average program size in population (points): 24.184
Average percent parens in population: 0.043
Minimum age in population: 23.01123046875
Maximum age in population: 28.55583190917969
Average age in population: 26.51170554351807
Median age in population: 26.62012100219727
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 79
Genome diversity (% unique Plush genomes):	 0.585
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 79
Syntactic diversity (% unique Push programs):	 0.585
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 14217266
--- Timings ---
Current time: 1529616033731 milliseconds
Total Time:          62.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.9 seconds, 46.3%
Fitness Testing:     27.6 seconds, 44.3%
Report:               5.7 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_shove} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add float_inc float_add 35.372239689310504 in1 float_cos integer_dup_times float_shove float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2583.7739327
Median total errors in population: 1341.0
Error averages by case: (137.9749365 12.953 137.715721 2.781 84.02151159999998 12.033 122.23783609999998 3.795 92.45669469999997 2.896 142.61503259999998 2.832 125.65771790000004 3.742 68.8739308 2.82 51.62896 0.937 62.858746700000005 2.899 73.99655539999999 12.124 76.93222360000003 2.792 70.0031037 1.846 136.99064179999996 13.024 108.53621849999999 2.742 146.38320209999998 1.928 73.5242551 2.76 61.219999800000004 1.855 130.81448840000002 3.729 112.6309803 2.754 53.77171700000001 1.819 77.49507009999996 2.756 85.80203879999999 10.235 130.547487 3.754 95.1738632 12.105)
Error minima by case: (0.0204 7 74.5616 2 9.5294 8 70.0 2 28.3449 2 37.0859 2 74.0 2 4.4676 1 0.0 0 7.0 2 0.191 8 2.5673 1 2.3162 1 19.5951 10 2.8935 2 18.2233 1 20.0 1 7.0 1 61.9331 2 16.5487 2 1.0 1 12.2048 1 1.1915 8 50.9894 2 12.0946 10)
Average genome size in population (length): 23.24
Average program size in population (points): 24.24
Average percent parens in population: 0.043
Minimum age in population: 25.46413803100586
Maximum age in population: 29.73247909545898
Average age in population: 28.00492558670044
Median age in population: 28.06922149658203
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 63
Genome diversity (% unique Plush genomes):	 0.595
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 63
Syntactic diversity (% unique Push programs):	 0.595
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 14798266
--- Timings ---
Current time: 1529616036732 milliseconds
Total Time:          65.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.3 seconds, 46.4%
Fitness Testing:     28.9 seconds, 44.2%
Report:               6.0 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_frominteger} {:instruction float_min} {:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction -23} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_mult float_frominteger float_min integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times -23 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2553.6651094000003
Median total errors in population: 1341.0
Error averages by case: (137.4646638 12.938 136.3516513 2.707 84.02625240000002 12.011 120.66720109999996 3.718 90.9584621 2.8 141.52609609999996 2.739 124.17856210000001 3.673 67.26327799999999 2.729 50.3708333 0.84 61.007333700000004 2.807 72.9229124 12.094 75.80510609999999 2.717 68.99024819999998 1.757 136.24590879999997 13.015 107.74645939999999 2.662 145.40322149999994 1.837 72.2430757 2.678 59.920630599999996 1.768 129.525346 3.657 111.41691470000004 2.664 52.403071399999995 1.735 76.4619645 2.678 84.92748820000001 10.202 129.36630559999998 3.671 94.31412240000002 12.061)
Error minima by case: (1.4427 7 87.0 2 8.755 9 70.0 2 39.0 2 93.0 2 74.0 2 14.0 1 0.0 0 7.0 2 7.2261 9 5.1315 1 4.3879 1 35.6559 9 25.7343 1 91.3165 1 20.0 1 7.0 1 80.0 2 61.0 2 0.0 0 12.6298 1 6.9617 9 80.0 2 9.9823 8)
Average genome size in population (length): 23.26
Average program size in population (points): 24.26
Average percent parens in population: 0.043
Minimum age in population: 26.46413803100586
Maximum age in population: 31.4476146697998
Average age in population: 29.46601350784302
Median age in population: 29.50723552703857
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 54
Genome diversity (% unique Plush genomes):	 0.573
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 54
Syntactic diversity (% unique Push programs):	 0.573
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 15379766
--- Timings ---
Current time: 1529616039722 milliseconds
Total Time:          68.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.8 seconds, 46.5%
Fitness Testing:     30.1 seconds, 44.1%
Report:               6.3 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_min} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction integer_shove} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_min integer_add integer_yankdup integer_mult integer_shove float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2721.9934127
Median total errors in population: 1341.0
Error averages by case: (143.8567193 12.948 142.81030009999998 2.789 89.840112 12.03 127.23181329999998 3.8 97.72422010000001 2.9 147.90634729999996 2.821 130.7417122 3.744 74.23316349999999 2.809 57.34423530000001 0.984 68.0327997 2.905 79.72209899999999 12.119 82.62999389999999 2.797 75.857767 1.845 142.57055569999997 13.031 114.32642379999999 2.742 151.7159452 1.934 79.18941979999998 2.759 66.91170269999999 1.861 136.0198045 3.735 117.99283890000002 2.746 59.49150590000001 1.812 83.25914979999999 2.756 91.67888470000001 10.248 135.9424562 3.754 101.0084428 12.086)
Error minima by case: (0.2272 8 87.0 2 10.8543 9 70.0 2 39.0 2 93.0 2 74.0 2 14.0 1 0.0 0 7.0 2 10.9946 9 13.0892 1 9.0046 1 53.8766 9 26.7343 1 97.0 1 20.0 1 7.0 1 80.0 2 61.0 2 0.0 0 13.756 2 14.2623 9 80.0 2 12.217 9)
Average genome size in population (length): 23.237
Average program size in population (points): 24.237
Average percent parens in population: 0.043
Minimum age in population: 27.46413803100586
Maximum age in population: 33.04223251342773
Average age in population: 30.96688930702209
Median age in population: 30.97806978225708
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 56
Genome diversity (% unique Plush genomes):	 0.609
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 56
Syntactic diversity (% unique Push programs):	 0.609
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 15960691
--- Timings ---
Current time: 1529616042678 milliseconds
Total Time:          71.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        33.2 seconds, 46.6%
Fitness Testing:     31.4 seconds, 44.1%
Report:               6.5 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_pop} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_min integer_add print_float integer_sub float_pop float_cos integer_dup_times float_frominteger float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2483.4481763000003
Median total errors in population: 1341.0
Error averages by case: (134.8525874 12.962 133.62186709999997 2.688 80.22231450000001 12.04 118.29217569999997 3.7 88.44607010000001 2.775 138.70266279999993 2.737 121.44848220000002 3.658 64.6718226 2.716 47.53532730000001 0.813 58.46986130000002 2.782 70.15335990000001 12.124 73.0797703 2.694 65.97955899999998 1.73 133.65332949999996 13.024 104.73431439999999 2.65 142.93222249999997 1.801 69.279409 2.664 56.8617544 1.75 126.73620790000004 3.631 108.87751750000001 2.655 49.39050840000001 1.718 73.54248909999998 2.662 81.98463230000002 10.21 126.54881469999997 3.67 91.48311639999999 12.094)
Error minima by case: (1.6535 9 87.0 2 11.4391 9 69.0 2 38.0 2 93.0 1 74.0 2 14.0 1 0.0 0 6.0 2 11.9008 11 7.3722 1 9.0046 1 55.6826 9 26.7343 1 96.0 1 19.0 1 7.0 1 80.0 2 60.0 1 0.0 0 16.9564 2 12.2623 10 80.0 2 15.7882 10)
Average genome size in population (length): 23.325
Average program size in population (points): 24.325
Average percent parens in population: 0.043
Minimum age in population: 29.78784942626953
Maximum age in population: 34.37653589248657
Average age in population: 32.44093025445938
Median age in population: 32.49509024620056
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.587
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.587
Total error diversity:				 0.022
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 16543816
--- Timings ---
Current time: 1529616045486 milliseconds
Total Time:          74.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        34.5 seconds, 46.5%
Fitness Testing:     32.7 seconds, 44.2%
Report:               6.8 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_yank} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add float_yank integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_dec float_cos float_cos integer_dup_times integer_mod float_add 35.372239689310504 in1 float_inc float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2602.8300146
Median total errors in population: 1341.0
Error averages by case: (140.60043330000002 12.997 137.7076907 2.68 85.94289090000001 12.063 122.93099 3.69 93.43193360000001 2.767 143.09599299999996 2.709 125.48537710000001 3.645 69.7672904 2.701 52.4553092 0.806 63.370751200000015 2.772 74.20858560000002 12.13 78.6948015 2.689 69.9633544 1.723 138.24696829999996 13.047 108.6548155 2.637 147.3947294 1.796 73.9881415 2.658 61.6737582 1.738 130.97106240000005 3.638 114.01990490000001 2.648 54.15913990000001 1.703 78.48075699999998 2.654 87.51884160000002 10.23 130.8835136 3.654 97.29598139999999 12.112)
Error minima by case: (1.1772 9 55.1542 2 0.1542 9 70.0 2 39.0 2 61.1542 2 42.1542 2 15.0 1 0.0 0 7.0 2 15.0888 10 7.8458 1 4.9309 1 58.1324 9 23.9672 1 97.0 1 20.0 1 8.0 1 48.1542 3 61.0 2 0.0 0 3.3111 1 2.1542 8 48.1542 3 4.9439 10)
Average genome size in population (length): 23.543
Average program size in population (points): 24.543
Average percent parens in population: 0.043
Minimum age in population: 31.53051376342773
Maximum age in population: 35.85542058944702
Average age in population: 33.89924330401421
Median age in population: 33.90725338459015
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.599
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.599
Total error diversity:				 0.022
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 17132391
--- Timings ---
Current time: 1529616048458 milliseconds
Total Time:          77.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.9 seconds, 46.6%
Fitness Testing:     34.0 seconds, 44.1%
Report:               7.0 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub integer_inc integer_sub float_frominteger float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2385.0748766
Median total errors in population: 1341.0
Error averages by case: (131.0999333 12.933 129.8910794 2.646 76.30870849999998 11.999 114.2235271 3.654 84.2888318 2.741 135.14488249999997 2.673 117.61462240000002 3.601 60.380733 2.662 43.4209942 0.802 54.11823740000001 2.751 66.14265230000002 12.075 68.97759049999999 2.649 62.140987599999995 1.699 129.92283159999997 12.999 101.13341659999998 2.605 139.14121849999995 1.762 65.43539349999999 2.615 52.992442499999996 1.701 123.02802940000004 3.587 104.89928410000003 2.607 45.451120499999995 1.657 69.75622719999998 2.614 78.16626070000001 10.186 122.88942129999998 3.614 87.62545069999999 12.049)
Error minima by case: (0.2272 9 53.6278 2 1.3722 8 71.0 3 40.0 2 59.6278 2 40.6278 2 14.0 2 0.0 0 8.0 2 11.562 10 9.3722 2 10.0492 1 31.32 9 24.6278 1 86.9806 1 21.0 2 7.0 1 46.6278 2 62.0 2 0.0 0 15.0075 1 0.6278 9 46.6278 2 10.6278 9)
Average genome size in population (length): 23.511
Average program size in population (points): 24.511
Average percent parens in population: 0.043
Minimum age in population: 32.80874156951904
Maximum age in population: 37.24220895767212
Average age in population: 35.40749588751793
Median age in population: 35.43503999710083
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.64
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.64
Total error diversity:				 0.018
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 17720166
--- Timings ---
Current time: 1529616051571 milliseconds
Total Time:          80.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.3 seconds, 46.6%
Fitness Testing:     35.3 seconds, 44.1%
Report:               7.3 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_mult} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction print_integer} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min float_mult print_float integer_sub integer_stackdepth integer_dec float_flush integer_mult float_cos float_cos integer_dup_times float_rot float_add integer_add print_float integer_sub print_float integer_sub float_frominteger integer_yankdup print_integer float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2644.5614585000003
Median total errors in population: 1341.0
Error averages by case: (140.79908620000003 12.95 140.31555369999995 2.795 86.6474969 12.028 124.8228012 3.806 95.13356909999999 2.895 145.31670669999994 2.822 128.2457764 3.734 71.5106706 2.82 52.786027099999984 0.955 65.48434940000001 2.896 75.59940360000002 12.121 79.70652649999998 2.8 71.11225109999998 1.84 139.76150689999997 13.032 109.5597351 2.748 147.82421979999998 1.937 76.54005209999998 2.765 64.1816675 1.86 133.46629560000002 3.732 115.291672 2.753 56.80697969999999 1.822 80.43501709999998 2.758 87.97534900000004 10.238 133.26721899999998 3.752 98.0175262 12.095)
Error minima by case: (0.0204 7 55.6278 2 0.6278 8 70.0 2 37.8794 2 61.6278 2 42.6278 2 14.0 1 0.0 0 7.0 2 10.9946 9 7.3722 1 7.0046 1 10.0605 9 23.9672 1 45.6001 1 20.0 1 7.0 1 48.6278 2 26.0833 2 0.0 0 12.6681 1 2.6278 9 48.6278 2 11.0352 10)
Average genome size in population (length): 23.835
Average program size in population (points): 24.835
Average percent parens in population: 0.043
Minimum age in population: 34.28381967544556
Maximum age in population: 38.71156376600266
Average age in population: 36.87577264505625
Median age in population: 36.92852994799614
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.652
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.652
Total error diversity:				 0.032
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 18316041
--- Timings ---
Current time: 1529616054524 milliseconds
Total Time:          83.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.7 seconds, 46.6%
Fitness Testing:     36.6 seconds, 44.1%
Report:               7.6 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction float_max} {:instruction float_rot} {:instruction integer_sub} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos float_max float_rot integer_sub 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2696.1695305
Median total errors in population: 1341.0
Error averages by case: (143.0644062 12.935 141.7984485 2.75 88.88782220000002 12.005 126.0799717 3.771 96.57175790000001 2.849 146.97526359999998 2.788 129.6913685 3.715 73.01226980000001 2.778 56.31738749999999 0.894 66.7794053 2.856 78.7521028 12.108 81.59613640000002 2.769 74.9070087 1.796 141.66353629999998 13.026 113.4483612 2.714 150.7203918 1.902 78.25756870000001 2.727 65.93220450000001 1.815 135.0262874 3.707 116.93312170000002 2.713 58.516356599999995 1.786 82.3700374 2.726 90.75491960000001 10.211 134.8848744 3.726 100.0935218 12.068)
Error minima by case: (0.0619 9 54.6278 2 0.3722 7 70.0 2 39.0 2 60.6278 2 41.6278 2 13.0 1 0.0 0 7.0 2 11.9988 9 8.3722 1 9.0046 1 19.817 9 25.6278 1 75.4776 1 20.0 1 6.0 1 47.6278 3 55.9608 2 0.0 0 12.3814 1 1.6278 8 47.6278 3 10.7486 9)
Average genome size in population (length): 23.971
Average program size in population (points): 24.971
Average percent parens in population: 0.043
Minimum age in population: 35.77254378795624
Maximum age in population: 40.27339214086533
Average age in population: 38.39622335922718
Median age in population: 38.47336561977863
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.642
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.642
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 18915316
--- Timings ---
Current time: 1529616057498 milliseconds
Total Time:          86.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.1 seconds, 46.6%
Fitness Testing:     37.9 seconds, 44.0%
Report:               8.0 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_pop} {:instruction float_add} {:instruction 35.372239689310504} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_pop float_add 35.372239689310504 35.372239689310504 in1 float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2567.7199630000005
Median total errors in population: 1341.0
Error averages by case: (138.65095870000002 12.981 137.0154763 2.659 83.95063320000001 12.039 121.33742109999999 3.684 91.71599269999997 2.763 142.33469529999996 2.686 124.80533510000001 3.62 68.0180408 2.7 50.4152292 0.802 61.694846500000004 2.765 73.20649699999998 12.11 76.7394872 2.692 68.215532 1.718 137.18265489999996 13.042 106.9440129 2.634 145.5809764 1.796 73.19852990000001 2.641 60.8383862 1.72 130.24619090000004 3.616 112.18023260000001 2.641 53.3220964 1.686 77.4923287 2.636 85.54448100000002 10.228 130.13629569999998 3.629 95.36963229999998 12.096)
Error minima by case: (0.4783 9 55.6278 2 0.6278 8 71.0 3 40.0 2 61.6278 2 42.6278 3 16.0 2 0.0 0 8.0 2 12.732 8 7.3722 2 9.6884 1 55.614 10 10.1992 1 98.0 1 21.0 2 9.0 1 48.6278 3 62.0 2 0.0 0 12.7631 2 2.6278 10 48.6278 3 11.1166 10)
Average genome size in population (length): 23.874
Average program size in population (points): 24.874
Average percent parens in population: 0.043
Minimum age in population: 36.83537548780441
Maximum age in population: 41.86525620520115
Average age in population: 39.89177572792768
Median age in population: 39.92142228037119
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.639
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.639
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 19512166
--- Timings ---
Current time: 1529616060610 milliseconds
Total Time:          89.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.6 seconds, 46.7%
Fitness Testing:     39.2 seconds, 44.0%
Report:               8.2 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction integer_dec} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger float_mult float_frominteger integer_yankdup integer_mult float_cos integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot integer_dec 35.372239689310504 in1 float_inc float_inc in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2310.2625946999997
Median total errors in population: 1341.0
Error averages by case: (128.74458739999997 12.983 126.9453475 2.555 74.41455159999998 12.035 110.85736600000001 3.55 80.96684629999999 2.632 132.27294410000002 2.571 114.64282870000001 3.509 57.11064389999999 2.562 40.287883 0.662 50.577188 2.632 63.134152300000004 12.082 66.0121174 2.562 59.2370931 1.594 127.24008710000003 13.014 98.3772363 2.508 136.18666300000004 1.644 62.579513500000004 2.527 50.051817 1.615 120.1080164 3.503 101.7881588 2.52 42.4298071 1.574 66.919259 2.527 75.37214219999998 10.203 119.98576630000002 3.525 84.86257870000003 12.069)
Error minima by case: (1.0106 7 67.306 2 8.6276 9 66.9536 3 38.0 2 23.8304 1 75.0 2 15.0 2 0.0 0 6.0 2 5.3193 9 6.9692 2 1.3162 1 29.4373 9 1.8935 1 17.2233 1 19.0 2 8.0 1 61.6775 2 33.7065 1 0.0 0 14.3647 1 12.2623 10 50.7339 2 3.4465 9)
Average genome size in population (length): 24.227
Average program size in population (points): 25.227
Average percent parens in population: 0.042
Minimum age in population: 37.83537548780441
Maximum age in population: 43.1155333891511
Average age in population: 41.34023099862039
Median age in population: 41.35093955695629
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.626
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.626
Total error diversity:				 0.023
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 20117841
--- Timings ---
Current time: 1529616063607 milliseconds
Total Time:          92.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.0 seconds, 46.6%
Fitness Testing:     40.5 seconds, 44.0%
Report:               8.6 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_mult} {:instruction 58.068140529226184} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_cos} {:instruction float_sin} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_add print_float float_frominteger integer_yankdup integer_dec integer_mult 58.068140529226184 float_cos integer_dup_times float_rot float_cos float_sin float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2869.055998200001
Median total errors in population: 1341.0
Error averages by case: (148.89044420000005 12.912 148.4348666 2.91 95.43105539999998 12.021 134.0100514 3.943 104.49732079999995 3.049 153.23237349999994 2.959 136.5329643 3.864 81.15086210000001 2.969 62.87133050000002 1.096 75.3114609 3.061 85.36813559999999 12.145 88.81939200000001 2.941 80.85937649999998 1.983 148.18132289999994 13.023 118.67384059999999 2.877 156.97367889999998 2.091 85.06173980000001 2.883 72.88903479999999 1.981 141.59803910000005 3.843 124.22420320000002 2.886 65.6009258 1.944 89.13891019999998 2.882 96.87533580000002 10.252 141.35626899999994 3.888 106.5790643 12.091)
Error minima by case: (0.0619 9 80.2668 2 6.8909 9 70.0 2 39.0 2 48.7912 2 73.0 2 13.0 1 0.0 0 7.0 2 11.6807 9 13.7752 1 5.0046 1 54.4976 9 10.0858 1 97.0 1 0.6249 1 6.0 1 60.6383 3 61.0 2 1.0 1 10.8936 1 12.2623 9 49.6947 3 9.2608 10)
Average genome size in population (length): 23.745
Average program size in population (points): 24.745
Average percent parens in population: 0.043
Minimum age in population: 39.78438798338175
Maximum age in population: 44.80767378211021
Average age in population: 42.84066285892203
Median age in population: 42.87839280068874
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.641
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.641
Total error diversity:				 0.028
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 20711466
--- Timings ---
Current time: 1529616066431 milliseconds
Total Time:          95.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.2 seconds, 46.6%
Fitness Testing:     41.8 seconds, 44.0%
Report:               8.8 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_add} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_stackdepth integer_add integer_sub float_frominteger integer_dup float_frominteger integer_yankdup float_cos integer_dup_times float_frominteger float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2700.8531954
Median total errors in population: 1341.0
Error averages by case: (142.4595592 12.938 142.0266899 2.819 88.73334619999999 12.028 126.7847822 3.839 97.1655677 2.931 147.01577549999993 2.866 129.98315850000003 3.776 73.5813466 2.854 56.4880937 0.977 67.58007730000001 2.944 78.85788300000002 12.133 81.6491647 2.836 74.8332777 1.881 141.67394749999997 13.036 113.21893069999999 2.783 151.0122395 1.971 78.27473359999998 2.794 66.0044166 1.887 135.1912561 3.764 117.31964520000002 2.789 58.627378400000005 1.849 82.27813119999998 2.784 90.56343210000001 10.237 135.08024789999996 3.794 99.84211439999999 12.098)
Error minima by case: (0.0619 8 55.6278 2 0.6278 8 70.0 2 39.0 2 61.6278 2 42.6278 2 14.0 1 0.0 0 7.0 2 12.232 10 7.3722 1 1.6765 1 55.3364 10 26.6278 1 97.0 1 20.0 1 7.0 1 48.6278 2 61.0 2 1.0 1 13.5883 2 2.6278 9 48.6278 2 12.217 9)
Average genome size in population (length): 23.635
Average program size in population (points): 24.635
Average percent parens in population: 0.043
Minimum age in population: 41.56779378280044
Maximum age in population: 46.30971665866673
Average age in population: 44.32250841371901
Median age in population: 44.32820053584874
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 21302341
--- Timings ---
Current time: 1529616069533 milliseconds
Total Time:          98.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.6 seconds, 46.6%
Fitness Testing:     43.1 seconds, 44.0%
Report:               9.1 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction float_dup} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction 35.372239689310504} {:instruction float_cos} {:instruction float_sin} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float float_dup float_frominteger integer_yankdup integer_mult float_cos 35.372239689310504 float_cos float_sin float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 3101.8578999
Median total errors in population: 1341.0
Error averages by case: (158.30237649999998 13.014 157.21627459999996 2.954 105.27220119999998 12.106 142.1716888 3.986 113.14812319999999 3.097 162.2524796 3.014 145.3424451 3.908 90.03925930000001 3.013 73.44141289999999 1.142 83.9718066 3.102 95.4448429 12.22 98.26302700000001 3.0 89.9534831 2.023 157.2151597 13.101 128.43685969999999 2.907 166.2102467 2.151 94.6523907 2.934 82.63362009999999 2.045 150.5506202 3.91 133.0651081 2.937 73.818024 2.006 98.8426435 2.939 107.0423634 10.347 150.39949230000002 3.928 116.21495069999999 12.173)
Error minima by case: (0.2272 9 88.0 2 8.5294 9 70.0 2 39.0 2 94.0 2 75.0 2 15.0 1 0.0 0 7.0 2 12.6807 10 14.7752 1 10.0863 1 54.4956 9 26.7343 1 97.0 1 20.0 1 8.0 1 81.0 3 61.0 2 0.0 0 14.2665 1 12.6601 9 81.0 3 12.217 8)
Average genome size in population (length): 23.899
Average program size in population (points): 24.899
Average percent parens in population: 0.043
Minimum age in population: 43.17563265562057
Maximum age in population: 47.94378839619458
Average age in population: 45.82336974555906
Median age in population: 45.89615676738322
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.65
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.65
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 21899816
--- Timings ---
Current time: 1529616072486 milliseconds
Total Time:         101.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.0 seconds, 46.5%
Fitness Testing:     44.5 seconds, 44.0%
Report:               9.5 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction float_max} {:instruction float_rot} {:instruction float_add} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add float_frominteger integer_yankdup integer_mult float_cos float_cos float_max float_rot float_add integer_stackdepth in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 2612.2919846
Median total errors in population: 1341.0
Error averages by case: (140.37295970000002 12.972 138.8527316 2.71 85.6735663 12.038 123.1030879 3.72 93.56629009999999 2.801 144.12226119999997 2.739 126.68087949999999 3.674 69.8699528 2.728 51.47199660000001 0.835 63.56854870000001 2.796 74.56892770000002 12.115 78.63107059999997 2.723 70.14340579999998 1.752 139.02491859999998 13.042 108.71303539999998 2.665 146.65573389999997 1.833 75.108297 2.697 62.8035088 1.778 132.08508170000005 3.662 113.90859449999999 2.678 55.322348600000005 1.744 79.4293592 2.683 87.01307270000001 10.235 131.9619349 3.676 97.24742079999997 12.097)
Error minima by case: (0.4632 7 55.6278 2 0.6278 8 71.0 3 40.0 2 61.6278 2 42.6278 2 15.0 2 0.0 0 8.0 2 10.7326 9 7.3722 2 1.4915 1 53.7921 10 10.405 1 98.0 1 21.0 2 8.0 1 48.6278 3 62.0 2 0.0 0 13.7266 1 2.6278 9 48.6278 3 12.0937 10)
Average genome size in population (length): 23.812
Average program size in population (points): 24.812
Average percent parens in population: 0.043
Minimum age in population: 44.17563265562057
Maximum age in population: 49.29063597694039
Average age in population: 47.29885745037114
Median age in population: 47.3337261355482
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.635
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.635
Total error diversity:				 0.026
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 22495116
--- Timings ---
Current time: 1529616075430 milliseconds
Total Time:         104.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.4 seconds, 46.6%
Fitness Testing:     45.8 seconds, 44.0%
Report:               9.7 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_min} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction integer_max} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_min float_cos integer_dup_times float_rot integer_max 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2936.5621420999996
Median total errors in population: 1341.0
Error averages by case: (151.43876770000003 12.959 151.55247439999994 2.945 98.12693599999996 12.048 136.44577470000002 3.966 107.02492499999994 3.073 156.29262499999996 2.999 139.70183440000005 3.889 83.76514760000005 2.996 64.86283600000002 1.122 77.93312539999998 3.081 87.44388179999997 12.17 91.51887220000003 2.974 82.93477039999999 2.019 150.62312929999996 13.044 120.76521999999996 2.89 158.678783 2.121 88.36437010000003 2.923 76.18228769999999 2.026 144.72459820000003 3.881 126.63206300000004 2.915 68.9201825 1.993 92.06576289999998 2.911 99.40737850000001 10.299 144.47219830000006 3.915 109.38719799999994 12.138)
Error minima by case: (0.0204 7 55.6278 2 0.6278 8 67.7205 2 16.4323 2 61.6278 1 42.6278 2 7.4449 1 0.0 0 6.0 2 10.7326 9 7.3722 1 9.6884 1 31.5077 9 10.405 2 24.1529 1 19.0 1 8.0 1 48.6278 2 4.6361 1 0.0 0 12.4419 1 2.6278 9 48.6278 2 10.809 9)
Average genome size in population (length): 23.934
Average program size in population (points): 24.934
Average percent parens in population: 0.043
Minimum age in population: 46.451525894925
Maximum age in population: 50.72783412807621
Average age in population: 48.78026826605946
Median age in population: 48.82037792343181
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.632
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.632
Total error diversity:				 0.035
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 23093466
--- Timings ---
Current time: 1529616078300 milliseconds
Total Time:         106.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.7 seconds, 46.5%
Fitness Testing:     47.1 seconds, 44.1%
Report:              10.0 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_yank} {:instruction float_sub} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_add print_float integer_sub integer_sub float_pop integer_sub float_frominteger integer_yankdup integer_mult float_cos float_add 35.372239689310504 in1 float_yank float_sub float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2576.5404926
Median total errors in population: 1341.0
Error averages by case: (138.5641754 12.953 137.1510763 2.713 84.10695309999998 12.009 121.24835259999999 3.718 91.63711849999999 2.804 142.3895598 2.75 124.9794269 3.668 67.94336739999999 2.73 51.524072200000006 0.887 61.684977100000005 2.813 74.02449239999999 12.118 76.7733795 2.727 70.10232849999998 1.763 137.1287144 13.041 108.7334653 2.678 146.0680578 1.863 73.5066312 2.692 61.10973740000001 1.773 130.36347160000003 3.662 112.1238659 2.672 53.687191899999995 1.748 77.7026923 2.684 85.9629681 10.21 130.2321777 3.685 95.35523930000002 12.076)
Error minima by case: (0.2272 9 51.6275 2 1.3722 8 63.4657 2 12.1774 2 39.0859 1 38.6177 2 11.6998 1 0.0 0 6.0 2 6.3193 10 9.3722 1 0.3162 1 1.7518 10 0.8935 1 16.2233 1 19.0 1 6.0 1 44.6269 2 0.3813 1 0.0 0 9.4419 1 0.3722 9 43.6162 2 8.4337 9)
Average genome size in population (length): 23.841
Average program size in population (points): 24.841
Average percent parens in population: 0.043
Minimum age in population: 47.64081453438848
Maximum age in population: 52.22445296065416
Average age in population: 50.28612117905985
Median age in population: 50.32284505304415
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 23689491
--- Timings ---
Current time: 1529616081216 milliseconds
Total Time:         109.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.1 seconds, 46.5%
Fitness Testing:     48.4 seconds, 44.1%
Report:              10.2 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_min} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_swap} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_min float_cos integer_dup_times float_swap float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2696.6161104999996
Median total errors in population: 1341.0
Error averages by case: (142.70735939999997 12.996 141.88464169999997 2.796 88.81153110000001 12.066 126.43722159999999 3.806 96.87820880000002 2.908 146.98574910000002 2.821 129.8025591 3.75 73.3465581 2.827 56.428064099999986 0.942 67.18650899999999 2.915 78.78251499999999 12.148 81.6443712 2.814 74.09972189999998 1.853 141.6756798 13.053 112.93136549999998 2.756 150.8766223 1.941 78.1735216 2.761 65.9498516 1.864 135.08738920000005 3.738 117.1347196 2.766 57.7086591 1.818 82.2844924 2.757 90.66058039999999 10.284 134.90986959999998 3.758 99.9633493 12.127)
Error minima by case: (0.7118 8 56.6275 2 0.282 8 69.0 2 38.0 2 62.5978 1 43.6177 2 15.0 1 0.0 0 6.0 2 8.7003 8 8.074 1 9.291 1 53.7921 10 23.7343 1 96.0 1 19.0 1 8.0 1 49.6269 2 60.0 1 0.0 0 12.3814 1 2.0538 9 48.6162 2 10.7486 9)
Average genome size in population (length): 23.787
Average program size in population (points): 24.787
Average percent parens in population: 0.043
Minimum age in population: 49.16250210814178
Maximum age in population: 53.65258620271925
Average age in population: 51.76875523080974
Median age in population: 51.82361391463201
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.608
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.608
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 24284166
--- Timings ---
Current time: 1529616084207 milliseconds
Total Time:         112.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.5 seconds, 46.6%
Fitness Testing:     49.7 seconds, 44.1%
Report:              10.5 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction integer_min} {:instruction float_dec} {:instruction print_float} {:instruction integer_mult} {:instruction integer_add} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction in2} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add integer_min float_dec print_float integer_mult integer_add float_frominteger integer_swap integer_yankdup integer_mult float_cos float_cos in2 float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2592.1659101
Median total errors in population: 1341.0
Error averages by case: (138.77189089999996 12.964 137.54684830000002 2.783 84.82442519999998 12.03 123.0013016 3.791 93.27150759999998 2.875 142.5286535 2.812 125.45101620000001 3.731 69.50410140000001 2.809 52.4321521 0.934 63.52401539999999 2.881 73.90738019999998 12.123 77.6347458 2.801 69.97196989999999 1.831 137.03632409999994 13.021 108.62183679999997 2.719 147.3444572 1.919 73.48201180000002 2.743 61.1446885 1.837 130.66468040000004 3.719 113.48940780000001 2.736 53.734677600000005 1.81 77.43148129999999 2.741 86.683076 10.248 130.45263799999998 3.743 96.02062249999997 12.089)
Error minima by case: (1.3503 9 55.6278 2 0.6278 8 71.0 3 40.0 2 61.6278 2 42.6278 3 16.0 2 0.0 0 8.0 2 10.5812 10 6.7047 2 8.7914 1 53.5627 9 26.6278 1 98.0 1 21.0 2 9.0 1 48.6278 3 62.0 2 0.0 0 12.3814 2 2.6278 9 48.6278 3 10.7486 9)
Average genome size in population (length): 23.846
Average program size in population (points): 24.846
Average percent parens in population: 0.043
Minimum age in population: 50.45919217262417
Maximum age in population: 55.10721620876575
Average age in population: 53.29471711291096
Median age in population: 53.36163834754552
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.651
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.651
Total error diversity:				 0.028
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 24880316
--- Timings ---
Current time: 1529616087250 milliseconds
Total Time:         115.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.9 seconds, 46.6%
Fitness Testing:     51.0 seconds, 44.1%
Report:              10.7 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_dup} {:instruction integer_sub} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction integer_max} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_dup_items})
Best program: (integer_min integer_add float_dup integer_sub float_cos integer_dup_times float_rot integer_max 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float float_dup_items)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2594.6482235000003
Median total errors in population: 1341.0
Error averages by case: (139.2465067 12.997 138.3057098 2.748 84.73968020000001 12.069 122.87587019999998 3.749 93.172129 2.837 143.35668429999996 2.779 126.19742070000002 3.7 69.56397589999999 2.777 50.69474830000001 0.885 63.388158800000014 2.844 73.6544866 12.152 77.8620946 2.758 69.11375539999999 1.793 138.0673945 13.063 107.58209499999998 2.7 146.0299336 1.863 74.28554820000001 2.725 61.9459617 1.817 131.45500410000002 3.696 113.36249840000002 2.713 54.50688400000001 1.782 78.3845903 2.717 86.02287679999998 10.267 131.3564413 3.71 96.20677509999999 12.13)
Error minima by case: (0.2272 9 87.0 2 9.4391 7 69.0 2 38.0 2 93.0 1 74.0 2 14.0 1 0.0 0 6.0 2 11.689 9 13.7774 1 10.366 1 55.6826 10 10.405 2 96.0 1 19.0 1 7.0 1 80.0 2 60.0 1 0.0 0 13.4419 1 13.2623 9 80.0 2 11.809 10)
Average genome size in population (length): 23.957
Average program size in population (points): 24.957
Average percent parens in population: 0.043
Minimum age in population: 51.62643678917084
Maximum age in population: 56.74150963469583
Average age in population: 54.75132780147204
Median age in population: 54.80127814458683
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.661
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.661
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 25479241
--- Timings ---
Current time: 1529616090076 milliseconds
Total Time:         118.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.2 seconds, 46.5%
Fitness Testing:     52.3 seconds, 44.1%
Report:              11.0 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_cos} {:instruction float_cos} {:instruction float_rot} {:instruction integer_yankdup} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_div} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_cos float_cos float_rot integer_yankdup float_frominteger integer_dup_times integer_mult float_div float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2481.2442705
Median total errors in population: 1341.0
Error averages by case: (134.69803950000002 12.953 133.49900569999997 2.664 80.1530012 12.021 118.12692969999999 3.68 88.3016929 2.762 138.69228779999995 2.703 121.28759990000002 3.624 64.50784630000001 2.7 47.4933568 0.78 58.29197350000001 2.767 70.1274874 12.1 72.9701125 2.675 66.00162879999999 1.717 133.64277719999998 13.01 104.77474039999998 2.624 142.8718092 1.784 69.25083009999999 2.639 56.8800205 1.726 126.65120550000002 3.607 108.79626470000001 2.639 49.371917700000004 1.691 73.57298869999998 2.636 81.9543065 10.2 126.49597369999996 3.646 91.40547430000001 12.077)
Error minima by case: (0.7386 9 55.2299 2 0.2299 8 70.0 2 39.0 2 61.2299 2 42.2299 2 15.0 1 0.0 0 7.0 2 11.232 9 7.7701 1 9.6884 1 55.0849 9 26.2299 2 97.0 1 20.0 1 8.0 1 48.2299 3 61.0 2 0.0 0 13.4512 1 2.2299 9 48.2299 3 11.8183 9)
Average genome size in population (length): 23.894
Average program size in population (points): 24.894
Average percent parens in population: 0.043
Minimum age in population: 53.72438860143302
Maximum age in population: 58.05623826693773
Average age in population: 56.19649304766526
Median age in population: 56.25980485605396
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.636
Total error diversity:				 0.02
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 26076591
--- Timings ---
Current time: 1529616093110 milliseconds
Total Time:         121.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.7 seconds, 46.6%
Fitness Testing:     53.6 seconds, 44.1%
Report:              11.3 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_shove integer_yankdup integer_fromfloat float_cos float_cos integer_dup_times integer_yank float_add 35.372239689310504 in1 float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2714.1506371
Median total errors in population: 1341.0
Error averages by case: (144.09489000000002 12.992 142.63521980000002 2.766 89.69822380000001 12.045 126.82818960000002 3.772 97.39352630000002 2.872 147.84306179999996 2.789 130.52850320000002 3.71 73.881979 2.788 56.298097999999996 0.949 67.56490459999999 2.869 79.0656893 12.143 82.5630604 2.784 74.9992541 1.801 142.56836040000002 13.052 113.48831990000002 2.71 150.8409533 1.911 79.09302110000002 2.735 66.827631 1.83 135.88259280000003 3.713 117.66014860000001 2.723 59.362685000000006 1.795 83.27035749999999 2.728 91.2996537 10.271 135.74969650000003 3.731 101.11761739999999 12.116)
Error minima by case: (0.6131 8 87.0 2 8.4391 8 70.2554 3 39.2554 2 93.0 2 74.0 2 14.0 2 0.0 0 7.2554 2 13.9946 11 7.3722 2 10.5039 1 56.8766 10 26.6792 1 97.2554 1 20.2554 2 7.0 1 80.0 2 61.2554 2 0.0 0 12.4419 1 14.9381 8 80.0 2 10.809 10)
Average genome size in population (length): 23.967
Average program size in population (points): 24.967
Average percent parens in population: 0.043
Minimum age in population: 55.22972817592381
Maximum age in population: 59.60391468375747
Average age in population: 57.71936390421494
Median age in population: 57.75087332052681
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.645
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.645
Total error diversity:				 0.027
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 26675766
--- Timings ---
Current time: 1529616096138 milliseconds
Total Time:         124.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.1 seconds, 46.6%
Fitness Testing:     54.9 seconds, 44.1%
Report:              11.5 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction float_sin} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_min float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_cos float_cos float_sin float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2887.2629514999994
Median total errors in population: 1341.0
Error averages by case: (150.3908248 13.01 148.8535582 2.847 96.63439609999999 12.087 133.4760814 3.864 104.27708789999998 2.961 153.97614479999996 2.899 136.8633569 3.806 80.94278740000001 2.886 64.3632386 1.007 74.73235489999999 2.96 86.59753049999999 12.186 89.46727340000002 2.878 82.6811341 1.893 149.0379127 13.082 120.80113480000001 2.804 157.92194709999998 2.007 85.83417790000004 2.825 73.6553804 1.925 142.14445930000005 3.8 124.4374358 2.816 66.28725650000001 1.897 90.09505239999999 2.822 98.42387810000001 10.31 142.0893884 3.817 107.73815909999998 12.152)
Error minima by case: (0.294 8 74.5616 2 10.8955 8 70.0 2 39.0 2 37.0859 2 75.0 2 15.0 1 0.0 0 7.0 2 4.3193 10 7.3722 1 2.3162 1 28.4373 9 2.8935 2 18.2233 1 20.0 1 8.0 1 61.9331 3 34.7065 2 0.0 0 13.756 1 12.2623 9 50.9894 3 13.5435 10)
Average genome size in population (length): 23.98
Average program size in population (points): 24.98
Average percent parens in population: 0.043
Minimum age in population: 56.7441689356674
Maximum age in population: 61.28547698213151
Average age in population: 59.17239436775
Median age in population: 59.20164084418593
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.621
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.621
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 27275266
--- Timings ---
Current time: 1529616099069 milliseconds
Total Time:         127.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.4 seconds, 46.6%
Fitness Testing:     56.2 seconds, 44.1%
Report:              11.8 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_add} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction print_integer} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_add integer_sub float_frominteger integer_sub float_frominteger integer_yankdup float_frominteger integer_stackdepth integer_sub integer_sub integer_sub float_frominteger integer_yankdup float_frominteger integer_sub float_frominteger integer_yankdup print_integer float_inc float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2846.5647094
Median total errors in population: 1341.0
Error averages by case: (147.9711017 12.939 147.57626030000003 2.88 94.54879860000001 12.031 132.58395399999998 3.912 103.10610589999999 3.009 152.45398379999997 2.931 135.6358681 3.848 79.70123529999998 2.94 62.547276999999994 1.035 73.78137250000002 3.009 84.7614367 12.152 87.58325849999999 2.919 80.66470249999999 1.941 147.12743019999994 13.036 118.79157969999999 2.843 156.5028994 2.066 84.2233886 2.858 71.9716983 1.955 140.75769830000002 3.828 123.06213870000003 2.862 64.6740376 1.934 88.11199699999999 2.859 96.3292097 10.259 140.52876789999993 3.857 105.57450910000001 12.091)
Error minima by case: (0.6223 9 55.6278 2 0.6278 8 70.0 2 39.0 2 61.6278 2 42.6278 2 15.0 1 0.0 0 7.0 2 8.7003 10 7.3722 1 2.073 1 55.1091 9 25.9605 1 97.0 1 20.0 1 8.0 1 48.6278 3 61.0 2 1.0 1 12.3814 1 2.6278 9 48.6278 3 10.7486 7)
Average genome size in population (length): 23.829
Average program size in population (points): 24.829
Average percent parens in population: 0.043
Minimum age in population: 58.10136565021094
Maximum age in population: 62.62385618771168
Average age in population: 60.65895575358999
Median age in population: 60.67390679265282
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.637
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.637
Total error diversity:				 0.027
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 27870991
--- Timings ---
Current time: 1529616102012 milliseconds
Total Time:         130.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.8 seconds, 46.6%
Fitness Testing:     57.5 seconds, 44.1%
Report:              12.1 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction integer_min} {:instruction integer_add} {:instruction float_min} {:instruction float_cos} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_swap})
Best program: (integer_min integer_add integer_min integer_add float_min float_cos float_frominteger integer_sub float_inc float_inc float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_swap)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 3081.5343734
Median total errors in population: 1341.0
Error averages by case: (157.39086300000002 12.96 156.3699752 2.929 104.33201379999998 12.046 141.18126969999997 3.976 112.13149859999997 3.078 161.41332279999997 2.99 144.4836088 3.893 88.9898474 2.999 72.43570800000002 1.112 82.92096799999999 3.083 94.4524579 12.182 97.2649995 2.981 90.5745841 2.009 156.24676129999997 13.061 128.3707619 2.895 165.2516272 2.136 93.7317451 2.914 81.70112019999999 2.02 149.69715200000002 3.89 132.0753174 2.915 74.38050020000001 1.989 97.87914559999999 2.911 106.12160730000001 10.3 149.54037259999998 3.906 115.29314579999999 12.129)
Error minima by case: (0.5561 9 88.0 2 8.5294 9 69.0 2 38.0 2 94.0 1 75.0 2 15.0 1 0.0 0 6.0 2 11.9946 11 14.0892 1 10.6884 1 20.0208 7 25.5634 1 75.6814 1 19.0 1 8.0 1 81.0 2 56.1646 1 0.0 0 14.2665 1 13.2623 9 81.0 2 12.6149 10)
Average genome size in population (length): 23.932
Average program size in population (points): 24.932
Average percent parens in population: 0.043
Minimum age in population: 59.52668885129788
Maximum age in population: 64.17624681130019
Average age in population: 62.12379144777501
Median age in population: 62.15925798684179
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.643
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.643
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 28469291
--- Timings ---
Current time: 1529616105089 milliseconds
Total Time:         133.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.3 seconds, 46.6%
Fitness Testing:     58.8 seconds, 44.0%
Report:              12.4 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_pop} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 34.61798026245509} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_min integer_add print_float integer_pop float_add 35.372239689310504 in1 float_inc float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_add 35.372239689310504 in1 float_cos integer_dup_times float_rot float_add 34.61798026245509 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2756.0400568000005
Median total errors in population: 1341.0
Error averages by case: (145.5878071 12.967 143.5401781 2.784 91.72996479999999 12.045 129.0564241 3.809 99.62634569999997 2.906 148.7045819 2.826 131.4588795 3.737 76.11892320000003 2.827 59.400826200000004 0.95 69.96186459999998 2.905 80.75704929999996 12.147 84.53488700000001 2.814 76.80639039999998 1.842 143.5613378 13.051 115.21513399999999 2.749 153.55096600000002 1.948 80.06866090000003 2.761 67.83071139999998 1.857 136.78212800000003 3.731 119.88372160000002 2.767 60.41384770000001 1.824 84.2753005 2.757 93.55622690000001 10.26 136.63150359999997 3.755 102.85939649999999 12.108)
Error minima by case: (1.7479 9 55.3312 2 0.3312 7 70.0 2 39.0 2 61.3312 2 42.3312 2 14.0 1 0.0 0 7.0 2 2.595 10 4.6895 1 9.291 1 45.4769 9 26.3312 2 97.0 1 20.0 1 7.0 1 48.3312 2 61.0 2 0.0 0 12.4419 1 2.3312 9 48.3312 2 10.809 10)
Average genome size in population (length): 23.912
Average program size in population (points): 24.912
Average percent parens in population: 0.044
Minimum age in population: 61.20132986982026
Maximum age in population: 65.43648053757829
Average age in population: 63.59702488841175
Median age in population: 63.63829686760118
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.634
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.634
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 29067091
--- Timings ---
Current time: 1529616108121 milliseconds
Total Time:         136.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.7 seconds, 46.6%
Fitness Testing:     60.2 seconds, 44.0%
Report:              12.7 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_frominteger} {:instruction float_min} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_max} {:instruction float_rot} {:instruction float_add} {:instruction 36.31164194146173} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_mult})
Best program: (integer_mult float_frominteger float_min integer_dec integer_div float_yank float_div integer_dup_times integer_mult integer_swap float_max float_rot float_add 36.31164194146173 in1 float_inc float_inc float_inc float_inc print_float float_mult)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2970.6793575999995
Median total errors in population: 1341.0
Error averages by case: (153.90192240000002 12.961 152.12626349999996 2.878 100.45056549999998 12.055 137.26757429999998 3.912 108.11138269999998 3.003 157.16173159999997 2.927 140.18763090000002 3.837 84.88315000000003 2.926 67.61259540000002 1.075 78.73852919999999 3.017 89.03461370000001 12.156 93.393561 2.911 84.83911539999998 1.952 151.67574119999998 13.056 122.79656269999997 2.842 160.8673256 2.053 89.18464610000001 2.863 77.0277843 1.96 145.40575010000003 3.827 128.134387 2.848 69.69514310000001 1.925 93.25403019999999 2.85 101.99863290000002 10.286 145.2418061 3.852 111.59091269999999 12.126)
Error minima by case: (0.4493 7 88.0 2 10.6217 9 62.7471 3 11.4589 2 94.0 1 75.0 2 12.4183 2 0.0 0 6.0 2 12.4544 9 14.549 2 1.6765 1 23.7067 10 10.405 1 19.1795 1 19.0 2 8.0 1 81.0 2 0.3373 1 0.0 0 13.5883 1 14.2623 9 81.0 2 13.0393 10)
Average genome size in population (length): 24.154
Average program size in population (points): 25.154
Average percent parens in population: 0.043
Minimum age in population: 62.89575180121756
Maximum age in population: 67.06590380383341
Average age in population: 65.05880443313745
Median age in population: 65.10227121153378
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.652
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.652
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 29670941
--- Timings ---
Current time: 1529616110954 milliseconds
Total Time:         139.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.0 seconds, 46.6%
Fitness Testing:     61.4 seconds, 44.0%
Report:              13.0 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_sub} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_div} {:instruction float_shove} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.11408695743671} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_sub integer_add integer_add print_float integer_sub float_frominteger float_swap float_frominteger integer_yankdup float_frominteger float_frominteger integer_yankdup integer_mult float_div float_shove integer_dup_times float_rot float_add 35.11408695743671 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2462.6645857000008
Median total errors in population: 1341.0
Error averages by case: (133.1456921 12.935 133.0217891 2.721 79.0006427 12.003 117.7827245 3.76 87.8052309 2.844 137.9961148 2.766 120.87328210000001 3.681 63.888421900000004 2.774 46.5366306 0.892 57.967494699999996 2.839 69.129527 12.11 71.87400629999999 2.76 65.06174879999999 1.787 132.54370179999998 13.024 103.81014069999998 2.69 142.10158390000004 1.888 68.6389462 2.709 56.1967813 1.785 126.0913675 3.678 108.0829554 2.721 48.792021500000004 1.766 72.59076110000001 2.701 80.85981830000001 10.193 125.87005590000001 3.698 90.2111466 12.067)
Error minima by case: (0.1892 9 50.6278 2 1.6278 8 72.0 3 41.0 2 56.6278 2 37.6278 2 14.0 2 0.0 0 9.0 2 12.0548 10 6.3722 2 9.6884 1 54.5699 9 3.0515 1 99.0 1 12.8539 2 1.0505 1 43.6278 2 63.0 2 1.0 1 12.4419 1 2.3722 8 43.6278 2 7.6278 10)
Average genome size in population (length): 24.45
Average program size in population (points): 25.45
Average percent parens in population: 0.042
Minimum age in population: 63.97120067028322
Maximum age in population: 68.83858774074866
Average age in population: 66.5268498928126
Median age in population: 66.54864986243874
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.64
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.64
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 30282191
--- Timings ---
Current time: 1529616113976 milliseconds
Total Time:         142.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.4 seconds, 46.6%
Fitness Testing:     62.7 seconds, 44.0%
Report:              13.3 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_cos} {:instruction in1} {:instruction float_mult} {:instruction 35.372239689310504} {:instruction in1} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_dup_times})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_yankdup integer_dec integer_div float_yank float_div integer_dup_times integer_dec float_cos in1 float_mult 35.372239689310504 in1 in1 float_inc float_inc float_inc float_inc print_float float_dup_times)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2593.1353867999997
Median total errors in population: 1341.0
Error averages by case: (139.34022660000002 12.975 137.97890170000002 2.679 84.9767111 12.045 122.33893899999997 3.707 92.73078669999997 2.792 143.24522339999996 2.706 125.83271620000002 3.644 69.16580060000001 2.725 51.754209300000014 0.832 62.41735280000001 2.791 74.8664488 12.121 77.6949852 2.701 69.383651 1.733 138.12023729999999 13.035 108.80828369999999 2.652 147.16319929999997 1.824 74.2985275 2.659 61.932009 1.743 131.20574180000003 3.636 113.21755470000001 2.666 52.04131050000001 1.699 78.4945566 2.664 86.8419903 10.227 131.07201409999996 3.648 96.22300959999997 12.087)
Error minima by case: (0.0619 8 23.9338 2 8.5294 9 23.5813 2 12.8696 2 19.5419 2 49.6205 2 14.0 1 0.0 0 7.0 2 3.1124 10 5.2069 1 9.6884 1 45.9944 9 24.5213 1 97.0 1 20.0 1 7.0 1 18.3053 2 61.0 2 0.0 0 11.1851 2 12.2623 9 7.3617 2 11.7659 9)
Average genome size in population (length): 23.877
Average program size in population (points): 24.877
Average percent parens in population: 0.044
Minimum age in population: 65.40615799331988
Maximum age in population: 69.93271859318779
Average age in population: 68.02400741786145
Median age in population: 68.07933394978218
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.636
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 30879116
--- Timings ---
Current time: 1529616117113 milliseconds
Total Time:         145.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.8 seconds, 46.6%
Fitness Testing:     64.1 seconds, 44.1%
Report:              13.5 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_dup} {:instruction float_yank} {:instruction integer_sub} {:instruction float_cos} {:instruction float_cos} {:instruction float_rot} {:instruction integer_yankdup} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_div} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_dec float_dup float_yank integer_sub float_cos float_cos float_rot integer_yankdup float_frominteger integer_dup_times integer_mult float_div float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2749.4309452999996
Median total errors in population: 1341.0
Error averages by case: (145.3696315 12.935 143.1394163 2.838 91.70090269999997 12.005 129.4733164 3.848 99.98153909999995 2.942 148.0097217 2.884 131.1464713 3.801 76.4320552 2.858 59.50811640000002 0.967 70.41922800000002 2.943 79.960192 12.121 84.60876509999997 2.843 75.88023609999998 1.883 142.64070019999994 13.014 114.19238609999998 2.789 153.72863509999996 1.987 79.42231660000002 2.81 67.1256731 1.906 136.27339060000008 3.774 120.10921340000002 2.791 59.79579650000001 1.873 83.41871019999998 2.807 93.5241428 10.227 136.03945190000005 3.809 102.80093699999998 12.075)
Error minima by case: (0.0619 9 56.6278 2 1.6278 8 71.0 3 40.0 2 62.6278 2 43.6278 2 13.0 2 0.0 0 8.0 2 11.9988 11 6.3722 2 10.6884 1 53.9254 9 9.1183 2 98.0 1 0.1565 2 6.0 1 49.6278 3 62.0 2 0.0 0 13.5456 1 3.6278 9 49.6278 3 12.0946 9)
Average genome size in population (length): 24.058
Average program size in population (points): 25.058
Average percent parens in population: 0.043
Minimum age in population: 66.63480066187128
Maximum age in population: 71.2788478398091
Average age in population: 69.47647866157057
Median age in population: 69.54716454369076
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 31480566
--- Timings ---
Current time: 1529616119998 milliseconds
Total Time:         148.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.1 seconds, 46.5%
Fitness Testing:     65.4 seconds, 44.0%
Report:              13.9 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_min} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_flush} {:instruction float_cos} {:instruction float_add} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add float_min integer_sub float_frominteger integer_rot float_frominteger integer_yankdup integer_div float_flush float_cos float_add float_rot integer_stackdepth in1 float_inc float_inc float_inc float_inc integer_dup_items float_cos integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2818.5310196
Median total errors in population: 1341.0
Error averages by case: (147.3710052 12.962 146.232831 2.841 93.66791589999998 12.041 131.27362159999996 3.868 101.86017099999998 2.968 151.30430139999993 2.889 134.21619170000002 3.797 78.40619890000002 2.883 61.581465600000016 1.015 72.3326679 2.968 83.87046170000002 12.163 86.65302720000001 2.873 79.67841569999999 1.907 146.41864849999996 13.05 117.80966799999996 2.792 155.56611429999992 2.007 82.90385950000002 2.82 70.700943 1.911 139.47032050000004 3.784 122.01064830000001 2.811 63.33441000000002 1.879 87.18247709999999 2.81 95.41010830000002 10.272 139.3060636 3.811 104.72948369999996 12.118)
Error minima by case: (0.2521 9 56.6278 2 1.6278 8 69.0 3 38.0 2 62.6278 1 43.6278 2 15.0 2 0.0 0 6.0 2 14.6807 11 6.3722 2 2.4629 1 57.5627 9 26.7343 2 96.0 1 19.0 2 8.0 1 49.6278 2 60.0 1 0.0 0 13.6203 1 3.6278 8 49.6278 2 12.809 10)
Average genome size in population (length): 24.136
Average program size in population (points): 25.136
Average percent parens in population: 0.043
Minimum age in population: 67.72904920977953
Maximum age in population: 72.73344845118336
Average age in population: 71.0133345995882
Median age in population: 71.0812351406977
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.654
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.654
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 32083966
--- Timings ---
Current time: 1529616123005 milliseconds
Total Time:         151.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.6 seconds, 46.6%
Fitness Testing:     66.7 seconds, 44.0%
Report:              14.2 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_rot} {:instruction print_float} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_cos} {:instruction float_mod} {:instruction tag_float_882} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_rot print_float integer_sub integer_min integer_sub float_frominteger integer_yankdup float_dec float_cos float_mod tag_float_882 float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2741.966322
Median total errors in population: 1341.0
Error averages by case: (144.50303380000003 12.954 143.75066599999997 2.829 90.38451920000001 12.043 128.45341409999997 3.839 98.9396034 2.942 148.72093639999994 2.876 131.74601060000003 3.793 75.49913220000002 2.865 57.48793580000001 1.007 69.41430420000002 2.954 79.86893769999999 12.14 83.6587457 2.844 75.7875859 1.888 143.46559559999994 13.037 114.12919849999999 2.778 151.97387149999997 1.988 80.18400580000001 2.804 67.91876009999999 1.905 136.93647690000003 3.775 119.06337040000001 2.786 60.55092580000001 1.863 84.22011419999998 2.805 91.8487047 10.255 136.73669119999997 3.803 101.8437823 12.107)
Error minima by case: (0.3568 8 78.5616 2 8.5816 9 70.0 2 39.0 2 41.0859 2 72.0 2 12.0 1 0.0 0 7.0 2 8.3193 9 14.5796 1 1.6838 1 32.4373 10 1.1065 1 14.2233 1 20.0 1 5.0 1 65.9331 3 30.7065 2 0.0 0 12.5843 2 13.2623 8 54.9894 3 10.9514 6)
Average genome size in population (length): 24.166
Average program size in population (points): 25.166
Average percent parens in population: 0.043
Minimum age in population: 68.72904920977953
Maximum age in population: 74.42728085943386
Average age in population: 72.48854787285477
Median age in population: 72.51921882576558
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.628
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.628
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 32688116
--- Timings ---
Current time: 1529616126095 milliseconds
Total Time:         154.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.0 seconds, 46.6%
Fitness Testing:     68.0 seconds, 44.0%
Report:              14.4 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction in2} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_pop} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult in2 float_cos integer_dup_times float_stackdepth float_pop 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2863.0684868
Median total errors in population: 1341.0
Error averages by case: (149.27170590000003 12.992 147.95890279999998 2.843 95.60288629999998 12.077 132.8956557 3.881 103.58462189999997 2.965 153.0937301 2.905 135.9427316 3.81 80.14847310000002 2.898 63.4816057 1.02 74.05152719999998 2.973 85.77250199999997 12.193 88.52555060000002 2.885 80.9075716 1.91 148.23762809999997 13.081 119.36807309999996 2.809 157.2773997 2.017 84.85745290000001 2.832 72.65231819999998 1.913 141.23543360000002 3.801 123.75930500000003 2.83 64.50656020000001 1.894 89.16926649999999 2.828 97.38330590000001 10.286 141.09347750000003 3.826 106.67380159999998 12.148)
Error minima by case: (0.2521 7 54.6278 2 0.3722 7 70.0 2 39.0 2 60.6278 2 41.6278 2 13.0 1 0.0 0 7.0 2 14.6807 11 8.3722 1 10.6884 1 57.5627 8 12.9039 1 97.0 1 20.0 1 6.0 1 47.6278 3 61.0 2 0.0 0 12.5305 1 1.6278 9 47.6278 3 10.8295 10)
Average genome size in population (length): 24.212
Average program size in population (points): 25.212
Average percent parens in population: 0.043
Minimum age in population: 70.61058878702764
Maximum age in population: 76.00154797936625
Average age in population: 73.96197152831357
Median age in population: 74.02045889574319
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.633
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.633
Total error diversity:				 0.026
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 33293416
--- Timings ---
Current time: 1529616129048 milliseconds
Total Time:         157.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.3 seconds, 46.5%
Fitness Testing:     69.3 seconds, 44.0%
Report:              14.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_mult} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add float_mult integer_sub float_frominteger integer_sub float_frominteger float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2975.7871975
Median total errors in population: 1341.0
Error averages by case: (154.87541149999998 12.993 151.9266893 2.855 101.34246039999998 12.068 138.17422479999996 3.888 109.05063500000001 2.984 156.99944649999995 2.899 139.9752568 3.816 85.87132280000002 2.902 68.5043106 1.027 79.7082948 2.979 88.84570140000001 12.172 94.3335405 2.893 83.1466016 1.91 151.61464229999999 13.074 121.61569980000002 2.813 161.744785 2.035 89.0001941 2.841 76.8577951 1.937 145.2188608 3.806 129.04210790000002 2.835 68.70834300000001 1.914 93.0187346 2.838 102.91375190000002 10.301 145.06412879999996 3.821 112.50625819999999 12.127)
Error minima by case: (0.0204 7 87.0 2 0.6497 9 69.0 2 36.5136 2 93.0 1 74.0 2 12.6363 1 0.0 0 6.0 2 11.6863 9 13.9483 1 5.0046 1 11.4264 9 9.8612 1 44.2342 1 19.0 1 7.0 1 80.0 2 24.7174 1 0.0 0 3.353 1 9.0211 9 80.0 2 1.7201 7)
Average genome size in population (length): 24.01
Average program size in population (points): 25.01
Average percent parens in population: 0.044
Minimum age in population: 71.68589118425632
Maximum age in population: 77.6685881603023
Average age in population: 75.41830878087796
Median age in population: 75.4550087264984
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.644
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.644
Total error diversity:				 0.032
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 33893666
--- Timings ---
Current time: 1529616131908 milliseconds
Total Time:         160.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.7 seconds, 46.5%
Fitness Testing:     70.6 seconds, 44.0%
Report:              15.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_rot} {:instruction print_float} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_cos} {:instruction float_mod} {:instruction tag_float_882} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_rot print_float integer_sub integer_min integer_sub float_frominteger integer_yankdup float_dec float_cos float_mod tag_float_882 float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2409.8273367
Median total errors in population: 1341.0
Error averages by case: (131.986287 13.003 130.72476369999998 2.648 78.1754382 12.06 115.03938769999999 3.663 85.19046229999998 2.746 136.04718409999998 2.67 118.4675746 3.612 61.40110189999999 2.686 44.3279196 0.806 55.14585329999999 2.747 67.0586892 12.128 69.91463549999999 2.669 63.087183599999996 1.704 130.82671109999998 13.049 102.10923349999999 2.624 139.9939509 1.776 66.5466854 2.623 54.0346503 1.705 123.89435970000001 3.593 105.77229600000001 2.638 46.531230799999996 1.675 70.71992219999998 2.626 79.1185477 10.231 123.76035149999996 3.61 88.5589169 12.102)
Error minima by case: (0.2546 7 9.6647 2 0.3722 7 10.0172 2 20.7289 2 53.1404 2 16.022 2 13.0 1 0.0 0 7.0 2 8.7003 9 8.3722 1 9.291 1 54.5627 9 25.6278 1 87.5504 1 20.0 1 6.0 1 15.2932 2 35.0672 2 0.0 0 12.4423 2 1.6278 10 26.2368 2 9.9823 9)
Average genome size in population (length): 24.161
Average program size in population (points): 25.161
Average percent parens in population: 0.043
Minimum age in population: 72.68589118425632
Maximum age in population: 79.13448854442466
Average age in population: 76.91931226230018
Median age in population: 76.99926249403973
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.635
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.635
Total error diversity:				 0.027
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 34497691
--- Timings ---
Current time: 1529616135054 milliseconds
Total Time:         163.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        76.2 seconds, 46.6%
Fitness Testing:     71.9 seconds, 44.0%
Report:              15.3 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dec} {:instruction integer_add} {:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_cos} {:instruction float_cos} {:instruction print_float} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction float_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_mult float_dup_items integer_dec integer_add integer_min integer_add print_float integer_sub float_cos float_cos print_float float_rot float_add 35.372239689310504 float_swap float_inc float_inc float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2622.3910626
Median total errors in population: 1341.0
Error averages by case: (139.9039441 12.924 139.3999423 2.757 85.55686229999996 12.001 124.14432569999997 3.774 94.40624989999996 2.866 144.33221199999994 2.792 127.34256370000001 3.717 70.79545089999999 2.796 52.550500700000015 0.903 64.7600135 2.877 75.01639200000001 12.102 78.8407342 2.777 70.12121029999997 1.818 138.89770469999996 13.0 108.66954569999997 2.722 147.6662773 1.897 75.35714769999998 2.725 63.02764030000001 1.829 132.51842770000002 3.697 114.56484230000004 2.726 55.62263190000002 1.782 79.3254107 2.72 87.0133282 10.21 132.29150749999997 3.726 97.06419699999998 12.064)
Error minima by case: (0.0619 9 86.0 2 8.8252 7 69.0 3 38.0 2 92.0 1 73.0 2 13.0 2 0.0 0 6.0 2 8.7003 9 7.3722 2 4.2504 1 53.5699 9 25.6853 2 96.0 1 19.0 2 6.0 1 79.0 2 60.0 1 0.0 0 12.7631 1 13.2623 9 79.0 2 10.8342 7)
Average genome size in population (length): 23.803
Average program size in population (points): 24.803
Average percent parens in population: 0.044
Minimum age in population: 75.73360360493413
Maximum age in population: 80.57764975491813
Average age in population: 78.43108138220441
Median age in population: 78.48455810964681
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.637
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.637
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 35092766
--- Timings ---
Current time: 1529616138158 milliseconds
Total Time:         166.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.7 seconds, 46.6%
Fitness Testing:     73.3 seconds, 44.0%
Report:              15.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_yank} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction float_sub} {:instruction float_rot} {:instruction float_dup_items} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min float_frominteger integer_dup float_yankdup integer_yankdup float_cos integer_dup_times float_yank integer_sub float_frominteger integer_mult float_cos float_cos float_sub float_rot float_dup_items 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2668.4339078999997
Median total errors in population: 1341.0
Error averages by case: (142.1049336 12.959 140.7861245 2.772 87.6668797 12.03 125.29526429999999 3.792 95.7843039 2.878 145.97066879999994 2.818 128.73122229999998 3.736 72.14940070000002 2.806 54.460127400000005 0.931 65.9793193 2.882 77.262951 12.135 80.64288140000001 2.793 73.00874269999998 1.825 140.86743549999997 13.039 111.460777 2.728 149.24770869999998 1.923 77.19879090000002 2.761 64.9030367 1.845 133.99912030000004 3.725 116.03656790000002 2.735 57.51040580000001 1.811 81.39958229999999 2.746 89.25138790000001 10.236 133.88262149999994 3.75 99.08165379999998 12.096)
Error minima by case: (0.0204 7 53.6278 2 0.0133 8 69.0 3 38.0 2 59.6278 1 40.6278 2 14.0 2 0.0 0 6.0 2 12.221 8 2.0373 2 5.0046 1 54.4976 10 24.6278 1 96.0 1 14.276 2 7.0 1 46.6278 2 60.0 1 0.0 0 13.4257 1 0.6278 9 46.6278 2 10.6278 9)
Average genome size in population (length): 23.233
Average program size in population (points): 24.233
Average percent parens in population: 0.045
Minimum age in population: 77.62052756722827
Maximum age in population: 81.82659467381065
Average age in population: 79.95722004032113
Median age in population: 80.00663414343812
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.604
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.604
Total error diversity:				 0.027
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 35673591
--- Timings ---
Current time: 1529616141312 milliseconds
Total Time:         169.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.0 seconds, 46.6%
Fitness Testing:     74.7 seconds, 44.0%
Report:              15.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_div} {:instruction float_dup_items} {:instruction print_float} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_yank} {:instruction float_div} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_min integer_min integer_min integer_div float_dup_items print_float integer_sub integer_min integer_sub float_frominteger integer_yankdup float_dec float_yank float_div integer_add in1 integer_yankdup in1 float_inc float_inc float_inc float_mult in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2483.0846631000004
Median total errors in population: 1341.0
Error averages by case: (134.72851340000003 12.992 133.7276764 2.678 80.1916375 12.046 118.0984645 3.705 88.26300460000002 2.788 138.83946279999998 2.714 121.55461950000002 3.638 64.5360635 2.722 47.41569279999999 0.872 58.35272749999999 2.788 69.97944020000001 12.131 72.92266819999999 2.711 66.04281080000001 1.736 133.3483992 13.037 104.8695312 2.647 142.64790739999998 1.823 69.5368775 2.653 57.0776512 1.739 126.86158710000001 3.626 108.63599640000002 2.656 49.61291589999999 1.707 73.58383829999998 2.655 82.0430702 10.239 126.68495539999998 3.647 91.47315160000001 12.106)
Error minima by case: (0.2586 9 74.5616 2 10.4686 8 70.0 2 39.0 2 37.0859 2 73.0 2 13.0 1 0.0 0 7.0 2 4.3193 10 7.3722 1 2.3162 1 19.1063 9 2.8935 1 18.2233 1 20.0 1 6.0 1 61.9331 2 34.7065 2 0.0 0 14.4278 1 12.2623 8 50.9894 2 12.8325 10)
Average genome size in population (length): 23.259
Average program size in population (points): 24.259
Average percent parens in population: 0.045
Minimum age in population: 78.62052756722827
Maximum age in population: 83.22753922207119
Average age in population: 81.4377607038555
Median age in population: 81.50711198801915
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.025
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 36255066
--- Timings ---
Current time: 1529616144319 milliseconds
Total Time:         172.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        80.5 seconds, 46.5%
Fitness Testing:     76.0 seconds, 44.0%
Report:              16.3 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 10
Size: 11
Percent parens: 0.091
--- Population Statistics ---
Average total errors in population: 2740.6870291
Median total errors in population: 1341.0
Error averages by case: (145.026423 13.024 143.329074 2.746 90.84054489999998 12.079 127.5693145 3.764 98.22050889999997 2.854 148.59968199999997 2.785 131.22261280000004 3.708 74.7709953 2.78 58.2134888 0.902 68.41658549999998 2.851 80.63606750000001 12.172 83.53134959999998 2.772 76.82242810000001 1.789 143.5168892 13.083 115.29630739999998 2.697 152.34603399999997 1.895 79.99646310000001 2.728 67.74065979999999 1.814 136.61594429999997 3.708 118.61643759999998 2.721 60.29298930000001 1.791 84.2839014 2.731 92.7004298 10.278 136.5012329 3.719 102.04966540000001 12.14)
Error minima by case: (0.2521 9 77.5616 2 8.5982 8 69.0 2 38.0 2 40.0859 1 73.0 2 13.0 1 0.0 0 6.0 2 7.3193 10 14.7539 1 0.6838 1 31.4373 10 0.1065 1 15.2233 1 19.0 1 6.0 1 64.9331 2 31.7065 1 0.0 0 13.4115 2 13.2623 9 53.9894 2 12.7426 8)
Average genome size in population (length): 22.95
Average program size in population (points): 23.95
Average percent parens in population: 0.046
Minimum age in population: 80.05604448030623
Maximum age in population: 84.81178538110171
Average age in population: 82.94328135574727
Median age in population: 82.96610608127912
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.632
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.632
Total error diversity:				 0.027
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 36828816
--- Timings ---
Current time: 1529616147146 milliseconds
Total Time:         175.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.8 seconds, 46.5%
Fitness Testing:     77.3 seconds, 44.0%
Report:              16.5 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_min} {:instruction integer_add} {:instruction float_add} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction print_integer})
Best program: (integer_min integer_add print_float integer_sub float_pop integer_sub float_frominteger integer_inc float_frominteger integer_min integer_add float_add float_add 35.372239689310504 in1 in1 float_inc float_inc float_inc float_inc print_float print_integer)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2886.036343
Median total errors in population: 1341.0
Error averages by case: (149.8844251 12.977 149.13566949999998 2.857 97.293493 12.062 133.8366279 3.9 104.5219409 3.002 154.22543520000002 2.905 137.1446618 3.809 81.13790979999999 2.92 63.49563889999999 1.045 75.0886325 3.001 85.9274113 12.17 89.35968169999998 2.91 81.74778579999999 1.923 148.93221750000004 13.077 119.8494965 2.82 157.40937759999997 2.055 86.03622700000001 2.838 73.87269830000001 1.94 142.40723680000002 3.812 124.5637045 2.856 66.49380679999999 1.923 90.0715046 2.837 97.9426378 10.299 142.2472226 3.817 107.52389960000004 12.132)
Error minima by case: (0.0204 7 55.6278 2 0.6278 8 70.0 2 39.0 2 61.6278 2 42.6278 2 13.0 1 0.0 0 7.0 2 11.9008 9 7.3722 1 1.6765 1 55.4419 10 10.405 1 97.0 1 20.0 1 6.0 1 48.6278 3 61.0 2 0.0 0 12.3814 1 2.6278 9 48.6278 3 9.9823 9)
Average genome size in population (length): 22.938
Average program size in population (points): 23.938
Average percent parens in population: 0.045
Minimum age in population: 82.17218595289671
Maximum age in population: 86.38652916501296
Average age in population: 84.4396779150259
Median age in population: 84.48367786899769
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.637
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.637
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 37402266
--- Timings ---
Current time: 1529616150250 milliseconds
Total Time:         178.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        83.2 seconds, 46.6%
Fitness Testing:     78.6 seconds, 44.0%
Report:              16.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction integer_pop} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_flush} {:instruction float_cos} {:instruction integer_min} {:instruction float_pop} {:instruction 35.372239689310504} {:instruction float_sin} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_mult integer_pop print_float integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_flush float_cos integer_min float_pop 35.372239689310504 float_sin float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2319.8843065
Median total errors in population: 1341.0
Error averages by case: (127.73604410000002 12.916 128.14315969999996 2.705 74.08821990000003 11.996 112.27574310000001 3.713 82.07338769999998 2.784 132.96508129999998 2.728 116.01054020000004 3.667 58.234066799999994 2.724 39.6110883 0.821 52.2873238 2.795 62.582336000000005 12.081 66.12591819999999 2.71 58.428137599999985 1.752 126.73504469999997 12.987 97.47710639999995 2.661 135.79047909999997 1.821 63.222483200000006 2.671 50.654702600000014 1.763 121.10738480000003 3.643 102.20667950000002 2.661 43.215198099999995 1.719 66.74883449999999 2.68 74.80586790000001 10.187 120.8295965 3.673 84.62388249999998 12.048)
Error minima by case: (0.0204 7 10.4384 2 6.4391 9 10.7909 3 21.5027 2 53.9141 1 15.2483 3 10.3187 2 0.0 0 6.0 2 9.7949 9 7.3722 2 1.6765 1 13.744 9 26.7343 1 41.9166 1 19.0 2 9.0 1 16.0669 2 22.3998 1 0.0 0 10.4419 2 13.2623 9 27.0106 2 8.809 8)
Average genome size in population (length): 22.655
Average program size in population (points): 23.655
Average percent parens in population: 0.046
Minimum age in population: 83.33539978206812
Maximum age in population: 87.85534622364304
Average age in population: 85.93477444475843
Median age in population: 86.01612653905109
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.581
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.581
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 37968641
--- Timings ---
Current time: 1529616153441 milliseconds
Total Time:         181.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.8 seconds, 46.6%
Fitness Testing:     79.9 seconds, 43.9%
Report:              17.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_min} {:instruction integer_dup} {:instruction float_cos} {:instruction integer_min} {:instruction float_sub} {:instruction float_add} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction tagged_421} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_min integer_dup float_cos integer_min float_sub float_add integer_mult float_cos float_cos integer_dup_times float_rot float_add tagged_421 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2575.3560605000002
Median total errors in population: 1341.0
Error averages by case: (138.46737330000005 12.988 137.1364571 2.705 84.0485538 12.048 121.39072209999999 3.716 91.7484516 2.798 142.38025419999997 2.745 124.9516128 3.666 68.0662717 2.734 51.3360108 0.825 61.76220150000002 2.808 73.88215680000002 12.127 76.7196584 2.723 69.97271549999999 1.751 137.18501499999996 13.044 108.68746489999998 2.659 146.23584609999997 1.829 73.2044629 2.681 60.897805 1.776 130.34155280000002 3.66 112.25409280000001 2.67 53.392293599999995 1.735 77.47404199999998 2.673 85.91589000000002 10.244 130.21012259999998 3.678 95.3020332 12.11)
Error minima by case: (0.6294 8 55.6278 2 0.6278 8 70.0 2 39.0 2 61.6278 2 42.6278 2 15.0 1 0.0 0 7.0 2 5.8033 8 3.7087 1 1.6765 1 37.0787 9 26.6278 2 92.7394 1 20.0 1 8.0 1 48.6278 3 61.0 2 0.0 0 12.5305 1 2.6278 10 48.6278 3 11.072 9)
Average genome size in population (length): 22.376
Average program size in population (points): 23.376
Average percent parens in population: 0.046
Minimum age in population: 85.06532966736235
Maximum age in population: 89.32393996991495
Average age in population: 87.39904779555482
Median age in population: 87.42936596325117
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.589
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.589
Total error diversity:				 0.02
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 38528041
--- Timings ---
Current time: 1529616156544 milliseconds
Total Time:         185.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        86.1 seconds, 46.5%
Fitness Testing:     81.3 seconds, 44.0%
Report:              17.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_min} {:instruction integer_add} {:instruction float_add} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction print_integer})
Best program: (integer_min integer_add print_float integer_sub print_integer integer_sub float_frominteger integer_inc float_frominteger integer_min integer_add float_add float_add 35.372239689310504 in1 in1 float_inc float_inc float_inc float_inc print_float print_integer)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2663.4303525
Median total errors in population: 1341.0
Error averages by case: (142.2894801 13.037 140.71052669999997 2.702 87.79755499999999 12.093 124.8732033 3.722 95.3941741 2.813 146.00587139999996 2.739 128.5524437 3.666 71.81192879999998 2.739 54.3785961 0.848 65.46759459999998 2.809 77.17991860000001 12.169 80.64691699999999 2.736 72.25912969999999 1.751 140.7626445 13.069 110.8544217 2.659 149.00522740000002 1.843 77.0340764 2.69 64.8056306 1.777 133.96921890000004 3.662 115.7273449 2.695 57.29214099999999 1.751 81.37073339999998 2.684 89.3895242 10.29 133.86134970000003 3.672 99.2297007 12.145)
Error minima by case: (0.2706 8 88.0 2 1.6737 9 69.0 2 38.0 2 94.0 1 75.0 2 15.0 1 0.0 0 6.0 2 15.2984 10 7.3722 1 9.6884 1 0.9999 8 26.7343 2 56.6605 1 19.0 1 8.0 1 81.0 2 37.1438 1 0.0 0 2.329 1 7.9971 9 81.0 2 0.6961 8)
Average genome size in population (length): 21.997
Average program size in population (points): 22.997
Average percent parens in population: 0.047
Minimum age in population: 86.06532966736235
Maximum age in population: 90.8726032356238
Average age in population: 88.93126189006254
Median age in population: 88.97291764406413
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.594
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.594
Total error diversity:				 0.026
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 39077966
--- Timings ---
Current time: 1529616159511 milliseconds
Total Time:         188.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.5 seconds, 46.5%
Fitness Testing:     82.7 seconds, 44.0%
Report:              17.8 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_frominteger} {:instruction float_min} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dec} {:instruction float_rot} {:instruction float_add} {:instruction 36.013314235507664} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_cos} {:instruction float_cos} {:instruction float_sub} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min float_frominteger float_min float_frominteger integer_yankdup integer_mult float_cos float_cos integer_dec float_rot float_add 36.013314235507664 in1 float_inc float_inc integer_yank float_cos float_cos float_sub in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2663.3509573
Median total errors in population: 1341.0
Error averages by case: (142.03331500000002 12.948 140.05475199999998 2.806 87.9419803 12.011 125.4984237 3.813 95.9507888 2.9 145.09130709999997 2.848 128.0004749 3.756 72.376903 2.833 55.5328657 0.936 66.2868428 2.905 76.9296664 12.119 80.70968600000002 2.819 72.9498995 1.851 139.92994179999997 13.02 111.4444897 2.751 149.9652357 1.949 76.334186 2.777 63.9492376 1.867 133.2001368 3.745 116.17555680000002 2.761 56.59582429999999 1.843 80.4393132 2.777 89.7423461 10.235 132.9849267 3.776 99.10385740000001 12.083)
Error minima by case: (2.2521 9 13.3053 2 0.3722 7 13.6622 3 24.2113 2 56.8634 1 12.3334 2 15.0 2 0.0 0 6.0 2 12.6807 9 6.7047 2 9.6884 1 22.5627 9 23.7343 1 78.2233 1 19.0 2 8.0 1 18.9068 2 31.303 1 0.0 0 0.9373 1 1.6278 8 29.6723 2 11.6278 10)
Average genome size in population (length): 21.719
Average program size in population (points): 22.719
Average percent parens in population: 0.048
Minimum age in population: 87.06532966736235
Maximum age in population: 92.34476666863374
Average age in population: 90.40340393098359
Median age in population: 90.44763606673713
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.575
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.575
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 39620941
--- Timings ---
Current time: 1529616162351 milliseconds
Total Time:         190.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        88.8 seconds, 46.5%
Fitness Testing:     84.0 seconds, 44.0%
Report:              18.0 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_max})
Best program: (integer_min float_frominteger float_yankdup float_frominteger integer_sub float_frominteger integer_yankdup integer_mult float_dup_items float_cos integer_dup_times integer_flush float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_max)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2502.5684115
Median total errors in population: 1341.0
Error averages by case: (135.581825 12.989 134.45582760000002 2.656 81.1161576 12.049 118.89315830000001 3.685 89.12840309999999 2.766 139.68041090000003 2.683 122.2445386 3.609 65.3538955 2.7 48.407308 0.843 59.1206998 2.766 70.98634489999999 12.128 73.85474310000001 2.685 66.2464494 1.704 134.45860549999998 13.046 105.42724909999998 2.61 143.65409250000002 1.804 70.24920730000001 2.636 57.897155500000004 1.729 127.62740550000001 3.608 109.60840900000002 2.65 49.587044299999995 1.69 74.52788590000002 2.633 82.9786655 10.237 127.4827759 3.618 92.37615369999997 12.1)
Error minima by case: (0.6256 9 86.0 2 4.5659 8 70.0 2 39.0 2 92.0 2 73.0 2 13.0 1 0.0 0 7.0 2 11.6807 9 11.612 1 9.6884 1 54.5627 9 23.3058 1 97.0 1 20.0 1 6.0 1 79.0 2 61.0 2 0.0 0 15.2665 1 12.2623 9 79.0 2 11.7486 9)
Average genome size in population (length): 21.944
Average program size in population (points): 22.944
Average percent parens in population: 0.047
Minimum age in population: 89.30786189427512
Maximum age in population: 93.78042587787917
Average age in population: 91.90738638647836
Median age in population: 91.97370555222118
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.604
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.604
Total error diversity:				 0.03
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 40169541
--- Timings ---
Current time: 1529616165383 milliseconds
Total Time:         193.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        90.1 seconds, 46.5%
Fitness Testing:     85.3 seconds, 44.0%
Report:              18.3 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in2} {:instruction integer_yankdup} {:instruction float_mod} {:instruction float_rot} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min float_rot float_add 35.372239689310504 in2 integer_yankdup float_mod float_rot in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 2927.5323509
Median total errors in population: 1341.0
Error averages by case: (152.2491131 13.005 150.70628269999997 2.843 98.19544830000001 12.079 135.1692616 3.881 106.0139605 2.972 155.93511479999998 2.894 138.69092489999997 3.805 82.697607 2.898 65.2390814 1.027 76.469006 2.966 87.97737140000001 12.182 91.29192909999998 2.889 83.0789274 1.904 150.80688000000004 13.094 121.1836533 2.814 158.87587510000003 2.027 87.9221996 2.831 75.7281328 1.922 144.0421159 3.809 126.220636 2.823 68.3606862 1.904 91.53986049999999 2.818 99.90484500000001 10.303 143.93098189999998 3.814 109.6514564 12.147)
Error minima by case: (0.4106 8 55.6278 2 0.6278 8 70.0 2 39.0 2 61.6278 2 42.6278 2 15.0 1 0.0 0 7.0 2 10.7326 9 7.3722 1 9.6884 1 53.7921 9 26.6278 1 97.0 1 20.0 1 8.0 1 48.6278 3 61.0 2 1.0 1 14.6004 1 2.6278 10 48.6278 3 12.6278 10)
Average genome size in population (length): 21.835
Average program size in population (points): 22.835
Average percent parens in population: 0.048
Minimum age in population: 90.36420664080634
Maximum age in population: 95.33325724115586
Average age in population: 93.36661908884659
Median age in population: 93.37599453376117
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.599
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.599
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 40715416
--- Timings ---
Current time: 1529616168242 milliseconds
Total Time:         196.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        91.4 seconds, 46.5%
Fitness Testing:     86.6 seconds, 44.0%
Report:              18.6 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_yankdup} {:instruction print_float} {:instruction float_dup} {:instruction float_rot} {:instruction float_add} {:instruction 34.94975546124897} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_yankdup print_float float_dup float_rot float_add 34.94975546124897 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 2456.8361079
Median total errors in population: 1341.0
Error averages by case: (133.88213770000002 12.952 132.7516004 2.651 79.25291910000001 12.01 116.78917889999998 3.658 86.9963835 2.737 137.95200719999997 2.687 120.52763450000002 3.614 63.18769599999999 2.678 46.43973280000001 0.776 56.846769500000015 2.738 69.0972397 12.084 71.9038739 2.666 65.15886689999999 1.701 132.64405659999994 13.01 104.06689279999999 2.616 141.7151935 1.768 68.39566849999999 2.617 56.046818 1.713 125.896657 3.6 107.5487138 2.608 48.5330716 1.674 72.69554879999998 2.616 81.1385812 10.197 125.73923449999998 3.619 90.57563149999999 12.064)
Error minima by case: (1.5217 9 55.6278 2 0.6278 8 62.2158 2 10.9275 2 61.6278 2 42.6278 2 12.9497 1 0.0 0 7.0 2 11.9008 9 7.3722 1 9.6884 1 37.0125 9 26.6278 1 18.6482 1 20.0 1 7.0 1 48.6278 2 0.8686 2 0.0 0 12.6681 2 2.6278 10 48.6278 2 11.0352 10)
Average genome size in population (length): 21.908
Average program size in population (points): 22.908
Average percent parens in population: 0.048
Minimum age in population: 92.46239371124462
Maximum age in population: 97.18772989821905
Average age in population: 94.86040998150801
Median age in population: 94.91992784071412
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.598
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.598
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 41263116
--- Timings ---
Current time: 1529616171224 milliseconds
Total Time:         199.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        92.9 seconds, 46.5%
Fitness Testing:     87.9 seconds, 44.0%
Report:              18.9 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_max} {:instruction float_rot} {:instruction float_add} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add float_frominteger integer_yankdup integer_mult integer_swap float_max float_rot float_add integer_stackdepth in1 float_inc in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2741.8057301000003
Median total errors in population: 1341.0
Error averages by case: (145.22902899999997 13.006 143.6067045 2.737 90.79079800000001 12.066 127.8148111 3.773 98.5075899 2.86 148.84882749999994 2.782 131.52853280000002 3.704 74.8467199 2.788 58.2864816 0.929 68.6499335 2.854 80.6751811 12.16 83.51798159999998 2.785 75.5247424 1.789 143.4533874 13.075 114.36707289999998 2.696 152.5635852 1.903 80.43711890000002 2.726 67.8025435 1.813 136.85640519999998 3.704 118.84987770000001 2.723 59.542470699999996 1.791 85.24068749999996 2.724 92.7491756 10.273 136.6158391 3.717 101.9962335 12.126)
Error minima by case: (0.3869 9 86.0 2 8.0724 8 70.0 2 39.0 2 92.0 2 73.0 2 13.0 1 0.0 0 7.0 2 11.7344 10 7.3722 1 10.7914 1 22.9291 10 26.7343 1 97.0 1 20.0 1 6.0 1 79.0 2 61.0 2 0.0 0 13.7631 1 13.8833 9 79.0 2 12.1166 9)
Average genome size in population (length): 21.83
Average program size in population (points): 22.83
Average percent parens in population: 0.048
Minimum age in population: 93.81284592913617
Maximum age in population: 98.24430856292724
Average age in population: 96.33853715798664
Median age in population: 96.37248293273299
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.589
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.589
Total error diversity:				 0.029
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 41808866
--- Timings ---
Current time: 1529616174221 milliseconds
Total Time:         202.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        94.2 seconds, 46.5%
Fitness Testing:     89.2 seconds, 44.0%
Report:              19.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction in2} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_cos} {:instruction 36.75375591678909} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction -14} {:instruction float_add} {:instruction 35.168625345317814} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add in2 integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_div float_cos 36.75375591678909 in1 float_inc float_inc float_inc float_inc integer_dup_times integer_max integer_mult float_cos float_cos integer_dup_times -14 float_add 35.168625345317814 in1 float_inc in1 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2768.0727083
Median total errors in population: 1341.0
Error averages by case: (147.0706531 12.951 144.508313 2.739 92.6799877 12.009 129.5147734 3.769 100.17189079999999 2.858 149.74208099999998 2.773 132.41486680000003 3.701 76.7331185 2.781 58.6405554 0.906 70.4387655 2.856 80.33550469999999 12.112 85.5558015 2.768 75.206396 1.795 144.3049057 13.034 113.6483589 2.712 152.8992553 1.903 81.24587780000002 2.727 68.94092939999999 1.81 137.78239950000003 3.703 120.4146034 2.709 61.51081860000001 1.785 85.3863231 2.717 94.01982240000001 10.228 137.6620198 3.712 104.11468699999999 12.072)
Error minima by case: (0.5217 9 55.6278 2 0.6278 8 69.0 2 38.0 2 61.6278 1 42.6278 2 14.9181 1 0.0 0 6.0 2 13.6807 9 7.3722 1 5.0046 1 5.1271 9 10.405 1 46.5159 1 19.0 1 9.0 1 48.6278 2 26.9991 1 0.0 0 13.6681 2 2.6278 10 48.6278 2 12.0352 10)
Average genome size in population (length): 21.206
Average program size in population (points): 22.206
Average percent parens in population: 0.050
Minimum age in population: 95.02034707404206
Maximum age in population: 99.76747621862093
Average age in population: 97.80765366894691
Median age in population: 97.8385165620223
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.586
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.586
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 42339016
--- Timings ---
Current time: 1529616177372 milliseconds
Total Time:         205.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        95.6 seconds, 46.5%
Fitness Testing:     90.6 seconds, 44.0%
Report:              19.5 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_frominteger integer_sub 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 2787.0732841
Median total errors in population: 1341.0
Error averages by case: (146.61848900000004 12.935 145.27932819999998 2.801 92.620424 12.015 129.90125299999997 3.835 100.52804409999999 2.93 150.42617749999997 2.84 133.2372704 3.754 77.1475036 2.85 59.53996680000001 0.998 70.9310293 2.936 81.99953639999998 12.128 85.5842796 2.84 77.78075220000001 1.867 145.34360729999997 13.039 116.06666139999999 2.758 153.7164961 1.975 81.98152950000002 2.782 69.76230399999999 1.872 138.54215240000005 3.758 120.71778740000003 2.775 62.35145450000001 1.843 86.18760729999998 2.766 94.1714387 10.241 138.40040040000002 3.77 103.846791 12.083)
Error minima by case: (0.2272 9 78.5616 2 0.3129 8 69.0 3 38.0 2 41.0859 1 75.0 2 15.0 2 0.0 0 6.0 2 8.3193 10 14.3158 2 1.6838 1 32.4373 10 1.1065 1 14.2233 1 19.0 2 8.0 1 65.9331 2 30.7065 1 0.0 0 4.3157 1 9.9838 9 54.9894 2 2.6828 10)
Average genome size in population (length): 21.047
Average program size in population (points): 22.047
Average percent parens in population: 0.050
Minimum age in population: 96.02034707404206
Maximum age in population: 101.3659206013115
Average age in population: 99.35933974017821
Median age in population: 99.43986343932029
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.021
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 42865191
--- Timings ---
Current time: 1529616180301 milliseconds
Total Time:         208.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        97.0 seconds, 46.4%
Fitness Testing:     91.9 seconds, 44.0%
Report:              19.8 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_mod} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_div} {:instruction float_cos} {:instruction integer_dup_times} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min float_frominteger float_yankdup float_frominteger integer_sub float_frominteger integer_mod integer_mult float_dup_items float_cos integer_dup_times float_div float_cos integer_dup_times in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2765.0383460999997
Median total errors in population: 1341.0
Error averages by case: (145.94182370000001 12.997 144.17012459999998 2.747 91.74761319999999 12.06 128.59270289999998 3.8 99.25534820000001 2.882 149.4830547 2.798 132.0608483 3.719 75.79900610000001 2.813 59.23527399999999 0.952 69.5127717 2.88 81.6416085 12.174 84.485449 2.802 77.77314249999999 1.818 144.43530090000002 13.088 116.20286729999998 2.73 153.2862538 1.936 81.0686959 2.749 68.75133629999999 1.825 137.479909 3.725 119.60659500000001 2.749 61.34860749999999 1.807 85.33889580000002 2.739 93.5932088 10.261 137.3843982 3.732 102.9435102 12.117)
Error minima by case: (0.0204 7 56.0502 2 1.0502 10 69.0 2 38.0 2 40.0859 1 43.0502 2 12.0 1 0.0 0 6.0 2 7.3193 9 6.9498 1 0.6838 1 31.4373 8 0.1065 1 15.2233 1 19.0 1 5.0 1 49.0502 2 31.7065 1 1.0 1 10.5567 1 3.0502 9 49.0502 2 12.1896 9)
Average genome size in population (length): 21.4
Average program size in population (points): 22.4
Average percent parens in population: 0.049
Minimum age in population: 97.02034707404206
Maximum age in population: 102.7576210425695
Average age in population: 100.8763867629474
Median age in population: 100.9366970813976
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.603
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.603
Total error diversity:				 0.026
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 43400191
--- Timings ---
Current time: 1529616183193 milliseconds
Total Time:         211.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        98.4 seconds, 46.5%
Fitness Testing:     93.2 seconds, 44.0%
Report:              20.1 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction float_div} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 34.683447085368094} {:instruction integer_dup_times} {:instruction float_mult} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_add integer_add print_float float_div float_cos integer_dup_times float_rot float_add 34.683447085368094 integer_dup_times float_mult float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2889.1491054
Median total errors in population: 1341.0
Error averages by case: (150.72321430000002 12.984 148.4521379 2.883 97.43390029999999 12.073 134.9582563 3.92 105.61081610000001 3.018 153.39654179999994 2.944 136.4912874 3.845 82.25522050000001 2.945 65.377092 1.067 76.3014392 3.019 85.6231323 12.16 90.3956733 2.93 80.93173059999998 1.952 147.95270659999994 13.064 119.52767169999997 2.84 158.9976597 2.066 85.11798750000001 2.874 72.8935964 1.98 141.67189980000003 3.837 125.62442050000003 2.87 64.79332880000001 1.942 89.03189499999998 2.868 99.2971275 10.306 141.4534181 3.857 108.45695179999998 12.136)
Error minima by case: (1.2521 9 88.0 2 2.8734 9 68.4694 3 40.0 2 94.0 2 75.0 2 15.0 2 0.0 0 8.0 2 11.9945 9 13.1811 2 3.3977 1 50.5207 9 26.7343 2 98.0 1 21.0 2 0.5494 1 81.0 3 62.0 2 0.0 0 10.1688 1 6.4546 10 81.0 3 8.4758 10)
Average genome size in population (length): 21.195
Average program size in population (points): 22.195
Average percent parens in population: 0.050
Minimum age in population: 99.81007227285347
Maximum age in population: 104.3641974570998
Average age in population: 102.3466078788221
Median age in population: 102.4012049712115
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.606
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.606
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 43930066
--- Timings ---
Current time: 1529616186204 milliseconds
Total Time:         214.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        99.9 seconds, 46.5%
Fitness Testing:     94.5 seconds, 44.0%
Report:              20.3 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_add} {:instruction integer_min} {:instruction integer_add} {:instruction float_frominteger} {:instruction 35.372239689310504} {:instruction integer_mult} {:instruction 35.372239689310504} {:instruction float_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_pop integer_add integer_min integer_add float_frominteger 35.372239689310504 integer_mult 35.372239689310504 float_swap float_inc float_inc float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2627.4533559999995
Median total errors in population: 1341.0
Error averages by case: (140.0102979 12.945 139.08479729999996 2.799 85.88386690000002 12.025 123.85194179999998 3.807 94.21141039999999 2.893 144.04286869999996 2.841 127.0408981 3.754 70.6336175 2.818 53.51935680000001 0.95 64.56108710000001 2.897 75.94973869999998 12.122 78.8115747 2.801 71.83967059999998 1.845 138.92336959999997 13.023 110.27997859999999 2.742 148.1422168 1.934 75.34151049999998 2.771 62.953458600000005 1.86 132.22983370000003 3.727 114.39840390000002 2.756 55.59163159999999 1.827 79.40741149999998 2.765 87.66964480000001 10.24 132.02253269999997 3.763 97.0562372 12.091)
Error minima by case: (0.4439 6 55.6278 2 0.6278 8 71.0 3 40.0 2 38.0859 2 42.6278 3 13.0 2 0.0 0 8.0 2 5.3193 9 7.3722 2 1.3162 1 29.4373 9 1.1065 1 14.2233 1 21.0 2 6.0 1 48.6278 2 30.7065 2 0.0 0 13.6635 2 2.6278 9 48.6278 2 11.8295 8)
Average genome size in population (length): 21.133
Average program size in population (points): 22.133
Average percent parens in population: 0.049
Minimum age in population: 101.3153480304839
Maximum age in population: 105.8043533381598
Average age in population: 103.8341841924633
Median age in population: 103.8746716657346
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.587
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.587
Total error diversity:				 0.025
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 44458391
--- Timings ---
Current time: 1529616189216 milliseconds
Total Time:         217.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       101.4 seconds, 46.5%
Fitness Testing:     95.7 seconds, 44.0%
Report:              20.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_flush} {:instruction integer_mod} {:instruction float_swap} {:instruction integer_dup} {:instruction float_mod} {:instruction float_rot} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min float_flush integer_mod float_swap integer_dup float_mod float_rot in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 2831.9442395999995
Median total errors in population: 1341.0
Error averages by case: (148.6819683 12.969 147.0216778 2.8 94.6291922 12.042 131.538848 3.838 102.2725514 2.931 152.22927259999997 2.832 134.9790919 3.76 78.92903349999999 2.846 61.41707410000001 0.985 72.6706686 2.927 83.91673430000002 12.133 87.49712269999999 2.841 79.0816985 1.857 147.0541855 13.059 117.65619989999998 2.77 155.3924497 1.981 83.9677605 2.773 71.72985510000001 1.871 140.32484019999998 3.757 122.44240260000001 2.783 63.5167182 1.837 88.1480228 2.775 96.23346879999997 10.26 140.1988697 3.768 105.91953269999999 12.1)
Error minima by case: (0.2272 8 38.2499 2 4.0724 9 69.0 2 38.0 2 0.7743 1 50.9366 2 13.0 1 0.0 0 6.0 2 12.4544 9 7.3722 1 9.6884 1 7.8743 9 0.1738 1 54.535 1 9.9762 1 3.9282 1 25.6214 2 60.0 1 1.0 1 1.1302 2 12.2623 8 14.6778 2 9.3733 10)
Average genome size in population (length): 20.987
Average program size in population (points): 21.987
Average percent parens in population: 0.049
Minimum age in population: 102.6130177496617
Maximum age in population: 107.4151626530675
Average age in population: 105.3367112548425
Median age in population: 105.3418510192892
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.566
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.566
Total error diversity:				 0.028
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 44983066
--- Timings ---
Current time: 1529616191972 milliseconds
Total Time:         220.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       102.6 seconds, 46.5%
Fitness Testing:     97.0 seconds, 44.0%
Report:              20.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_mult})
Best program: (integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc 35.372239689310504 integer_dup_times float_inc float_inc float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float float_mult)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2263.3833167000003
Median total errors in population: 1341.0
Error averages by case: (126.42123550000001 12.913 125.48822799999999 2.601 72.31439400000002 11.994 109.93060390000001 3.597 79.78697619999998 2.688 130.6592653 2.614 113.18469750000001 3.551 55.82086809999999 2.607 37.64713449999999 0.741 49.556097599999994 2.691 60.65316090000001 12.051 64.2475674 2.595 56.276837099999995 1.653 125.37333309999998 12.982 95.3288731 2.557 134.13210479999998 1.697 60.4909701 2.564 48.0367749 1.652 118.5525005 3.535 100.3654329 2.56 40.427599799999996 1.6 64.7749544 2.552 72.94518330000002 10.178 118.37352169999998 3.559 82.82400210000002 12.039)
Error minima by case: (0.0619 7 87.0 2 9.4391 9 69.0 2 38.0 2 88.6306 1 74.0 2 14.0 1 0.0 0 6.0 2 10.7326 9 14.5796 1 1.6765 1 53.7921 9 10.405 1 96.0 1 19.0 1 7.0 1 80.0 2 60.0 1 0.0 0 13.5883 1 12.2623 9 80.0 2 9.9823 9)
Average genome size in population (length): 20.922
Average program size in population (points): 21.922
Average percent parens in population: 0.049
Minimum age in population: 104.0663294091167
Maximum age in population: 108.7854182288445
Average age in population: 106.8286330337204
Median age in population: 106.8707635670279
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.584
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.584
Total error diversity:				 0.023
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 45506116
--- Timings ---
Current time: 1529616194962 milliseconds
Total Time:         223.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       103.9 seconds, 46.5%
Fitness Testing:     98.4 seconds, 44.0%
Report:              21.0 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_dup_times} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction print_float} {:instruction integer_sub} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 34.94975546124897} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_dup_times float_cos integer_sub integer_dup_items integer_rot print_float integer_sub integer_swap integer_dup_times float_rot float_add 34.94975546124897 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2541.9309674
Median total errors in population: 1341.0
Error averages by case: (138.15542000000005 12.987 135.402845 2.698 83.192506 12.041 120.3335941 3.704 90.7932177 2.793 140.6515279 2.719 123.24770070000001 3.651 67.12460589999999 2.718 50.420501900000005 0.855 60.8136095 2.795 71.90437820000001 12.117 75.87382590000001 2.708 68.1078808 1.747 135.13388159999997 13.037 106.887192 2.648 145.12309610000003 1.823 71.7936143 2.665 59.014803799999996 1.756 128.58967850000002 3.643 111.2274457 2.661 51.481553899999994 1.713 76.5867308 2.662 85.1121646 10.241 128.34663979999996 3.655 94.46855269999999 12.107)
Error minima by case: (1.3869 8 74.5616 2 8.8252 9 70.0 2 36.4563 2 37.0859 2 75.0 2 12.5791 1 0.0 0 7.0 2 4.2986 9 2.2041 1 1.3162 1 11.4837 9 1.8935 1 17.2233 1 20.0 1 8.0 1 61.9331 3 24.6602 2 0.0 0 12.7631 1 13.2623 10 50.9894 3 11.1166 10)
Average genome size in population (length): 20.936
Average program size in population (points): 21.936
Average percent parens in population: 0.049
Minimum age in population: 105.3690634530989
Maximum age in population: 110.0449676956337
Average age in population: 108.3160967117631
Median age in population: 108.3421684517666
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.597
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.597
Total error diversity:				 0.024
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 46029541
--- Timings ---
Current time: 1529616197920 milliseconds
Total Time:         226.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       105.3 seconds, 46.5%
Fitness Testing:     99.7 seconds, 44.0%
Report:              21.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_max} {:instruction float_yank} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add print_float integer_sub float_max float_yank integer_sub float_frominteger integer_sub float_frominteger integer_yankdup integer_shove float_cos float_cos integer_dup_items float_rot float_add 35.372239689310504 float_inc float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2475.2753658999995
Median total errors in population: 1341.0
Error averages by case: (135.06892720000002 12.982 133.3451215 2.64 80.24081530000001 12.04 117.3957732 3.628 87.69952630000002 2.715 138.64275279999995 2.661 121.10760400000002 3.596 64.10057929999999 2.66 47.2899762 0.786 57.548111000000006 2.721 69.91519690000003 12.11 72.89353750000001 2.647 65.23053409999999 1.685 133.50775819999998 13.036 104.07538949999999 2.589 142.4637847 1.741 69.2004528 2.603 56.85019930000001 1.698 126.53953160000003 3.59 108.33429420000002 2.592 49.2694505 1.651 73.58544459999999 2.603 82.0888283 10.226 126.41779549999998 3.603 91.5639814 12.097)
Error minima by case: (0.0204 7 77.5616 2 9.5294 8 69.0 3 38.0 2 40.0859 1 74.0 2 14.0 2 0.0 0 6.0 2 7.3193 8 12.7329 2 0.6838 1 31.4373 10 0.1065 1 15.2233 1 19.0 2 7.0 1 64.9331 2 31.7065 1 0.0 0 14.1694 1 11.8833 9 53.9894 2 12.5365 10)
Average genome size in population (length): 20.987
Average program size in population (points): 21.987
Average percent parens in population: 0.049
Minimum age in population: 106.5390688830708
Maximum age in population: 111.6986069935885
Average age in population: 109.7881793657223
Median age in population: 109.8444617922471
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.595
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.595
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 46554241
--- Timings ---
Current time: 1529616200917 milliseconds
Total Time:         229.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       106.7 seconds, 46.5%
Fitness Testing:    101.0 seconds, 44.0%
Report:              21.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_frominteger} {:instruction float_min} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction float_rot} {:instruction float_add} {:instruction 35.091409396478156} {:instruction in1} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_mult float_frominteger float_min integer_dup_times integer_mult float_cos float_cos float_rot float_add 35.091409396478156 in1 integer_dup_times float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2465.6417561999997
Median total errors in population: 1341.0
Error averages by case: (134.87561259999995 13.023 132.5940499 2.634 80.1716538 12.062 117.40602170000001 3.644 87.7069128 2.724 137.9425101 2.661 120.34738250000001 3.596 64.03904250000001 2.658 47.20518069999999 0.794 57.656288799999984 2.726 68.86711240000001 12.127 72.74210219999999 2.656 64.8340237 1.682 132.5460882 13.058 103.8378062 2.594 142.47730129999997 1.766 68.5276451 2.619 56.090270700000005 1.699 125.78969430000001 3.599 108.32010310000003 2.603 48.578120999999996 1.674 72.62862820000001 2.612 82.1086926 10.249 125.67043329999997 3.596 91.5130785 12.11)
Error minima by case: (0.6761 8 11.4384 2 1.0502 9 11.7909 2 22.5027 2 54.9141 1 14.2483 2 13.0 1 0.0 0 6.0 2 8.7003 10 6.9498 1 9.291 1 54.1272 10 27.0502 1 85.7767 1 19.0 1 6.0 1 17.0669 2 33.2935 1 0.0 0 12.5843 1 3.0502 8 28.0106 2 10.9514 9)
Average genome size in population (length): 20.896
Average program size in population (points): 21.896
Average percent parens in population: 0.050
Minimum age in population: 108.4572193038969
Maximum age in population: 113.1815137117809
Average age in population: 111.3260226012757
Median age in population: 111.3812498592299
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.586
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.586
Total error diversity:				 0.029
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 47076691
--- Timings ---
Current time: 1529616203751 milliseconds
Total Time:         232.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.0 seconds, 46.5%
Fitness Testing:    102.3 seconds, 44.0%
Report:              21.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_add} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_stackdepth integer_add integer_sub integer_min integer_min integer_add print_float float_rot float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2549.0064896999997
Median total errors in population: 1341.0
Error averages by case: (137.65096849999998 13.0 136.1811388 2.652 83.1144676 12.052 120.08978890000002 3.668 90.5080221 2.768 141.5734569 2.669 123.9274319 3.606 66.770969 2.69 50.195009000000006 0.83 60.3659426 2.766 72.77570160000002 12.119 75.6827674 2.684 69.0953287 1.714 136.1437176 13.043 107.97906979999999 2.613 145.15613280000002 1.797 72.22683670000002 2.625 59.905473900000004 1.722 129.43390820000002 3.611 111.06897959999999 2.634 52.3175248 1.683 76.51088089999999 2.618 85.06355130000001 10.247 129.29045519999997 3.612 94.45296590000001 12.103)
Error minima by case: (0.339 8 87.0 2 4.0724 10 70.0 2 39.0 2 93.0 2 74.0 2 14.0 1 0.0 0 7.0 2 12.0046 10 12.58 1 10.6884 1 23.7602 10 26.7343 1 78.6706 1 20.0 1 7.0 1 80.0 2 58.3819 2 0.0 0 12.7986 1 13.2623 10 80.0 2 9.3733 9)
Average genome size in population (length): 21.001
Average program size in population (points): 22.001
Average percent parens in population: 0.050
Minimum age in population: 109.7832135132629
Maximum age in population: 114.777878885722
Average age in population: 112.7856048997594
Median age in population: 112.8344965997671
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.578
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.578
Total error diversity:				 0.021
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 47601766
--- Timings ---
Current time: 1529616206645 milliseconds
Total Time:         235.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.4 seconds, 46.5%
Fitness Testing:    103.5 seconds, 44.0%
Report:              22.2 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_mult} {:instruction integer_sub} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_mult} {:instruction float_inc} {:instruction float_rot} {:instruction integer_max} {:instruction 35.11408695743671} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min float_mult integer_sub in1 float_inc float_inc float_inc float_inc 35.372239689310504 in1 float_inc float_inc float_mult float_inc float_rot integer_max 35.11408695743671 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2625.5217710999996
Median total errors in population: 1341.0
Error averages by case: (140.23213720000004 12.955 138.72435320000002 2.782 85.88877569999998 12.019 123.70494089999998 3.794 94.09373469999998 2.891 143.86816489999998 2.815 126.6163075 3.734 70.4222602 2.804 53.583255400000006 0.965 64.30564229999999 2.894 76.05377539999999 12.13 78.79874980000001 2.799 71.8452589 1.839 139.14489189999998 13.033 110.2478643 2.738 148.25785430000002 1.938 75.2193839 2.754 62.8284071 1.841 131.9328135 3.718 114.4252932 2.747 55.437092600000014 1.808 79.5340726 2.751 87.6648842 10.247 131.78023439999996 3.742 97.085623 12.088)
Error minima by case: (1.1812 9 54.6278 2 0.3722 7 69.0 2 38.0 2 37.0859 1 41.6278 2 14.0 1 0.0 0 6.0 2 4.3193 9 7.3722 1 2.3162 1 28.4373 9 2.8935 1 18.2233 1 19.0 1 7.0 1 47.6278 2 34.7065 1 0.0 0 15.4115 1 1.6278 10 47.6278 2 11.6278 9)
Average genome size in population (length): 21.021
Average program size in population (points): 22.021
Average percent parens in population: 0.050
Minimum age in population: 110.7832135132629
Maximum age in population: 116.3078665912872
Average age in population: 114.2604233467463
Median age in population: 114.312295624596
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.583
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.583
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 48127291
--- Timings ---
Current time: 1529616209554 milliseconds
Total Time:         238.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.8 seconds, 46.5%
Fitness Testing:    104.8 seconds, 44.0%
Report:              22.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_max} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_rot} {:instruction float_add} {:instruction 34.61798026245509} {:instruction in1} {:instruction integer_rot} {:instruction float_frominteger} {:instruction integer_inc} {:instruction integer_mult} {:instruction in1} {:instruction float_cos} {:instruction float_cos} {:instruction float_rot} {:instruction float_rot} {:instruction float_add} {:instruction float_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_dup_times float_frominteger float_max float_cos integer_dup_times float_rot float_rot float_add 34.61798026245509 in1 integer_rot float_frominteger integer_inc integer_mult in1 float_cos float_cos float_rot float_rot float_add float_mult in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2735.7469352999997
Median total errors in population: 1341.0
Error averages by case: (144.8450822 12.983 142.87038139999999 2.834 90.87967709999998 12.054 128.0981103 3.845 98.63369699999998 2.94 147.92243589999998 2.857 130.82719060000002 3.782 75.2268223 2.858 58.495596400000004 0.996 69.03480890000002 2.94 79.80287480000001 12.152 83.6723525 2.855 75.9560586 1.887 142.5081157 13.073 114.3437454 2.782 152.4591347 1.996 79.39976970000001 2.804 67.07653450000001 1.905 136.07441710000003 3.779 118.81970240000001 2.787 59.69692490000001 1.874 83.4165411 2.805 92.7055554 10.28 135.98455089999996 3.79 102.0278555 12.111)
Error minima by case: (0.0204 7 51.6278 2 3.3722 8 62.6123 3 11.3241 2 41.0859 1 38.6278 2 12.5532 2 0.0 0 6.0 2 6.6903 8 4.5957 2 1.6838 1 32.4373 9 1.1065 1 14.2233 1 19.0 2 7.0 1 44.6278 2 0.4721 1 0.0 0 13.4419 1 1.3722 9 44.6278 2 8.6278 9)
Average genome size in population (length): 20.933
Average program size in population (points): 21.933
Average percent parens in population: 0.050
Minimum age in population: 112.7070435111982
Maximum age in population: 117.6576653522685
Average age in population: 115.722146304912
Median age in population: 115.7847334053284
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.59
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.59
Total error diversity:				 0.03
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 48650616
--- Timings ---
Current time: 1529616212650 milliseconds
Total Time:         241.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.2 seconds, 46.5%
Fitness Testing:    106.1 seconds, 44.0%
Report:              22.7 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_min} {:instruction float_shove} {:instruction integer_mod} {:instruction in2} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_rot} {:instruction integer_mult} {:instruction -98} {:instruction float_max} {:instruction float_rot} {:instruction float_add} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_min integer_dup_times float_cos integer_sub integer_min float_shove integer_mod in2 float_frominteger integer_div float_rot integer_mult -98 float_max float_rot float_add integer_stackdepth in1 float_inc in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2810.9238366
Median total errors in population: 1341.0
Error averages by case: (147.5549498 12.973 146.2287776 2.813 93.52081410000001 12.052 130.6247472 3.849 101.29286449999998 2.945 151.4510215 2.857 134.16164460000002 3.775 77.8320924 2.865 60.4393748 1.0 71.62673939999999 2.949 83.09532519999999 12.16 86.47556880000002 2.847 78.9587839 1.877 146.25286809999997 13.067 117.2226354 2.769 154.4813484 1.994 83.02764570000001 2.794 70.82760180000001 1.879 139.5164926 3.771 121.44974149999999 2.802 63.419137500000005 1.854 87.25840199999999 2.789 95.10693010000001 10.27 139.39605659999998 3.783 104.85327309999998 12.115)
Error minima by case: (0.0619 1 52.8025 2 2.1975 2 69.0 2 38.0 2 58.8025 1 39.8025 2 14.0 1 0.0 0 6.0 2 13.4356 10 10.1975 1 8.4868 1 7.7018 9 23.8025 1 47.9588 1 19.0 1 7.0 1 45.8025 2 28.442 1 0.0 0 13.9701 1 0.1975 1 45.8025 2 9.8025 2)
Average genome size in population (length): 20.974
Average program size in population (points): 21.974
Average percent parens in population: 0.050
Minimum age in population: 114.12894856531
Maximum age in population: 119.1345119544354
Average age in population: 117.2269993776149
Median age in population: 117.2834182797805
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.589
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.589
Total error diversity:				 0.028
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 49174966
--- Timings ---
Current time: 1529616215509 milliseconds
Total Time:         244.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.5 seconds, 46.5%
Fitness Testing:    107.4 seconds, 44.0%
Report:              23.0 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction tagged_21} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction float_add} {:instruction integer_mult} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add tagged_21 float_frominteger integer_sub float_frominteger integer_yankdup float_yankdup float_frominteger float_add integer_mult float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2600.2427261999997
Median total errors in population: 1341.0
Error averages by case: (139.29089100000002 12.985 137.9471915 2.741 84.95161149999998 12.041 122.53739529999999 3.741 92.9170168 2.834 143.14196129999996 2.763 125.80108220000001 3.688 69.29568250000001 2.749 52.454270900000004 0.884 63.0624839 2.839 74.93937650000001 12.139 77.77419350000001 2.745 70.91626319999999 1.794 138.1235672 13.049 109.4781211 2.687 147.1893938 1.874 74.2323248 2.708 61.897345200000004 1.803 131.15405370000002 3.684 113.31107390000001 2.704 54.43082499999999 1.757 78.4736631 2.711 86.7723809 10.255 131.01130889999996 3.692 96.16624849999998 12.106)
Error minima by case: (0.0204 7 51.6278 2 0.3722 7 69.0 2 38.0 2 41.0859 1 38.6278 2 14.0 1 0.0 0 6.0 2 8.3193 9 8.3722 1 1.6838 1 32.4373 10 1.1065 2 14.2233 1 19.0 1 7.0 1 44.6278 2 30.7065 1 0.0 0 12.4164 1 1.3722 9 44.6278 2 8.6278 9)
Average genome size in population (length): 20.959
Average program size in population (points): 21.959
Average percent parens in population: 0.050
Minimum age in population: 115.9792512457604
Maximum age in population: 120.6050164113266
Average age in population: 118.7399774002763
Median age in population: 118.7932184229598
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.604
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.604
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 49698941
--- Timings ---
Current time: 1529616218434 milliseconds
Total Time:         247.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       114.9 seconds, 46.5%
Fitness Testing:    108.7 seconds, 44.0%
Report:              23.3 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction 85} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_mod} {:instruction float_stackdepth} {:instruction integer_dec} {:instruction integer_div} {:instruction float_swap} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_max} {:instruction float_rot} {:instruction float_add} {:instruction 36.31164194146173} {:instruction float_div} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction float_mod} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_inc 85 print_float float_frominteger integer_yankdup integer_mult float_mod float_stackdepth integer_dec integer_div float_swap float_div integer_dup_times integer_mult integer_swap float_max float_rot float_add 36.31164194146173 float_div integer_mult float_cos float_cos integer_dup_times float_rot float_add float_mod in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2409.4261946
Median total errors in population: 1341.0
Error averages by case: (133.3703903 12.999 130.44379239999998 2.578 78.2336339 12.044 115.4536838 3.591 85.7079623 2.67 135.91726109999996 2.594 118.10449330000002 3.544 61.893709799999996 2.598 43.3820452 0.727 55.389295100000005 2.671 66.37475580000002 12.107 70.92106570000001 2.593 62.1886736 1.628 130.9151635 13.046 101.1880007 2.539 140.10152999999997 1.696 66.131792 2.554 53.7490661 1.632 123.66344500000001 3.541 106.43854710000001 2.557 46.1289813 1.597 70.6812238 2.55 79.8401781 10.208 123.58541819999999 3.545 89.72408649999998 12.089)
Error minima by case: (0.7118 9 87.0 2 8.5982 9 69.0 2 38.0 2 93.0 1 74.0 2 14.0 1 0.0 0 6.0 2 14.221 8 16.3156 1 11.6884 1 57.103 10 10.405 1 96.0 1 19.0 1 7.0 1 80.0 2 60.0 1 0.0 0 13.4115 1 14.2623 9 80.0 2 12.7426 10)
Average genome size in population (length): 20.667
Average program size in population (points): 21.667
Average percent parens in population: 0.050
Minimum age in population: 117.464177480388
Maximum age in population: 122.3931927517259
Average age in population: 120.2379292581224
Median age in population: 120.2724547272504
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.602
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.602
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 50215616
--- Timings ---
Current time: 1529616221302 milliseconds
Total Time:         249.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.2 seconds, 46.5%
Fitness Testing:    110.0 seconds, 44.0%
Report:              23.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction float_rot} {:instruction integer_add} {:instruction float_dup_items} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_mult})
Best program: (float_max float_rot integer_add float_dup_items in1 float_inc float_inc float_inc float_inc print_float float_mult)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 11
Size: 12
Percent parens: 0.083
--- Population Statistics ---
Average total errors in population: 2552.3192936999994
Median total errors in population: 1341.0
Error averages by case: (137.70720559999998 12.974 136.20007299999997 2.679 83.22041109999999 12.03 120.46836219999999 3.704 90.7908793 2.789 141.4876782 2.708 123.98954470000001 3.633 67.0912276 2.709 50.442872900000005 0.827 60.767475399999995 2.783 72.98477489999999 12.111 75.8881765 2.706 69.12410030000001 1.737 136.2825651 13.039 107.8476198 2.638 145.36327249999997 1.82 72.21003750000001 2.649 59.92495400000001 1.741 129.4111987 3.643 111.314995 2.659 52.389903100000005 1.714 76.5897823 2.65 85.06607700000002 10.228 129.3764613 3.644 94.4776457 12.087)
Error minima by case: (0.294 8 79.4454 2 8.4391 9 70.0 2 37.5292 2 47.9698 2 75.0 2 13.652 1 0.0 0 7.0 2 9.6139 10 11.7085 1 9.6884 1 10.4108 9 24.909 1 45.2499 1 17.2073 1 8.0 1 59.8169 3 25.7331 2 1.0 1 12.0084 1 3.2801 9 48.8733 3 8.5107 10)
Average genome size in population (length): 20.716
Average program size in population (points): 21.716
Average percent parens in population: 0.050
Minimum age in population: 119.3177329769082
Maximum age in population: 123.8272383085039
Average age in population: 121.7404247153225
Median age in population: 121.7659212749052
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.601
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.601
Total error diversity:				 0.02
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 50733516
--- Timings ---
Current time: 1529616224062 milliseconds
Total Time:         252.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.4 seconds, 46.5%
Fitness Testing:    111.3 seconds, 44.0%
Report:              23.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction in1} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 34.94975546124897} {:instruction -93} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_shove} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_min integer_add integer_add print_float integer_sub in1 integer_dup_times float_rot float_add 34.94975546124897 -93 float_inc float_inc float_inc integer_shove float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2595.9358893
Median total errors in population: 1341.0
Error averages by case: (139.3336893 12.948 138.0719979 2.738 84.79664719999998 12.012 122.36457579999997 3.765 92.7723762 2.852 143.27300149999996 2.782 125.91302220000006 3.699 68.9604838 2.765 51.533773000000004 0.884 62.7845267 2.858 74.3625973 12.123 77.67193060000001 2.763 70.1766486 1.809 138.10234519999995 13.022 108.7155726 2.712 146.4478146 1.899 74.31673550000001 2.72 62.00309460000001 1.811 131.27178080000007 3.685 113.0856094 2.716 54.546450700000015 1.774 78.55942249999997 2.721 86.40338750000002 10.229 131.1309619 3.716 96.25544389999996 12.079)
Error minima by case: (0.2595 9 51.6278 2 2.1975 7 69.0 2 38.0 2 57.6278 1 38.6278 2 14.2809 1 0.0 0 6.0 2 11.9168 10 7.3722 1 10.6884 1 9.7818 9 22.6278 2 45.8788 1 19.0 1 8.0 1 44.6278 2 26.362 1 0.0 0 13.9303 1 0.1975 9 44.6278 2 8.6278 10)
Average genome size in population (length): 20.527
Average program size in population (points): 21.527
Average percent parens in population: 0.051
Minimum age in population: 120.670684445315
Maximum age in population: 125.0713997308405
Average age in population: 123.2087009373837
Median age in population: 123.2680314623623
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.603
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.603
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 51246691
--- Timings ---
Current time: 1529616227048 milliseconds
Total Time:         255.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.8 seconds, 46.5%
Fitness Testing:    112.5 seconds, 44.0%
Report:              24.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction integer_add} {:instruction float_mult} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction tag_integer_721} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_frominteger integer_add float_mult integer_sub float_frominteger integer_sub float_frominteger 35.372239689310504 in1 float_inc tag_integer_721 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 2696.9649963999996
Median total errors in population: 1341.0
Error averages by case: (142.26668780000006 12.928 142.826252 2.883 88.256004 12.016 127.5192659 3.889 97.84736610000003 2.99 147.35066169999993 2.919 130.97308420000002 3.819 74.5437113 2.92 54.097452200000006 1.036 68.54451330000002 2.989 77.15288860000001 12.116 81.87921150000001 2.898 71.5439921 1.948 141.4509014 13.021 110.01296900000001 2.834 149.19555379999997 2.054 79.3057569 2.855 66.64242340000001 1.966 135.84099110000005 3.812 117.46525150000001 2.845 58.604233900000004 1.935 83.38216649999998 2.841 89.28169660000002 10.256 135.48972229999995 3.83 99.81323929999999 12.079)
Error minima by case: (0.0204 7 25.9338 2 0.6278 8 25.5813 2 14.8696 2 17.5419 1 42.6278 2 15.2809 1 0.0 0 6.0 2 8.7003 9 7.3722 1 5.0046 1 8.7818 9 8.9541 1 46.8788 1 19.0 1 9.0 1 20.3053 2 27.362 1 0.0 0 14.1694 2 2.6278 9 9.3617 2 9.7791 9)
Average genome size in population (length): 20.681
Average program size in population (points): 21.681
Average percent parens in population: 0.051
Minimum age in population: 122.1565885286219
Maximum age in population: 126.4790014641572
Average age in population: 124.7556032801106
Median age in population: 124.7897895557404
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.61
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.61
Total error diversity:				 0.042
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 51763741
--- Timings ---
Current time: 1529616230156 milliseconds
Total Time:         258.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       120.4 seconds, 46.5%
Fitness Testing:    113.8 seconds, 44.0%
Report:              24.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction float_mod} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add float_mult float_rot float_mod 35.372239689310504 in1 float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2572.0580625
Median total errors in population: 1341.0
Error averages by case: (138.3801171 12.946 136.9952475 2.71 83.8727136 12.012 121.77107729999999 3.739 92.0862424 2.829 142.2402468 2.743 124.8119994 3.672 68.3834835 2.752 50.631858199999996 0.863 62.170927600000006 2.836 73.43534450000001 12.113 76.8588334 2.747 69.06286170000001 1.78 137.3270715 13.023 107.55678969999998 2.678 145.7956288 1.875 73.12610259999998 2.688 60.813524699999995 1.773 130.20148600000002 3.662 112.44993010000003 2.698 53.3264509 1.745 77.51632959999999 2.682 85.4107697 10.22 130.0704575 3.673 95.2355684 12.068)
Error minima by case: (0.0578 9 51.6278 2 1.6278 8 69.0 2 38.0 2 57.6278 1 38.6278 2 16.0 1 0.0 0 6.0 2 14.2257 10 6.3722 1 10.9342 1 57.1091 10 13.7058 1 96.0 1 19.0 1 9.0 1 44.6278 2 60.0 1 0.0 0 12.965 2 1.3722 10 44.6278 2 8.6278 10)
Average genome size in population (length): 20.234
Average program size in population (points): 21.234
Average percent parens in population: 0.052
Minimum age in population: 123.5883320460739
Maximum age in population: 128.0837397125972
Average age in population: 126.2378363502867
Median age in population: 126.2985556815022
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.565
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.565
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 52269591
--- Timings ---
Current time: 1529616233009 milliseconds
Total Time:         261.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.7 seconds, 46.5%
Fitness Testing:    115.1 seconds, 44.0%
Report:              24.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_frominteger} {:instruction float_min} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_min} {:instruction float_add} {:instruction tag_float_40} {:instruction float_div} {:instruction float_cos} {:instruction print_float} {:instruction integer_min} {:instruction float_min} {:instruction integer_dec} {:instruction integer_div} {:instruction float_rot} {:instruction tagged_578} {:instruction integer_rot} {:instruction integer_add} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction float_swap} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_sub} {:instruction float_rot} {:instruction integer_max} {:instruction 34.61798026245509} {:instruction integer_dec} {:instruction float_inc} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction float_inc} {:instruction in2} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction float_dup} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_mult float_frominteger float_min integer_dup_times integer_mult integer_min float_add tag_float_40 float_div float_cos print_float integer_min float_min integer_dec integer_div float_rot tagged_578 integer_rot integer_add float_cos integer_dup_times integer_dup_items float_swap float_frominteger integer_inc float_sub float_rot integer_max 34.61798026245509 integer_dec float_inc float_cos integer_dup_times float_rot float_add float_inc in2 float_add float_dup_times integer_yankdup integer_mult float_cos float_cos float_dup in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2602.1608595000002
Median total errors in population: 1341.0
Error averages by case: (139.0238505 12.978 138.31609050000003 2.742 84.9202675 12.036 122.65855630000003 3.765 92.97992159999998 2.848 143.39828169999996 2.775 126.20798100000002 3.707 69.4020838 2.785 52.30558830000001 0.889 63.22887030000001 2.848 74.7742957 12.14 77.6975788 2.772 70.9550021 1.793 137.8875893 13.05 109.61803459999999 2.708 147.10149520000002 1.894 74.3896537 2.724 62.0658805 1.81 131.4850772 3.699 113.2730301 2.727 54.6133277 1.78 78.37494889999999 2.718 86.8090982 10.248 131.30660099999997 3.703 96.12675499999999 12.102)
Error minima by case: (0.4632 8 74.5616 2 8.4391 9 69.0 3 38.0 2 37.0859 1 74.0 2 14.0 2 0.0 0 6.0 2 4.3193 10 14.5461 2 2.3162 1 28.4373 9 2.8935 2 18.2233 1 19.0 2 7.0 1 61.9331 2 34.7065 1 0.0 0 12.7875 1 13.2623 9 50.9894 2 10.8295 10)
Average genome size in population (length): 20.01
Average program size in population (points): 21.01
Average percent parens in population: 0.052
Minimum age in population: 124.9383207664417
Maximum age in population: 130.0028296805727
Average age in population: 127.6775028100916
Median age in population: 127.7480267196636
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.561
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.561
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 52769841
--- Timings ---
Current time: 1529616236146 milliseconds
Total Time:         264.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       123.3 seconds, 46.6%
Fitness Testing:    116.4 seconds, 44.0%
Report:              24.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_div} {:instruction integer_dup_times} {:instruction 34.70465376693139} {:instruction integer_dup} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yankdup integer_add print_float integer_sub float_div integer_dup_times 34.70465376693139 integer_dup 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_frominteger integer_yankdup in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2539.468898999999
Median total errors in population: 1341.0
Error averages by case: (137.52573980000005 12.987 135.71234779999997 2.72 82.66630479999999 12.044 120.9371315 3.726 91.22649919999999 2.809 140.6564422 2.755 123.62887190000002 3.672 67.72585879999998 2.75 49.5391399 0.872 61.44392400000001 2.803 71.21411270000002 12.14 75.97498599999999 2.748 67.0153402 1.775 135.2955476 13.055 105.6209908 2.686 144.686093 1.855 71.69312289999999 2.699 59.24035490000001 1.787 128.8168845 3.678 111.5024749 2.684 51.854565100000016 1.77 75.70816989999999 2.692 84.1303971 10.245 128.59576539999998 3.69 94.3118341 12.104)
Error minima by case: (0.3744 8 55.6278 2 0.6278 8 69.0 2 38.0 2 38.0859 1 42.6278 2 13.0 1 0.0 0 6.0 2 5.3193 10 7.3722 1 0.6838 1 29.4373 9 0.1065 1 15.2233 1 7.9762 1 5.9282 1 48.6278 2 31.7065 1 0.0 0 14.4646 2 2.6278 9 48.6278 2 12.0937 10)
Average genome size in population (length): 19.932
Average program size in population (points): 20.932
Average percent parens in population: 0.053
Minimum age in population: 126.3744830360098
Maximum age in population: 131.1197839943279
Average age in population: 129.1960766307722
Median age in population: 129.2374090295536
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.562
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.562
Total error diversity:				 0.034
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 53268141
--- Timings ---
Current time: 1529616239292 milliseconds
Total Time:         267.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.7 seconds, 46.6%
Fitness Testing:    117.7 seconds, 44.0%
Report:              25.2 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_times} {:instruction float_dup} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_mult})
Best program: (integer_dup_times float_dup float_add 35.372239689310504 in1 float_inc 35.372239689310504 integer_dup_times float_inc float_inc float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float float_mult)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2701.4818962
Median total errors in population: 1341.0
Error averages by case: (144.0899272 12.984 141.558141 2.694 89.87748129999999 12.05 126.5938954 3.728 97.20100539999999 2.812 146.8842794 2.74 129.4000054 3.659 73.6648148 2.741 57.154316800000004 0.84 67.29723860000001 2.803 78.66347719999999 12.136 82.497359 2.741 74.12054979999999 1.736 141.7184296 13.065 113.10795689999999 2.654 151.49277179999999 1.848 78.013041 2.689 65.761196 1.766 134.83664930000006 3.666 117.6721438 2.682 57.475172300000004 1.743 82.32481779999999 2.677 91.7700426 10.237 134.7355524 3.673 101.10463139999999 12.103)
Error minima by case: (0.2272 3 88.0 2 10.4402 3 71.0 3 40.0 2 94.0 2 75.0 2 15.0 2 0.0 0 8.0 2 10.7326 10 14.5796 2 13.0208 1 53.7921 9 26.7343 1 98.0 1 21.0 2 8.0 1 81.0 3 62.0 2 0.0 0 13.5844 1 15.5947 2 81.0 3 12.217 4)
Average genome size in population (length): 19.936
Average program size in population (points): 20.936
Average percent parens in population: 0.053
Minimum age in population: 127.3744830360098
Maximum age in population: 132.7152607684391
Average age in population: 130.6730143035266
Median age in population: 130.7072873401975
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.546
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.546
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 53766541
--- Timings ---
Current time: 1529616242095 milliseconds
Total Time:         270.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.0 seconds, 46.6%
Fitness Testing:    119.0 seconds, 44.0%
Report:              25.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction in2} {:instruction integer_yankdup} {:instruction float_frominteger} {:instruction float_add} {:instruction 36.31164194146173} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_mult})
Best program: (integer_min float_sin in2 integer_yankdup float_frominteger float_add 36.31164194146173 in1 float_inc float_inc float_inc float_inc print_float float_mult)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 2724.045365599999
Median total errors in population: 1341.0
Error averages by case: (143.4469743 12.987 142.92057219999995 2.817 89.7289431 12.046 127.57960619999999 3.838 98.02172229999998 2.936 147.94180289999997 2.863 130.88287200000002 3.774 74.4812816 2.86 57.42347260000001 0.993 68.4506725 2.93 79.77929639999999 12.157 82.6311969 2.849 75.81734160000002 1.877 142.5378531 13.063 114.25152480000001 2.764 151.8400635 1.99 79.182276 2.793 66.97388360000001 1.889 136.10225050000005 3.779 118.17739980000003 2.799 59.548853599999994 1.856 83.18785939999997 2.785 91.55257170000002 10.268 135.9308075 3.783 100.8362675 12.122)
Error minima by case: (0.2521 8 87.0 2 6.6992 8 70.0 2 39.0 2 93.0 2 74.0 2 14.0 1 0.0 0 7.0 2 10.7326 10 13.1811 1 5.5455 1 53.7921 9 25.7343 1 97.0 1 13.3019 1 7.0 1 80.0 2 61.0 2 0.0 0 2.6964 1 2.9717 9 80.0 2 4.3293 10)
Average genome size in population (length): 19.872
Average program size in population (points): 20.872
Average percent parens in population: 0.052
Minimum age in population: 129.6822607817873
Maximum age in population: 134.182356057001
Average age in population: 132.1806991875368
Median age in population: 132.2277938756783
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.571
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.571
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 54263366
--- Timings ---
Current time: 1529616244990 milliseconds
Total Time:         273.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.3 seconds, 46.5%
Fitness Testing:    120.3 seconds, 44.0%
Report:              25.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_add} {:instruction integer_min} {:instruction integer_add} {:instruction float_frominteger} {:instruction 35.372239689310504} {:instruction integer_mult} {:instruction 35.372239689310504} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_pop integer_add integer_min integer_add float_frominteger 35.372239689310504 integer_mult 35.372239689310504 float_dup float_inc integer_dup_items float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2723.588232
Median total errors in population: 1341.0
Error averages by case: (143.78494930000005 12.956 142.66443329999998 2.799 89.90837540000001 12.01 127.54068409999998 3.822 98.01248989999999 2.924 147.79917199999997 2.829 130.58643310000002 3.753 74.3598551 2.826 57.4982655 1.012 68.3608572 2.924 79.8709228 12.124 82.71300579999999 2.822 75.98209400000002 1.856 142.63755730000005 13.035 114.3237215 2.75 151.9262597 1.989 79.0578928 2.771 66.86997580000002 1.867 135.87811190000002 3.754 118.1755615 2.782 59.43670950000001 1.823 83.359517 2.765 91.78211160000001 10.252 135.7151639 3.755 101.064112 12.08)
Error minima by case: (1.1223 8 73.8795 2 8.5294 7 69.0 2 38.0 2 42.4038 1 73.5662 2 14.0 1 0.0 0 6.0 2 10.7326 9 8.3722 1 9.266 1 23.4767 9 0.7386 1 96.0 1 8.6965 1 3.3635 1 54.251 2 60.0 1 0.0 0 11.5862 1 11.8398 10 43.3074 2 11.217 9)
Average genome size in population (length): 19.78
Average program size in population (points): 20.78
Average percent parens in population: 0.052
Minimum age in population: 131.2711173735957
Maximum age in population: 135.4131613816423
Average age in population: 133.6662079550342
Median age in population: 133.6973118752161
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.57
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.57
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 54757891
--- Timings ---
Current time: 1529616248120 milliseconds
Total Time:         276.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.8 seconds, 46.6%
Fitness Testing:    121.6 seconds, 44.0%
Report:              26.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_sub} {:instruction integer_add} {:instruction float_cos} {:instruction integer_dec} {:instruction integer_add} {:instruction print_float} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_rot integer_dup_items float_cos integer_dup_times integer_max integer_sub integer_add float_cos integer_dec integer_add print_float float_rot float_add 35.372239689310504 in1 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2578.2627697000003
Median total errors in population: 1341.0
Error averages by case: (138.3736211 13.0 137.35027739999998 2.737 84.096831 12.07 121.54225729999999 3.744 91.8768416 2.831 142.4748061 2.752 125.21602309999999 3.681 68.25969 2.759 51.3936873 0.873 62.02257020000001 2.835 73.8526133 12.145 76.78621889999998 2.761 70.0813209 1.79 137.00503220000002 13.056 108.7295184 2.693 146.1248995 1.873 73.370515 2.707 61.06092290000001 1.802 130.52505670000002 3.69 112.21829320000002 2.705 53.56100479999999 1.758 77.52828509999999 2.697 85.97605349999999 10.273 130.4502058 3.693 95.33822439999997 12.123)
Error minima by case: (0.2272 8 77.5616 2 10.7955 9 69.0 3 38.0 2 40.0859 1 75.0 2 15.0 2 0.0 0 6.0 2 7.3193 10 7.3722 2 0.6838 1 6.7818 9 0.1065 1 15.2233 1 11.5409 2 2.3635 1 64.9331 2 29.362 1 0.0 0 13.756 1 11.8398 9 53.9894 2 12.217 9)
Average genome size in population (length): 19.668
Average program size in population (points): 20.668
Average percent parens in population: 0.054
Minimum age in population: 132.6301664867325
Maximum age in population: 137.1828448836722
Average age in population: 135.1419115895825
Median age in population: 135.1825739024976
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.588
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.588
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 55249616
--- Timings ---
Current time: 1529616251150 milliseconds
Total Time:         279.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.2 seconds, 46.6%
Fitness Testing:    123.0 seconds, 44.0%
Report:              26.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_dup} {:instruction print_float} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_mult})
Best program: (integer_stackdepth integer_dup print_float in1 float_inc float_inc integer_div float_frominteger float_div integer_dup_times integer_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float float_mult)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2577.2822382
Median total errors in population: 1341.0
Error averages by case: (138.56276850000003 12.91 137.3717571 2.714 84.11259060000002 11.98 121.7532076 3.723 92.04054029999999 2.813 142.54687539999998 2.748 125.19925100000002 3.673 68.2822886 2.741 51.5043336 0.872 62.089574800000015 2.815 73.9919354 12.093 76.8409715 2.731 69.26513130000001 1.777 137.32857879999995 13.009 108.32708909999997 2.68 146.48691159999996 1.863 73.2592573 2.68 61.0331451 1.775 130.54501960000002 3.668 112.4996819 2.672 52.77419140000001 1.741 77.4899737 2.675 85.95117660000001 10.192 130.39063649999997 3.688 95.36035089999999 12.042)
Error minima by case: (0.5217 8 55.6278 2 0.6278 8 69.0 2 38.0 2 61.6278 1 42.6278 2 8.8149 1 0.0 0 6.0 2 10.7326 10 3.618 1 9.6884 1 53.7921 9 26.6278 1 96.0 1 19.0 1 8.0 1 48.6278 2 60.0 1 0.0 0 7.2734 1 2.6278 10 48.6278 2 10.809 9)
Average genome size in population (length): 19.221
Average program size in population (points): 20.221
Average percent parens in population: 0.054
Minimum age in population: 133.8653557394205
Maximum age in population: 138.6090588661769
Average age in population: 136.6650296491217
Median age in population: 136.6881269214772
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.579
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.579
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 55730166
--- Timings ---
Current time: 1529616254249 milliseconds
Total Time:         282.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.7 seconds, 46.6%
Fitness Testing:    124.4 seconds, 44.0%
Report:              26.7 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_rot} {:instruction float_add} {:instruction 35.372239689310504} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_cos} {:instruction integer_swap} {:instruction float_max} {:instruction integer_swap} {:instruction float_add} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 34.683447085368094} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_max})
Best program: (integer_min integer_add float_rot float_add 35.372239689310504 float_inc integer_dup_times float_cos integer_swap float_max integer_swap float_add integer_stackdepth in1 float_inc in1 float_inc float_inc float_cos integer_dup_times float_rot float_add 34.683447085368094 float_stackdepth integer_yankdup integer_mult float_dup_items float_cos integer_dup_times integer_yank float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_max)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2581.7300328
Median total errors in population: 1341.0
Error averages by case: (138.2895995 12.953 137.50573319999998 2.775 84.07436680000002 12.025 122.04568870000001 3.773 92.29304189999999 2.858 142.44401689999992 2.802 125.4353542 3.731 68.7538185 2.79 51.484238899999994 0.897 62.57997460000001 2.861 73.93318569999998 12.116 76.9279501 2.771 70.01968 1.809 137.0629012 13.023 108.6028623 2.718 146.3720081 1.892 73.46870000000001 2.743 61.131058800000005 1.842 130.6172248 3.717 112.5387072 2.72 53.7084188 1.805 77.44386699999997 2.739 85.90474510000001 10.238 130.39778459999997 3.732 95.27310589999998 12.092)
Error minima by case: (0.0619 8 72.0369 2 9.4391 8 62.6799 3 31.6799 2 40.5613 1 71.7236 3 14.0 2 0.0 0 0.3201 2 8.3193 11 13.1811 2 1.6838 1 32.4373 8 1.1065 1 14.2233 1 12.6799 2 7.0 1 52.4084 2 30.7065 1 1.0 1 13.4419 2 10.0607 9 41.4648 2 11.809 10)
Average genome size in population (length): 19.264
Average program size in population (points): 20.264
Average percent parens in population: 0.054
Minimum age in population: 135.8444698057234
Maximum age in population: 140.1531311102244
Average age in population: 138.1777868584966
Median age in population: 138.2549826834259
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.564
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.564
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 56211791
--- Timings ---
Current time: 1529616257183 milliseconds
Total Time:         285.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.0 seconds, 46.6%
Fitness Testing:    125.6 seconds, 44.0%
Report:              26.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_cos} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction float_swap} {:instruction float_rot} {:instruction float_flush} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_rot integer_dup_items float_cos integer_shove integer_yankdup float_swap float_rot float_flush 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 2810.5610722
Median total errors in population: 1341.0
Error averages by case: (147.85750670000002 12.949 145.9941139 2.777 93.7682217 12.014 130.0477165 3.787 100.83739229999999 2.882 151.32802909999995 2.816 133.88872830000003 3.735 77.4668999 2.802 61.1777147 0.985 70.9644792 2.885 83.5347846 12.122 86.3865356 2.798 79.7755027 1.831 146.29805530000002 13.046 118.1991124 2.728 155.0212328 1.93 82.7944319 2.744 70.62949619999999 1.845 139.31996750000002 3.728 121.29878090000001 2.73 63.174910700000005 1.809 87.2083131 2.731 95.6427506 10.243 139.23200699999998 3.741 104.97438860000001 12.082)
Error minima by case: (0.2272 9 87.0 2 10.8543 9 69.0 2 38.0 2 93.0 1 74.0 2 14.0 1 0.0 0 6.0 2 11.9008 10 7.3722 1 10.6884 1 55.6826 10 26.7343 1 96.0 1 19.0 1 7.0 1 80.0 2 60.0 1 0.0 0 15.0075 1 13.2623 9 80.0 2 12.217 10)
Average genome size in population (length): 19.494
Average program size in population (points): 20.494
Average percent parens in population: 0.053
Minimum age in population: 136.8444698057234
Maximum age in population: 141.4659934405045
Average age in population: 139.6228987398789
Median age in population: 139.6856418363115
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.57
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.57
Total error diversity:				 0.019
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 56699141
--- Timings ---
Current time: 1529616259958 milliseconds
Total Time:         288.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.3 seconds, 46.5%
Fitness Testing:    126.9 seconds, 44.0%
Report:              27.3 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_dup_times} {:instruction float_cos} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_div} {:instruction float_yank} {:instruction float_div} {:instruction integer_sub} {:instruction float_add} {:instruction tagged_421} {:instruction in1} {:instruction integer_dec} {:instruction float_sin} {:instruction float_rot} {:instruction integer_flush} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_dup_times float_cos integer_flush integer_min integer_div float_yank float_div integer_sub float_add tagged_421 in1 integer_dec float_sin float_rot integer_flush 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2570.3934319
Median total errors in population: 1341.0
Error averages by case: (138.3737238 12.914 136.3493199 2.759 84.10251560000003 11.978 122.15405770000004 3.792 92.42469250000002 2.879 141.3557698 2.806 124.2905663 3.722 68.95398989999998 2.796 51.655044199999985 0.923 62.841495399999985 2.89 73.1975749 12.09 77.0462058 2.794 69.01588609999999 1.837 136.32535950000002 12.997 107.53211739999999 2.731 146.4546061 1.939 72.6592051 2.74 60.1920913 1.829 129.49353480000002 3.716 112.61999 2.732 52.822952699999995 1.803 76.69992029999999 2.737 85.87251720000003 10.201 129.29370809999998 3.727 95.28558750000002 12.049)
Error minima by case: (1.1812 8 10.0 1 2.3722 8 13.7909 3 24.5027 2 4.0 1 12.2483 2 15.0 2 0.0 0 6.0 2 4.3193 10 10.3722 2 2.3162 1 7.9466 10 2.8935 1 18.2233 1 0.3607 2 8.0 1 17.0 2 31.2935 1 0.0 0 14.4646 1 0.3722 9 17.0 2 9.6278 9)
Average genome size in population (length): 19.654
Average program size in population (points): 20.654
Average percent parens in population: 0.053
Minimum age in population: 138.4392502264411
Maximum age in population: 143.0170808107438
Average age in population: 141.0835021918795
Median age in population: 141.1397984813299
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.586
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.586
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 57190491
--- Timings ---
Current time: 1529616262912 milliseconds
Total Time:         291.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.6 seconds, 46.5%
Fitness Testing:    128.2 seconds, 44.0%
Report:              27.5 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_tan} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_tan integer_yankdup integer_dec in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 10
Size: 11
Percent parens: 0.091
--- Population Statistics ---
Average total errors in population: 2899.1610832
Median total errors in population: 1341.0
Error averages by case: (151.1789952 12.918 149.8694997 2.859 97.12195919999998 12.004 134.77837399999999 3.885 105.50793199999998 2.989 154.99208569999996 2.891 137.87955460000003 3.801 82.20114500000003 2.896 62.83317670000001 1.073 76.07447950000001 3.001 85.7543189 12.124 90.50192880000003 2.883 80.9113555 1.927 149.96774580000002 13.021 118.8574524 2.816 157.02405339999999 2.043 86.8970516 2.828 74.71743509999999 1.936 143.16021890000005 3.797 125.3950172 2.827 67.3493402 1.889 91.08045859999999 2.81 98.10990590000002 10.258 143.01925369999995 3.807 108.61634559999999 12.079)
Error minima by case: (0.2343 7 57.6278 2 2.6278 8 70.0 2 39.0 2 63.6278 2 44.6278 2 14.0 1 0.0 0 7.0 2 14.8057 11 5.3722 1 5.1729 1 54.6659 10 26.7343 1 97.0 1 20.0 1 7.0 1 50.6278 2 61.0 2 0.0 0 12.7266 1 4.6278 10 50.6278 2 10.8142 9)
Average genome size in population (length): 19.924
Average program size in population (points): 20.924
Average percent parens in population: 0.053
Minimum age in population: 139.8581684645165
Maximum age in population: 144.5186143815015
Average age in population: 142.5610225966962
Median age in population: 142.6224438791075
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.596
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.026
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 57688591
--- Timings ---
Current time: 1529616265857 milliseconds
Total Time:         294.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.1 seconds, 46.6%
Fitness Testing:    129.5 seconds, 44.0%
Report:              27.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_shove} {:instruction integer_mod} {:instruction in2} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min float_shove integer_mod in2 float_frominteger integer_dec float_inc in1 float_inc in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2555.2323564
Median total errors in population: 1341.0
Error averages by case: (137.3154959 12.931 136.48055229999997 2.708 84.01149800000002 11.998 120.7743231 3.725 91.03239700000002 2.82 141.61021649999998 2.734 124.3327703 3.666 67.39613190000001 2.742 50.4055815 0.894 61.2196749 2.822 72.902106 12.096 75.8177889 2.735 69.04506199999997 1.77 136.0603036 13.017 107.7703093 2.671 145.2699926 1.863 72.46631839999999 2.676 60.1044303 1.77 129.6487066 3.66 111.36419890000002 2.679 52.606308199999994 1.732 76.54974669999999 2.681 84.94142430000001 10.208 129.4816713 3.68 94.28634790000001 12.061)
Error minima by case: (0.0619 7 74.5616 2 8.3787 8 70.0 2 37.1582 2 37.0859 2 74.0 2 13.2809 1 0.0 0 7.0 2 4.3193 9 13.7752 1 2.3162 1 10.7818 10 2.8935 1 18.2233 1 20.0 1 7.0 1 61.9331 2 25.362 2 0.0 0 12.3814 1 12.5947 9 50.9894 2 9.9823 9)
Average genome size in population (length): 19.975
Average program size in population (points): 20.975
Average percent parens in population: 0.053
Minimum age in population: 141.7494503110009
Maximum age in population: 146.1070355788725
Average age in population: 144.047752262535
Median age in population: 144.0722468926272
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.581
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.581
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 58187966
--- Timings ---
Current time: 1529616268774 milliseconds
Total Time:         297.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.5 seconds, 46.6%
Fitness Testing:    130.8 seconds, 44.0%
Report:              28.0 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_yank} {:instruction print_float} {:instruction integer_add} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction integer_max} {:instruction 34.61798026245509} {:instruction 35.372239689310504} {:instruction in1} {:instruction integer_sub} {:instruction tagged_74} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_dup_items} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_add} {:instruction 34.70465376693139} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min float_yank print_float integer_add float_cos integer_dup_times float_rot integer_max 34.61798026245509 35.372239689310504 in1 integer_sub tagged_74 integer_sub float_frominteger integer_inc float_frominteger integer_add integer_dup_items integer_dup_times integer_flush float_add 34.70465376693139 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2574.8462116
Median total errors in population: 1341.0
Error averages by case: (138.79127670000003 12.984 137.0458803 2.67 84.14884869999999 12.036 121.27945829999999 3.701 91.6667205 2.782 142.32029119999999 2.704 124.86087090000002 3.638 68.0697066 2.712 51.323696500000004 0.851 61.71237290000001 2.78 73.8758078 12.126 76.8244867 2.704 69.9761516 1.725 137.11311609999998 13.048 108.699324 2.638 146.09768359999995 1.819 73.27659030000002 2.66 60.8741479 1.739 130.27117360000003 3.642 112.14544730000001 2.648 53.38480560000001 1.716 77.56662739999999 2.654 85.98591600000002 10.233 130.15183609999997 3.647 95.43097499999999 12.096)
Error minima by case: (0.6256 9 77.5616 2 9.5294 8 69.0 3 38.0 2 40.0859 1 73.0 2 13.0 2 0.0 0 6.0 2 7.3193 10 15.9853 2 0.6838 1 13.3061 8 0.1065 1 15.2233 1 19.0 2 6.0 1 64.9331 2 31.7065 1 1.0 1 15.2665 1 13.2623 9 53.9894 2 13.4251 9)
Average genome size in population (length): 20.044
Average program size in population (points): 21.044
Average percent parens in population: 0.054
Minimum age in population: 143.3766462932577
Maximum age in population: 147.4045958077002
Average age in population: 145.513226308003
Median age in population: 145.5540751632241
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.561
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.561
Total error diversity:				 0.024
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 58689066
--- Timings ---
Current time: 1529616271790 milliseconds
Total Time:         300.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.9 seconds, 46.6%
Fitness Testing:    132.1 seconds, 44.0%
Report:              28.2 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_div} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_mult})
Best program: (float_swap integer_add float_mult float_rot integer_div 35.372239689310504 in1 float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc print_float float_mult)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 2733.7447629000003
Median total errors in population: 1341.0
Error averages by case: (144.74423320000002 12.99 142.565865 2.81 90.81143610000001 12.066 128.1706941 3.848 98.72597090000001 2.947 147.77403869999995 2.856 130.48953120000004 3.768 75.35026739999999 2.867 58.4010895 0.987 69.1657146 2.946 79.80385460000002 12.165 83.66743229999999 2.855 75.8350601 1.885 142.671194 13.073 114.25751100000001 2.788 152.6653208 1.988 79.1377865 2.785 66.8371132 1.884 135.81336480000004 3.769 118.96707370000003 2.805 59.427224 1.852 83.31154189999998 2.781 92.62093540000001 10.284 135.68249519999995 3.775 101.9470147 12.127)
Error minima by case: (1.2521 8 10.4384 2 11.4391 7 10.7909 2 21.5027 2 53.9141 2 15.2483 2 15.0 1 0.0 0 7.0 2 10.7326 10 14.5796 1 9.6884 1 53.7921 9 21.7343 1 86.7767 1 20.0 1 8.0 1 16.0669 3 34.2935 2 0.0 0 15.3309 1 12.2623 9 27.0106 3 12.8342 8)
Average genome size in population (length): 20.184
Average program size in population (points): 21.184
Average percent parens in population: 0.053
Minimum age in population: 144.5269600707883
Maximum age in population: 148.9715542000619
Average age in population: 147.0064005855864
Median age in population: 147.0248640566944
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.563
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.563
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 59193666
--- Timings ---
Current time: 1529616274945 milliseconds
Total Time:         303.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       141.4 seconds, 46.6%
Fitness Testing:    133.4 seconds, 43.9%
Report:              28.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_div} {:instruction integer_dup_times} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction integer_sub} {:instruction tagged_74} {:instruction integer_yank} {:instruction float_add} {:instruction float_stackdepth} {:instruction in1} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yankdup integer_add print_float integer_sub float_div integer_dup_times integer_yankdup integer_mult integer_sub tagged_74 integer_yank float_add float_stackdepth in1 float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2765.2317781999996
Median total errors in population: 1341.0
Error averages by case: (145.9014546 12.954 144.34242609999998 2.771 91.8172598 12.013 128.39116529999998 3.794 99.08006239999999 2.882 149.6074411 2.81 132.24917190000002 3.732 75.6341409 2.807 59.2277036 0.903 69.304725 2.878 81.60189089999999 12.131 84.4481599 2.807 77.8993611 1.816 144.33092579999996 13.053 116.3381663 2.732 153.14918099999997 1.932 81.1278875 2.751 68.8844104 1.838 137.6362034 3.731 119.44565639999999 2.739 61.4476697 1.815 85.3305848 2.745 93.71190490000001 10.238 137.6131092 3.739 103.0231162 12.077)
Error minima by case: (0.0619 8 55.6278 2 0.6278 8 69.0 2 38.0 2 41.0859 1 42.6278 2 16.0 1 0.0 0 6.0 2 8.3193 10 7.3722 1 1.6838 1 3.2791 10 1.1065 1 14.2233 1 19.0 1 9.0 1 48.6278 2 30.7065 1 0.0 0 13.756 2 2.6278 9 48.6278 2 12.4951 8)
Average genome size in population (length): 19.938
Average program size in population (points): 20.938
Average percent parens in population: 0.053
Minimum age in population: 145.7936566638515
Maximum age in population: 150.4124695926779
Average age in population: 148.489211327712
Median age in population: 148.524511944813
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.557
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.557
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 59692116
--- Timings ---
Current time: 1529616277835 milliseconds
Total Time:         306.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.8 seconds, 46.6%
Fitness Testing:    134.6 seconds, 43.9%
Report:              28.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_sub} {:instruction integer_min} {:instruction float_inc} {:instruction integer_yankdup} {:instruction tag_integer_88} {:instruction float_max} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_min integer_add float_stackdepth integer_sub float_pop integer_sub integer_min float_inc integer_yankdup tag_integer_88 float_max in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 2694.2815697
Median total errors in population: 1341.0
Error averages by case: (142.9192796 12.999 141.8973535 2.798 88.7081557 12.064 126.33593309999999 3.811 96.81861879999998 2.897 146.96132649999996 2.846 129.8281146 3.754 73.16860679999999 2.833 55.5441456 0.945 67.0539366 2.896 78.1282297 12.168 81.5770958 2.824 73.96384690000001 1.854 141.6389423 13.076 112.35994339999999 2.759 150.21921970000002 1.949 78.32096560000001 2.778 65.9902091 1.874 135.08741650000002 3.75 117.0339755 2.764 58.616511700000004 1.853 82.35388279999998 2.774 90.28063890000001 10.282 134.99813559999998 3.764 100.03308539999999 12.132)
Error minima by case: (0.294 8 53.6278 2 0.3722 7 69.0 2 38.0 2 59.6278 1 40.6278 2 14.0 1 0.0 0 6.0 2 3.3462 9 1.2517 1 9.6884 1 39.5357 9 10.405 2 95.1964 1 19.0 1 7.0 1 46.6278 2 60.0 1 0.0 0 13.756 2 0.6278 10 46.6278 2 10.6278 9)
Average genome size in population (length): 20.018
Average program size in population (points): 21.018
Average percent parens in population: 0.053
Minimum age in population: 147.366528320745
Maximum age in population: 152.0084445346266
Average age in population: 149.9654398194411
Median age in population: 150.0142984914407
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.561
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.561
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 60192566
--- Timings ---
Current time: 1529616280659 milliseconds
Total Time:         309.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.1 seconds, 46.6%
Fitness Testing:    135.9 seconds, 43.9%
Report:              29.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_stackdepth} {:instruction print_float} {:instruction float_inc} {:instruction float_inc} {:instruction float_div} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction float_frominteger})
Best program: (float_shove float_stackdepth print_float float_inc float_inc float_div in1 float_inc float_inc float_inc float_inc print_float float_frominteger)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 2580.4069835
Median total errors in population: 1341.0
Error averages by case: (138.1877481 13.011 137.44491269999997 2.755 83.9471412 12.068 121.93547079999999 3.786 92.19134670000001 2.874 142.49989879999998 2.806 125.3229663 3.718 68.4717581 2.808 51.412822 0.929 62.376939 2.869 73.9048432 12.162 76.74824489999999 2.798 69.93596209999998 1.807 137.07183920000003 13.07 108.6370708 2.716 146.40159709999995 1.917 73.45983060000002 2.747 61.0578476 1.832 130.58741500000002 3.718 112.49241750000002 2.749 53.636539600000006 1.807 77.4757323 2.741 85.81160490000002 10.276 130.4010101 3.728 95.17502489999998 12.127)
Error minima by case: (0.2546 8 55.4595 2 0.4595 8 71.0 3 40.0 2 61.4595 2 42.4595 2 15.0 2 0.0 0 8.0 2 11.9008 10 7.3722 2 2.803 1 52.296 9 26.4595 1 98.0 1 21.0 2 8.0 1 48.4595 3 62.0 2 0.0 0 12.6635 1 2.4595 9 48.4595 3 12.4595 9)
Average genome size in population (length): 19.57
Average program size in population (points): 20.57
Average percent parens in population: 0.054
Minimum age in population: 149.3192153298433
Maximum age in population: 153.2433954271596
Average age in population: 151.4635715720419
Median age in population: 151.4771577693191
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.556
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.556
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 60681816
--- Timings ---
Current time: 1529616283575 milliseconds
Total Time:         312.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       145.5 seconds, 46.6%
Fitness Testing:    137.2 seconds, 44.0%
Report:              29.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction float_yank} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction integer_sub} {:instruction float_add} {:instruction tagged_421} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_max float_yank float_add 35.372239689310504 in1 integer_sub float_add tagged_421 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 2607.4030619
Median total errors in population: 1341.0
Error averages by case: (140.28025879999998 12.957 138.0717927 2.717 85.96248989999998 12.017 123.29521150000002 3.736 93.6981332 2.828 143.34628779999997 2.73 125.8874355 3.665 70.06896350000001 2.752 52.618680700000006 0.89 63.80840299999999 2.834 74.2600021 12.113 78.7534089 2.731 70.0706128 1.771 138.0855555 13.029 108.71372589999999 2.67 147.42286409999997 1.87 74.2334318 2.69 61.942086599999996 1.778 131.29663220000003 3.662 114.12766350000003 2.694 54.4334191 1.738 78.5231948 2.672 87.54704520000001 10.227 131.1727578 3.679 97.24700499999999 12.086)
Error minima by case: (0.3973 9 55.6278 2 0.6278 8 69.0 2 19.2156 2 61.6278 1 42.6278 2 4.6616 1 0.0 0 6.0 2 12.9946 8 7.3722 1 10.6884 1 28.7243 10 22.0305 1 26.9363 1 19.0 1 7.0 1 48.6278 2 7.4195 1 0.0 0 12.9983 1 2.6278 9 48.6278 2 12.5088 9)
Average genome size in population (length): 19.313
Average program size in population (points): 20.313
Average percent parens in population: 0.055
Minimum age in population: 150.4632819063081
Maximum age in population: 154.8712014587314
Average age in population: 152.9265940374105
Median age in population: 152.9722340760031
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.566
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.566
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 61164641
--- Timings ---
Current time: 1529616286426 milliseconds
Total Time:         315.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.8 seconds, 46.6%
Fitness Testing:    138.5 seconds, 44.0%
Report:              29.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_inc} {:instruction float_min} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_cos} {:instruction float_dup_items} {:instruction float_rot} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_sub} {:instruction float_add} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_cos} {:instruction float_add} {:instruction float_rot} {:instruction float_add} {:instruction float_inc} {:instruction float_sub} {:instruction float_add} {:instruction float_add} {:instruction integer_stackdepth} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_mult float_inc float_min integer_dup_times float_add float_cos float_dup_items float_rot in1 float_inc float_inc float_inc in1 float_inc 35.372239689310504 in1 float_inc float_inc integer_sub float_sub float_add integer_stackdepth in1 float_cos float_add float_rot float_add float_inc float_sub float_add float_add integer_stackdepth in1 float_inc in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2482.4425097000003
Median total errors in population: 1341.0
Error averages by case: (134.7990897 13.005 133.5453559 2.698 80.22625159999998 12.073 117.91688609999997 3.715 88.14251180000001 2.785 138.69504139999998 2.727 121.3603361 3.653 64.36565150000001 2.718 47.44143170000001 0.849 58.12868809999999 2.781 70.02414619999999 12.145 72.8962472 2.713 66.14869429999999 1.742 133.52211339999997 13.077 104.88618699999999 2.665 142.676277 1.832 69.42704739999998 2.681 57.0684786 1.761 126.6934989 3.664 108.61718659999998 2.674 49.595072 1.741 73.67609840000001 2.674 82.1119204 10.265 126.5270647 3.662 91.5302337 12.121)
Error minima by case: (0.6256 8 55.6278 2 0.6278 8 69.0 2 38.0 2 39.0859 1 42.6278 2 15.0 1 0.0 0 6.0 2 1.3838 9 3.4784 1 0.3162 1 30.4373 9 0.8935 1 16.2233 1 9.0594 1 8.0 1 48.6278 2 32.7065 1 0.0 0 14.4419 1 2.6278 9 48.6278 2 12.6278 9)
Average genome size in population (length): 19.253
Average program size in population (points): 20.253
Average percent parens in population: 0.055
Minimum age in population: 151.7752786672902
Maximum age in population: 156.3890980338818
Average age in population: 154.3886972850978
Median age in population: 154.4462352900147
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.566
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.566
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 61645991
--- Timings ---
Current time: 1529616289515 milliseconds
Total Time:         317.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       148.1 seconds, 46.6%
Fitness Testing:    139.8 seconds, 44.0%
Report:              29.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_add} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_cos} {:instruction float_add} {:instruction 34.683447085368094} {:instruction tag_float_479} {:instruction integer_div} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_min integer_add integer_add print_float integer_sub float_cos float_add 34.683447085368094 tag_float_479 integer_div in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 2622.6186539
Median total errors in population: 1341.0
Error averages by case: (140.3935514 12.976 138.85252119999998 2.719 86.0181667 12.038 123.2202968 3.739 93.67486770000001 2.829 144.07892349999997 2.752 126.7071988 3.676 70.09690109999998 2.755 53.327838199999995 0.876 63.783539700000006 2.83 75.81622220000001 12.122 78.73232319999998 2.746 71.90703930000001 1.781 138.95949679999998 13.043 110.52441789999997 2.677 147.9693665 1.863 75.0958952 2.69 62.79730680000001 1.787 132.0802323 3.674 114.08197410000001 2.684 55.3125977 1.751 79.40612309999999 2.684 87.85477820000001 10.246 131.94107699999998 3.685 97.26299849999998 12.1)
Error minima by case: (2.6624 8 78.5616 2 8.8246 9 69.0 3 38.0 2 41.0859 1 75.0 2 15.0 2 0.0 0 6.0 2 8.3193 10 7.3722 2 1.6838 1 32.4373 9 1.1065 1 14.2233 1 19.0 2 8.0 1 65.9331 2 30.7065 1 0.0 0 14.307 1 12.2623 9 54.9894 2 13.9059 8)
Average genome size in population (length): 18.739
Average program size in population (points): 19.739
Average percent parens in population: 0.056
Minimum age in population: 153.4288529955955
Maximum age in population: 157.7890510553509
Average age in population: 155.8816039364301
Median age in population: 155.9345977439154
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.541
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.541
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 62114466
--- Timings ---
Current time: 1529616292421 milliseconds
Total Time:         321.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.5 seconds, 46.6%
Fitness Testing:    141.1 seconds, 44.0%
Report:              30.3 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction integer_yank} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction integer_mod} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 integer_yank float_add 35.372239689310504 in1 float_inc 35.372239689310504 in1 integer_mod in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2720.3179757999997
Median total errors in population: 1341.0
Error averages by case: (143.99671200000003 12.986 142.61507909999997 2.749 90.78689070000001 12.05 126.97149729999998 3.781 97.51833810000001 2.863 147.82236849999998 2.794 130.5076834 3.714 73.9649258 2.792 57.2713898 0.899 67.7215419 2.862 79.7007675 12.143 82.55602229999998 2.787 75.8630989 1.801 142.587334 13.063 114.37300379999999 2.705 151.63504809999998 1.903 79.15441420000002 2.727 66.85944930000001 1.82 135.8629852 3.708 117.8610526 2.727 59.40301550000001 1.792 83.3201074 2.725 91.70602850000002 10.257 135.72807520000003 3.721 101.0471467 12.115)
Error minima by case: (0.5252 7 53.6275 2 3.282 8 69.0 3 38.0 2 59.5978 1 40.6177 3 16.0 2 0.0 0 6.0 2 11.9988 9 7.3722 2 5.0046 1 53.9254 9 23.18 1 96.0 1 19.0 2 9.0 1 46.6269 2 60.0 1 0.0 0 14.715 2 0.9462 9 45.6162 2 9.9823 9)
Average genome size in population (length): 18.436
Average program size in population (points): 19.436
Average percent parens in population: 0.057
Minimum age in population: 154.4288529955955
Maximum age in population: 159.3863659414308
Average age in population: 157.3710134192298
Median age in population: 157.4099501072037
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.528
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.528
Total error diversity:				 0.022
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 62575366
--- Timings ---
Current time: 1529616295237 milliseconds
Total Time:         323.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.8 seconds, 46.6%
Fitness Testing:    142.4 seconds, 44.0%
Report:              30.5 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_add} {:instruction float_yank} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction tag_integer_350} {:instruction integer_min} {:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 34.94975546124897} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_min integer_shove integer_dup_times integer_shove integer_add float_yank integer_sub float_frominteger integer_stackdepth tag_integer_350 integer_min integer_min integer_add print_float integer_sub float_cos integer_dup_times float_rot float_add 34.94975546124897 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2917.169959
Median total errors in population: 1341.0
Error averages by case: (150.50541580000004 12.926 150.60827730000003 2.936 97.44503359999997 12.015 135.1077273 3.964 105.7177519 3.07 155.42990359999993 2.989 138.71884599999998 3.893 82.40183630000003 2.977 65.45873200000001 1.105 76.48791 3.069 87.5670055 12.15 90.39057250000002 2.957 82.99536519999998 1.999 149.64205829999995 13.036 121.4928115 2.88 158.9414184 2.12 87.31621830000002 2.902 75.16959299999999 2.012 143.79848340000007 3.878 125.6032119 2.899 67.07223 1.979 91.05030429999998 2.913 99.31954990000001 10.264 143.5673672 3.898 108.43833579999998 12.093)
Error minima by case: (0.6256 8 87.0 2 7.5982 8 70.0 2 21.148 2 93.0 2 74.0 2 2.7292 1 0.0 0 7.0 2 11.6807 11 13.1811 1 10.6884 1 26.7919 8 25.7343 1 28.8687 1 20.0 1 7.0 1 80.0 2 9.3519 2 1.0 1 12.4115 2 13.2623 9 80.0 2 10.809 8)
Average genome size in population (length): 18.336
Average program size in population (points): 19.336
Average percent parens in population: 0.058
Minimum age in population: 155.8995203185416
Maximum age in population: 160.8015851961248
Average age in population: 158.8677727632761
Median age in population: 158.9088090119295
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 38
Genome diversity (% unique Plush genomes):	 0.533
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 38
Syntactic diversity (% unique Push programs):	 0.533
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 63033791
--- Timings ---
Current time: 1529616298369 milliseconds
Total Time:         326.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.3 seconds, 46.6%
Fitness Testing:    143.6 seconds, 44.0%
Report:              30.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction float_add} {:instruction tagged_421} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction float_mult} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction float_add} {:instruction 35.372239689310504} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_cos} {:instruction float_cos} {:instruction float_flush} {:instruction tag_float_882} {:instruction float_rot} {:instruction float_add} {:instruction integer_dec} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (float_frominteger float_add tagged_421 in1 float_inc in1 float_inc float_mult float_inc 35.372239689310504 in1 float_inc float_inc float_inc integer_mod float_add 35.372239689310504 float_add 35.372239689310504 in1 integer_yankdup integer_mult integer_sub integer_sub float_frominteger integer_dec float_cos float_cos float_flush tag_float_882 float_rot float_add integer_dec in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2763.980303
Median total errors in population: 1341.0
Error averages by case: (146.79196500000003 13.013 143.4868123 2.798 93.64261169999999 12.086 129.8744805 3.813 100.49477549999999 2.91 148.68807229999996 2.825 131.3924286 3.749 77.08246530000001 2.821 59.52988260000001 0.973 70.8292869 2.906 80.05784799999999 12.169 85.60854279999998 2.813 75.8436955 1.853 143.5707161 13.078 114.25927669999999 2.749 153.79933479999997 1.943 80.0169695 2.767 67.7574357 1.87 136.74170220000002 3.741 120.75787510000002 2.762 60.28840600000001 1.827 84.26349459999999 2.762 94.2404111 10.295 136.6059302 3.756 103.928884 12.148)
Error minima by case: (1.6256 7 86.0 2 8.5294 9 69.0 2 38.0 2 92.0 1 73.0 2 13.0 1 0.0 0 6.0 2 12.0548 9 15.131 1 5.0046 1 54.4976 9 21.9672 1 96.0 1 19.0 1 6.0 1 79.0 2 60.0 1 0.0 0 14.2665 2 12.2623 10 79.0 2 9.9823 9)
Average genome size in population (length): 18.27
Average program size in population (points): 19.27
Average percent parens in population: 0.058
Minimum age in population: 156.8995203185416
Maximum age in population: 162.2424168931873
Average age in population: 160.3088068401033
Median age in population: 160.3318830484904
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.534
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.534
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 63490591
--- Timings ---
Current time: 1529616301437 milliseconds
Total Time:         330.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.7 seconds, 46.6%
Fitness Testing:    145.0 seconds, 43.9%
Report:              31.2 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_add} {:instruction float_flush} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (float_mod integer_add float_flush 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 10
Size: 11
Percent parens: 0.091
--- Population Statistics ---
Average total errors in population: 2284.4176812
Median total errors in population: 1341.0
Error averages by case: (127.47899790000002 12.927 126.3239263 2.586 72.48073500000001 11.978 110.52126219999998 3.587 80.46541149999999 2.665 131.56378969999997 2.607 114.00791100000001 3.542 56.492592599999995 2.598 38.547445900000014 0.697 50.163315600000004 2.676 61.549252100000004 12.059 65.1135384 2.582 57.335096199999995 1.634 126.22758569999996 12.98 96.45005939999997 2.543 134.86504239999996 1.696 61.4591768 2.546 49.02013410000001 1.641 119.42036870000003 3.534 100.9746518 2.556 41.40215160000001 1.589 65.78949159999998 2.554 74.1523055 10.159 119.26770239999996 3.552 83.8217368 12.036)
Error minima by case: (0.6256 9 89.0 2 9.5294 7 70.0 2 39.0 2 93.8494 2 76.0 2 16.0 1 0.0 0 7.0 2 11.3417 10 6.7047 1 10.6884 1 53.9254 9 18.87 1 97.0 1 20.0 1 9.0 1 82.0 3 2.2557 2 0.0 0 15.2665 2 13.2623 9 82.0 3 13.2953 9)
Average genome size in population (length): 18.179
Average program size in population (points): 19.179
Average percent parens in population: 0.058
Minimum age in population: 159.1392181517547
Maximum age in population: 163.7199583713696
Average age in population: 161.7120740501149
Median age in population: 161.7164555704283
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.525
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.525
Total error diversity:				 0.019
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 63945141
--- Timings ---
Current time: 1529616304283 milliseconds
Total Time:         332.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       155.0 seconds, 46.6%
Fitness Testing:    146.3 seconds, 43.9%
Report:              31.5 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yankdup} {:instruction integer_min} {:instruction integer_add} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_add} {:instruction float_flush} {:instruction integer_dec} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yankdup integer_min integer_add float_stackdepth integer_sub float_pop integer_sub integer_min integer_add float_flush integer_dec float_inc float_add in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2842.5834471
Median total errors in population: 1341.0
Error averages by case: (149.6598494 12.965 146.8521703 2.782 95.6035765 12.033 132.1122868 3.811 102.9223061 2.908 152.21806189999998 2.818 134.74709710000002 3.744 79.55294719999999 2.825 62.3529007 0.982 73.183087 2.908 83.9157659 12.142 88.3974966 2.817 79.87544819999998 1.844 147.24957390000003 13.062 118.13306419999999 2.738 156.2718638 1.961 83.75196570000001 2.756 71.622814 1.851 140.19770870000002 3.746 123.2594587 2.757 64.1482671 1.824 88.1995171 2.757 97.21034989999998 10.259 140.1221436 3.752 106.8847267 12.097)
Error minima by case: (0.1761 8 87.0 2 8.3787 9 69.0 2 38.0 2 67.1844 1 74.0 2 14.0 1 0.0 0 6.0 2 14.7566 9 16.0628 1 13.6884 1 57.6386 10 7.795 1 96.0 1 2.0074 1 7.0 1 79.0316 2 60.0 1 0.0 0 12.3814 1 16.2623 9 68.0879 2 10.7486 10)
Average genome size in population (length): 18.485
Average program size in population (points): 19.485
Average percent parens in population: 0.057
Minimum age in population: 160.8872619378124
Maximum age in population: 164.974255619441
Average age in population: 163.1409410222948
Median age in population: 163.1834568046058
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.54
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.54
Total error diversity:				 0.021
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 64407316
--- Timings ---
Current time: 1529616307324 milliseconds
Total Time:         335.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.5 seconds, 46.6%
Fitness Testing:    147.5 seconds, 43.9%
Report:              31.7 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_add} {:instruction float_yank} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_min} {:instruction integer_add} {:instruction print_float} {:instruction integer_sub} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_add} {:instruction 34.94975546124897} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_min integer_shove integer_dup_times integer_shove integer_add float_yank integer_sub float_frominteger integer_stackdepth float_dup_times integer_min integer_min integer_add print_float integer_sub float_cos integer_dup_times float_rot float_add 34.94975546124897 in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2638.7993071999995
Median total errors in population: 1341.0
Error averages by case: (140.91031230000002 12.931 139.3522483 2.726 86.8841223 12.009 124.5726711 3.761 94.94118049999999 2.849 144.43311839999996 2.762 127.24357450000002 3.69 71.35682310000001 2.772 54.36947650000001 0.882 65.18776990000002 2.855 75.9266233 12.102 79.69847530000001 2.761 71.9496252 1.789 138.95085849999998 13.021 110.5634042 2.694 149.05508879999996 1.887 75.4330503 2.694 63.107273500000005 1.792 132.52145370000002 3.673 115.2389614 2.707 55.64866200000001 1.757 79.52100879999998 2.705 88.74073560000001 10.215 132.34698999999998 3.694 98.05579969999998 12.062)
Error minima by case: (0.4783 9 89.0 2 8.4391 9 69.0 2 38.0 2 95.0 1 76.0 2 16.0 1 0.0 0 6.0 2 12.6863 10 15.751 1 9.6884 1 54.4956 9 24.7343 1 96.0 1 19.0 1 9.0 1 82.0 2 60.0 1 0.0 0 12.4419 2 12.2623 8 82.0 2 10.809 7)
Average genome size in population (length): 18.518
Average program size in population (points): 19.518
Average percent parens in population: 0.057
Minimum age in population: 162.6374183943487
Maximum age in population: 166.4589768859064
Average age in population: 164.6481892196316
Median age in population: 164.7157064703563
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.542
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.542
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 64870316
--- Timings ---
Current time: 1529616310339 milliseconds
Total Time:         338.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       158.0 seconds, 46.6%
Fitness Testing:    148.8 seconds, 43.9%
Report:              32.0 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_add} {:instruction float_add} {:instruction integer_dec} {:instruction float_inc} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_yank} {:instruction integer_mult} {:instruction float_div} {:instruction -66.32511474069229} {:instruction integer_dup_times} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_max})
Best program: (float_yankdup integer_add float_add integer_dec float_inc float_cos integer_dup_times float_yank integer_mult float_div -66.32511474069229 integer_dup_times in1 float_inc float_inc float_inc float_inc print_float integer_max)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2641.8836534
Median total errors in population: 1341.0
Error averages by case: (141.5893161 12.972 139.47914890000004 2.672 87.01035459999999 12.027 123.61517500000001 3.692 94.1877337 2.78 144.93029530000004 2.693 127.25726930000002 3.629 70.55134770000001 2.699 54.208507600000004 0.811 64.08917120000001 2.78 76.7583465 12.113 79.59709670000001 2.698 72.9248667 1.722 139.99015899999995 13.037 111.6141228 2.629 148.77788999999999 1.812 75.9119773 2.643 63.6645509 1.734 132.7813779 3.63 114.8010463 2.643 56.110672300000004 1.699 80.4129931 2.641 88.89190310000001 10.23 132.7157163 3.632 98.30961509999999 12.085)
Error minima by case: (1.8084 8 55.6278 2 0.6278 8 69.0 3 38.0 2 61.6278 1 42.6278 3 14.0 2 0.0 0 6.0 2 16.7411 11 6.9498 2 9.2983 1 58.0751 10 26.6278 1 96.0 1 19.0 2 7.0 1 48.6278 2 60.0 1 0.0 0 8.3305 2 2.6278 9 48.6278 2 6.6977 10)
Average genome size in population (length): 18.353
Average program size in population (points): 19.353
Average percent parens in population: 0.058
Minimum age in population: 163.7215046639652
Maximum age in population: 167.9598477509122
Average age in population: 166.1719787031284
Median age in population: 166.2313457799052
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.545
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.545
Total error diversity:				 0.019
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 65329216
--- Timings ---
Current time: 1529616313374 milliseconds
Total Time:         341.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.4 seconds, 46.6%
Fitness Testing:    150.1 seconds, 43.9%
Report:              32.2 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_add} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup_items} {:instruction in1} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_mult} {:instruction integer_min} {:instruction float_max} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_yankdup integer_add integer_sub integer_sub integer_sub float_dup_items in1 float_inc integer_yank integer_mult integer_min float_max in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2595.0786069
Median total errors in population: 1341.0
Error averages by case: (139.3412637 12.929 138.0774362 2.727 84.79687819999997 11.998 122.48532640000002 3.728 92.86478539999999 2.823 143.23439939999997 2.754 125.94412450000002 3.681 69.2672384 2.739 51.43433740000001 0.911 63.01239740000001 2.831 74.2880008 12.085 77.78357319999998 2.724 70.01254569999999 1.781 138.03775739999998 13.004 108.57785319999996 2.682 146.41731419999996 1.863 74.22830640000001 2.695 61.88928260000001 1.781 131.2715438 3.663 113.13720600000002 2.679 54.4335219 1.741 78.40051019999999 2.686 86.3626615 10.202 131.11784899999998 3.687 96.21549399999998 12.053)
Error minima by case: (0.2272 9 76.5616 2 6.555 9 70.0 2 39.0 2 39.0859 2 74.0 2 14.0 1 0.0 0 7.0 2 6.3193 10 16.0628 1 0.3162 1 30.4373 9 0.8935 1 16.2233 1 20.0 1 7.0 1 63.9331 2 32.7065 2 0.0 0 10.5578 1 10.0607 9 52.9894 2 8.9249 9)
Average genome size in population (length): 18.462
Average program size in population (points): 19.462
Average percent parens in population: 0.057
Minimum age in population: 165.1157415958176
Maximum age in population: 169.5785812036885
Average age in population: 167.7080022510337
Median age in population: 167.7492945215406
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.559
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.559
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 65790866
--- Timings ---
Current time: 1529616316401 milliseconds
Total Time:         345.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.8 seconds, 46.6%
Fitness Testing:    151.4 seconds, 43.9%
Report:              32.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction integer_add} {:instruction 87.66612172309897} {:instruction float_pop} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_inc} {:instruction float_cos} {:instruction float_add} {:instruction 34.683447085368094} {:instruction tag_float_479} {:instruction integer_flush} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_fromfloat float_yankdup integer_add 87.66612172309897 float_pop integer_sub float_frominteger integer_sub float_inc float_cos float_add 34.683447085368094 tag_float_479 integer_flush in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2477.5961184000003
Median total errors in population: 1341.0
Error averages by case: (134.92004130000004 12.931 133.49100319999997 2.629 80.2672934 11.988 117.3154904 3.647 87.5939328 2.724 138.87108750000002 2.651 121.21612540000001 3.587 63.890905 2.665 47.274020099999994 0.818 57.40882010000001 2.733 69.95383220000001 12.081 72.799357 2.658 66.1281638 1.674 133.5271524 13.015 105.12382659999999 2.593 142.41373670000002 1.769 69.2954272 2.594 56.9746712 1.68 126.7063242 3.587 108.2549084 2.594 49.423641200000006 1.65 73.67786970000002 2.586 82.1908622 10.185 126.59989290000001 3.598 91.59273350000001 12.048)
Error minima by case: (0.4303 8 86.0 2 9.4283 9 61.5021 2 10.2139 2 92.0 2 73.0 2 13.0 1 0.0 0 7.0 2 8.7003 10 12.4216 1 1.6765 1 37.7261 9 26.7343 1 17.9345 1 20.0 1 6.0 1 79.0 2 1.5823 2 0.0 0 13.4311 1 13.2623 9 79.0 2 11.7982 10)
Average genome size in population (length): 18.454
Average program size in population (points): 19.454
Average percent parens in population: 0.057
Minimum age in population: 166.7327861853649
Maximum age in population: 170.9840980399152
Average age in population: 169.1192795106634
Median age in population: 169.1446913838088
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.547
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.547
Total error diversity:				 0.018
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 66252341
--- Timings ---
Current time: 1529616319237 milliseconds
Total Time:         347.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.1 seconds, 46.6%
Fitness Testing:    152.7 seconds, 43.9%
Report:              32.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_add} {:instruction float_add} {:instruction integer_dec} {:instruction float_inc} {:instruction float_cos} {:instruction integer_dup_times} {:instruction float_yank} {:instruction integer_mult} {:instruction float_div} {:instruction -66.32511474069229} {:instruction integer_dup_times} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_max})
Best program: (float_yankdup integer_add float_add integer_dec float_inc float_cos integer_dup_times float_yank integer_mult float_div -66.32511474069229 integer_dup_times in1 float_inc float_inc float_inc float_inc print_float integer_max)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 2635.5765593
Median total errors in population: 1341.0
Error averages by case: (141.33525930000005 12.946 138.9258832 2.718 87.05104059999998 12.009 124.15899449999998 3.741 94.610723 2.829 144.19562179999997 2.755 126.75442710000002 3.681 70.97179080000002 2.752 54.499141100000024 0.891 64.72061320000002 2.832 75.9842063 12.115 79.75901890000002 2.741 72.01458389999999 1.779 139.03505909999996 13.027 110.60943039999998 2.679 148.92566359999995 1.875 75.18565890000002 2.693 62.878136500000004 1.781 132.15796910000006 3.669 115.05182430000002 2.69 55.41049950000001 1.754 79.55250579999996 2.69 88.87302240000001 10.212 132.03657879999997 3.69 98.26090719999998 12.069)
Error minima by case: (1.6256 9 55.6278 2 0.6278 8 69.0 3 25.413 2 61.6278 1 42.6278 2 1.5358 2 0.0 0 6.0 2 15.232 11 7.3722 2 9.6884 1 18.8539 9 25.7343 1 33.1337 1 19.0 2 6.0 1 48.6278 2 13.6169 1 0.0 0 14.2665 1 2.6278 10 48.6278 2 12.6149 8)
Average genome size in population (length): 18.112
Average program size in population (points): 19.112
Average percent parens in population: 0.058
Minimum age in population: 167.9213650803422
Maximum age in population: 172.4998278499228
Average age in population: 170.6947279451764
Median age in population: 170.7343715117042
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.542
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.542
Total error diversity:				 0.022
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 66705141
--- Timings ---
Current time: 1529616322011 milliseconds
Total Time:         350.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.4 seconds, 46.6%
Fitness Testing:    154.0 seconds, 43.9%
Report:              33.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_add} {:instruction float_stackdepth} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction float_stackdepth} {:instruction float_pop} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction tag_float_573})
Best program: (integer_min integer_add float_stackdepth integer_sub float_pop integer_sub integer_fromfloat float_yank float_stackdepth float_pop float_inc float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float tag_float_573)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2508.7275269
Median total errors in population: 1341.0
Error averages by case: (136.76392419999996 12.944 134.31533309999998 2.658 81.74980169999999 12.01 119.63019899999999 3.668 89.9247803 2.749 139.5761792 2.685 122.0909616 3.609 66.20396000000001 2.676 48.399986999999996 0.801 59.87358379999999 2.754 70.126853 12.094 74.8943937 2.67 66.01642410000001 1.704 134.54596349999997 13.019 104.87476910000001 2.605 143.8148218 1.783 70.1428174 2.633 57.7927647 1.713 127.50002370000001 3.612 110.44192740000003 2.622 50.25204559999999 1.679 74.5625809 2.626 83.2383768 10.205 127.36940150000002 3.619 93.42565380000002 12.062)
Error minima by case: (1.6535 8 87.0 2 10.7955 9 71.0 3 40.0 2 93.0 2 74.0 2 14.0 2 0.0 0 8.0 2 11.9008 11 15.7098 2 8.5319 1 54.4956 10 26.7343 1 98.0 1 21.0 2 7.0 1 80.0 2 62.0 2 0.0 0 16.7739 1 11.1058 10 80.0 2 13.4251 9)
Average genome size in population (length): 18.435
Average program size in population (points): 19.435
Average percent parens in population: 0.057
Minimum age in population: 169.4534882538799
Maximum age in population: 174.0184295826638
Average age in population: 172.1983355262474
Median age in population: 172.2387281809652
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.535
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.535
Total error diversity:				 0.022
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 67166041
--- Timings ---
Current time: 1529616324913 milliseconds
Total Time:         353.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       164.8 seconds, 46.6%
Fitness Testing:    155.2 seconds, 43.9%
Report:              33.3 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction float_mod} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (float_frominteger integer_add float_mult float_rot float_mod 35.372239689310504 in1 float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2305.4286832999996
Median total errors in population: 1341.0
Error averages by case: (128.5560528 12.958 127.0379002 2.569 74.2341086 12.006 110.9126888 3.57 80.99489109999999 2.659 132.4160416 2.572 114.69711690000004 3.52 57.0911605 2.581 39.3293657 0.758 50.6485889 2.656 62.350886 12.068 65.9534051 2.572 58.26499989999999 1.606 127.07181670000001 13.014 97.45585450000002 2.514 135.47127120000002 1.689 62.49461600000001 2.542 50.0086159 1.624 120.199052 3.525 101.70481760000001 2.536 42.39627539999999 1.589 66.75481749999999 2.533 74.9568129 10.187 120.1710239 3.529 84.8255036 12.054)
Error minima by case: (0.294 7 77.5616 2 5.6367 8 69.0 2 38.0 2 40.0859 1 73.0 2 13.0 1 0.0 0 6.0 2 7.3193 9 15.76 1 0.6838 1 31.4373 9 0.1065 1 15.2233 1 19.0 1 6.0 1 64.9331 2 31.7065 1 0.0 0 1.6339 1 4.0342 9 53.9894 2 3.2668 9)
Average genome size in population (length): 18.098
Average program size in population (points): 19.098
Average percent parens in population: 0.058
Minimum age in population: 170.4534882538799
Maximum age in population: 175.6659676120551
Average age in population: 173.650363845435
Median age in population: 173.6749419310136
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.518
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.518
Total error diversity:				 0.023
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 67618541
--- Timings ---
Current time: 1529616327858 milliseconds
Total Time:         356.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.2 seconds, 46.6%
Fitness Testing:    156.5 seconds, 43.9%
Report:              33.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction integer_add} {:instruction integer_dup_times} {:instruction float_mult} {:instruction float_add} {:instruction float_shove} {:instruction float_yankdup} {:instruction integer_flush} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_div} {:instruction float_min} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (integer_sub integer_add integer_dup_times float_mult float_add float_shove float_yankdup integer_flush 35.372239689310504 in1 float_inc float_inc float_div float_min 35.372239689310504 in1 float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2235.3244517000003
Median total errors in population: 1341.0
Error averages by case: (126.1836875 12.966 123.98791619999999 2.498 70.6701083 12.009 107.96120819999999 3.51 77.98787949999999 2.582 129.54084410000002 2.515 111.54492180000003 3.462 53.9364147 2.518 37.232433900000004 0.652 47.37840560000001 2.582 60.2150266 12.071 63.118725999999995 2.509 56.316986400000005 1.539 124.59192259999999 13.026 95.66650580000001 2.47 133.5402125 1.609 59.321261 2.481 46.84221649999999 1.55 117.17120139999997 3.465 98.97010699999998 2.476 39.1810257 1.519 63.95398429999999 2.473 72.5854265 10.164 117.10400360000001 3.47 82.156026 12.05)
Error minima by case: (1.6256 9 71.289 2 8.4391 9 70.0 2 39.0 2 39.8133 2 70.9757 2 13.0 1 0.0 0 7.0 2 12.0548 10 15.131 1 10.6884 1 54.5699 9 26.7343 2 97.0 1 20.0 1 6.0 1 51.6605 2 61.0 2 1.0 1 12.4419 1 13.2623 10 40.7169 2 10.809 10)
Average genome size in population (length): 18.09
Average program size in population (points): 19.09
Average percent parens in population: 0.058
Minimum age in population: 172.8809064755225
Maximum age in population: 177.3992409306285
Average age in population: 175.1319762363775
Median age in population: 175.1471933179795
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.528
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.528
Total error diversity:				 0.015
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 68070966
--- Timings ---
Current time: 1529616330776 milliseconds
Total Time:         359.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.6 seconds, 46.6%
Fitness Testing:    157.8 seconds, 43.9%
Report:              33.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_rot} {:instruction float_add} {:instruction integer_shove} {:instruction float_frominteger} {:instruction in1} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_cos} {:instruction integer_dup_times} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_max})
Best program: (float_rot integer_rot float_add integer_shove float_frominteger in1 integer_dup_times integer_swap float_dup_times float_cos integer_dup_times in1 float_inc float_inc float_inc float_inc print_float integer_max)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 2682.3922251
Median total errors in population: 1341.0
Error averages by case: (143.6400247 12.993 141.0538234 2.68 88.8569298 12.05 125.32798409999998 3.694 96.02454279999999 2.789 146.60539669999997 2.704 128.8503801 3.635 72.56815669999999 2.708 55.346047 0.866 66.05398019999998 2.786 78.1487687 12.127 81.6339057 2.701 73.17823089999999 1.732 141.9485491 13.051 112.0700674 2.633 149.9038417 1.829 77.88542749999999 2.659 65.5689055 1.752 134.4079379 3.627 116.57185620000001 2.656 57.177673399999996 1.709 82.4495357 2.652 90.42891250000002 10.256 134.3751072 3.636 100.29124019999999 12.1)
Error minima by case: (32.1202 9 10.4384 2 0.6278 8 10.7909 2 21.5027 2 53.9141 1 15.2483 2 13.0 1 0.0 0 6.0 2 20.0 10 7.3722 1 9.6884 1 87.0 9 26.6278 1 86.7767 1 19.0 1 6.0 1 16.0669 2 34.2935 1 0.0 0 17.9304 1 2.6278 10 27.0106 2 12.6278 10)
Average genome size in population (length): 18.104
Average program size in population (points): 19.104
Average percent parens in population: 0.058
Minimum age in population: 174.0636535617231
Maximum age in population: 179.075462669483
Average age in population: 176.6623212551532
Median age in population: 176.7157176642524
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.578
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.578
Total error diversity:				 0.025
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 68523666
--- Timings ---
Current time: 1529616333609 milliseconds
Total Time:         362.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       168.9 seconds, 46.6%
Fitness Testing:    159.1 seconds, 43.9%
Report:              34.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_min} {:instruction integer_min} {:instruction integer_add} {:instruction integer_sub} {:instruction integer_yankdup} {:instruction float_min} {:instruction float_dec} {:instruction float_add} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction tag_integer_88} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_div})
Best program: (print_integer integer_min integer_min integer_add integer_sub integer_yankdup float_min float_dec float_add float_inc float_inc integer_yankdup tag_integer_88 integer_min in1 float_inc float_inc float_inc float_inc print_float integer_div)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2968.9072362999996
Median total errors in population: 1341.0
Error averages by case: (154.9939033 12.974 150.56615150000002 2.824 101.50359 12.041 137.8998407 3.866 108.85934209999999 2.976 155.85808509999998 2.867 138.5515196 3.775 85.65076950000001 2.886 69.29763779999999 1.053 79.37870559999999 2.979 88.71446890000001 12.159 94.2885939 2.876 84.70612820000001 1.901 151.0779727 13.068 122.82416529999999 2.783 162.40486400000003 2.036 87.88514210000001 2.801 75.80417259999999 1.909 143.94117429999997 3.789 129.0379725 2.817 68.37668099999998 1.874 92.28593629999999 2.8 103.3398108 10.287 143.8501825 3.787 112.57042600000001 12.112)
Error minima by case: (0.0204 7 86.0 2 8.5294 9 70.0 2 39.0 2 57.0662 2 73.0 2 13.0 1 0.0 0 7.0 2 11.232 10 14.477 1 1.0 1 55.0849 9 17.9132 1 97.0 1 8.1108 1 6.0 1 68.9134 3 61.0 2 0.0 0 14.1694 1 12.2623 9 57.9697 3 12.5365 9)
Average genome size in population (length): 18.243
Average program size in population (points): 19.243
Average percent parens in population: 0.058
Minimum age in population: 175.0636535617231
Maximum age in population: 180.3369130960393
Average age in population: 178.1258529823822
Median age in population: 178.1668883080424
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.574
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.574
Total error diversity:				 0.022
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 68979891
--- Timings ---
Current time: 1529616336505 milliseconds
Total Time:         365.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.2 seconds, 46.6%
Fitness Testing:    160.4 seconds, 43.9%
Report:              34.3 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_add} {:instruction integer_mult} {:instruction float_cos} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_min integer_add integer_mult float_cos float_cos float_rot in1 float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 2479.7101672999997
Median total errors in population: 1341.0
Error averages by case: (134.89675430000003 12.982 133.4702609 2.657 80.24453949999997 12.028 117.43431910000001 3.674 87.7122049 2.769 138.8507279 2.675 121.23380330000003 3.61 64.0610923 2.691 47.320488800000014 0.866 57.6950226 2.77 69.960738 12.118 72.82420759999998 2.679 66.1771178 1.71 133.51052520000002 13.029 105.1351308 2.604 142.4484944 1.81 69.520798 2.628 57.094709 1.725 126.6856669 3.604 108.30497029999998 2.632 49.5845365 1.683 73.722599 2.631 82.1669355 10.234 126.5845882 3.609 91.5689365 12.083)
Error minima by case: (0.6256 9 6.4384 2 2.3722 8 6.7909 2 12.3477 2 49.9141 1 19.2483 2 11.5295 1 0.0 0 6.0 2 11.9988 11 10.3722 1 9.6884 1 35.5922 9 23.6278 1 20.0684 1 19.0 1 6.0 1 12.0669 2 0.5516 1 0.0 0 13.4419 1 0.3722 9 23.0106 2 9.6278 9)
Average genome size in population (length): 18.506
Average program size in population (points): 19.506
Average percent parens in population: 0.057
Minimum age in population: 177.0962883303977
Maximum age in population: 181.6881274021138
Average age in population: 179.6044277073956
Median age in population: 179.6391924479553
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.535
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.535
Total error diversity:				 0.026
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 69442716
--- Timings ---
Current time: 1529616339488 milliseconds
Total Time:         368.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       171.6 seconds, 46.6%
Fitness Testing:    161.7 seconds, 43.9%
Report:              34.6 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 54570.0
Test mean error for best: 27.28500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -89.7479372313
Correct output: 172.561551159  | Program output: 82.561551159  
Correct output: 13.439114403   | Program output: -21.560885597 
Correct output: -153.7909193035 | Program output: -80.7909193035
Correct output: -102.5026743292 | Program output: -60.5026743292
Correct output: 141.0859082546 | Program output: 45.0859082546 
Correct output: 172.2482707672 | Program output: 95.2482707672 
Correct output: -78.6254419982 | Program output: -95.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -95.1901476719
Correct output: -11.6807030059 | Program output: 12.3192969941 
Correct output: -13.7752479931 | Program output: -40.7752479931
Correct output: 25.6838047231  | Program output: 5.6838047231  
Correct output: -54.5626932483 | Program output: 36.4373067517 
Correct output: 66.1064961654  | Program output: 5.1064961654  
Correct output: -110.2233087634 | Program output: -10.2233087634
Correct output: 75.9088754934  | Program output: 98.9088754934 
Correct output: 62.0044816678  | Program output: 52.0044816678 
Correct output: 152.9330618983 | Program output: 69.9330618983 
Correct output: -90.706511563  | Program output: -26.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 45.4418589273 
Correct output: 23.1099363942  | Program output: -13.8900636058
Correct output: 141.9894473185 | Program output: 58.9894473185 
Correct output: 15.8089845438  | Program output: -31.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_div} {:instruction float_frominteger} {:instruction float_min} {:instruction integer_inc} {:instruction integer_mult} {:instruction in1} {:instruction float_cos} {:instruction float_rot} {:instruction in1} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (float_swap integer_add float_mult float_rot integer_div float_frominteger float_min integer_inc integer_mult in1 float_cos float_rot in1 integer_dup_times float_rot float_stackdepth float_inc float_inc float_inc float_inc print_float)
Errors: [93.0 13 90.0 2 35.0 12 73.0 3 42.0 2 96.0 2 77.0 3 17.0 2 0.0 0 10.0 2 24.0 12 27.0 2 20.0 1 91.0 13 61.0 2 100.0 1 23.0 2 10.0 1 83.0 3 64.0 2 2.0 1 28.0 2 37.0 10 83.0 3 47.0 12]
Total: 1341.0
Mean: 26.82
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 2646.3918614000004
Median total errors in population: 1341.0
Error averages by case: (141.36057669999997 12.995 139.8332494 2.705 87.9382006 12.051 123.7501506 3.724 94.26971739999999 2.807 145.1708108 2.742 127.6487405 3.678 70.6170714 2.745 54.21913789999999 0.86 64.2731175 2.8 76.7383552 12.144 79.54952229999999 2.74 72.98739599999999 1.758 139.8210374 13.078 111.6977113 2.681 148.73545570000002 1.856 76.22552099999999 2.693 63.9235081 1.774 133.09805749999998 3.676 114.80729659999999 2.685 56.43038359999999 1.754 80.4751721 2.688 88.9082007 10.248 132.9874681 3.68 98.25700300000001 12.107)
Error minima by case: (1.6535 7 55.6278 2 0.6278 8 69.0 2 38.0 2 61.6278 1 42.6278 2 14.0 1 0.0 0 6.0 2 8.7003 9 7.3722 1 9.291 1 4.4373 10 25.7343 2 51.2233 1 19.0 1 7.0 1 48.6278 2 31.7065 1 1.0 1 12.6681 1 2.6278 10 48.6278 2 9.9823 9)
Average genome size in population (length): 18.28
Average program size in population (points): 19.28
Average percent parens in population: 0.058
Minimum age in population: 178.4822944695616
Maximum age in population: 183.0763492840086
Average age in population: 181.1339062573992
Median age in population: 181.1805365133672
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.522
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.522
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 69899816
--- Timings ---
Current time: 1529616342480 milliseconds
Total Time:         371.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.1 seconds, 46.6%
Fitness Testing:    163.0 seconds, 43.9%
Report:              34.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 55110.0
Test mean error for best: 27.55500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -83.7479372313
Correct output: 172.561551159  | Program output: 88.561551159  
Correct output: 13.439114403   | Program output: -15.560885597 
Correct output: -153.7909193035 | Program output: -74.7909193035
Correct output: -102.5026743292 | Program output: -54.5026743292
Correct output: 141.0859082546 | Program output: 51.0859082546 
Correct output: 172.2482707672 | Program output: 101.2482707672
Correct output: -78.6254419982 | Program output: -89.6254419982
Correct output: -0.8704914806  | Program output: 5.1295085194  
Correct output: -105.1901476719 | Program output: -89.1901476719
Correct output: -11.6807030059 | Program output: 18.3192969941 
Correct output: -13.7752479931 | Program output: -34.7752479931
Correct output: 25.6838047231  | Program output: 11.6838047231 
Correct output: -54.5626932483 | Program output: 42.4373067517 
Correct output: 66.1064961654  | Program output: 11.1064961654 
Correct output: -110.2233087634 | Program output: -4.2233087634 
Correct output: 75.9088754934  | Program output: 104.9088754934
Correct output: 62.0044816678  | Program output: 58.0044816678 
Correct output: 152.9330618983 | Program output: 75.9330618983 
Correct output: -90.706511563  | Program output: -20.706511563 
Correct output: 64.3580372038  | Program output: 72.3580372038 
Correct output: 17.4418589273  | Program output: 51.4418589273 
Correct output: 23.1099363942  | Program output: -7.8900636058 
Correct output: 141.9894473185 | Program output: 64.9894473185 
Correct output: 15.8089845438  | Program output: -25.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 float_inc float_inc integer_mult integer_swap float_inc float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [87.0 12 84.0 3 29.0 11 79.0 3 48.0 3 90.0 2 71.0 2 11.0 2 6.0 12 16.0 3 30.0 12 21.0 2 14.0 2 97.0 13 55.0 2 106.0 3 29.0 3 4.0 2 77.0 2 70.0 1 8.0 2 34.0 2 31.0 10 77.0 2 41.0 11]
Total: 1337.0
Mean: 26.74
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2474.6423038
Median total errors in population: 1341.0
Error averages by case: (135.10480399999997 12.958 133.3184834 2.617 80.23496300000001 12.001 117.04483250000001 3.62 87.39017999999997 2.706 138.77389399999998 2.629 121.01815210000001 3.571 63.604982699999994 2.628 47.07841779999999 0.787 57.0963374 2.708 69.7870223 12.081 72.6838042 2.626 66.111995 1.655 133.49695469999997 13.023 105.17070360000001 2.562 142.36411999999999 1.742 69.21523030000002 2.589 56.863285100000006 1.674 126.55915490000001 3.571 108.14407360000001 2.57 49.27751299999999 1.633 73.5797637 2.581 82.1852821 10.198 126.5687348 3.574 91.61361959999999 12.052)
Error minima by case: (1.2521 9 84.0 2 8.5294 9 69.0 3 38.0 2 90.0 1 71.0 2 11.0 2 0.0 0 6.0 2 11.9988 10 13.1811 2 14.0 1 53.9254 9 55.0 1 96.0 1 19.0 2 4.0 1 77.0 2 60.0 1 0.0 0 12.756 1 17.6831 10 77.0 2 12.5435 10)
Average genome size in population (length): 18.314
Average program size in population (points): 19.314
Average percent parens in population: 0.057
Minimum age in population: 179.9515346427954
Maximum age in population: 184.5173572341279
Average age in population: 182.6340673263306
Median age in population: 182.6792210952615
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.547
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.547
Total error diversity:				 0.018
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 70357816
--- Timings ---
Current time: 1529616345460 milliseconds
Total Time:         374.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.5 seconds, 46.7%
Fitness Testing:    164.3 seconds, 43.9%
Report:              35.1 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 55110.0
Test mean error for best: 27.55500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -83.7479372313
Correct output: 172.561551159  | Program output: 88.561551159  
Correct output: 13.439114403   | Program output: -15.560885597 
Correct output: -153.7909193035 | Program output: -74.7909193035
Correct output: -102.5026743292 | Program output: -54.5026743292
Correct output: 141.0859082546 | Program output: 51.0859082546 
Correct output: 172.2482707672 | Program output: 101.2482707672
Correct output: -78.6254419982 | Program output: -89.6254419982
Correct output: -0.8704914806  | Program output: 5.1295085194  
Correct output: -105.1901476719 | Program output: -89.1901476719
Correct output: -11.6807030059 | Program output: 18.3192969941 
Correct output: -13.7752479931 | Program output: -34.7752479931
Correct output: 25.6838047231  | Program output: 11.6838047231 
Correct output: -54.5626932483 | Program output: 42.4373067517 
Correct output: 66.1064961654  | Program output: 11.1064961654 
Correct output: -110.2233087634 | Program output: -4.2233087634 
Correct output: 75.9088754934  | Program output: 104.9088754934
Correct output: 62.0044816678  | Program output: 58.0044816678 
Correct output: 152.9330618983 | Program output: 75.9330618983 
Correct output: -90.706511563  | Program output: -20.706511563 
Correct output: 64.3580372038  | Program output: 72.3580372038 
Correct output: 17.4418589273  | Program output: 51.4418589273 
Correct output: 23.1099363942  | Program output: -7.8900636058 
Correct output: 141.9894473185 | Program output: 64.9894473185 
Correct output: 15.8089845438  | Program output: -25.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 float_inc float_inc integer_mult integer_swap float_inc float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [87.0 12 84.0 3 29.0 11 79.0 3 48.0 3 90.0 2 71.0 2 11.0 2 6.0 12 16.0 3 30.0 12 21.0 2 14.0 2 97.0 13 55.0 2 106.0 3 29.0 3 4.0 2 77.0 2 70.0 1 8.0 2 34.0 2 31.0 10 77.0 2 41.0 11]
Total: 1337.0
Mean: 26.74
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2740.1438388
Median total errors in population: 1341.0
Error averages by case: (145.0341266 12.931 143.21365419999998 2.748 90.82542869999999 11.995 127.63921359999998 3.762 98.27294209999998 2.874 148.564333 2.774 131.06848960000002 3.694 74.6819241 2.777 58.307920200000005 1.015 68.4042776 2.875 80.73348159999999 12.107 83.50753570000002 2.769 76.7929311 1.814 143.65220949999997 13.026 115.2807682 2.7 152.50672469999998 1.923 79.92243380000001 2.72 67.61342559999999 1.82 136.5188903 3.684 118.7183444 2.699 60.21347080000001 1.778 84.35813849999998 2.714 92.67815500000002 10.225 136.43286909999998 3.692 102.02915079999998 12.057)
Error minima by case: (3.0531 9 84.0 2 6.5299 9 69.0 2 38.0 2 90.0 1 71.0 2 11.0 1 0.0 0 6.0 2 11.5748 10 13.9853 1 9.686 1 52.4956 8 25.7343 1 96.0 1 19.0 1 4.0 1 77.0 2 60.0 1 0.0 0 10.5327 2 12.2599 9 77.0 2 8.8998 9)
Average genome size in population (length): 18.198
Average program size in population (points): 19.198
Average percent parens in population: 0.058
Minimum age in population: 180.9515346427954
Maximum age in population: 186.2336519728339
Average age in population: 184.1452765752237
Median age in population: 184.2192042889011
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.553
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.553
Total error diversity:				 0.016
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 70812816
--- Timings ---
Current time: 1529616348310 milliseconds
Total Time:         376.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.8 seconds, 46.6%
Fitness Testing:    165.5 seconds, 43.9%
Report:              35.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 55110.0
Test mean error for best: 27.55500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -83.7479372313
Correct output: 172.561551159  | Program output: 88.561551159  
Correct output: 13.439114403   | Program output: -15.560885597 
Correct output: -153.7909193035 | Program output: -74.7909193035
Correct output: -102.5026743292 | Program output: -54.5026743292
Correct output: 141.0859082546 | Program output: 51.0859082546 
Correct output: 172.2482707672 | Program output: 101.2482707672
Correct output: -78.6254419982 | Program output: -89.6254419982
Correct output: -0.8704914806  | Program output: 5.1295085194  
Correct output: -105.1901476719 | Program output: -89.1901476719
Correct output: -11.6807030059 | Program output: 18.3192969941 
Correct output: -13.7752479931 | Program output: -34.7752479931
Correct output: 25.6838047231  | Program output: 11.6838047231 
Correct output: -54.5626932483 | Program output: 42.4373067517 
Correct output: 66.1064961654  | Program output: 11.1064961654 
Correct output: -110.2233087634 | Program output: -4.2233087634 
Correct output: 75.9088754934  | Program output: 104.9088754934
Correct output: 62.0044816678  | Program output: 58.0044816678 
Correct output: 152.9330618983 | Program output: 75.9330618983 
Correct output: -90.706511563  | Program output: -20.706511563 
Correct output: 64.3580372038  | Program output: 72.3580372038 
Correct output: 17.4418589273  | Program output: 51.4418589273 
Correct output: 23.1099363942  | Program output: -7.8900636058 
Correct output: 141.9894473185 | Program output: 64.9894473185 
Correct output: 15.8089845438  | Program output: -25.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 float_inc float_inc integer_mult integer_swap float_inc float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [87.0 12 84.0 3 29.0 11 79.0 3 48.0 3 90.0 2 71.0 2 11.0 2 6.0 12 16.0 3 30.0 12 21.0 2 14.0 2 97.0 13 55.0 2 106.0 3 29.0 3 4.0 2 77.0 2 70.0 1 8.0 2 34.0 2 31.0 10 77.0 2 41.0 11]
Total: 1337.0
Mean: 26.74
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2692.8721706999995
Median total errors in population: 1341.0
Error averages by case: (143.10346520000002 12.916 141.0287587 2.783 88.6977691 11.981 125.88249720000002 3.754 96.5181992 2.887 146.43045020000002 2.781 128.882059 3.656 72.4311694 2.764 56.6434465 1.504 66.65168709999999 2.889 79.1080801 12.134 81.300044 2.763 74.65395470000001 1.837 142.15546490000003 13.045 113.1449808 2.697 150.93166319999997 1.998 78.4219074 2.769 65.48778659999998 1.849 134.3323638 3.654 117.0464565 2.658 58.65496 1.83 82.82854990000001 2.718 90.5503818 10.234 134.255764 3.662 99.9303114 12.037)
Error minima by case: (2.23 7 7.4384 2 4.9203 9 7.7909 2 18.5027 2 50.9141 1 18.2483 2 11.0 1 0.0 0 6.0 2 12.3882 9 3.0797 1 10.0797 1 27.2565 8 7.8942 1 82.9171 1 17.6966 1 3.7922 1 13.0669 2 37.2935 1 0.0 0 16.4869 1 6.9203 9 24.0106 2 2.6278 9)
Average genome size in population (length): 18.643
Average program size in population (points): 19.643
Average percent parens in population: 0.057
Minimum age in population: 182.5010836074035
Maximum age in population: 187.5492662494237
Average age in population: 185.6069561140218
Median age in population: 185.6513402344711
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.51
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.51
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 71278916
--- Timings ---
Current time: 1529616351235 milliseconds
Total Time:         379.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       177.1 seconds, 46.6%
Fitness Testing:    166.8 seconds, 43.9%
Report:              35.7 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 55654.0
Test mean error for best: 27.82700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -79.7479372313
Correct output: 172.561551159  | Program output: 92.561551159  
Correct output: 13.439114403   | Program output: -11.560885597 
Correct output: -153.7909193035 | Program output: -70.7909193035
Correct output: -102.5026743292 | Program output: -50.5026743292
Correct output: 141.0859082546 | Program output: 55.0859082546 
Correct output: 172.2482707672 | Program output: 105.2482707672
Correct output: -78.6254419982 | Program output: -85.6254419982
Correct output: -0.8704914806  | Program output: 9.1295085194  
Correct output: -105.1901476719 | Program output: -85.1901476719
Correct output: -11.6807030059 | Program output: 22.3192969941 
Correct output: -13.7752479931 | Program output: -30.7752479931
Correct output: 25.6838047231  | Program output: 15.6838047231 
Correct output: -54.5626932483 | Program output: 46.4373067517 
Correct output: 66.1064961654  | Program output: 15.1064961654 
Correct output: -110.2233087634 | Program output: -0.2233087634 
Correct output: 75.9088754934  | Program output: 108.9088754934
Correct output: 62.0044816678  | Program output: 62.0044816678 
Correct output: 152.9330618983 | Program output: 79.9330618983 
Correct output: -90.706511563  | Program output: -16.706511563 
Correct output: 64.3580372038  | Program output: 76.3580372038 
Correct output: 17.4418589273  | Program output: 55.4418589273 
Correct output: 23.1099363942  | Program output: -3.8900636058 
Correct output: 141.9894473185 | Program output: 68.9894473185 
Correct output: 15.8089845438  | Program output: -21.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 float_inc float_inc integer_mult integer_swap float_inc float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [83.0 13 80.0 2 25.0 11 83.0 3 52.0 2 86.0 3 67.0 2 7.0 2 10.0 12 20.0 2 34.0 13 17.0 2 10.0 1 101.0 13 51.0 2 110.0 2 33.0 3 0.0 0 73.0 3 74.0 2 12.0 2 38.0 2 27.0 9 73.0 3 37.0 12]
Total: 1324.0
Mean: 26.48
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2660.5188981999995
Median total errors in population: 1341.0
Error averages by case: (141.34366690000002 12.677 137.4431976 3.037 87.2709857 11.716 127.9763418 3.79 98.47065099999999 3.156 142.52528579999998 2.838 125.33500960000002 3.478 71.6745735 2.809 58.14946490000001 4.109 68.7250305 3.141 77.55773100000002 12.109 80.09853419999997 2.804 70.43620579999998 2.105 140.63635969999999 13.0 108.84787600000001 2.756 152.5288893 2.492 76.94479510000002 3.021 61.4680614 2.109 130.61223290000004 3.482 118.74210919999999 2.502 57.22344880000001 2.081 81.10486919999998 2.749 89.09590510000001 10.217 130.4352209 3.498 98.3924523 11.804)
Error minima by case: (0.8188 7 43.6278 2 5.3722 8 38.6278 2 7.6278 2 49.6278 1 30.6278 2 6.0 1 0.0 0 6.0 2 10.3722 11 7.1141 1 5.0046 1 54.4976 9 4.814 1 65.6278 1 11.3722 1 0.0 0 36.6278 2 29.6278 1 0.0 0 6.3722 1 3.3722 9 36.6278 2 0.6278 8)
Average genome size in population (length): 21.8
Average program size in population (points): 22.8
Average percent parens in population: 0.051
Minimum age in population: 184.0357614934212
Maximum age in population: 189.0292781860773
Average age in population: 187.0807103137455
Median age in population: 187.1164210678626
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 131
Genome diversity (% unique Plush genomes):	 0.533
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 131
Syntactic diversity (% unique Push programs):	 0.533
Total error diversity:				 0.038
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 71823966
--- Timings ---
Current time: 1529616354269 milliseconds
Total Time:         382.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.4 seconds, 46.6%
Fitness Testing:    168.1 seconds, 43.9%
Report:              36.0 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 55654.0
Test mean error for best: 27.82700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -79.7479372313
Correct output: 172.561551159  | Program output: 92.561551159  
Correct output: 13.439114403   | Program output: -11.560885597 
Correct output: -153.7909193035 | Program output: -70.7909193035
Correct output: -102.5026743292 | Program output: -50.5026743292
Correct output: 141.0859082546 | Program output: 55.0859082546 
Correct output: 172.2482707672 | Program output: 105.2482707672
Correct output: -78.6254419982 | Program output: -85.6254419982
Correct output: -0.8704914806  | Program output: 9.1295085194  
Correct output: -105.1901476719 | Program output: -85.1901476719
Correct output: -11.6807030059 | Program output: 22.3192969941 
Correct output: -13.7752479931 | Program output: -30.7752479931
Correct output: 25.6838047231  | Program output: 15.6838047231 
Correct output: -54.5626932483 | Program output: 46.4373067517 
Correct output: 66.1064961654  | Program output: 15.1064961654 
Correct output: -110.2233087634 | Program output: -0.2233087634 
Correct output: 75.9088754934  | Program output: 108.9088754934
Correct output: 62.0044816678  | Program output: 62.0044816678 
Correct output: 152.9330618983 | Program output: 79.9330618983 
Correct output: -90.706511563  | Program output: -16.706511563 
Correct output: 64.3580372038  | Program output: 76.3580372038 
Correct output: 17.4418589273  | Program output: 55.4418589273 
Correct output: 23.1099363942  | Program output: -3.8900636058 
Correct output: 141.9894473185 | Program output: 68.9894473185 
Correct output: 15.8089845438  | Program output: -21.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 float_inc float_inc integer_mult integer_swap float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [83.0 13 80.0 2 25.0 11 83.0 3 52.0 2 86.0 3 67.0 2 7.0 2 10.0 12 20.0 2 34.0 13 17.0 2 10.0 1 101.0 13 51.0 2 110.0 2 33.0 3 0.0 0 73.0 3 74.0 2 12.0 2 38.0 2 27.0 9 73.0 3 37.0 12]
Total: 1324.0
Mean: 26.48
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2284.3439861999996
Median total errors in population: 1337.0
Error averages by case: (121.92427170000002 12.149 121.05745130000001 3.507 66.4239338 11.108 116.15927919999997 3.69 86.08697090000001 3.587 126.08755289999999 2.823 108.87972870000003 2.866 51.9322853 2.734 44.014981799999994 10.647 55.9917685 3.577 67.10627230000001 12.092 59.26055929999998 2.731 52.351467099999994 2.583 131.71629569999996 12.967 90.88372240000001 2.691 140.29238249999997 3.543 67.43083259999999 3.523 44.642110200000005 2.546 114.11459170000006 2.916 105.86816630000003 1.95 47.307867500000015 2.554 71.3294205 2.7 68.3429274 10.146 113.8537073 2.948 77.44743930000003 11.26)
Error minima by case: (0.03 7 32.9338 2 1.1666 8 32.5813 2 21.8696 2 10.5419 2 31.6278 1 5.0 1 0.0 0 7.0 2 8.6807 10 10.3722 1 8.0 1 51.5627 9 10.3169 1 97.0 1 20.0 1 0.0 0 27.3053 2 61.0 1 1.0 1 5.1694 1 4.3722 9 16.3617 2 1.6278 9)
Average genome size in population (length): 30.31
Average program size in population (points): 31.31
Average percent parens in population: 0.034
Minimum age in population: 186.367521960924
Maximum age in population: 190.6473668461521
Average age in population: 188.5689910989172
Median age in population: 188.5830097680392
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 296
Genome diversity (% unique Plush genomes):	 0.464
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 296
Syntactic diversity (% unique Push programs):	 0.464
Total error diversity:				 0.041
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 72581716
--- Timings ---
Current time: 1529616357389 milliseconds
Total Time:         385.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.8 seconds, 46.6%
Fitness Testing:    169.5 seconds, 43.9%
Report:              36.4 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 56593.0
Test mean error for best: 28.29650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -74.7479372313
Correct output: 172.561551159  | Program output: 97.561551159  
Correct output: 13.439114403   | Program output: -6.560885597  
Correct output: -153.7909193035 | Program output: -65.7909193035
Correct output: -102.5026743292 | Program output: -45.5026743292
Correct output: 141.0859082546 | Program output: 60.0859082546 
Correct output: 172.2482707672 | Program output: 110.2482707672
Correct output: -78.6254419982 | Program output: -80.6254419982
Correct output: -0.8704914806  | Program output: 14.1295085194 
Correct output: -105.1901476719 | Program output: -80.1901476719
Correct output: -11.6807030059 | Program output: 27.3192969941 
Correct output: -13.7752479931 | Program output: -25.7752479931
Correct output: 25.6838047231  | Program output: 20.6838047231 
Correct output: -54.5626932483 | Program output: 51.4373067517 
Correct output: 66.1064961654  | Program output: 20.1064961654 
Correct output: -110.2233087634 | Program output: 4.7766912366  
Correct output: 75.9088754934  | Program output: 113.9088754934
Correct output: 62.0044816678  | Program output: 67.0044816678 
Correct output: 152.9330618983 | Program output: 84.9330618983 
Correct output: -90.706511563  | Program output: -11.706511563 
Correct output: 64.3580372038  | Program output: 81.3580372038 
Correct output: 17.4418589273  | Program output: 60.4418589273 
Correct output: 23.1099363942  | Program output: 1.1099363942  
Correct output: 141.9894473185 | Program output: 73.9894473185 
Correct output: 15.8089845438  | Program output: -16.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_dup} {:instruction integer_flush} {:instruction float_dup} {:instruction integer_dup} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_mod integer_dup integer_flush float_dup integer_dup tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [78.0 13 75.0 2 20.0 11 88.0 2 57.0 3 81.0 3 62.0 2 2.0 2 15.0 12 25.0 2 39.0 13 12.0 2 5.0 1 106.0 12 46.0 2 115.0 14 38.0 3 5.0 1 68.0 3 79.0 2 17.0 2 43.0 2 22.0 2 68.0 3 32.0 11]
Total: 1323.0
Mean: 26.46
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 1980.0415204000003
Median total errors in population: 1337.0
Error averages by case: (108.7655655 12.23 108.35980880000002 3.439 53.3754364 10.911 105.29044749999997 3.517 74.7668566 3.463 113.46828430000004 2.778 95.9406343 2.573 37.977941200000004 2.556 32.947056300000014 11.92 44.3031893 3.514 56.0543732 12.154 46.1326882 2.569 39.5002472 2.539 120.81754819999996 12.823 78.6774777 2.552 130.39572059999995 3.567 55.9560679 3.468 30.7993941 2.34 101.34709970000002 2.854 95.62679749999998 1.895 35.619684 2.447 59.78293800000001 2.546 55.31337210000001 10.091 101.188572 2.866 64.70731980000001 11.315)
Error minima by case: (0.0371 8 36.9338 2 1.3722 8 36.5813 2 25.8696 2 6.5419 2 28.6278 1 2.0 1 0.0 0 10.0 2 10.251 8 1.4495 1 5.0 1 5.5627 9 11.5213 1 61.2233 1 23.0 2 0.0 0 31.3053 1 41.7065 1 2.0 1 2.6207 1 0.6278 2 20.3617 2 1.3722 3)
Average genome size in population (length): 32.77
Average program size in population (points): 33.77
Average percent parens in population: 0.030
Minimum age in population: 187.7064294094187
Maximum age in population: 191.739872118538
Average age in population: 189.9780617660635
Median age in population: 190.0458212805959
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 191
Genome diversity (% unique Plush genomes):	 0.523
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 191
Syntactic diversity (% unique Push programs):	 0.523
Total error diversity:				 0.044
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 73400966
--- Timings ---
Current time: 1529616360540 milliseconds
Total Time:         389.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.2 seconds, 46.6%
Fitness Testing:    170.9 seconds, 43.9%
Report:              36.8 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2140.8627820999995
Median total errors in population: 1333.0
Error averages by case: (114.57925620000002 12.66 114.1411008 3.458 57.6052083 10.777 114.46483980000002 3.603 84.18457909999997 3.336 119.26264769999997 3.106 101.91701850000004 2.626 44.843555099999996 2.622 38.796785500000006 11.953 54.1940516 3.563 63.06163550000001 12.389 50.43255529999999 2.617 42.1202808 2.525 129.55381679999996 12.395 80.9083995 2.632 136.06046849999998 3.423 64.99514239999999 3.505 37.070612499999996 1.855 107.14092250000003 3.429 102.0828934 2.482 44.78603400000001 2.366 68.80959199999998 2.63 59.33995999999999 9.949 106.92217869999996 3.44 68.4402476 11.808)
Error minima by case: (0.248 8 1.4384 2 2.3703 7 1.7909 2 12.5027 2 44.9141 2 23.2483 1 0.0 0 0.0 0 8.0 2 12.8618 10 6.7752 1 3.0 1 55.643 9 4.2104 1 94.7767 1 21.0 2 0.0 0 7.0669 2 42.2935 1 0.0 0 4.5115 1 0.3722 1 18.0106 2 0.3722 9)
Average genome size in population (length): 34.139
Average program size in population (points): 35.139
Average percent parens in population: 0.029
Minimum age in population: 189.1109452042508
Maximum age in population: 193.1272978693196
Average age in population: 191.3704291566515
Median age in population: 191.4453969363892
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.508
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.508
Total error diversity:				 0.058
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.061
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 74254466
--- Timings ---
Current time: 1529616363656 milliseconds
Total Time:         392.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.6 seconds, 46.6%
Fitness Testing:    172.4 seconds, 44.0%
Report:              37.1 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2375.2854326999995
Median total errors in population: 1330.0
Error averages by case: (121.29986790000001 12.889 120.42488929999999 3.314 66.11815279999998 11.001 124.17453899999997 3.807 94.26048309999997 3.381 125.49497510000002 3.426 108.33137330000005 2.876 52.414343200000005 2.836 52.35545260000002 11.948 64.5580595 3.41 75.8133885 12.639 59.2440943 2.86 52.84672139999999 2.357 139.57733969999992 12.575 90.8770402 2.794 147.96849469999995 3.885 75.37678769999998 3.747 45.3798234 1.522 113.49941040000004 3.742 113.81503279999997 2.786 55.34426330000001 2.754 79.38166499999998 2.807 67.85283199999999 9.363 113.39249290000002 3.776 77.0439106 11.945)
Error minima by case: (0.3972 7 0.5616 2 0.4341 2 0.2091 2 9.5027 2 1.4581 2 22.6278 1 0.0 0 0.0 0 7.0 2 11.7816 10 3.0448 1 1.0 1 17.8205 10 3.5213 1 55.3095 1 15.7264 1 0.0 0 4.0669 2 45.2935 1 1.0 1 3.3814 1 1.3722 1 15.0106 2 0.3722 8)
Average genome size in population (length): 35.489
Average program size in population (points): 36.489
Average percent parens in population: 0.028
Minimum age in population: 190.1246781380381
Maximum age in population: 194.7009023035633
Average age in population: 192.912098922329
Median age in population: 192.946174013721
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 54
Genome diversity (% unique Plush genomes):	 0.517
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 54
Syntactic diversity (% unique Push programs):	 0.517
Total error diversity:				 0.055
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 75141716
--- Timings ---
Current time: 1529616366739 milliseconds
Total Time:         395.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.8 seconds, 46.5%
Fitness Testing:    173.8 seconds, 44.0%
Report:              37.4 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2715.9030724999993
Median total errors in population: 1324.0
Error averages by case: (133.34313390000003 12.81 133.5318735 3.217 79.69920149999997 11.005 140.1090206 3.893 110.39149259999995 3.452 138.15747649999997 3.863 121.80919130000002 3.048 66.64634849999999 2.957 64.8259838 11.937 81.40156219999999 3.355 88.83174979999995 12.917 71.9958046 3.027 62.297681099999984 2.232 154.23492409999994 12.7 99.3745087 2.999 159.39827159999996 6.107 91.64693220000001 3.89 61.390460199999985 1.598 126.63605240000005 3.891 127.99763699999998 2.945 71.96338779999998 2.977 95.11165959999995 2.984 78.51277100000001 7.81 126.29101339999997 3.924 89.02393459999999 11.743)
Error minima by case: (1.1461 8 3.5616 1 0.1886 2 3.2091 2 0.4973 2 5.4581 2 15.6278 1 0.0 0 0.0 0 10.0 2 10.8854 9 2.0 1 0.0 0 1.3604 8 0.3722 1 3.2077 1 5.5362 2 0.0 0 2.0669 2 5.7389 1 2.0 1 0.4101 1 1.3722 1 5.0106 2 0.0177 8)
Average genome size in population (length): 36.364
Average program size in population (points): 37.364
Average percent parens in population: 0.027
Minimum age in population: 192.177991840458
Maximum age in population: 196.4301873425058
Average age in population: 194.4796520026753
Median age in population: 194.5343876683516
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 72
Genome diversity (% unique Plush genomes):	 0.519
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 72
Syntactic diversity (% unique Push programs):	 0.519
Total error diversity:				 0.071
Error (vector) diversity:			 0.077
Behavioral diversity:				 0.078
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 76050841
--- Timings ---
Current time: 1529616369944 milliseconds
Total Time:         398.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.2 seconds, 46.5%
Fitness Testing:    175.3 seconds, 44.0%
Report:              37.8 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (in1 float_inc float_inc integer_mult integer_swap float_inc float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2310.1421974999994
Median total errors in population: 1323.0
Error averages by case: (114.32848310000006 12.554 113.77329819999999 3.194 59.11797540000002 10.747 127.93399659999996 3.367 97.73154249999999 3.609 118.40462309999995 3.585 101.75881600000001 2.743 46.8572342 2.298 53.643823800000014 11.923 67.99661140000002 3.358 77.2863988 12.948 53.5776444 2.655 45.006491600000004 1.946 141.29418769999995 12.228 82.71507199999999 2.757 149.44412579999994 11.633 77.2817045 3.592 46.1901135 1.814 106.67683310000005 3.559 116.88529820000001 2.518 57.2906588 2.783 80.97244049999998 2.791 59.453630200000006 4.019 106.44703429999997 3.602 70.78215979999999 11.069)
Error minima by case: (0.2492 7 0.4384 1 1.0 1 6.2091 1 4.5027 2 35.6278 2 16.6278 1 0.0 0 0.0 0 9.0 2 13.1788 10 0.0 0 0.0 0 55.5632 9 0.6278 1 74.9521 1 13.5366 2 0.0 0 0.9331 2 51.2935 1 1.0 1 2.4117 1 3.0 1 10.0106 2 0.3722 2)
Average genome size in population (length): 37.798
Average program size in population (points): 38.798
Average percent parens in population: 0.026
Minimum age in population: 193.1966079351875
Maximum age in population: 197.8730908628642
Average age in population: 195.9676124807354
Median age in population: 196.017476663321
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 122
Genome diversity (% unique Plush genomes):	 0.548
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 122
Syntactic diversity (% unique Push programs):	 0.548
Total error diversity:				 0.074
Error (vector) diversity:			 0.08
Behavioral diversity:				 0.08
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 76995816
--- Timings ---
Current time: 1529616373269 milliseconds
Total Time:         401.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.6 seconds, 46.5%
Fitness Testing:    176.7 seconds, 44.0%
Report:              38.2 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap integer_mult integer_swap integer_mult float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2663.530217899999
Median total errors in population: 1317.0
Error averages by case: (126.49516090000003 12.131 127.77402920000002 3.745 72.06397830000004 10.808 143.7859041 3.483 113.82415629999998 3.973 132.0202965 3.676 116.22092959999999 2.65 61.0458907 1.852 66.65365870000002 11.939 84.92667879999999 3.927 90.76131989999996 12.971 67.0674565 2.569 54.7105308 2.116 156.78664079999993 12.075 91.64285329999997 2.953 161.7579077 13.639 93.9305725 3.465 63.48809000000001 2.146 120.70383970000002 3.633 132.09815330000004 2.287 74.38401800000001 2.949 97.52156799999999 2.954 71.1687853 2.55 120.2887377 3.682 83.38006129999998 10.856)
Error minima by case: (0.713 8 32.1286 1 0.3722 1 41.5813 1 30.8696 2 1.5419 1 19.1286 1 0.0 0 1.9258 1 6.0 2 8.8844 9 0.0 0 0.0 0 7.8442 8 3.1286 1 35.5799 2 18.5366 1 0.0 0 25.1286 2 43.988 1 1.0 1 0.0419 1 1.3074 1 25.1286 2 3.3722 8)
Average genome size in population (length): 40.839
Average program size in population (points): 41.839
Average percent parens in population: 0.024
Minimum age in population: 194.1966079351875
Maximum age in population: 199.3430889365194
Average age in population: 197.3878670679981
Median age in population: 197.4329889143444
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 83
Genome diversity (% unique Plush genomes):	 0.577
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 83
Syntactic diversity (% unique Push programs):	 0.577
Total error diversity:				 0.073
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 78016841
--- Timings ---
Current time: 1529616376523 milliseconds
Total Time:         405.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       187.9 seconds, 46.4%
Fitness Testing:    178.3 seconds, 44.0%
Report:              38.7 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2572.4684019000006
Median total errors in population: 1315.0
Error averages by case: (122.80367000000001 12.121 123.0577803 3.774 69.1223196 10.896 139.8840673 3.262 109.86687969999996 3.942 127.45978679999999 3.793 111.32676370000006 2.324 56.80012889999998 1.495 64.84356170000002 11.957 81.1680403 3.958 87.4919132 12.991 62.966297399999966 2.271 52.13892439999997 2.087 152.21836009999996 12.114 89.98345699999994 2.931 160.67548699999998 13.659 89.65563549999999 3.153 58.96785780000001 2.076 115.9672673 3.759 129.5130507 2.174 69.95522009999998 2.906 92.7104303 2.901 69.87309210000002 2.546 115.60452989999997 3.792 80.45488079999998 11.077)
Error minima by case: (1.7533 9 7.5616 1 0.4786 1 7.2091 1 3.5027 2 35.9141 2 25.6278 1 0.0 0 0.0 0 8.0 2 0.9744 10 0.0 0 0.0 0 1.5119 8 5.1065 1 54.1488 1 10.0164 2 0.0 0 1.9331 2 34.632 1 0.0 0 0.0436 1 2.6353 1 9.0106 2 0.4524 8)
Average genome size in population (length): 41.783
Average program size in population (points): 42.783
Average percent parens in population: 0.024
Minimum age in population: 195.1966079351875
Maximum age in population: 200.6643091214183
Average age in population: 198.8347361908785
Median age in population: 198.8832441587975
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 100
Genome diversity (% unique Plush genomes):	 0.568
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 100
Syntactic diversity (% unique Push programs):	 0.568
Total error diversity:				 0.074
Error (vector) diversity:			 0.082
Behavioral diversity:				 0.083
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 79061416
--- Timings ---
Current time: 1529616379788 milliseconds
Total Time:         408.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.3 seconds, 46.4%
Fitness Testing:    179.8 seconds, 44.1%
Report:              39.0 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_add} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction 83} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_div integer_add float_stackdepth integer_shove integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult 83 integer_mult integer_swap float_yankdup float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2424.2858072
Median total errors in population: 1315.0
Error averages by case: (117.03443110000002 12.092 117.1690898 3.652 62.4277466 10.851 134.99081169999997 3.103 104.73534690000001 3.836 121.66795209999995 3.683 105.12773640000002 2.137 50.440227499999985 1.327 59.415083700000004 11.995 75.41381870000005 3.846 82.10850330000001 13.008 56.93749019999999 2.115 46.10097679999999 1.946 147.23486409999992 12.092 83.90711779999995 2.808 155.86256469999992 13.698 83.57985850000001 3.004 52.6959254 1.923 110.01484080000004 3.634 123.9731536 2.046 63.78638930000002 2.775 87.20810549999997 2.78 63.28338689999998 2.304 109.69220779999999 3.677 74.084178 11.062)
Error minima by case: (0.2277 8 38.6278 1 0.092 1 77.0 1 32.1392 2 44.6278 2 25.6278 1 0.0 0 0.7163 9 14.0 2 12.1278 9 0.0 0 0.0 0 15.8008 8 5.1065 1 39.8598 2 19.5366 2 0.0 0 31.6278 2 20.343 1 6.0 1 1.5885 1 3.3722 1 31.6278 2 1.0154 6)
Average genome size in population (length): 41.78
Average program size in population (points): 42.78
Average percent parens in population: 0.024
Minimum age in population: 196.2485710503314
Maximum age in population: 202.3453915084452
Average age in population: 200.320464622182
Median age in population: 200.383543015413
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 89
Genome diversity (% unique Plush genomes):	 0.6
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 89
Syntactic diversity (% unique Push programs):	 0.6
Total error diversity:				 0.064
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 80106016
--- Timings ---
Current time: 1529616383002 milliseconds
Total Time:         411.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.7 seconds, 46.3%
Fitness Testing:    181.4 seconds, 44.1%
Report:              39.3 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 37.09777937209273} {:instruction in1} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_51} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 37.09777937209273 in1 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_51 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2520.0377928999997
Median total errors in population: 1315.0
Error averages by case: (121.13326880000007 12.115 121.95275039999999 3.686 66.21960729999999 10.798 138.21092249999998 3.119 108.12352109999996 3.829 126.36798599999992 3.748 110.07222630000003 2.245 54.31079649999999 1.39 61.35263380000004 11.941 78.93092850000001 3.849 84.80813249999997 12.987 60.92751989999998 2.141 48.28389869999999 1.982 151.61532899999992 12.103 85.81819179999998 2.819 157.57030619999995 13.653 88.30222850000001 3.09 57.6808861 2.012 114.83970640000008 3.686 127.64838060000005 2.119 68.6255784 2.833 91.94054769999998 2.824 66.48443460000003 2.422 114.47990809999995 3.74 78.14010320000001 11.067)
Error minima by case: (3.5947 7 5.5616 1 0.5195 1 5.2091 1 5.5027 2 37.9141 2 31.2483 1 0.0 0 0.0 0 8.0 2 7.6807 9 0.0 0 0.0 0 0.5625 8 3.1065 1 52.1858 1 15.5366 2 0.0 0 0.0669 2 32.669 1 0.0 0 0.0017 1 2.291 1 11.0106 2 0.414 8)
Average genome size in population (length): 42.153
Average program size in population (points): 43.153
Average percent parens in population: 0.023
Minimum age in population: 199.2785974774113
Maximum age in population: 204.1926503168992
Average age in population: 201.7759126359344
Median age in population: 201.8387109180904
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 67
Genome diversity (% unique Plush genomes):	 0.657
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 67
Syntactic diversity (% unique Push programs):	 0.657
Total error diversity:				 0.067
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 81159916
--- Timings ---
Current time: 1529616386217 milliseconds
Total Time:         414.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.0 seconds, 46.3%
Fitness Testing:    183.0 seconds, 44.1%
Report:              39.7 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_32} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction float_mod} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_32 integer_mult integer_swap integer_mult integer_swap float_yankdup float_inc float_add integer_mult integer_swap integer_mult integer_swap float_yankdup float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_add integer_mult float_mod float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2656.9515418
Median total errors in population: 1315.0
Error averages by case: (126.58462210000003 12.102 126.8407108 3.718 70.7667391 10.794 143.47234530000003 3.186 113.64755869999996 3.908 131.51487189999997 3.768 114.98828540000001 2.247 60.222761899999995 1.44 67.18981290000002 11.973 84.6585223 3.921 91.8610535 12.993 66.61371489999999 2.195 55.18058839999999 2.048 157.22516839999997 12.119 92.36770659999999 2.863 161.94641639999992 13.622 94.0833099 3.1 63.4659982 2.016 119.89465570000002 3.734 131.39589740000002 2.204 74.44618160000002 2.847 97.90339919999998 2.865 70.74995780000002 2.503 119.59083829999999 3.78 83.2964251 11.098)
Error minima by case: (0.0363 7 8.5616 1 2.1287 1 8.2091 1 2.5027 2 25.9141 2 26.6278 1 0.0 0 0.0 0 10.0 2 11.6817 10 0.0 0 0.0 0 18.3701 8 8.7343 1 42.1773 1 18.5366 2 0.0 0 2.9331 2 53.2935 1 2.0 1 0.0017 1 2.925 1 0.9894 2 0.4912 9)
Average genome size in population (length): 42.332
Average program size in population (points): 43.332
Average percent parens in population: 0.023
Minimum age in population: 200.3247344595275
Maximum age in population: 205.2776866084921
Average age in population: 203.1970487685911
Median age in population: 203.2405971269563
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 60
Genome diversity (% unique Plush genomes):	 0.66
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.66
Total error diversity:				 0.068
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 82218366
--- Timings ---
Current time: 1529616389416 milliseconds
Total Time:         417.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.3 seconds, 46.3%
Fitness Testing:    184.5 seconds, 44.1%
Report:              40.0 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_dup} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_dup} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_mod integer_dup integer_flush integer_swap integer_dup tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc integer_min in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2833.926004499999
Median total errors in population: 1315.0
Error averages by case: (131.85868470000005 12.062 134.11580489999997 3.968 78.23510180000001 10.864 150.93835959999998 3.426 120.98277989999997 4.121 137.92042209999994 4.043 122.49630610000003 2.523 67.92140849999998 1.657 75.2239344 11.967 92.52790159999998 4.15 97.74167839999997 12.961 73.38025709999997 2.417 61.03811669999999 2.281 163.6490865999999 12.071 96.91092999999996 3.121 169.1542303999999 13.716 100.84992500000003 3.331 70.75589939999996 2.306 126.95119100000004 3.972 139.39605510000004 2.372 81.4936089 3.1 104.58934799999996 3.128 78.2470814 2.597 126.51201479999993 4.057 89.7208781 11.104)
Error minima by case: (0.0363 8 17.5616 1 0.4391 1 17.2091 1 6.4973 2 25.9141 2 21.6278 1 0.0 0 2.0 2 12.0 2 8.6807 3 0.0 0 0.0 0 43.4976 3 5.6278 1 102.0 2 5.7638 2 0.0 0 11.9331 2 62.2935 1 1.975 1 1.3309 1 1.6831 1 0.9894 2 1.1658 2)
Average genome size in population (length): 42.407
Average program size in population (points): 43.407
Average percent parens in population: 0.023
Minimum age in population: 201.8737629224559
Maximum age in population: 206.5191335835515
Average age in population: 204.635011247379
Median age in population: 204.6775716258257
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 56
Genome diversity (% unique Plush genomes):	 0.678
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 56
Syntactic diversity (% unique Push programs):	 0.678
Total error diversity:				 0.081
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.087
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 83278691
--- Timings ---
Current time: 1529616392888 milliseconds
Total Time:         421.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       194.7 seconds, 46.2%
Fitness Testing:    186.0 seconds, 44.2%
Report:              40.4 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_107} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_107 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2565.9071971999997
Median total errors in population: 1315.0
Error averages by case: (122.59527580000002 12.073 123.5984299 3.774 67.2890961 10.74 140.63426850000002 3.211 110.59802529999999 3.909 127.85932239999994 3.823 111.75490800000003 2.307 56.632939499999985 1.446 63.20869819999999 11.954 81.3706533 3.932 87.6081566 12.954 62.797529499999975 2.2 50.597877099999984 2.07 153.74108789999994 12.06 87.71721329999997 2.903 158.6253813 13.599 89.94290190000004 3.146 59.42383349999999 2.093 116.48386290000006 3.774 129.0597136 2.164 70.36498489999997 2.904 93.80260309999998 2.92 67.21654219999999 2.474 116.06511289999995 3.849 79.57677949999999 11.063)
Error minima by case: (0.4053 9 38.6278 1 0.9677 1 74.0 1 43.0 2 44.6278 2 25.6278 1 0.0 0 1.0 8 11.0 2 14.6358 9 0.0 0 0.0 0 58.3874 9 2.0328 1 18.1646 2 19.1207 2 0.0 0 31.6278 2 65.0 1 3.0 1 0.0017 1 0.8579 1 31.6278 2 0.414 8)
Average genome size in population (length): 42.14
Average program size in population (points): 43.14
Average percent parens in population: 0.024
Minimum age in population: 202.8737629224559
Maximum age in population: 207.9427639417356
Average age in population: 206.0259497970751
Median age in population: 206.0929571754878
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.69
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.69
Total error diversity:				 0.069
Error (vector) diversity:			 0.073
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 84332216
--- Timings ---
Current time: 1529616396242 milliseconds
Total Time:         424.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.1 seconds, 46.2%
Fitness Testing:    187.6 seconds, 44.2%
Report:              40.9 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (in1 float_inc float_inc integer_mult integer_swap float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_sub float_inc integer_min in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2386.3533697999997
Median total errors in population: 1315.0
Error averages by case: (115.31986160000007 12.039 115.20202669999999 3.674 61.382223200000034 10.843 133.11318199999997 3.12 102.82493239999994 3.845 119.6688339999999 3.705 103.19193530000004 2.148 48.59062569999998 1.342 58.98168060000002 11.928 73.46209770000002 3.85 81.5281473 12.958 55.04855759999999 2.129 45.96984519999999 1.94 145.58242629999984 12.067 83.94893009999996 2.787 155.26974219999994 13.682 81.20200410000002 2.998 50.41245350000002 1.937 108.0738795000001 3.65 122.67498900000004 2.05 61.45196870000002 2.768 85.18523139999996 2.789 62.61777340000002 2.369 107.70331869999991 3.707 72.5887036 11.033)
Error minima by case: (0.7695 9 38.6278 1 0.1544 1 10.2091 2 0.5027 2 44.6278 2 25.6278 1 0.0 0 0.0 0 10.0 2 11.6807 9 1.0 1 0.0 0 54.5627 9 9.1065 1 42.1773 1 13.0911 2 0.0 0 31.6278 2 55.2935 1 2.0 1 0.4544 1 2.1579 1 31.6278 2 1.4174 9)
Average genome size in population (length): 42.35
Average program size in population (points): 43.35
Average percent parens in population: 0.023
Minimum age in population: 204.983924421611
Maximum age in population: 209.4124084844979
Average age in population: 207.5037680323433
Median age in population: 207.5838813021098
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.693
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.693
Total error diversity:				 0.063
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.068
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 85391016
--- Timings ---
Current time: 1529616399474 milliseconds
Total Time:         427.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       197.5 seconds, 46.1%
Fitness Testing:    189.2 seconds, 44.2%
Report:              41.2 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2789.3435834000006
Median total errors in population: 1315.0
Error averages by case: (130.14017170000002 12.127 132.1018796 3.848 76.9244716 10.802 147.52176160000002 3.319 117.70704959999995 4.03 136.50046379999995 3.9 120.40237300000001 2.412 64.71016360000002 1.571 73.81333300000001 11.966 89.058114 4.041 96.9551889 13.019 70.93607229999999 2.326 61.52766529999999 2.184 161.40024899999997 12.138 98.59314999999995 3.002 168.31800479999998 13.682 99.05352490000004 3.242 68.8693426 2.186 125.10324320000005 3.853 136.93095970000005 2.29 79.6308844 2.978 102.59675029999995 2.988 77.94250710000003 2.597 124.83424779999994 3.896 88.2650116 11.11)
Error minima by case: (0.3205 4 7.5616 1 0.1421 1 7.2091 1 3.5027 2 35.9141 1 25.6278 1 0.0 0 0.2175 1 6.0 2 0.6807 3 0.0 0 0.0 0 8.2401 4 9.4709 1 37.7789 2 15.4759 2 0.0 0 1.9331 2 18.2621 1 0.0 0 0.5712 1 2.6831 1 9.0106 2 1.8327 2)
Average genome size in population (length): 42.515
Average program size in population (points): 43.515
Average percent parens in population: 0.023
Minimum age in population: 206.4181551427761
Maximum age in population: 210.9592462271189
Average age in population: 209.0016292390507
Median age in population: 209.0508549918392
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.722
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.722
Total error diversity:				 0.067
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 86453916
--- Timings ---
Current time: 1529616402803 milliseconds
Total Time:         431.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.8 seconds, 46.1%
Fitness Testing:    190.8 seconds, 44.2%
Report:              41.5 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction tagged_896} {:instruction print_float} {:instruction integer_sub} {:instruction integer_add} {:instruction print_float} {:instruction tag_float_479} {:instruction integer_shove} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_mult} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (print_integer tagged_896 print_float integer_sub integer_add print_float tag_float_479 integer_shove 35.372239689310504 in1 float_mult float_add integer_fromfloat float_frominteger integer_sub float_inc integer_min in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2829.9401316999997
Median total errors in population: 1315.0
Error averages by case: (133.0829085 12.143 133.6496931 3.801 77.6075353 10.76 149.60673280000006 3.3 120.04398959999999 4.011 138.29812049999995 3.884 121.83693570000001 2.381 67.0284241 1.588 74.63189189999999 12.005 91.1604055 4.017 97.98364250000002 13.003 73.66793640000002 2.336 62.66294509999999 2.133 163.14633709999998 12.162 99.9196955 2.954 168.74080870000003 13.553 101.0418143 3.215 70.73519809999999 2.154 126.76484719999999 3.862 138.0573935 2.282 81.55608519999998 2.968 104.4449545 2.973 78.4554901 2.724 126.47057220000002 3.896 90.1207743 11.12)
Error minima by case: (1.9546 7 18.6278 1 0.1421 1 26.1632 1 36.8749 2 24.6278 2 0.124 1 0.0 0 0.8537 8 12.0 2 1.9744 8 0.0 0 0.0 0 1.1978 8 0.3316 1 39.5799 2 10.134 2 0.0 0 11.6278 2 18.9212 1 1.4169 1 0.5712 1 2.2217 1 11.6278 2 0.4138 8)
Average genome size in population (length): 42.545
Average program size in population (points): 43.545
Average percent parens in population: 0.023
Minimum age in population: 207.8926857784293
Maximum age in population: 212.3922155971194
Average age in population: 210.4677538034081
Median age in population: 210.5495443002462
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.724
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.724
Total error diversity:				 0.063
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 87517591
--- Timings ---
Current time: 1529616406000 milliseconds
Total Time:         434.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       200.1 seconds, 46.1%
Fitness Testing:    192.3 seconds, 44.3%
Report:              41.9 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_div} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap float_div 35.372239689310504 in1 float_inc float_inc float_dup integer_swap float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2830.1947347
Median total errors in population: 1315.0
Error averages by case: (132.65293960000005 12.072 134.56217999999998 3.906 78.02444069999999 10.798 150.54946370000002 3.411 120.73706849999996 4.087 138.5271969999999 3.953 122.98378020000001 2.487 68.22790219999999 1.709 73.00796909999997 11.961 92.2042292 4.099 96.57268859999998 12.973 73.97894259999998 2.436 60.55741459999999 2.256 162.95673749999995 12.129 97.423511 3.065 167.51790499999998 13.586 101.10884950000002 3.297 70.890131 2.247 127.53449370000007 3.897 138.59507610000006 2.338 81.64163229999998 3.054 104.17396939999996 3.042 77.67265450000002 2.787 127.06338469999999 3.937 90.43217399999997 11.071)
Error minima by case: (0.0328 6 37.9022 1 0.1595 1 61.5818 1 39.0 2 21.1718 2 24.9022 1 0.0 0 1.7218 1 7.0 2 12.9298 9 0.0 0 0.0 0 3.845 8 3.9672 1 59.5057 2 16.5366 1 0.0 0 30.9022 2 37.587 1 1.0 1 0.4544 1 1.3722 1 30.9022 2 0.3722 6)
Average genome size in population (length): 42.588
Average program size in population (points): 43.588
Average percent parens in population: 0.023
Minimum age in population: 208.8926857784293
Maximum age in population: 213.7755518039931
Average age in population: 211.955962831979
Median age in population: 212.0199371532669
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.742
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.742
Total error diversity:				 0.08
Error (vector) diversity:			 0.087
Behavioral diversity:				 0.087
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 88582316
--- Timings ---
Current time: 1529616409327 milliseconds
Total Time:         437.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.6 seconds, 46.0%
Fitness Testing:    193.9 seconds, 44.3%
Report:              42.2 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 36.36789330573772} {:instruction in1} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_197} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_div integer_mult integer_swap tagged_74 36.36789330573772 in1 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_add float_inc float_inc float_inc float_inc tag_integer_197 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2893.2903773999997
Median total errors in population: 1315.0
Error averages by case: (135.83320490000003 12.086 135.79308729999997 3.903 81.94260639999999 10.841 152.95750600000002 3.371 123.36739369999992 4.045 140.05104769999986 3.945 124.09362310000006 2.491 70.47530839999999 1.632 76.808116 11.947 94.5800647 4.073 100.04614039999996 12.983 76.6687512 2.389 64.37348499999997 2.208 165.14730979999993 12.098 100.94436529999994 3.02 171.3575959 13.572 102.56384070000006 3.292 72.52403869999996 2.244 128.7941482000001 3.882 141.82391960000004 2.307 83.2170737 3.025 106.36772309999998 3.049 81.48565699999997 2.674 128.47860169999993 3.962 93.48676889999999 11.07)
Error minima by case: (0.0454 8 35.6278 1 0.0 0 71.0 1 25.7346 2 41.6278 2 22.6278 1 0.0 0 0.0 0 8.0 2 11.232 9 0.0 0 0.0 0 22.2054 8 5.0 1 33.4552 1 17.5366 2 0.0 0 28.6278 2 13.9384 1 0.0 0 0.053 1 2.0 1 28.6278 2 0.2114 2)
Average genome size in population (length): 42.691
Average program size in population (points): 43.691
Average percent parens in population: 0.023
Minimum age in population: 209.8926857784293
Maximum age in population: 215.2865041077904
Average age in population: 213.3846698481568
Median age in population: 213.3739201071587
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.074
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 89649616
--- Timings ---
Current time: 1529616412555 milliseconds
Total Time:         441.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.9 seconds, 46.0%
Fitness Testing:    195.5 seconds, 44.3%
Report:              42.5 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_add} {:instruction float_flush} {:instruction float_inc} {:instruction float_add} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_add} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_div integer_add float_flush float_inc float_add integer_sub integer_min integer_add in1 float_inc float_inc float_inc 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3019.4675477
Median total errors in population: 1315.0
Error averages by case: (140.5940267 12.075 140.0255066 3.87 87.7055346 10.819 157.11892110000005 3.342 127.7639158 4.068 144.51038309999998 3.941 128.35464990000003 2.413 75.0586028 1.579 83.443301 11.986 99.14018850000002 4.074 105.97585719999996 12.988 81.5895006 2.354 70.94456299999997 2.182 169.63977449999993 12.133 107.86481549999996 3.017 176.5738934 13.646 107.56207710000001 3.214 77.50779250000001 2.2 133.1421226 3.906 147.14508070000005 2.336 88.21518420000001 3.0 111.14869750000001 3.022 87.05496940000002 2.595 132.8268568 3.949 98.78133260000001 11.071)
Error minima by case: (0.6068 8 3.5616 1 0.1421 1 3.2091 1 7.5027 2 39.9141 2 23.6278 1 0.0 0 0.0 0 10.0 2 3.6807 8 0.0 0 0.0 0 41.4976 8 4.0929 1 100.0 1 5.7095 2 0.0 0 2.0669 1 48.2935 1 2.0 1 0.5712 1 4.0 1 13.0106 2 0.0154 1)
Average genome size in population (length): 42.899
Average program size in population (points): 43.899
Average percent parens in population: 0.023
Minimum age in population: 211.8603036451809
Maximum age in population: 216.7862178270123
Average age in population: 214.7732561329393
Median age in population: 214.8047830767688
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.724
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.724
Total error diversity:				 0.066
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 90722141
--- Timings ---
Current time: 1529616415818 milliseconds
Total Time:         444.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       204.2 seconds, 46.0%
Fitness Testing:    197.0 seconds, 44.3%
Report:              42.9 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_add} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_dec} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_div integer_add float_flush integer_fromfloat float_pop integer_sub integer_min integer_add float_dup_times integer_dec tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2475.8617005
Median total errors in population: 1315.0
Error averages by case: (118.24004780000006 12.065 119.29737339999998 3.773 63.72972040000001 10.852 136.639164 3.192 106.24479469999997 3.91 123.4717379999999 3.807 107.59426550000003 2.249 52.31091679999998 1.402 62.48168010000001 11.974 77.2171587 3.934 85.75254409999998 12.977 58.33713099999999 2.201 49.97233069999998 2.053 149.09766149999993 12.074 86.92409699999995 2.894 157.28279869999997 13.672 85.56234390000002 3.107 54.71005400000001 2.038 112.05193400000005 3.734 125.02692390000004 2.097 65.80972260000004 2.876 89.30914319999995 2.889 64.87026770000001 2.423 111.67800559999995 3.81 75.1868832 11.06)
Error minima by case: (0.7695 9 38.6278 1 1.6278 1 77.0 2 30.0196 2 44.6278 2 25.6278 1 0.0 0 3.2009 8 14.0 2 5.0414 8 1.0 1 0.0 0 17.9204 8 7.7343 1 37.7402 2 6.239 2 0.0 0 31.6278 2 18.2234 1 5.9858 1 2.0523 1 1.3595 1 31.6278 2 0.3722 9)
Average genome size in population (length): 42.827
Average program size in population (points): 43.827
Average percent parens in population: 0.023
Minimum age in population: 212.8603036451809
Maximum age in population: 218.3077069364872
Average age in population: 216.2503050434959
Median age in population: 216.2866736469109
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.708
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.708
Total error diversity:				 0.065
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 91792866
--- Timings ---
Current time: 1529616419186 milliseconds
Total Time:         447.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.7 seconds, 46.0%
Fitness Testing:    198.6 seconds, 44.4%
Report:              43.3 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction tagged_896} {:instruction print_float} {:instruction integer_sub} {:instruction integer_add} {:instruction print_float} {:instruction tag_float_479} {:instruction integer_flush} {:instruction 35.372239689310504} {:instruction in1} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (print_integer tagged_896 print_float integer_sub integer_add print_float tag_float_479 integer_flush 35.372239689310504 in1 integer_swap float_shove integer_min integer_swap integer_mult integer_swap integer_mult float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2624.6197184999996
Median total errors in population: 1315.0
Error averages by case: (125.11182280000001 12.136 125.92836740000001 3.757 70.8009954 10.878 141.753816 3.211 111.7933056 3.902 130.29171069999995 3.788 114.12577490000001 2.299 58.532459099999976 1.463 66.14220470000001 11.974 82.76341410000002 3.918 89.57635960000002 13.001 65.12165699999997 2.229 53.84207239999999 2.056 154.95489349999997 12.13 91.40720319999996 2.898 161.27748029999998 13.501 92.22879460000004 3.147 61.7517667 2.081 118.86980280000004 3.758 131.20679400000003 2.134 72.57943970000004 2.901 95.59696289999997 2.903 70.55011300000002 2.589 118.48253059999996 3.789 82.3859775 11.101)
Error minima by case: (0.293 9 4.5616 1 0.092 1 7.7909 1 18.5027 2 11.0859 1 7.7517 1 0.0 0 0.8705 1 6.0 2 3.6807 9 0.0 0 0.0 0 21.3368 8 5.1065 1 12.56 1 16.5366 2 0.0 0 2.0669 2 14.807 1 1.0 1 0.5712 1 2.3074 1 2.0106 2 0.4198 8)
Average genome size in population (length): 42.72
Average program size in population (points): 43.72
Average percent parens in population: 0.023
Minimum age in population: 214.8279215119324
Maximum age in population: 219.6523920963154
Average age in population: 217.7116051023797
Median age in population: 217.7835667187749
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.745
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.745
Total error diversity:				 0.077
Error (vector) diversity:			 0.084
Behavioral diversity:				 0.085
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 92860916
--- Timings ---
Current time: 1529616422541 milliseconds
Total Time:         451.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       207.1 seconds, 45.9%
Fitness Testing:    200.2 seconds, 44.4%
Report:              43.6 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction tag_integer_862} {:instruction float_add} {:instruction integer_min} {:instruction in1} {:instruction float_pop} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap integer_yankdup tag_integer_862 float_add integer_min in1 float_pop integer_sub float_inc float_inc float_frominteger integer_sub float_inc integer_min in1 float_inc float_inc float_inc float_inc float_inc float_inc integer_rot integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2814.6196734999994
Median total errors in population: 1315.0
Error averages by case: (132.70384880000003 12.072 133.3319282 3.849 77.9926564 10.88 150.01251879999998 3.294 120.2195831 3.994 137.5806437 3.874 121.66129120000001 2.371 67.05575550000002 1.523 73.4079359 11.948 91.4405193 4.013 96.481558 12.992 72.8527329 2.311 61.08203429999999 2.113 162.075878 12.134 98.60618749999999 2.974 168.1259143 13.687 99.804252 3.192 69.69463490000001 2.152 126.31078240000004 3.841 138.5268805 2.235 80.4162297 2.977 103.09158129999997 2.983 77.4525188 2.522 125.9123623 3.887 89.89444569999999 11.067)
Error minima by case: (0.0363 8 37.6278 1 0.092 1 69.0 1 38.0 2 43.6278 1 24.6278 1 0.0 0 0.0 0 6.0 2 12.1031 9 0.0 0 0.0 0 25.8577 8 5.9672 1 18.0381 1 19.0 1 0.0 0 30.6278 2 60.0 1 1.0 1 0.448 1 1.8901 1 30.6278 2 0.414 8)
Average genome size in population (length): 43.07
Average program size in population (points): 44.07
Average percent parens in population: 0.023
Minimum age in population: 216.8682663255342
Maximum age in population: 220.9925687841974
Average age in population: 219.1614804020641
Median age in population: 219.1710837671855
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.744
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.744
Total error diversity:				 0.073
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 93937666
--- Timings ---
Current time: 1529616425702 milliseconds
Total Time:         454.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.4 seconds, 45.9%
Fitness Testing:    201.7 seconds, 44.4%
Report:              43.9 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction float_inc} {:instruction float_inc} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (float_add integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 float_inc float_inc float_frominteger integer_sub float_inc integer_min in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2870.7413475000008
Median total errors in population: 1315.0
Error averages by case: (133.37997580000004 12.08 134.9626357 3.899 79.88828279999998 10.796 151.89991 3.425 122.12679029999993 4.11 139.1169146999999 3.999 123.28800950000007 2.487 69.1796229 1.682 77.17466270000003 11.955 93.44229449999996 4.141 100.48887159999995 12.964 74.19359690000002 2.436 64.99704569999999 2.261 164.13750299999995 12.126 101.63923159999993 3.092 171.61970689999995 13.551 101.67035280000002 3.299 71.71247669999998 2.273 127.9192733000001 3.956 140.21494540000006 2.424 82.35230649999995 3.056 105.22654869999997 3.071 80.79054680000002 2.709 127.49595609999993 4.014 90.88488659999996 11.133)
Error minima by case: (0.6685 8 36.6278 1 0.1421 1 72.0 1 41.0 2 42.6278 2 23.6278 1 0.0 0 0.0 0 9.0 2 10.6817 9 0.0 0 0.0 0 24.8205 9 6.7343 1 99.0 1 16.5366 2 0.0 0 29.6278 2 4.3231 1 1.0 1 0.4156 1 3.6278 1 29.6278 2 0.47 8)
Average genome size in population (length): 43.413
Average program size in population (points): 44.413
Average percent parens in population: 0.023
Minimum age in population: 217.9007876332193
Maximum age in population: 222.6241904916785
Average age in population: 220.6174764298829
Median age in population: 220.6881439346727
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.735
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.735
Total error diversity:				 0.078
Error (vector) diversity:			 0.085
Behavioral diversity:				 0.085
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 95023041
--- Timings ---
Current time: 1529616429036 milliseconds
Total Time:         457.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       209.7 seconds, 45.8%
Fitness Testing:    203.4 seconds, 44.5%
Report:              44.3 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction float_swap} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_mod integer_yankdup integer_swap float_shove integer_min float_swap integer_swap tagged_74 35.372239689310504 in1 float_inc float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2943.9995445
Median total errors in population: 1315.0
Error averages by case: (136.67716660000005 12.127 136.83005149999997 3.925 84.2669909 10.896 153.51465059999998 3.379 124.03795199999996 4.091 141.05798839999994 4.012 125.20242980000006 2.501 71.49307920000001 1.646 82.03078550000001 12.001 95.4449172 4.096 104.05575359999995 13.027 77.79888449999999 2.395 69.99196339999997 2.232 165.90961549999992 12.179 107.11579909999999 3.062 176.0921689 13.544 103.60380250000003 3.313 73.5883028 2.272 129.7626619000001 3.975 143.53575940000005 2.365 84.2837623 3.074 107.04592019999996 3.089 85.1102662 2.731 129.40271059999995 4.02 95.02916189999998 11.165)
Error minima by case: (0.2277 8 6.5616 1 0.1544 1 6.2091 1 1.5027 2 33.9141 2 24.9846 1 0.0 0 1.0 1 9.0 2 13.623 10 0.0 0 0.0 0 56.7337 9 2.7343 1 99.0 1 12.5366 2 0.0 0 0.9331 2 51.2935 1 0.9858 1 0.3611 1 2.291 1 7.0106 2 0.0824 9)
Average genome size in population (length): 43.704
Average program size in population (points): 44.704
Average percent parens in population: 0.023
Minimum age in population: 218.9007876332193
Maximum age in population: 224.2617720735939
Average age in population: 222.1020032887952
Median age in population: 222.1361902075539
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.735
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.735
Total error diversity:				 0.076
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 96115741
--- Timings ---
Current time: 1529616432446 milliseconds
Total Time:         460.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       211.1 seconds, 45.8%
Fitness Testing:    205.0 seconds, 44.5%
Report:              44.7 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_swap} {:instruction in1} {:instruction float_inc} {:instruction float_add} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction -54} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (print_integer integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap integer_mult integer_swap in1 float_inc float_add integer_min in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_mult float_inc integer_min in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 -54 float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2748.2236468
Median total errors in population: 1315.0
Error averages by case: (129.5088425 12.059 130.22192799999996 3.865 74.547082 10.785 147.0600109 3.367 117.12003839999998 4.032 134.54249019999997 3.924 118.6558035 2.435 64.3585283 1.616 71.8694623 11.91 88.47538770000001 4.056 95.64974710000001 12.972 70.1594899 2.362 59.88990919999999 2.189 159.75906439999991 12.103 96.63751689999998 3.014 166.32849199999998 13.571 96.92376890000003 3.241 66.63443510000002 2.179 123.15837 3.86 134.97041210000003 2.337 77.35065199999998 2.992 100.47940599999998 3.008 75.04043800000001 2.625 122.82213179999997 3.934 86.56723960000001 11.057)
Error minima by case: (0.3832 8 7.5616 1 0.4391 1 7.2091 1 2.5027 2 34.9141 1 25.6278 1 0.0 0 0.0 0 6.0 2 1.0512 8 0.0 0 0.0 0 41.8308 8 5.1065 1 96.0 1 18.4448 2 0.0 0 1.9331 2 52.2935 1 0.0 0 3.7584 1 0.336 1 8.0106 2 2.6278 2)
Average genome size in population (length): 43.873
Average program size in population (points): 44.873
Average percent parens in population: 0.023
Minimum age in population: 221.0019942214556
Maximum age in population: 225.7814661845674
Average age in population: 223.6079397365074
Median age in population: 223.6325926002207
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.745
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.745
Total error diversity:				 0.071
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 97212566
--- Timings ---
Current time: 1529616435709 milliseconds
Total Time:         464.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       212.5 seconds, 45.8%
Fitness Testing:    206.6 seconds, 44.5%
Report:              45.0 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_862} {:instruction float_add} {:instruction float_tan} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_71} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_min integer_mult integer_swap integer_mult integer_mult in1 float_inc float_inc float_inc tag_integer_862 float_add float_tan in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_71 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2761.1891828000003
Median total errors in population: 1315.0
Error averages by case: (130.11001790000003 12.102 129.9769034 3.77 76.2716583 10.842 147.23213359999994 3.24 117.48995919999997 3.958 134.4908803 3.831 118.12133700000003 2.307 64.1378899 1.475 73.32024410000001 11.969 88.4512646 3.967 96.17928089999998 12.974 70.6950846 2.25 61.163842399999986 2.093 159.7343916 12.124 98.61645809999999 2.922 168.89084620000003 13.555 96.6965074 3.142 66.4318572 2.094 123.01548290000002 3.811 136.53012159999997 2.233 77.2360672 2.908 100.40390919999999 2.917 77.6126336 2.565 122.67107949999998 3.85 87.70833209999998 11.102)
Error minima by case: (0.293 9 34.2118 1 0.5707 1 70.0 1 39.0 2 32.0232 2 21.2118 1 0.0 0 0.2175 1 7.0 2 8.7223 3 0.0 0 0.0 0 51.6043 2 5.2118 1 97.0 1 19.5366 1 0.0 0 27.2118 2 61.0 1 1.0 1 0.053 1 0.5617 1 27.2118 2 0.1318 8)
Average genome size in population (length): 43.935
Average program size in population (points): 44.935
Average percent parens in population: 0.023
Minimum age in population: 222.3149398058769
Maximum age in population: 226.9564554382719
Average age in population: 225.0456212498209
Median age in population: 225.1241264786119
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.734
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.734
Total error diversity:				 0.065
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 98311066
--- Timings ---
Current time: 1529616439117 milliseconds
Total Time:         467.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       214.0 seconds, 45.8%
Fitness Testing:    208.1 seconds, 44.5%
Report:              45.4 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction print_float} {:instruction print_float} {:instruction integer_sub} {:instruction integer_add} {:instruction -10} {:instruction tag_float_479} {:instruction integer_flush} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_mult} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (print_integer print_float print_float integer_sub integer_add -10 tag_float_479 integer_flush 35.372239689310504 in1 float_mult float_add integer_fromfloat float_frominteger integer_sub integer_dup integer_min in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2804.148745
Median total errors in population: 1315.0
Error averages by case: (131.17060730000003 12.063 132.87078229999997 3.861 77.66698120000002 10.872 148.90511859999998 3.35 118.97187769999998 4.054 136.96507649999992 3.921 121.1825454 2.387 65.93302530000001 1.588 74.24058580000003 11.957 90.33377360000003 4.05 97.06628129999999 12.976 72.06320939999998 2.357 61.8114253 2.186 161.03016429999994 12.108 98.95162269999996 3.022 168.52173079999997 13.629 99.33264440000005 3.238 69.00401049999999 2.181 125.78080130000006 3.878 137.6695369 2.284 79.83571660000001 3.011 102.45469359999997 3.017 78.32911250000002 2.592 125.37301769999998 3.921 89.08640400000003 11.095)
Error minima by case: (0.0363 8 38.6278 1 0.3822 1 69.0 2 28.0784 2 44.6278 1 25.6278 1 0.0 0 2.0 1 6.0 2 3.0924 7 0.9978 1 0.0 0 1.048 7 4.7343 1 35.7991 2 14.5366 2 0.0 0 31.6278 2 16.2823 1 0.0 0 0.448 1 0.4795 1 31.6278 2 0.3722 9)
Average genome size in population (length): 43.952
Average program size in population (points): 44.952
Average percent parens in population: 0.023
Minimum age in population: 224.0704613747933
Maximum age in population: 228.3027870458275
Average age in population: 226.5204051646884
Median age in population: 226.5835500721693
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.734
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.734
Total error diversity:				 0.068
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 99409866
--- Timings ---
Current time: 1529616442494 milliseconds
Total Time:         471.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.4 seconds, 45.7%
Fitness Testing:    209.6 seconds, 44.5%
Report:              45.8 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_dup} {:instruction integer_shove} {:instruction float_pop} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction integer_fromfloat} {:instruction integer_min} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (in1 float_inc float_inc integer_mult integer_swap integer_min integer_mult integer_shove integer_dup integer_shove float_pop integer_sub integer_min integer_add float_inc float_inc float_inc float_inc float_inc integer_sub float_inc integer_min in1 float_inc integer_fromfloat integer_min 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2633.0268027999996
Median total errors in population: 1315.0
Error averages by case: (124.80128130000003 12.065 125.35053719999999 3.751 70.21727390000001 10.808 142.01393789999997 3.206 112.07193239999995 3.932 129.8268163 3.794 113.490158 2.245 58.57418039999999 1.433 68.68794770000002 11.955 83.0033938 3.94 91.23517979999997 12.989 65.07180329999997 2.227 56.232505699999976 2.05 155.36176459999996 12.114 93.5605945 2.898 163.5338714 13.582 91.91795220000003 3.076 61.52115340000001 2.042 118.32493370000003 3.777 131.3165123 2.22 72.3682005 2.866 95.844471 2.877 71.50575110000003 2.49 117.98183789999997 3.803 82.01581249999998 11.057)
Error minima by case: (0.0454 8 9.4384 1 2.8114 1 9.7909 1 20.5027 2 43.6278 2 16.2483 1 0.0 0 0.0 0 9.0 2 13.8854 10 0.0 0 0.0 0 9.1586 8 4.8383 1 64.8192 1 1.9025 2 0.0 0 15.0669 2 35.2935 1 1.0 1 0.0436 1 4.9288 1 26.0106 2 1.2118 2)
Average genome size in population (length): 43.73
Average program size in population (points): 44.73
Average percent parens in population: 0.023
Minimum age in population: 225.3686936524735
Maximum age in population: 229.9284783304348
Average age in population: 227.9605590758218
Median age in population: 227.9895193696294
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.733
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.733
Total error diversity:				 0.072
Error (vector) diversity:			 0.078
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 100503216
--- Timings ---
Current time: 1529616445893 milliseconds
Total Time:         474.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.9 seconds, 45.7%
Fitness Testing:    211.2 seconds, 44.5%
Report:              46.1 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_add} {:instruction integer_div} {:instruction integer_shove} {:instruction integer_sub} {:instruction 1} {:instruction integer_dup_items} {:instruction float_shove} {:instruction float_dec} {:instruction in1} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_dec} {:instruction tag_integer_781} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_div integer_add integer_div integer_shove integer_sub 1 integer_dup_items float_shove float_dec in1 integer_sub float_dup_times integer_add float_dup_times integer_dec tag_integer_781 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3027.8617238
Median total errors in population: 1315.0
Error averages by case: (141.50830690000004 12.116 140.720711 3.808 88.38503900000002 10.83 157.24594159999998 3.285 128.06752439999997 4.011 145.4301893 3.876 128.97695160000004 2.376 75.32165049999999 1.558 82.50700000000003 11.952 99.22163460000002 4.009 105.41651549999999 13.02 82.26058330000001 2.314 70.0952952 2.137 170.45670789999994 12.161 107.13803069999994 2.974 175.7639423 13.592 108.3714763 3.194 78.33937859999997 2.149 133.9278725 3.856 147.8709566 2.308 89.08139739999999 2.965 112.0127232 2.98 87.27144960000003 2.601 133.67793389999997 3.89 99.76251189999999 11.068)
Error minima by case: (0.7479 7 4.4384 1 0.4805 1 4.7909 1 15.5027 2 31.6278 2 12.6278 1 0.0 0 1.0 1 7.0 2 0.3193 9 0.0 0 0.0 0 25.8205 9 3.3722 1 92.7767 1 16.5366 1 0.0 0 10.0669 1 40.2935 1 0.0 0 0.5586 1 1.0 1 18.6278 2 0.4198 1)
Average genome size in population (length): 43.575
Average program size in population (points): 44.575
Average percent parens in population: 0.023
Minimum age in population: 226.7493369564404
Maximum age in population: 231.3058211808513
Average age in population: 229.4158487903217
Median age in population: 229.4265517318068
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.719
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.719
Total error diversity:				 0.067
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.076
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 101592641
--- Timings ---
Current time: 1529616449534 milliseconds
Total Time:         477.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       218.4 seconds, 45.7%
Fitness Testing:    212.8 seconds, 44.5%
Report:              46.5 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction tagged_896} {:instruction print_float} {:instruction integer_sub} {:instruction integer_add} {:instruction print_float} {:instruction tag_float_479} {:instruction integer_flush} {:instruction 35.372239689310504} {:instruction in1} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_inc} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (print_integer tagged_896 print_float integer_sub integer_add print_float tag_float_479 integer_flush 35.372239689310504 in1 integer_swap float_shove integer_min integer_mod integer_mult integer_swap integer_mult float_inc float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2975.4919035999997
Median total errors in population: 1315.0
Error averages by case: (137.53642230000005 12.091 139.021444 3.935 84.43973119999998 10.771 155.27218580000007 3.432 125.57608659999998 4.132 143.1116028 3.98 127.41247040000002 2.514 72.91819649999998 1.707 82.81208840000001 11.976 97.11474559999999 4.132 104.90537129999998 12.996 78.31725010000004 2.45 70.36583929999998 2.277 167.54252739999995 12.147 106.9616197 3.095 175.4067263 13.648 105.92367930000005 3.334 75.89111179999999 2.274 131.99247080000004 3.94 143.9492271 2.372 86.63091699999995 3.087 109.31825209999997 3.086 85.21119730000004 2.718 131.59723289999997 3.983 95.09150759999999 11.095)
Error minima by case: (0.0454 8 22.3437 1 0.9781 1 70.0 1 19.3603 2 28.3437 2 9.3437 1 0.0 0 2.0 1 7.0 2 2.0683 9 0.0 0 0.0 0 12.3301 7 0.202 1 27.081 2 5.5366 1 0.0 0 15.3437 2 7.5642 1 1.0 1 0.5586 1 1.0154 1 15.3437 2 0.47 2)
Average genome size in population (length): 43.634
Average program size in population (points): 44.634
Average percent parens in population: 0.023
Minimum age in population: 228.2089719900497
Maximum age in population: 232.781011457028
Average age in population: 230.8467837174542
Median age in population: 230.8659827848446
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.73
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.73
Total error diversity:				 0.072
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 102683541
--- Timings ---
Current time: 1529616452963 milliseconds
Total Time:         481.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       219.9 seconds, 45.7%
Fitness Testing:    214.4 seconds, 44.5%
Report:              47.0 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_inc} {:instruction tagged_896} {:instruction print_float} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction in1} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_inc tagged_896 print_float integer_min integer_mult integer_swap tagged_74 35.372239689310504 in1 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 float_yank float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2816.6078659
Median total errors in population: 1315.0
Error averages by case: (130.64830190000004 12.075 132.9259448 3.935 77.78365039999997 10.791 149.09284630000005 3.44 119.15052959999993 4.141 136.98119569999994 3.994 121.30088760000002 2.499 66.3753058 1.704 75.98972700000002 11.952 90.70147219999997 4.148 98.53084149999994 12.962 72.1648896 2.442 63.803060799999976 2.293 161.0888215999999 12.12 100.81283999999994 3.119 169.86140019999996 13.604 99.50925830000004 3.319 69.35216699999998 2.293 125.82334630000005 3.956 137.8808358 2.404 80.08750359999998 3.08 102.41178739999997 3.093 78.94862780000001 2.701 125.36426229999995 4.017 88.84636239999996 11.09)
Error minima by case: (0.825 8 0.4384 1 1.0 1 0.7909 1 11.5027 2 43.6278 1 24.6278 1 0.0 0 0.2175 1 6.0 2 0.6807 7 0.0 0 0.0 0 4.9725 8 8.6278 1 26.4977 2 19.0 2 0.0 0 6.0669 2 6.9809 1 2.0 1 0.0436 1 2.291 1 17.0106 2 0.47 2)
Average genome size in population (length): 43.519
Average program size in population (points): 44.519
Average percent parens in population: 0.023
Minimum age in population: 229.677225977629
Maximum age in population: 234.0523209617039
Average age in population: 232.2246048163916
Median age in population: 232.2529688847147
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.725
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.725
Total error diversity:				 0.081
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.087
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 103771591
--- Timings ---
Current time: 1529616456361 milliseconds
Total Time:         484.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       221.4 seconds, 45.7%
Fitness Testing:    216.0 seconds, 44.5%
Report:              47.3 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_add} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_mult integer_swap float_yankdup float_inc float_add in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2788.3068043999992
Median total errors in population: 1315.0
Error averages by case: (130.32350070000004 12.083 131.85116189999997 3.884 76.68474659999998 10.788 147.99678100000006 3.391 118.00777849999999 4.075 135.9214153 3.942 120.14480410000004 2.456 65.28789629999999 1.661 74.70795530000001 11.949 89.39796199999998 4.08 97.13648279999998 12.948 71.24232749999997 2.408 62.51550879999997 2.222 160.16658779999997 12.107 99.49841079999996 3.035 169.00800750000005 13.536 98.32683090000003 3.284 67.98929249999999 2.237 124.75521230000003 3.909 136.74654130000008 2.353 78.78692439999996 3.026 101.3911485 3.051 77.9327492 2.742 124.3823633 3.962 87.8884151 11.087)
Error minima by case: (3.6829 8 26.6278 1 1.1607 1 73.0 1 15.2409 2 32.6278 2 13.6278 1 0.0 0 0.0 0 10.0 2 12.9376 9 0.0 0 0.0 0 0.0022 5 2.3722 1 55.6584 1 16.5366 2 0.0 0 19.6278 2 36.1416 1 2.0 1 1.0576 1 0.8901 1 5.8228 2 0.1173 2)
Average genome size in population (length): 43.572
Average program size in population (points): 44.572
Average percent parens in population: 0.023
Minimum age in population: 230.8964957063505
Maximum age in population: 235.7668945170639
Average age in population: 233.6716030435948
Median age in population: 233.7205940272288
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.73
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.73
Total error diversity:				 0.069
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.076
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 104860891
--- Timings ---
Current time: 1529616459741 milliseconds
Total Time:         488.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       222.9 seconds, 45.7%
Fitness Testing:    217.5 seconds, 44.5%
Report:              47.7 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.372239689310504} {:instruction float_inc} {:instruction integer_add} {:instruction float_sin} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (float_add integer_yankdup integer_swap float_shove integer_min integer_mult integer_swap tagged_74 35.372239689310504 float_inc integer_add float_sin tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2632.6051499
Median total errors in population: 1315.0
Error averages by case: (124.4254987 12.05 125.61787629999999 3.837 71.99856830000003 10.823 142.58265279999995 3.316 112.3619988 4.021 129.70660309999994 3.871 113.90728200000002 2.385 59.40565049999999 1.571 68.34404850000001 11.973 83.77198170000001 4.029 90.23696469999999 12.942 65.42043719999998 2.331 55.58591349999998 2.142 153.80654749999994 12.093 93.03787029999995 2.967 162.74658129999997 13.53 91.4422104 3.198 61.147225000000006 2.159 118.45653750000002 3.813 131.34414550000005 2.25 71.87876040000002 2.96 94.74502829999997 2.975 71.3675237 2.612 118.04173859999996 3.883 82.43750529999998 11.057)
Error minima by case: (0.5731 8 3.2555 1 0.301 1 6.2091 2 4.5027 2 9.2555 2 9.7445 1 0.0 0 2.0 8 7.2852 2 10.2673 8 1.0 1 0.0 0 0.4471 8 1.2657 1 20.5598 2 8.5366 2 0.0 0 0.9331 2 1.043 1 0.5061 1 1.0419 1 3.0 1 3.7445 2 0.8682 2)
Average genome size in population (length): 43.338
Average program size in population (points): 44.338
Average percent parens in population: 0.023
Minimum age in population: 232.2191177274957
Maximum age in population: 237.0382815841447
Average age in population: 235.1257747028393
Median age in population: 235.1798236012122
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.732
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.732
Total error diversity:				 0.075
Error (vector) diversity:			 0.082
Behavioral diversity:				 0.082
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 105944391
--- Timings ---
Current time: 1529616463034 milliseconds
Total Time:         491.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       224.3 seconds, 45.6%
Fitness Testing:    219.0 seconds, 44.6%
Report:              48.0 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction print_float} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_74} {:instruction 35.14207322080427} {:instruction in1} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank print_float integer_mult integer_div integer_yankdup integer_swap integer_min integer_min integer_mult integer_swap tagged_74 35.14207322080427 in1 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2778.6521795999993
Median total errors in population: 1315.0
Error averages by case: (129.20197220000003 12.088 130.62566179999996 3.903 76.82428589999999 10.837 147.4015447 3.389 117.42790159999997 4.104 134.71981299999996 3.928 119.010303 2.469 64.7237427 1.655 75.83349100000001 11.973 88.98976359999999 4.096 97.78928599999998 12.989 70.5078138 2.417 63.583732799999986 2.218 159.6882679999999 12.124 100.37157219999997 3.048 169.91847249999998 13.591 96.95767120000004 3.278 66.9693718 2.242 123.51075970000004 3.903 136.69994010000002 2.361 77.64491299999999 3.035 100.7490584 3.047 78.55345030000001 2.612 123.05103079999992 3.947 87.57035950000001 11.074)
Error minima by case: (0.0363 8 1.4384 1 0.8997 1 1.7909 1 4.5027 2 30.5985 2 24.2483 1 0.0 0 0.2175 1 7.0 2 1.0061 9 0.0 0 0.0 0 23.3238 9 0.202 1 28.2894 2 1.2823 1 0.0 0 0.9331 1 8.7726 1 0.9205 1 1.5885 1 4.0 1 10.0106 2 0.3722 1)
Average genome size in population (length): 43.223
Average program size in population (points): 44.223
Average percent parens in population: 0.023
Minimum age in population: 233.8047774142268
Maximum age in population: 238.4519016289427
Average age in population: 236.601753378518
Median age in population: 236.6339768312499
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.733
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.733
Total error diversity:				 0.079
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 107024966
--- Timings ---
Current time: 1529616466425 milliseconds
Total Time:         494.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.7 seconds, 45.6%
Fitness Testing:    220.6 seconds, 44.6%
Report:              48.4 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_shove} {:instruction float_sin} {:instruction integer_mult} {:instruction integer_swap} {:instruction tagged_116} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_mult} {:instruction integer_swap} {:instruction float_shove} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_sub} {:instruction integer_swap} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction float_shove} {:instruction float_div} {:instruction 35.07683307549159} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap float_shove float_sin integer_mult integer_swap tagged_116 35.372239689310504 in1 float_mult integer_swap float_shove float_dup_items float_inc float_sub integer_swap float_shove integer_min integer_mult float_shove float_div 35.07683307549159 in1 float_inc float_inc float_dup integer_swap float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2647.1622719
Median total errors in population: 1315.0
Error averages by case: (124.55377950000005 12.048 126.15426599999998 3.857 71.2208462 10.819 142.99922919999997 3.319 112.74650419999995 4.021 130.20853489999993 3.895 114.43321210000002 2.383 59.8514093 1.584 68.98871040000003 11.919 84.16402499999998 4.032 91.95325840000001 12.971 65.66209009999997 2.325 56.99262449999999 2.183 155.07998929999994 12.095 93.78208859999997 2.995 163.84096679999996 13.462 91.85727680000004 3.201 61.658674399999995 2.17 118.9917597000001 3.845 131.73883540000003 2.295 72.40388760000002 2.958 95.54580909999997 2.989 72.31953229999999 2.674 118.43393049999993 3.903 82.57403159999998 11.064)
Error minima by case: (0.2305 8 6.5616 1 0.1421 1 6.2091 1 4.5027 2 36.9141 2 25.6278 1 0.0 0 1.0 1 7.0 2 11.2673 9 0.0 0 0.0 0 21.8387 9 6.7343 1 33.8219 1 16.5366 1 0.0 0 0.9331 1 14.3051 1 0.0 0 0.5712 1 1.0 1 10.0106 2 1.9227 1)
Average genome size in population (length): 43.186
Average program size in population (points): 44.186
Average percent parens in population: 0.023
Minimum age in population: 234.8047774142268
Maximum age in population: 239.8924885264683
Average age in population: 238.0877027006682
Median age in population: 238.1199878355902
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.731
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.731
Total error diversity:				 0.076
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.083
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 108104641
--- Timings ---
Current time: 1529616469943 milliseconds
Total Time:         498.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       227.2 seconds, 45.6%
Fitness Testing:    222.3 seconds, 44.6%
Report:              48.8 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction print_float} {:instruction integer_mult} {:instruction integer_min} {:instruction integer_mult} {:instruction float_mod} {:instruction tagged_74} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank print_float integer_mult integer_min integer_mult float_mod tagged_74 float_dup_times integer_dec float_frominteger float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 3180.3704513
Median total errors in population: 1315.0
Error averages by case: (145.62495720000004 12.084 145.73780730000001 3.957 93.38379359999999 10.802 162.1792672 3.49 132.99205220000002 4.176 150.20330299999998 4.031 134.1820159 2.544 80.60654539999999 1.713 92.40434880000001 11.986 104.5649033 4.17 114.14812670000002 13.021 86.92515169999999 2.489 80.160052 2.287 175.32267139999993 12.168 116.88307430000002 3.116 185.02286119999997 13.678 113.74330249999997 3.334 83.77118750000001 2.294 138.91977560000004 4.001 152.25916670000004 2.438 94.52001399999999 3.111 117.21328580000001 3.139 95.0893441 2.683 138.64089889999997 4.027 104.03654500000003 11.097)
Error minima by case: (0.5368 7 6.5616 1 1.6859 1 6.2091 1 4.5027 2 36.9141 2 25.2118 1 0.0 0 0.0 0 8.0 2 7.3193 9 0.0 0 0.0 0 31.4373 9 0.5448 1 15.2233 1 8.5366 2 0.0 0 0.9331 2 31.7065 1 0.0 0 0.4544 1 2.0934 1 10.0106 2 1.2574 2)
Average genome size in population (length): 42.801
Average program size in population (points): 43.801
Average percent parens in population: 0.023
Minimum age in population: 237.1492599583596
Maximum age in population: 241.4870615512803
Average age in population: 239.5406118758492
Median age in population: 239.6120137127095
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.705
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.705
Total error diversity:				 0.063
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 109174691
--- Timings ---
Current time: 1529616473150 milliseconds
Total Time:         501.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.5 seconds, 45.6%
Fitness Testing:    223.8 seconds, 44.6%
Report:              49.2 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction integer_dup} {:instruction float_dup} {:instruction float_dup} {:instruction in1} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_dec} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_mult} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_9955} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_mod integer_dup float_dup float_dup in1 integer_add float_dup_times integer_dec tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc integer_mult integer_swap float_yankdup integer_dup_items float_add integer_mult in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_9955 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2603.2772311999997
Median total errors in population: 1315.0
Error averages by case: (122.43209690000005 12.102 124.9608792 3.851 68.66766129999999 10.774 141.17711780000002 3.287 110.97009529999991 3.985 129.07555169999995 3.885 113.44501990000005 2.407 57.61524269999999 1.553 66.2014406 11.98 82.155981 3.985 89.68499519999999 12.995 63.30059729999998 2.292 53.858535299999986 2.152 154.36695809999992 12.111 90.84071229999995 2.988 161.60775899999996 13.569 91.38892350000003 3.203 61.04069669999999 2.179 117.7958816000001 3.835 130.23027600000003 2.303 71.82642049999998 2.979 94.70924219999998 2.997 69.6039657 2.575 117.35219529999998 3.875 80.05098609999999 11.056)
Error minima by case: (0.0328 6 4.5616 1 0.0 0 4.2091 1 6.5027 2 36.6278 2 17.6278 1 0.0 0 0.0332 7 13.0 2 10.6817 9 0.0 0 0.0 0 45.4976 8 1.6278 1 39.5799 2 14.6303 2 0.0 0 1.0669 2 49.2935 1 3.0795 1 0.3656 1 1.3722 1 12.0106 2 0.1342 2)
Average genome size in population (length): 42.765
Average program size in population (points): 43.765
Average percent parens in population: 0.024
Minimum age in population: 238.59231372407
Maximum age in population: 242.8755191781522
Average age in population: 240.9796397083978
Median age in population: 241.0266863133015
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.705
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.705
Total error diversity:				 0.082
Error (vector) diversity:			 0.089
Behavioral diversity:				 0.089
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 110243916
--- Timings ---
Current time: 1529616476576 milliseconds
Total Time:         505.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       230.0 seconds, 45.5%
Fitness Testing:    225.3 seconds, 44.6%
Report:              49.5 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_div} {:instruction integer_min} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_197} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup integer_swap integer_div integer_min in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_add float_inc float_inc float_inc float_inc tag_integer_197 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 3406.5233987
Median total errors in population: 1315.0
Error averages by case: (154.80149330000006 12.077 155.13027259999998 4.072 101.79180029999998 10.857 171.03913860000006 3.634 142.10636409999998 4.332 159.28812989999997 4.121 143.84615410000006 2.684 91.05512780000004 1.912 100.15296740000002 12.002 114.4967451 4.342 122.30235729999997 13.018 96.80770100000005 2.649 88.32389189999998 2.465 183.76030589999988 12.169 124.62459489999999 3.27 192.05372269999998 13.692 123.4571179 3.448 93.65445299999998 2.444 148.32122760000004 4.102 160.36841769999998 2.594 104.28149559999996 3.231 126.34132499999997 3.232 102.93308270000001 2.843 147.93885340000003 4.136 113.2126589 11.108)
Error minima by case: (3.1338 9 3.5616 1 0.0797 1 3.2091 1 2.5027 2 15.4581 2 28.2118 1 0.0 0 0.0 0 7.0 2 1.6807 10 0.0 0 0.0 0 22.4373 9 1.2657 1 24.2233 1 8.5366 1 0.0 0 2.0669 1 35.587 1 0.0 0 0.0017 1 1.2375 1 8.0106 2 0.414 1)
Average genome size in population (length): 42.761
Average program size in population (points): 43.761
Average percent parens in population: 0.024
Minimum age in population: 239.804000668946
Maximum age in population: 244.5229235946465
Average age in population: 242.3769560686286
Median age in population: 242.3951714253096
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.727
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.727
Total error diversity:				 0.072
Error (vector) diversity:			 0.078
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 111313066
--- Timings ---
Current time: 1529616479923 milliseconds
Total Time:         508.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.5 seconds, 45.5%
Fitness Testing:    226.9 seconds, 44.6%
Report:              49.9 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_yank} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_sub} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_858} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction tag_integer_862} {:instruction float_add} {:instruction 35.372239689310504} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_51} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (float_add integer_yank integer_yankdup float_pop integer_sub integer_yank float_inc float_inc tagged_858 tag_integer_862 float_add 35.372239689310504 tag_integer_862 float_add 35.372239689310504 in1 float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_51 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2694.2591453
Median total errors in population: 1315.0
Error averages by case: (126.85250980000002 12.077 128.2910971 3.778 73.2296481 10.907 143.9188766 3.214 113.99950939999998 3.936 132.67192919999997 3.809 116.4756442 2.283 60.509458099999996 1.423 70.23156800000001 11.963 85.0018629 3.948 94.00454699999999 13.014 67.16317169999998 2.219 58.60973699999998 2.076 157.80245259999995 12.129 95.75751659999997 2.908 166.10274579999998 13.634 94.7422711 3.116 64.4272438 2.058 121.26881960000004 3.768 133.28033100000002 2.134 74.4672026 2.898 98.6191794 2.904 73.8725216 2.432 120.89561889999997 3.815 84.54468319999998 11.076)
Error minima by case: (0.9672 7 37.6278 1 0.177 1 69.0 2 38.0 2 21.0859 1 24.6278 1 0.0 0 0.0 0 6.0 2 3.4829 9 1.0 1 0.0 0 7.2271 8 3.7343 1 34.2233 1 2.6303 2 0.0 0 30.6278 2 43.3709 1 1.0 1 1.5883 1 1.0 1 30.6278 2 1.47 2)
Average genome size in population (length): 42.735
Average program size in population (points): 43.735
Average percent parens in population: 0.024
Minimum age in population: 241.5315881796641
Maximum age in population: 245.9251237697951
Average age in population: 243.787227597368
Median age in population: 243.8136564944499
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.702
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.702
Total error diversity:				 0.066
Error (vector) diversity:			 0.073
Behavioral diversity:				 0.074
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 112381541
--- Timings ---
Current time: 1529616483097 milliseconds
Total Time:         511.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       232.8 seconds, 45.5%
Fitness Testing:    228.4 seconds, 44.7%
Report:              50.2 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 57060.0
Test mean error for best: 28.53000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -72.7479372313
Correct output: 172.561551159  | Program output: 99.561551159  
Correct output: 13.439114403   | Program output: -4.560885597  
Correct output: -153.7909193035 | Program output: -63.7909193035
Correct output: -102.5026743292 | Program output: -43.5026743292
Correct output: 141.0859082546 | Program output: 62.0859082546 
Correct output: 172.2482707672 | Program output: 112.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: 16.1295085194 
Correct output: -105.1901476719 | Program output: -78.1901476719
Correct output: -11.6807030059 | Program output: 29.3192969941 
Correct output: -13.7752479931 | Program output: -23.7752479931
Correct output: 25.6838047231  | Program output: 22.6838047231 
Correct output: -54.5626932483 | Program output: 53.4373067517 
Correct output: 66.1064961654  | Program output: 22.1064961654 
Correct output: -110.2233087634 | Program output: 6.7766912366  
Correct output: 75.9088754934  | Program output: 115.9088754934
Correct output: 62.0044816678  | Program output: 69.0044816678 
Correct output: 152.9330618983 | Program output: 86.9330618983 
Correct output: -90.706511563  | Program output: -9.706511563  
Correct output: 64.3580372038  | Program output: 83.3580372038 
Correct output: 17.4418589273  | Program output: 62.4418589273 
Correct output: 23.1099363942  | Program output: 3.1099363942  
Correct output: 141.9894473185 | Program output: 75.9894473185 
Correct output: 15.8089845438  | Program output: -14.1910154562
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_shove} {:instruction integer_min} {:instruction tagged_74} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction in2} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_sub} {:instruction integer_sub} {:instruction in1} {:instruction float_mult} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_inc} {:instruction float_tan} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_46} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (float_add integer_yankdup float_tan integer_yankdup integer_dup_items float_shove integer_min tagged_74 in1 float_inc float_inc float_inc float_inc integer_swap in2 integer_yank float_stackdepth integer_shove integer_sub integer_sub in1 float_mult float_add integer_fromfloat float_frominteger integer_inc float_inc float_tan in1 float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_46 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [76.0 12 73.0 3 18.0 11 90.0 2 59.0 3 79.0 3 60.0 1 0.0 0 17.0 12 27.0 3 41.0 13 10.0 1 3.0 1 108.0 12 44.0 2 117.0 14 40.0 2 7.0 1 66.0 3 81.0 1 19.0 2 45.0 2 20.0 1 66.0 3 30.0 11]
Total: 1315.0
Mean: 26.3
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2899.8718759999997
Median total errors in population: 1315.0
Error averages by case: (134.92889550000004 12.066 135.46040109999998 3.888 81.80108079999998 10.799 152.6870329 3.37 123.00763029999996 4.093 139.74482069999996 3.952 123.79937970000002 2.435 70.10728380000002 1.63 79.40110410000004 11.974 94.43706969999998 4.09 102.25314659999997 12.986 75.97088070000001 2.402 66.91119969999998 2.214 165.40733389999994 12.123 103.41082979999997 3.044 173.30948889999996 13.682 102.59724620000003 3.259 72.51245489999998 2.217 128.46332160000006 3.896 141.307054 2.36 83.2418816 3.019 106.58294349999994 3.039 81.86245220000004 2.575 128.07287629999996 3.947 92.45506749999996 11.079)
Error minima by case: (1.5368 7 5.5616 1 0.1421 1 5.2091 1 5.5027 2 37.9141 2 23.6278 1 0.0 0 1.0 1 8.0 2 16.1539 8 0.0 0 0.0 0 20.0577 8 0.2657 1 82.2636 2 0.6004 2 0.0 0 0.0669 2 50.2935 1 0.0 0 0.5712 1 2.291 1 11.0106 2 0.2462 2)
Average genome size in population (length): 43.006
Average program size in population (points): 44.006
Average percent parens in population: 0.023
Minimum age in population: 242.5663003855575
Maximum age in population: 247.0542435309391
Average age in population: 245.2250778141885
Median age in population: 245.2672805896235
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.734
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.734
Total error diversity:				 0.069
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.075
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 113456841
--- Timings ---
Current time: 1529616486452 milliseconds
Total Time:         514.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.1 seconds, 45.5%
Fitness Testing:    229.9 seconds, 44.7%
Report:              50.6 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 22777.0
Test mean error for best: 11.38850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -27.7479372313
Correct output: 172.561551159  | Program output: 144.561551159 
Correct output: 13.439114403   | Program output: 35.439114403  
Correct output: -153.7909193035 | Program output: -131.7909193035
Correct output: -102.5026743292 | Program output: -80.5026743292
Correct output: 141.0859082546 | Program output: 107.0859082546
Correct output: 172.2482707672 | Program output: 157.2482707672
Correct output: -78.6254419982 | Program output: -56.6254419982
Correct output: -0.8704914806  | Program output: 21.1295085194 
Correct output: -105.1901476719 | Program output: -83.1901476719
Correct output: -11.6807030059 | Program output: 10.3192969941 
Correct output: -13.7752479931 | Program output: 8.2247520069  
Correct output: 25.6838047231  | Program output: 47.6838047231 
Correct output: -54.5626932483 | Program output: -32.5626932483
Correct output: 66.1064961654  | Program output: 67.1064961654 
Correct output: -110.2233087634 | Program output: -88.2233087634
Correct output: 75.9088754934  | Program output: 97.9088754934 
Correct output: 62.0044816678  | Program output: 84.0044816678 
Correct output: 152.9330618983 | Program output: 131.9330618983
Correct output: -90.706511563  | Program output: -68.706511563 
Correct output: 64.3580372038  | Program output: 86.3580372038 
Correct output: 17.4418589273  | Program output: 39.4418589273 
Correct output: 23.1099363942  | Program output: 45.1099363942 
Correct output: 141.9894473185 | Program output: 120.9894473185
Correct output: 15.8089845438  | Program output: 30.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 45} {:instruction tagged_896} {:instruction print_float} {:instruction integer_div} {:instruction integer_add} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (45 tagged_896 print_float integer_div integer_add float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc integer_yankdup float_inc float_inc float_inc float_inc print_float)
Errors: [31.0 13 28.0 2 22.0 2 22.0 2 22.0 2 34.0 2 15.0 2 22.0 2 22.0 12 22.0 3 22.0 12 22.0 10 22.0 2 22.0 2 1.0 1 22.0 3 22.0 2 22.0 2 21.0 2 22.0 2 22.0 2 22.0 2 22.0 2 21.0 2 15.0 2]
Total: 630.0
Mean: 12.6
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 3057.5867187999997
Median total errors in population: 1315.0
Error averages by case: (142.60434300000003 12.113 142.27546739999997 3.888 88.16769890000002 10.843 158.66613009999995 3.385 129.49232689999997 4.088 146.92831909999995 3.913 130.57929550000003 2.44 76.9284659 1.64 82.69378690000002 11.994 100.80967330000001 4.086 106.75358440000004 13.019 83.68855889999999 2.406 71.0171372 2.211 172.49809029999994 12.173 107.44547809999997 3.029 176.2254179 13.643 109.84319409999999 3.252 79.98697499999997 2.21 135.47678660000003 3.873 147.70661480000004 2.297 90.61752900000002 3.013 114.03631689999999 3.026 87.0819911 2.653 135.30278829999995 3.915 100.56174920000001 11.089)
Error minima by case: (0.293 8 3.5616 1 1.0 1 3.2091 1 7.5027 2 34.0 2 15.0 1 0.0 0 1.0 1 9.0 2 14.623 9 0.0 0 0.0 0 22.0 2 1.0 1 22.0 1 2.6004 2 0.0 0 2.0669 2 22.0 1 0.9858 1 0.244 1 0.6278 1 13.0106 2 0.4198 2)
Average genome size in population (length): 42.993
Average program size in population (points): 43.993
Average percent parens in population: 0.024
Minimum age in population: 243.7179251385745
Maximum age in population: 248.4964644610656
Average age in population: 246.665563941711
Median age in population: 246.7351871117003
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.744
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.744
Total error diversity:				 0.071
Error (vector) diversity:			 0.077
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 114531841
--- Timings ---
Current time: 1529616489885 milliseconds
Total Time:         518.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       235.7 seconds, 45.5%
Fitness Testing:    231.5 seconds, 44.7%
Report:              51.1 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 20046.0
Test mean error for best: 10.02300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -31.7479372313
Correct output: 172.561551159  | Program output: 140.561551159 
Correct output: 13.439114403   | Program output: 31.439114403  
Correct output: -153.7909193035 | Program output: -135.7909193035
Correct output: -102.5026743292 | Program output: -84.5026743292
Correct output: 141.0859082546 | Program output: 103.0859082546
Correct output: 172.2482707672 | Program output: 153.2482707672
Correct output: -78.6254419982 | Program output: -60.6254419982
Correct output: -0.8704914806  | Program output: 17.1295085194 
Correct output: -105.1901476719 | Program output: -87.1901476719
Correct output: -11.6807030059 | Program output: 6.3192969941  
Correct output: -13.7752479931 | Program output: 4.2247520069  
Correct output: 25.6838047231  | Program output: 43.6838047231 
Correct output: -54.5626932483 | Program output: -36.5626932483
Correct output: 66.1064961654  | Program output: 63.1064961654 
Correct output: -110.2233087634 | Program output: -92.2233087634
Correct output: 75.9088754934  | Program output: 93.9088754934 
Correct output: 62.0044816678  | Program output: 80.0044816678 
Correct output: 152.9330618983 | Program output: 127.9330618983
Correct output: -90.706511563  | Program output: -72.706511563 
Correct output: 64.3580372038  | Program output: 82.3580372038 
Correct output: 17.4418589273  | Program output: 35.4418589273 
Correct output: 23.1099363942  | Program output: 41.1099363942 
Correct output: 141.9894473185 | Program output: 116.9894473185
Correct output: 15.8089845438  | Program output: 26.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 45} {:instruction tagged_896} {:instruction print_float} {:instruction integer_div} {:instruction integer_add} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_618} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (45 tagged_896 print_float integer_div integer_add float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat float_inc float_inc tagged_618 integer_yankdup float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc float_inc print_float)
Errors: [35.0 12 32.0 2 18.0 2 18.0 2 18.0 3 38.0 2 19.0 2 18.0 2 18.0 12 18.0 3 18.0 13 18.0 10 18.0 2 18.0 2 3.0 1 18.0 3 18.0 2 18.0 2 25.0 2 18.0 2 18.0 2 18.0 2 18.0 2 25.0 2 11.0 2]
Total: 585.0
Mean: 11.7
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2906.4548989000004
Median total errors in population: 1315.0
Error averages by case: (136.29689520000005 12.09 136.79593759999997 3.887 81.70089689999999 10.685 153.23923499999998 3.399 123.89450059999996 4.109 141.01219609999995 3.926 125.16802380000004 2.52 71.9640158 1.683 76.45621120000001 11.947 95.60358699999999 4.096 99.8454444 12.949 78.05377510000001 2.498 64.9764907 2.24 164.87610039999996 12.045 101.43310259999998 3.045 169.55258629999997 13.375 103.71727770000004 3.301 74.2336653 2.281 129.82048110000008 3.903 141.35651450000006 2.402 84.62871029999998 3.057 107.15568639999994 3.062 80.5034586 2.753 129.49330559999996 3.94 94.49880069999999 10.985)
Error minima by case: (1.713 7 6.5616 1 0.9099 1 6.2091 1 4.5027 2 31.0 2 12.0 1 0.0 0 0.7051 1 7.0 2 7.0223 8 0.0 0 0.0 0 2.9439 2 0.0 0 18.0 1 10.9927 1 0.0 0 0.9331 2 10.7329 1 0.0 0 0.1279 1 2.4889 1 10.0106 2 0.6278 2)
Average genome size in population (length): 42.532
Average program size in population (points): 43.532
Average percent parens in population: 0.024
Minimum age in population: 245.5643585236351
Maximum age in population: 249.9514483786265
Average age in population: 248.1240672609289
Median age in population: 248.1505298171212
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.755
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.755
Total error diversity:				 0.083
Error (vector) diversity:			 0.09
Behavioral diversity:				 0.09
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 115595366
--- Timings ---
Current time: 1529616493354 milliseconds
Total Time:         521.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.2 seconds, 45.5%
Fitness Testing:    233.0 seconds, 44.7%
Report:              51.4 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 18055.0
Test mean error for best: 9.02750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: -34.7479372313
Correct output: 172.561551159  | Program output: 137.561551159 
Correct output: 13.439114403   | Program output: 28.439114403  
Correct output: -153.7909193035 | Program output: -138.7909193035
Correct output: -102.5026743292 | Program output: -87.5026743292
Correct output: 141.0859082546 | Program output: 100.0859082546
Correct output: 172.2482707672 | Program output: 150.2482707672
Correct output: -78.6254419982 | Program output: -63.6254419982
Correct output: -0.8704914806  | Program output: 14.1295085194 
Correct output: -105.1901476719 | Program output: -90.1901476719
Correct output: -11.6807030059 | Program output: 3.3192969941  
Correct output: -13.7752479931 | Program output: 1.2247520069  
Correct output: 25.6838047231  | Program output: 40.6838047231 
Correct output: -54.5626932483 | Program output: -39.5626932483
Correct output: 66.1064961654  | Program output: 60.1064961654 
Correct output: -110.2233087634 | Program output: -95.2233087634
Correct output: 75.9088754934  | Program output: 90.9088754934 
Correct output: 62.0044816678  | Program output: 77.0044816678 
Correct output: 152.9330618983 | Program output: 124.9330618983
Correct output: -90.706511563  | Program output: -75.706511563 
Correct output: 64.3580372038  | Program output: 79.3580372038 
Correct output: 17.4418589273  | Program output: 32.4418589273 
Correct output: 23.1099363942  | Program output: 38.1099363942 
Correct output: 141.9894473185 | Program output: 113.9894473185
Correct output: 15.8089845438  | Program output: 23.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 45} {:instruction tagged_896} {:instruction print_float} {:instruction integer_div} {:instruction integer_add} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction float_inc} {:instruction print_float})
Best program: (45 tagged_896 print_float integer_div integer_add float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc float_inc tag_integer_111 float_inc float_inc float_inc float_inc tag_integer_111 float_inc print_float)
Errors: [38.0 12 35.0 2 15.0 2 15.0 2 15.0 3 41.0 2 22.0 2 15.0 2 15.0 12 15.0 2 15.0 13 15.0 10 15.0 2 15.0 2 6.0 1 15.0 3 15.0 2 15.0 2 28.0 2 15.0 2 15.0 2 15.0 2 15.0 2 28.0 2 8.0 2]
Total: 551.0
Mean: 11.02
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2758.7971031999996
Median total errors in population: 1315.0
Error averages by case: (129.29635090000002 12.061 128.96937559999998 3.692 78.71404629999999 10.266 143.80279349999995 3.21 116.22609089999997 3.92 133.61285829999997 3.745 117.20901600000002 2.339 66.51733170000001 1.568 74.99836000000002 11.975 89.22660020000001 3.937 96.02402109999998 12.951 72.19163359999999 2.812 64.38558389999999 2.114 155.82139609999996 11.489 98.25671739999997 2.833 163.23034919999995 12.968 97.95637230000001 3.117 69.67608400000002 2.134 122.11107939999998 3.724 134.2970981 2.25 79.80267819999999 2.903 101.0364929 2.908 79.18591540000003 2.535 121.83529769999998 3.739 88.72356049999999 10.5)
Error minima by case: (0.0328 1 7.5616 1 0.1544 1 7.2091 1 3.5027 2 20.0 1 12.0 1 0.0 0 1.0 8 11.0 2 15.0 8 0.0 0 0.0 0 2.2292 1 0.0 0 15.0 2 15.0 1 0.0 0 1.9331 1 15.0 1 3.0 1 1.4599 1 4.0871 1 9.0106 1 0.173 1)
Average genome size in population (length): 42.971
Average program size in population (points): 43.971
Average percent parens in population: 0.023
Minimum age in population: 246.6220089655519
Maximum age in population: 251.5637229709718
Average age in population: 249.5865069977991
Median age in population: 249.650512951479
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.712
Total error diversity:				 0.075
Error (vector) diversity:			 0.082
Behavioral diversity:				 0.082
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 116669766
--- Timings ---
Current time: 1529616496590 milliseconds
Total Time:         525.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       238.5 seconds, 45.4%
Fitness Testing:    234.5 seconds, 44.7%
Report:              51.8 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 13461.0
Test mean error for best: 6.73050
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: 14.2520627687 
Correct output: 172.561551159  | Program output: 183.561551159 
Correct output: 13.439114403   | Program output: 24.439114403  
Correct output: -153.7909193035 | Program output: -142.7909193035
Correct output: -102.5026743292 | Program output: -91.5026743292
Correct output: 141.0859082546 | Program output: 152.0859082546
Correct output: 172.2482707672 | Program output: 183.2482707672
Correct output: -78.6254419982 | Program output: -67.6254419982
Correct output: -0.8704914806  | Program output: 10.1295085194 
Correct output: -105.1901476719 | Program output: -94.1901476719
Correct output: -11.6807030059 | Program output: -0.6807030059 
Correct output: -13.7752479931 | Program output: -2.7752479931 
Correct output: 25.6838047231  | Program output: 36.6838047231 
Correct output: -54.5626932483 | Program output: -43.5626932483
Correct output: 66.1064961654  | Program output: 77.1064961654 
Correct output: -110.2233087634 | Program output: -99.2233087634
Correct output: 75.9088754934  | Program output: 86.9088754934 
Correct output: 62.0044816678  | Program output: 73.0044816678 
Correct output: 152.9330618983 | Program output: 163.9330618983
Correct output: -90.706511563  | Program output: -79.706511563 
Correct output: 64.3580372038  | Program output: 75.3580372038 
Correct output: 17.4418589273  | Program output: 28.4418589273 
Correct output: 23.1099363942  | Program output: 34.1099363942 
Correct output: 141.9894473185 | Program output: 152.9894473185
Correct output: 15.8089845438  | Program output: 26.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction float_tan} {:instruction integer_shove} {:instruction float_pop} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_add} {:instruction float_flush} {:instruction in1} {:instruction integer_add} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_mod float_tan integer_shove float_pop integer_sub integer_yank integer_div integer_add float_flush in1 integer_add float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc print_float)
Errors: [11.0 2 11.0 2 11.0 2 11.0 2 11.0 3 11.0 2 11.0 2 11.0 2 11.0 11 11.0 3 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 3 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2]
Total: 337.0
Mean: 6.74
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2626.2620816000003
Median total errors in population: 1315.0
Error averages by case: (117.99911020000003 11.757 120.28518699999998 3.745 78.66435209999996 8.22 129.71038759999996 3.442 109.18354369999996 4.081 123.74593299999998 3.822 109.55607940000002 2.829 74.3527071 2.294 77.6380551 11.912 90.71110889999997 4.176 92.10197169999999 12.755 75.8129592 5.055 69.13254689999995 2.656 136.27311129999993 9.147 88.8690119 2.896 141.23327719999995 10.358 94.75961420000003 3.347 74.31496629999997 2.627 113.47716450000003 3.728 120.53707550000003 2.709 81.54972829999996 3.159 96.14468299999996 3.18 79.31008770000003 2.96 112.93359629999995 3.807 84.8428235 8.461)
Error minima by case: (0.3322 1 2.3722 1 0.0477 1 7.0 1 0.5027 2 0.3722 1 6.0 1 0.0 0 0.8781 8 7.0 2 1.0 1 1.0 1 0.0 0 7.0 1 0.0 0 7.0 2 2.0 1 0.0 0 1.9331 1 6.7065 1 1.9504 1 0.5366 1 0.1102 1 5.3828 1 0.0 0)
Average genome size in population (length): 42.765
Average program size in population (points): 43.765
Average percent parens in population: 0.023
Minimum age in population: 248.2672524831823
Maximum age in population: 252.863212606779
Average age in population: 251.114997886642
Median age in population: 251.1948653241839
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 67
Genome diversity (% unique Plush genomes):	 0.692
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 67
Syntactic diversity (% unique Push programs):	 0.692
Total error diversity:				 0.132
Error (vector) diversity:			 0.139
Behavioral diversity:				 0.139
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 117739091
--- Timings ---
Current time: 1529616499960 milliseconds
Total Time:         528.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       240.0 seconds, 45.4%
Fitness Testing:    236.1 seconds, 44.7%
Report:              52.2 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 13461.0
Test mean error for best: 6.73050
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: 14.2520627687 
Correct output: 172.561551159  | Program output: 183.561551159 
Correct output: 13.439114403   | Program output: 24.439114403  
Correct output: -153.7909193035 | Program output: -142.7909193035
Correct output: -102.5026743292 | Program output: -91.5026743292
Correct output: 141.0859082546 | Program output: 152.0859082546
Correct output: 172.2482707672 | Program output: 183.2482707672
Correct output: -78.6254419982 | Program output: -67.6254419982
Correct output: -0.8704914806  | Program output: 10.1295085194 
Correct output: -105.1901476719 | Program output: -94.1901476719
Correct output: -11.6807030059 | Program output: -0.6807030059 
Correct output: -13.7752479931 | Program output: -2.7752479931 
Correct output: 25.6838047231  | Program output: 36.6838047231 
Correct output: -54.5626932483 | Program output: -43.5626932483
Correct output: 66.1064961654  | Program output: 77.1064961654 
Correct output: -110.2233087634 | Program output: -99.2233087634
Correct output: 75.9088754934  | Program output: 86.9088754934 
Correct output: 62.0044816678  | Program output: 73.0044816678 
Correct output: 152.9330618983 | Program output: 163.9330618983
Correct output: -90.706511563  | Program output: -79.706511563 
Correct output: 64.3580372038  | Program output: 75.3580372038 
Correct output: 17.4418589273  | Program output: 28.4418589273 
Correct output: 23.1099363942  | Program output: 34.1099363942 
Correct output: 141.9894473185 | Program output: 152.9894473185
Correct output: 15.8089845438  | Program output: 26.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction float_tan} {:instruction integer_shove} {:instruction float_pop} {:instruction integer_sub} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_add} {:instruction float_flush} {:instruction in1} {:instruction integer_add} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_111} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction print_float})
Best program: (integer_mod float_tan integer_shove float_pop integer_sub integer_yank integer_div integer_add float_flush in1 integer_add float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc float_inc float_inc tag_integer_111 integer_yankdup float_inc float_inc print_float)
Errors: [11.0 2 11.0 2 11.0 2 11.0 2 11.0 3 11.0 2 11.0 2 11.0 2 11.0 11 11.0 3 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 3 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2 11.0 2]
Total: 337.0
Mean: 6.74
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 1896.1940168000012
Median total errors in population: 617.0
Error averages by case: (81.06115360000004 10.884 84.14257939999993 3.319 64.87181369999999 3.988 82.2221202 3.354 76.0139645 4.015 86.17847079999994 3.416 74.86617289999997 3.221 70.25258989999999 3.125 62.861425900000015 11.672 74.02048070000002 4.157 65.32164330000002 12.329 65.71715429999995 9.061 60.33238389999996 3.156 76.92017629999995 4.082 53.52406329999995 2.501 79.60415960000002 4.974 68.4147246 3.218 63.57200800000001 3.098 77.55557630000001 3.285 77.01014950000005 3.096 65.13992770000002 3.133 67.04985669999994 3.181 63.90969600000002 3.2 76.71920629999997 3.443 61.91651940000003 4.088)
Error minima by case: (0.2044 1 0.0 0 0.1373 1 3.2091 1 1.4973 2 1.0 1 7.0 1 0.0 0 0.042 1 7.0 2 1.0 1 1.4724 1 0.0 0 0.8746 1 0.0 0 7.0 1 2.0 1 0.0045 1 1.0669 1 7.0 1 1.0 1 0.1262 1 1.1524 1 0.6969 1 0.0 0)
Average genome size in population (length): 41.69
Average program size in population (points): 42.69
Average percent parens in population: 0.024
Minimum age in population: 250.2580629243789
Maximum age in population: 254.5733541985319
Average age in population: 252.6898890111714
Median age in population: 252.7419650167075
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 73
Genome diversity (% unique Plush genomes):	 0.567
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 73
Syntactic diversity (% unique Push programs):	 0.567
Total error diversity:				 0.162
Error (vector) diversity:			 0.168
Behavioral diversity:				 0.168
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 118781816
--- Timings ---
Current time: 1529616503165 milliseconds
Total Time:         531.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       241.4 seconds, 45.4%
Fitness Testing:    237.6 seconds, 44.7%
Report:              52.5 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 3315.0
Test mean error for best: 1.65750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: 5.2520627687  
Correct output: 172.561551159  | Program output: 174.561551159 
Correct output: 13.439114403   | Program output: 15.439114403  
Correct output: -153.7909193035 | Program output: -151.7909193035
Correct output: -102.5026743292 | Program output: -100.5026743292
Correct output: 141.0859082546 | Program output: 143.0859082546
Correct output: 172.2482707672 | Program output: 174.2482707672
Correct output: -78.6254419982 | Program output: -76.6254419982
Correct output: -0.8704914806  | Program output: 1.1295085194  
Correct output: -105.1901476719 | Program output: -103.1901476719
Correct output: -11.6807030059 | Program output: -9.6807030059 
Correct output: -13.7752479931 | Program output: -11.7752479931
Correct output: 25.6838047231  | Program output: 27.6838047231 
Correct output: -54.5626932483 | Program output: -52.5626932483
Correct output: 66.1064961654  | Program output: 68.1064961654 
Correct output: -110.2233087634 | Program output: -108.2233087634
Correct output: 75.9088754934  | Program output: 77.9088754934 
Correct output: 62.0044816678  | Program output: 64.0044816678 
Correct output: 152.9330618983 | Program output: 154.9330618983
Correct output: -90.706511563  | Program output: -88.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 19.4418589273 
Correct output: 23.1099363942  | Program output: 25.1099363942 
Correct output: 141.9894473185 | Program output: 143.9894473185
Correct output: 15.8089845438  | Program output: 17.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction float_pop} {:instruction float_yank} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction integer_fromfloat} {:instruction tag_integer_111} {:instruction float_inc} {:instruction print_float})
Best program: (integer_yank integer_yankdup float_pop float_yank in1 float_inc float_inc integer_add float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat tag_integer_111 float_inc print_float)
Errors: [2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 12 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1]
Total: 89.0
Mean: 1.78
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1928.4524622000008
Median total errors in population: 562.0
Error averages by case: (83.39547600000004 9.233 85.84656599999995 3.432 66.90755559999997 3.385 81.12036400000002 3.499 76.72042679999998 4.271 86.87510399999995 3.599 78.28108230000002 3.343 74.92385089999999 3.392 64.146988 11.768 75.95613200000004 4.258 65.53013019999999 11.086 67.63425769999992 8.465 64.57681669999998 3.369 73.84139189999996 3.597 59.54587689999997 2.951 76.89200629999999 4.269 68.310723 3.361 65.71512580000002 3.288 80.1576478 3.322 76.25699500000006 3.373 65.79802070000001 3.295 67.28244409999994 3.363 66.11848930000001 3.386 79.269585 3.52 63.21040620000005 3.314)
Error minima by case: (0.0 0 2.0 1 0.5968 1 2.0 1 2.0 1 0.0 0 2.0 1 0.0 0 1.1615 1 2.0 1 1.0 1 2.0 1 2.0 1 2.0 1 0.0 0 2.0 1 0.0 0 0.0 0 2.0 1 1.059 1 0.0 0 0.0696 1 0.1524 1 1.6172 1 0.0 0)
Average genome size in population (length): 37.585
Average program size in population (points): 38.585
Average percent parens in population: 0.027
Minimum age in population: 251.934825666748
Maximum age in population: 255.9664013632837
Average age in population: 254.2387420963374
Median age in population: 254.3062859425966
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 44
Genome diversity (% unique Plush genomes):	 0.552
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.552
Total error diversity:				 0.179
Error (vector) diversity:			 0.185
Behavioral diversity:				 0.186
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 119721766
--- Timings ---
Current time: 1529616506383 milliseconds
Total Time:         534.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       242.7 seconds, 45.4%
Fitness Testing:    239.1 seconds, 44.7%
Report:              52.9 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 3315.0
Test mean error for best: 1.65750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: 5.2520627687  
Correct output: 172.561551159  | Program output: 174.561551159 
Correct output: 13.439114403   | Program output: 15.439114403  
Correct output: -153.7909193035 | Program output: -151.7909193035
Correct output: -102.5026743292 | Program output: -100.5026743292
Correct output: 141.0859082546 | Program output: 143.0859082546
Correct output: 172.2482707672 | Program output: 174.2482707672
Correct output: -78.6254419982 | Program output: -76.6254419982
Correct output: -0.8704914806  | Program output: 1.1295085194  
Correct output: -105.1901476719 | Program output: -103.1901476719
Correct output: -11.6807030059 | Program output: -9.6807030059 
Correct output: -13.7752479931 | Program output: -11.7752479931
Correct output: 25.6838047231  | Program output: 27.6838047231 
Correct output: -54.5626932483 | Program output: -52.5626932483
Correct output: 66.1064961654  | Program output: 68.1064961654 
Correct output: -110.2233087634 | Program output: -108.2233087634
Correct output: 75.9088754934  | Program output: 77.9088754934 
Correct output: 62.0044816678  | Program output: 64.0044816678 
Correct output: 152.9330618983 | Program output: 154.9330618983
Correct output: -90.706511563  | Program output: -88.706511563 
Correct output: 64.3580372038  | Program output: 66.3580372038 
Correct output: 17.4418589273  | Program output: 19.4418589273 
Correct output: 23.1099363942  | Program output: 25.1099363942 
Correct output: 141.9894473185 | Program output: 143.9894473185
Correct output: 15.8089845438  | Program output: 17.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 45} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_swap} {:instruction integer_flush} {:instruction in1} {:instruction tag_integer_862} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction integer_fromfloat} {:instruction tag_integer_111} {:instruction float_inc} {:instruction print_float})
Best program: (45 integer_min integer_mult integer_swap integer_flush in1 tag_integer_862 float_inc float_inc integer_add float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat tag_integer_111 float_inc print_float)
Errors: [2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 12 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1]
Total: 89.0
Mean: 1.78
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2154.382033600001
Median total errors in population: 456.0
Error averages by case: (91.95953050000004 7.346 94.73717469999997 3.463 76.06695059999996 3.477 87.66023679999996 3.621 83.68034619999995 4.378 94.88354439999998 3.79 89.67589800000002 3.411 82.2147708 3.35 74.88398830000004 11.694 83.71993349999997 4.362 75.60512489999998 7.163 76.52094979999998 5.191 75.15175049999996 3.418 81.35676369999996 3.704 76.85279719999998 3.361 84.64938399999997 4.163 77.68510690000001 3.439 75.38155039999995 3.242 90.62774720000006 3.44 82.94486770000003 3.411 75.91327179999998 3.356 76.20150259999996 3.429 75.8395923 3.534 89.86870739999996 3.546 73.7305434 3.281)
Error minima by case: (1.7767 1 0.0 0 0.506 1 2.0 1 2.0 1 1.0 1 1.0122 1 2.0 1 0.078 1 2.0 1 0.6807 1 2.0 1 1.3162 1 2.0 1 1.0448 1 2.0 1 2.0 1 0.0 0 2.0 1 2.0 1 0.0 0 1.5115 1 0.3722 1 2.0 1 0.0 0)
Average genome size in population (length): 33.853
Average program size in population (points): 34.853
Average percent parens in population: 0.030
Minimum age in population: 253.5465559489655
Maximum age in population: 257.4470788590974
Average age in population: 255.5565075114184
Median age in population: 255.5872180159198
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 94
Genome diversity (% unique Plush genomes):	 0.481
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 94
Syntactic diversity (% unique Push programs):	 0.481
Total error diversity:				 0.14
Error (vector) diversity:			 0.144
Behavioral diversity:				 0.145
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 120568291
--- Timings ---
Current time: 1529616509459 milliseconds
Total Time:         538.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.1 seconds, 45.4%
Fitness Testing:    240.5 seconds, 44.7%
Report:              53.2 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 2175.0
Test mean error for best: 1.08750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: 4.2520627687  
Correct output: 172.561551159  | Program output: 173.561551159 
Correct output: 13.439114403   | Program output: 14.439114403  
Correct output: -153.7909193035 | Program output: -152.7909193035
Correct output: -102.5026743292 | Program output: -101.5026743292
Correct output: 141.0859082546 | Program output: 142.0859082546
Correct output: 172.2482707672 | Program output: 173.2482707672
Correct output: -78.6254419982 | Program output: -77.6254419982
Correct output: -0.8704914806  | Program output: 0.1295085194  
Correct output: -105.1901476719 | Program output: -104.1901476719
Correct output: -11.6807030059 | Program output: -10.6807030059
Correct output: -13.7752479931 | Program output: -12.7752479931
Correct output: 25.6838047231  | Program output: 26.6838047231 
Correct output: -54.5626932483 | Program output: -53.5626932483
Correct output: 66.1064961654  | Program output: 67.1064961654 
Correct output: -110.2233087634 | Program output: -109.2233087634
Correct output: 75.9088754934  | Program output: 76.9088754934 
Correct output: 62.0044816678  | Program output: 63.0044816678 
Correct output: 152.9330618983 | Program output: 153.9330618983
Correct output: -90.706511563  | Program output: -89.706511563 
Correct output: 64.3580372038  | Program output: 65.3580372038 
Correct output: 17.4418589273  | Program output: 18.4418589273 
Correct output: 23.1099363942  | Program output: 24.1099363942 
Correct output: 141.9894473185 | Program output: 142.9894473185
Correct output: 15.8089845438  | Program output: 16.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction float_pop} {:instruction float_yank} {:instruction in1} {:instruction float_inc} {:instruction float_inc} {:instruction integer_add} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction integer_fromfloat} {:instruction tag_integer_111} {:instruction print_float})
Best program: (integer_yank integer_yankdup float_pop float_yank in1 float_inc float_inc integer_add float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat tag_integer_111 print_float)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 11 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 62.0
Mean: 1.24
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 1996.3288960000004
Median total errors in population: 337.0
Error averages by case: (77.74566600000004 3.949 81.66660389999997 3.004 72.8882974 3.108 81.64275939999996 3.263 78.83818329999995 4.012 80.86706269999996 3.057 80.49551410000001 3.024 78.03964160000004 2.956 69.13962480000002 11.538 78.22027889999998 3.987 71.62282 4.385 72.75667729999998 3.333 72.79572159999998 3.078 77.67459199999995 3.331 74.76344949999998 3.06 80.00598329999997 3.716 74.75031650000003 3.092 72.68533269999999 2.879 80.08583890000006 2.968 78.46272580000003 3.126 71.80421740000001 2.996 72.92148429999993 3.096 73.41049660000002 3.15 79.5803352 3.017 73.1302728 3.21)
Error minima by case: (0.3037 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 0.4561 1 1.0 1 0.0 0 1.0 1 1.0 1 1.0 1 0.2034 1 1.0 1 0.8935 1 1.0 1 1.0 1 0.3678 1 1.0 1 1.0 1 0.0 0 1.0 1 0.0 0 1.0 1 0.0 0)
Average genome size in population (length): 32.796
Average program size in population (points): 33.796
Average percent parens in population: 0.031
Minimum age in population: 254.5465559489655
Maximum age in population: 259.0278170585289
Average age in population: 256.952310206362
Median age in population: 256.996086085384
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 130
Genome diversity (% unique Plush genomes):	 0.472
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 130
Syntactic diversity (% unique Push programs):	 0.472
Total error diversity:				 0.114
Error (vector) diversity:			 0.116
Behavioral diversity:				 0.116
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 121388341
--- Timings ---
Current time: 1529616512512 milliseconds
Total Time:         541.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       245.4 seconds, 45.3%
Fitness Testing:    242.0 seconds, 44.7%
Report:              53.6 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 2175.0
Test mean error for best: 1.08750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: 4.2520627687  
Correct output: 172.561551159  | Program output: 173.561551159 
Correct output: 13.439114403   | Program output: 14.439114403  
Correct output: -153.7909193035 | Program output: -152.7909193035
Correct output: -102.5026743292 | Program output: -101.5026743292
Correct output: 141.0859082546 | Program output: 142.0859082546
Correct output: 172.2482707672 | Program output: 173.2482707672
Correct output: -78.6254419982 | Program output: -77.6254419982
Correct output: -0.8704914806  | Program output: 0.1295085194  
Correct output: -105.1901476719 | Program output: -104.1901476719
Correct output: -11.6807030059 | Program output: -10.6807030059
Correct output: -13.7752479931 | Program output: -12.7752479931
Correct output: 25.6838047231  | Program output: 26.6838047231 
Correct output: -54.5626932483 | Program output: -53.5626932483
Correct output: 66.1064961654  | Program output: 67.1064961654 
Correct output: -110.2233087634 | Program output: -109.2233087634
Correct output: 75.9088754934  | Program output: 76.9088754934 
Correct output: 62.0044816678  | Program output: 63.0044816678 
Correct output: 152.9330618983 | Program output: 153.9330618983
Correct output: -90.706511563  | Program output: -89.706511563 
Correct output: 64.3580372038  | Program output: 65.3580372038 
Correct output: 17.4418589273  | Program output: 18.4418589273 
Correct output: 23.1099363942  | Program output: 24.1099363942 
Correct output: 141.9894473185 | Program output: 142.9894473185
Correct output: 15.8089845438  | Program output: 16.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_yank} {:instruction integer_yankdup} {:instruction float_pop} {:instruction integer_add} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_mult} {:instruction 35.372239689310504} {:instruction in1} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction integer_fromfloat} {:instruction tag_integer_111} {:instruction float_inc} {:instruction print_float})
Best program: (float_add integer_yank integer_yankdup float_pop integer_add float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_mult 35.372239689310504 in1 integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat tag_integer_111 float_inc print_float)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 11 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 62.0
Mean: 1.24
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 1593.493688
Median total errors in population: 230.0
Error averages by case: (62.07313970000001 2.801 63.331836 2.441 58.472800699999965 2.679 65.5268006 2.896 62.822740599999975 3.457 62.24937350000002 2.42 63.10706619999997 2.466 61.97517679999995 2.384 55.302364799999985 11.73 61.91969079999999 3.242 58.56606960000002 3.329 59.28882279999991 2.815 57.39953149999997 2.703 62.45516009999996 2.991 58.99595149999999 2.755 64.28879699999999 3.238 60.08227149999998 2.74 57.591122899999995 2.37 62.354570300000006 2.419 62.6954301 3.002 56.83458969999999 2.604 58.61722269999995 2.759 58.17705879999997 2.738 61.98320520000002 2.449 59.02889460000002 2.926)
Error minima by case: (0.2832 1 1.0 1 0.3722 1 1.0 1 1.0 1 0.2863 1 1.0 1 1.0 1 0.0 0 1.0 1 0.3193 1 1.0 1 0.3162 1 1.0 1 0.1065 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 0.0 0 0.0696 1 0.3722 1 1.0 1 0.0 0)
Average genome size in population (length): 27.267
Average program size in population (points): 28.267
Average percent parens in population: 0.037
Minimum age in population: 255.9869658412627
Maximum age in population: 260.6139980451537
Average age in population: 258.6008318354615
Median age in population: 258.6393816970568
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 164
Genome diversity (% unique Plush genomes):	 0.427
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 164
Syntactic diversity (% unique Push programs):	 0.427
Total error diversity:				 0.087
Error (vector) diversity:			 0.087
Behavioral diversity:				 0.088
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 122070091
--- Timings ---
Current time: 1529616515584 milliseconds
Total Time:         544.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.8 seconds, 45.4%
Fitness Testing:    243.4 seconds, 44.7%
Report:              53.8 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: 3.2520627687  
Correct output: 172.561551159  | Program output: 172.561551159 
Correct output: 13.439114403   | Program output: 13.439114403  
Correct output: -153.7909193035 | Program output: -153.7909193035
Correct output: -102.5026743292 | Program output: -102.5026743292
Correct output: 141.0859082546 | Program output: 141.0859082546
Correct output: 172.2482707672 | Program output: 172.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -105.1901476719
Correct output: -11.6807030059 | Program output: -11.6807030059
Correct output: -13.7752479931 | Program output: -13.7752479931
Correct output: 25.6838047231  | Program output: 25.6838047231 
Correct output: -54.5626932483 | Program output: -54.5626932483
Correct output: 66.1064961654  | Program output: 66.1064961654 
Correct output: -110.2233087634 | Program output: -110.2233087634
Correct output: 75.9088754934  | Program output: 75.9088754934 
Correct output: 62.0044816678  | Program output: 62.0044816678 
Correct output: 152.9330618983 | Program output: 152.9330618983
Correct output: -90.706511563  | Program output: -90.706511563 
Correct output: 64.3580372038  | Program output: 64.3580372038 
Correct output: 17.4418589273  | Program output: 17.4418589273 
Correct output: 23.1099363942  | Program output: 23.1099363942 
Correct output: 141.9894473185 | Program output: 141.9894473185
Correct output: 15.8089845438  | Program output: 15.8089845438 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yankdup} {:instruction float_pop} {:instruction float_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction in2} {:instruction float_min} {:instruction tag_float_479} {:instruction integer_swap} {:instruction 35.372239689310504} {:instruction in1} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_add} {:instruction 35.372239689310504} {:instruction integer_fromfloat} {:instruction tag_integer_111} {:instruction integer_dup} {:instruction print_float})
Best program: (integer_yank integer_yankdup float_pop float_yank print_integer float_inc float_inc in2 float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat tag_integer_111 integer_dup print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1111.564863
Median total errors in population: 89.0
Error averages by case: (42.78835949999999 2.215 45.15240489999999 2.089 39.5518468 2.112 46.129239700000014 2.22 43.856763700000016 2.315 44.086301299999995 2.118 45.030268099999994 2.112 43.5767699 2.082 36.29494420000001 11.518 44.104899500000016 2.187 38.880104500000016 2.912 40.44299539999997 2.181 38.2589504 2.075 43.12291970000001 2.23 39.96103749999998 2.099 44.19150180000002 3.01 41.8317648 2.103 40.14597340000002 2.013 44.24726949999999 2.031 43.020050100000006 2.877 38.97298470000001 1.991 39.79074150000001 2.128 39.388256199999994 2.157 43.8210003 2.133 39.7705156 2.239)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 24.119
Average program size in population (points): 25.119
Average percent parens in population: 0.041
Minimum age in population: 257.3111917637836
Maximum age in population: 261.9400939984152
Average age in population: 260.0070722511632
Median age in population: 260.0244781142877
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 309
Genome diversity (% unique Plush genomes):	 0.388
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 309
Syntactic diversity (% unique Push programs):	 0.388
Total error diversity:				 0.059
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 122673141
--- Timings ---
Current time: 1529616518639 milliseconds
Total Time:         547.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       248.2 seconds, 45.4%
Fitness Testing:    244.7 seconds, 44.7%
Report:              54.1 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 176
Successful program: (integer_yank integer_yankdup float_pop float_yank print_integer float_inc float_inc in2 float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat tag_integer_111 integer_dup print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 24


Auto-simplifying with starting size: 24
step: 0
program: (integer_yank integer_yankdup float_pop float_yank print_integer float_inc float_inc in2 float_min tag_float_479 integer_swap 35.372239689310504 in1 in2 integer_inc integer_min float_frominteger float_add 35.372239689310504 integer_fromfloat tag_integer_111 integer_dup print_float)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 24

step: 500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 3.2520627687   | Program output: 3.2520627687  
Correct output: 172.561551159  | Program output: 172.561551159 
Correct output: 13.439114403   | Program output: 13.439114403  
Correct output: -153.7909193035 | Program output: -153.7909193035
Correct output: -102.5026743292 | Program output: -102.5026743292
Correct output: 141.0859082546 | Program output: 141.0859082546
Correct output: 172.2482707672 | Program output: 172.2482707672
Correct output: -78.6254419982 | Program output: -78.6254419982
Correct output: -0.8704914806  | Program output: -0.8704914806 
Correct output: -105.1901476719 | Program output: -105.1901476719
Correct output: -11.6807030059 | Program output: -11.6807030059
Correct output: -13.7752479931 | Program output: -13.7752479931
Correct output: 25.6838047231  | Program output: 25.6838047231 
Correct output: -54.5626932483 | Program output: -54.5626932483
Correct output: 66.1064961654  | Program output: 66.1064961654 
Correct output: -110.2233087634 | Program output: -110.2233087634
Correct output: 75.9088754934  | Program output: 75.9088754934 
Correct output: 62.0044816678  | Program output: 62.0044816678 
Correct output: 152.9330618983 | Program output: 152.9330618983
Correct output: -90.706511563  | Program output: -90.706511563 
Correct output: 64.3580372038  | Program output: 64.3580372038 
Correct output: 17.4418589273  | Program output: 17.4418589273 
Correct output: 23.1099363942  | Program output: 23.1099363942 
Correct output: 141.9894473185 | Program output: 141.9894473185
Correct output: 15.8089845438  | Program output: 15.8089845438 
;;******************************
