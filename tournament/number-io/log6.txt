Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[47.21820857951539 -33] 14.218208579515391]
Train Case:   1 | Input/Output: [[86.81790223072892 -42] 44.81790223072892]
Train Case:   2 | Input/Output: [[83.80327926215898 12] 95.80327926215898]
Train Case:   3 | Input/Output: [[58.094947345643675 -50] 8.094947345643675]
Train Case:   4 | Input/Output: [[16.849624690801264 -81] -64.15037530919874]
Train Case:   5 | Input/Output: [[19.13107616934684 8] 27.13107616934684]
Train Case:   6 | Input/Output: [[-43.46995928421713 9] -34.46995928421713]
Train Case:   7 | Input/Output: [[85.81358879658595 -23] 62.81358879658595]
Train Case:   8 | Input/Output: [[82.61233639815322 14] 96.61233639815322]
Train Case:   9 | Input/Output: [[27.719646591761872 19] 46.71964659176187]
Train Case:  10 | Input/Output: [[-1.2785304711291872 -58] -59.27853047112919]
Train Case:  11 | Input/Output: [[30.082584980667548 -37] -6.917415019332452]
Train Case:  12 | Input/Output: [[-28.437402044340928 -40] -68.43740204434093]
Train Case:  13 | Input/Output: [[-69.11696361290942 58] -11.116963612909416]
Train Case:  14 | Input/Output: [[-84.82725992973279 8] -76.82725992973279]
Train Case:  15 | Input/Output: [[-67.53066641354712 41] -26.530666413547124]
Train Case:  16 | Input/Output: [[-46.45788493984462 6] -40.45788493984462]
Train Case:  17 | Input/Output: [[-85.50333700339027 -39] -124.50333700339027]
Train Case:  18 | Input/Output: [[-0.7671793790917008 27] 26.2328206209083]
Train Case:  19 | Input/Output: [[-55.599071174298274 -74] -129.59907117429827]
Train Case:  20 | Input/Output: [[-5.824936873788062 -12] -17.82493687378806]
Train Case:  21 | Input/Output: [[13.182380134579546 -30] -16.817619865420454]
Train Case:  22 | Input/Output: [[26.563914795446948 -21] 5.563914795446948]
Train Case:  23 | Input/Output: [[59.796019736309404 -44] 15.796019736309404]
Train Case:  24 | Input/Output: [[43.76520561706772 -59] -15.234794382932279]
Test Case:   0 | Input/Output: [[13.859879411667023 -8] 5.859879411667023]
Test Case:   1 | Input/Output: [[-5.471941013661819 51] 45.52805898633818]
Test Case:   2 | Input/Output: [[-91.91141212349376 28] -63.91141212349376]
Test Case:   3 | Input/Output: [[8.655221618380395 -54] -45.344778381619605]
Test Case:   4 | Input/Output: [[67.58265385456642 -70] -2.4173461454335836]
Test Case:   5 | Input/Output: [[73.9740603901046 -85] -11.025939609895403]
Test Case:   6 | Input/Output: [[42.9930653715256 75] 117.9930653715256]
Test Case:   7 | Input/Output: [[-33.80778781327412 -25] -58.80778781327412]
Test Case:   8 | Input/Output: [[-4.121714127018919 -24] -28.12171412701892]
Test Case:   9 | Input/Output: [[71.42389015947015 -42] 29.423890159470147]
Test Case:  10 | Input/Output: [[-73.48444898561412 -89] -162.4844489856141]
Test Case:  11 | Input/Output: [[45.81462617160926 64] 109.81462617160926]
Test Case:  12 | Input/Output: [[31.511557109109503 -19] 12.511557109109503]
Test Case:  13 | Input/Output: [[-90.50268443514076 97] 6.497315564859235]
Test Case:  14 | Input/Output: [[-87.23510621045372 76] -11.235106210453722]
Test Case:  15 | Input/Output: [[-67.27563565558424 4] -63.27563565558424]
Test Case:  16 | Input/Output: [[-73.31535229170962 -12] -85.31535229170962]
Test Case:  17 | Input/Output: [[71.65071870578359 94] 165.6507187057836]
Test Case:  18 | Input/Output: [[-80.71769103761461 62] -18.717691037614614]
Test Case:  19 | Input/Output: [[-29.60057916009542 -31] -60.60057916009542]
Test Case:  20 | Input/Output: [[-95.61835494711897 4] -91.61835494711897]
Test Case:  21 | Input/Output: [[-71.84861225679046 -95] -166.84861225679046]
Test Case:  22 | Input/Output: [[31.286822144713824 -59] -27.713177855286176]
Test Case:  23 | Input/Output: [[-95.24340469962782 -95] -190.24340469962783]
Test Case:  24 | Input/Output: [[-10.55655136675739 66] 55.44344863324261]
Test Case:  25 | Input/Output: [[64.42665984523435 -42] 22.426659845234354]
Test Case:  26 | Input/Output: [[-51.841274387616075 32] -19.841274387616075]
Test Case:  27 | Input/Output: [[66.20009509664106 -66] 0.20009509664106417]
Test Case:  28 | Input/Output: [[-49.382215681572525 -46] -95.38221568157252]
Test Case:  29 | Input/Output: [[-97.1081886524473 70] -27.108188652447296]
Test Case:  30 | Input/Output: [[81.92040465918132 9] 90.92040465918132]
Test Case:  31 | Input/Output: [[90.26109564802488 98] 188.26109564802488]
Test Case:  32 | Input/Output: [[-58.077635437789546 62] 3.922364562210454]
Test Case:  33 | Input/Output: [[-29.460033181313136 -75] -104.46003318131314]
Test Case:  34 | Input/Output: [[46.36745134872234 90] 136.36745134872234]
Test Case:  35 | Input/Output: [[-61.464693406176885 -84] -145.46469340617688]
Test Case:  36 | Input/Output: [[47.90854884320626 -89] -41.09145115679374]
Test Case:  37 | Input/Output: [[25.531620380028002 -95] -69.468379619972]
Test Case:  38 | Input/Output: [[-93.23074291203082 -47] -140.23074291203082]
Test Case:  39 | Input/Output: [[-61.84756589483251 46] -15.847565894832513]
Test Case:  40 | Input/Output: [[-11.450898199963234 -98] -109.45089819996323]
Test Case:  41 | Input/Output: [[88.46962561686317 -25] 63.46962561686317]
Test Case:  42 | Input/Output: [[89.91821727092639 9] 98.91821727092639]
Test Case:  43 | Input/Output: [[-14.864872542828294 -35] -49.864872542828294]
Test Case:  44 | Input/Output: [[-92.61948522702237 24] -68.61948522702237]
Test Case:  45 | Input/Output: [[-11.347237828951592 7] -4.347237828951592]
Test Case:  46 | Input/Output: [[-9.814041665644126 -78] -87.81404166564413]
Test Case:  47 | Input/Output: [[-24.1786603589931 -97] -121.1786603589931]
Test Case:  48 | Input/Output: [[89.81751222818394 4] 93.81751222818394]
Test Case:  49 | Input/Output: [[-73.38040888187874 81] 7.619591118121264]
Test Case:  50 | Input/Output: [[16.43403348958148 -89] -72.56596651041852]
Test Case:  51 | Input/Output: [[-85.3591977671138 -42] -127.3591977671138]
Test Case:  52 | Input/Output: [[-72.78885139231207 -82] -154.78885139231207]
Test Case:  53 | Input/Output: [[66.72901198185608 -16] 50.729011981856075]
Test Case:  54 | Input/Output: [[-69.33647523595153 42] -27.336475235951525]
Test Case:  55 | Input/Output: [[-88.91419263951087 -66] -154.91419263951087]
Test Case:  56 | Input/Output: [[79.8628176592307 47] 126.8628176592307]
Test Case:  57 | Input/Output: [[-47.80661553433407 61] 13.193384465665929]
Test Case:  58 | Input/Output: [[69.97033203676187 -75] -5.029667963238126]
Test Case:  59 | Input/Output: [[-9.09020644147364 30] 20.90979355852636]
Test Case:  60 | Input/Output: [[-76.09325407892409 -30] -106.09325407892409]
Test Case:  61 | Input/Output: [[54.198786965212406 52] 106.1987869652124]
Test Case:  62 | Input/Output: [[8.556220012842616 -14] -5.443779987157384]
Test Case:  63 | Input/Output: [[67.91822736462223 5] 72.91822736462223]
Test Case:  64 | Input/Output: [[-21.13613904196879 -18] -39.13613904196879]
Test Case:  65 | Input/Output: [[2.674889390981974 -59] -56.325110609018026]
Test Case:  66 | Input/Output: [[2.272232965782777 93] 95.27223296578278]
Test Case:  67 | Input/Output: [[63.23684736823731 -69] -5.7631526317626935]
Test Case:  68 | Input/Output: [[63.227314638173056 16] 79.22731463817306]
Test Case:  69 | Input/Output: [[90.89962409650929 75] 165.89962409650929]
Test Case:  70 | Input/Output: [[35.574634174579245 -54] -18.425365825420755]
Test Case:  71 | Input/Output: [[-1.8116305991631805 37] 35.18836940083682]
Test Case:  72 | Input/Output: [[-24.67098782772443 4] -20.67098782772443]
Test Case:  73 | Input/Output: [[3.7782658254928094 -9] -5.221734174507191]
Test Case:  74 | Input/Output: [[85.90661453657907 99] 184.90661453657907]
Test Case:  75 | Input/Output: [[59.53451930660353 84] 143.53451930660353]
Test Case:  76 | Input/Output: [[-8.974293307033989 1] -7.974293307033989]
Test Case:  77 | Input/Output: [[-93.94731910767449 -31] -124.94731910767449]
Test Case:  78 | Input/Output: [[71.8890146165653 90] 161.8890146165653]
Test Case:  79 | Input/Output: [[-35.21892145029415 50] 14.781078549705853]
Test Case:  80 | Input/Output: [[76.06416173410182 73] 149.06416173410182]
Test Case:  81 | Input/Output: [[20.417133396491224 93] 113.41713339649122]
Test Case:  82 | Input/Output: [[-46.584433491359654 85] 38.415566508640346]
Test Case:  83 | Input/Output: [[-2.899214113920806 -38] -40.899214113920806]
Test Case:  84 | Input/Output: [[37.16330861114233 -69] -31.836691388857673]
Test Case:  85 | Input/Output: [[63.54919122880912 99] 162.54919122880912]
Test Case:  86 | Input/Output: [[-30.335182959876207 85] 54.66481704012379]
Test Case:  87 | Input/Output: [[73.94319219223448 43] 116.94319219223448]
Test Case:  88 | Input/Output: [[-38.61065594637807 97] 58.38934405362193]
Test Case:  89 | Input/Output: [[-76.43544398880175 32] -44.43544398880175]
Test Case:  90 | Input/Output: [[-85.70268051369099 -52] -137.702680513691]
Test Case:  91 | Input/Output: [[65.44578627972066 22] 87.44578627972066]
Test Case:  92 | Input/Output: [[60.578196611609684 -57] 3.578196611609684]
Test Case:  93 | Input/Output: [[-80.69119550463262 23] -57.69119550463262]
Test Case:  94 | Input/Output: [[-81.1114891774369 42] -39.111489177436894]
Test Case:  95 | Input/Output: [[90.54557846940298 -35] 55.54557846940298]
Test Case:  96 | Input/Output: [[-73.98522340823192 -85] -158.98522340823192]
Test Case:  97 | Input/Output: [[-44.354433719212864 85] 40.645566280787136]
Test Case:  98 | Input/Output: [[-30.527556395897392 72] 41.47244360410261]
Test Case:  99 | Input/Output: [[31.927828244145076 -49] -17.072171755854924]
Test Case: 100 | Input/Output: [[31.418026582252537 -6] 25.418026582252537]
Test Case: 101 | Input/Output: [[84.69276508932882 -43] 41.692765089328816]
Test Case: 102 | Input/Output: [[-70.13308096136102 92] 21.866919038638983]
Test Case: 103 | Input/Output: [[-7.710329453686768 -56] -63.71032945368677]
Test Case: 104 | Input/Output: [[23.24843801376852 70] 93.24843801376852]
Test Case: 105 | Input/Output: [[9.130443520578396 -34] -24.869556479421604]
Test Case: 106 | Input/Output: [[-4.630892206866562 85] 80.36910779313344]
Test Case: 107 | Input/Output: [[-87.28016754488408 -14] -101.28016754488408]
Test Case: 108 | Input/Output: [[-49.877345470533776 -17] -66.87734547053378]
Test Case: 109 | Input/Output: [[5.980039841829495 49] 54.980039841829495]
Test Case: 110 | Input/Output: [[36.515118361017585 92] 128.51511836101758]
Test Case: 111 | Input/Output: [[88.06964356822803 1] 89.06964356822803]
Test Case: 112 | Input/Output: [[-51.581426588716006 -29] -80.581426588716]
Test Case: 113 | Input/Output: [[87.03142837590818 -65] 22.031428375908177]
Test Case: 114 | Input/Output: [[10.394228787539134 -90] -79.60577121246087]
Test Case: 115 | Input/Output: [[-78.587818236147 -11] -89.587818236147]
Test Case: 116 | Input/Output: [[5.818410679299177 -11] -5.181589320700823]
Test Case: 117 | Input/Output: [[95.91767012622586 64] 159.91767012622586]
Test Case: 118 | Input/Output: [[94.47874157110107 2] 96.47874157110107]
Test Case: 119 | Input/Output: [[69.72563912836006 -33] 36.72563912836006]
Test Case: 120 | Input/Output: [[8.676055025960068 -78] -69.32394497403993]
Test Case: 121 | Input/Output: [[44.73347144679286 -8] 36.73347144679286]
Test Case: 122 | Input/Output: [[-81.55628924731737 -67] -148.55628924731735]
Test Case: 123 | Input/Output: [[-16.327404670242856 53] 36.672595329757144]
Test Case: 124 | Input/Output: [[87.06499064636901 -77] 10.064990646369012]
Test Case: 125 | Input/Output: [[-17.153729113050446 48] 30.846270886949554]
Test Case: 126 | Input/Output: [[26.274035646688645 -49] -22.725964353311355]
Test Case: 127 | Input/Output: [[-13.036221365088736 8] -5.0362213650887355]
Test Case: 128 | Input/Output: [[-64.02944059476947 -24] -88.02944059476947]
Test Case: 129 | Input/Output: [[76.77412062488929 8] 84.77412062488929]
Test Case: 130 | Input/Output: [[70.51948550569713 -33] 37.51948550569713]
Test Case: 131 | Input/Output: [[32.857597315973464 -88] -55.142402684026536]
Test Case: 132 | Input/Output: [[-48.22571411914958 -21] -69.22571411914959]
Test Case: 133 | Input/Output: [[66.81430884615236 -52] 14.814308846152358]
Test Case: 134 | Input/Output: [[36.48246341640552 -54] -17.517536583594477]
Test Case: 135 | Input/Output: [[-43.61732907299898 -73] -116.61732907299898]
Test Case: 136 | Input/Output: [[81.41584457621576 -15] 66.41584457621576]
Test Case: 137 | Input/Output: [[18.750580435408224 59] 77.75058043540822]
Test Case: 138 | Input/Output: [[7.398598628865187 60] 67.39859862886519]
Test Case: 139 | Input/Output: [[-47.09312353508053 -71] -118.09312353508054]
Test Case: 140 | Input/Output: [[66.02011957728158 4] 70.02011957728158]
Test Case: 141 | Input/Output: [[-33.44947804906381 48] 14.550521950936186]
Test Case: 142 | Input/Output: [[0.45088097328988397 -54] -53.549119026710116]
Test Case: 143 | Input/Output: [[51.67445397351801 1] 52.67445397351801]
Test Case: 144 | Input/Output: [[7.900268213892019 -80] -72.09973178610798]
Test Case: 145 | Input/Output: [[0.29739123451919625 -69] -68.7026087654808]
Test Case: 146 | Input/Output: [[7.334013819087289 -46] -38.66598618091271]
Test Case: 147 | Input/Output: [[83.0499548797811 -65] 18.049954879781097]
Test Case: 148 | Input/Output: [[75.87989651252863 -77] -1.1201034874713685]
Test Case: 149 | Input/Output: [[-84.24758418570617 -62] -146.24758418570616]
Test Case: 150 | Input/Output: [[80.61943942224593 44] 124.61943942224593]
Test Case: 151 | Input/Output: [[-11.144324587898652 34] 22.85567541210135]
Test Case: 152 | Input/Output: [[51.25635928423867 -29] 22.25635928423867]
Test Case: 153 | Input/Output: [[-26.2648897032486 -12] -38.2648897032486]
Test Case: 154 | Input/Output: [[11.776533821938045 62] 73.77653382193805]
Test Case: 155 | Input/Output: [[-27.1812532010683 -72] -99.1812532010683]
Test Case: 156 | Input/Output: [[-44.55841389334842 79] 34.44158610665158]
Test Case: 157 | Input/Output: [[-95.76469913081638 48] -47.76469913081638]
Test Case: 158 | Input/Output: [[-82.24180057415057 -71] -153.24180057415057]
Test Case: 159 | Input/Output: [[-4.265754798428517 -12] -16.265754798428517]
Test Case: 160 | Input/Output: [[-60.39421716984981 -58] -118.39421716984981]
Test Case: 161 | Input/Output: [[-42.46403914077661 54] 11.535960859223387]
Test Case: 162 | Input/Output: [[92.50873489688456 68] 160.50873489688456]
Test Case: 163 | Input/Output: [[-26.687038482158542 3] -23.687038482158542]
Test Case: 164 | Input/Output: [[-17.35955846172466 66] 48.64044153827534]
Test Case: 165 | Input/Output: [[45.83423210979831 14] 59.83423210979831]
Test Case: 166 | Input/Output: [[-80.25600984168197 -88] -168.256009841682]
Test Case: 167 | Input/Output: [[85.83922705355758 50] 135.83922705355758]
Test Case: 168 | Input/Output: [[-86.11472778007432 78] -8.114727780074318]
Test Case: 169 | Input/Output: [[-21.114863664377268 84] 62.88513633562273]
Test Case: 170 | Input/Output: [[29.013624932577727 -24] 5.013624932577727]
Test Case: 171 | Input/Output: [[71.96800230657618 -33] 38.96800230657618]
Test Case: 172 | Input/Output: [[50.20089568222318 -86] -35.79910431777682]
Test Case: 173 | Input/Output: [[-60.44000604108801 -89] -149.440006041088]
Test Case: 174 | Input/Output: [[-84.92334683129195 44] -40.92334683129195]
Test Case: 175 | Input/Output: [[-58.09688517356162 -19] -77.09688517356162]
Test Case: 176 | Input/Output: [[-86.12093117932216 83] -3.120931179322156]
Test Case: 177 | Input/Output: [[72.14021828852864 95] 167.14021828852864]
Test Case: 178 | Input/Output: [[-21.72513865607924 3] -18.72513865607924]
Test Case: 179 | Input/Output: [[46.50437975867334 -62] -15.495620241326662]
Test Case: 180 | Input/Output: [[19.98189592401745 -57] -37.01810407598255]
Test Case: 181 | Input/Output: [[49.666601633427234 -99] -49.333398366572766]
Test Case: 182 | Input/Output: [[-50.86310025422209 58] 7.13689974577791]
Test Case: 183 | Input/Output: [[62.02895505387073 -45] 17.02895505387073]
Test Case: 184 | Input/Output: [[55.65067503900295 -44] 11.650675039002948]
Test Case: 185 | Input/Output: [[-72.00941144434447 73] 0.9905885556555347]
Test Case: 186 | Input/Output: [[75.14128585973742 -92] -16.858714140262578]
Test Case: 187 | Input/Output: [[-81.8653793849043 -46] -127.8653793849043]
Test Case: 188 | Input/Output: [[22.50184496738163 -63] -40.49815503261837]
Test Case: 189 | Input/Output: [[92.876775110507 84] 176.876775110507]
Test Case: 190 | Input/Output: [[1.2711977350479629 -42] -40.72880226495204]
Test Case: 191 | Input/Output: [[25.189777355821136 19] 44.189777355821136]
Test Case: 192 | Input/Output: [[-61.155882684773545 90] 28.844117315226455]
Test Case: 193 | Input/Output: [[76.58320109423016 -45] 31.583201094230162]
Test Case: 194 | Input/Output: [[44.35472008854947 -31] 13.35472008854947]
Test Case: 195 | Input/Output: [[19.814743081909228 -13] 6.814743081909228]
Test Case: 196 | Input/Output: [[-35.31877172139531 27] -8.318771721395308]
Test Case: 197 | Input/Output: [[-40.48197342253037 -6] -46.48197342253037]
Test Case: 198 | Input/Output: [[-55.92336511651632 -73] -128.92336511651632]
Test Case: 199 | Input/Output: [[-38.84465946956552 56] 17.15534053043448]
Test Case: 200 | Input/Output: [[-13.946583516853337 42] 28.053416483146663]
Test Case: 201 | Input/Output: [[89.00814012607034 -77] 12.008140126070344]
Test Case: 202 | Input/Output: [[13.809281416254592 -52] -38.19071858374541]
Test Case: 203 | Input/Output: [[47.184335447070794 -32] 15.184335447070794]
Test Case: 204 | Input/Output: [[97.57301296573232 74] 171.57301296573232]
Test Case: 205 | Input/Output: [[10.076910550292652 -10] 0.07691055029265215]
Test Case: 206 | Input/Output: [[-25.081071032991247 10] -15.081071032991247]
Test Case: 207 | Input/Output: [[86.04256139687928 44] 130.04256139687928]
Test Case: 208 | Input/Output: [[-45.855695640532225 -68] -113.85569564053222]
Test Case: 209 | Input/Output: [[4.392292434779236 -85] -80.60770756522076]
Test Case: 210 | Input/Output: [[-54.34389530229047 5] -49.34389530229047]
Test Case: 211 | Input/Output: [[-96.83098466771294 99] 2.16901533228706]
Test Case: 212 | Input/Output: [[64.72309259260115 -43] 21.723092592601148]
Test Case: 213 | Input/Output: [[-44.0126408029297 -16] -60.0126408029297]
Test Case: 214 | Input/Output: [[-26.952309988263053 -31] -57.95230998826305]
Test Case: 215 | Input/Output: [[-45.42527901522821 -27] -72.42527901522821]
Test Case: 216 | Input/Output: [[-52.703330711787814 43] -9.703330711787814]
Test Case: 217 | Input/Output: [[17.99763860980508 -54] -36.00236139019492]
Test Case: 218 | Input/Output: [[72.2448910593904 40] 112.2448910593904]
Test Case: 219 | Input/Output: [[21.96481670195334 25] 46.96481670195334]
Test Case: 220 | Input/Output: [[8.033409104015107 83] 91.0334091040151]
Test Case: 221 | Input/Output: [[-63.34901344884292 72] 8.650986551157082]
Test Case: 222 | Input/Output: [[56.91431658665266 79] 135.91431658665266]
Test Case: 223 | Input/Output: [[22.24034320523276 39] 61.24034320523276]
Test Case: 224 | Input/Output: [[18.007026959489323 82] 100.00702695948932]
Test Case: 225 | Input/Output: [[81.79081952262669 -85] -3.209180477373309]
Test Case: 226 | Input/Output: [[-17.809139425005455 75] 57.190860574994545]
Test Case: 227 | Input/Output: [[-71.9186150196131 29] -42.9186150196131]
Test Case: 228 | Input/Output: [[91.39378430979801 84] 175.393784309798]
Test Case: 229 | Input/Output: [[-94.84816453134147 28] -66.84816453134147]
Test Case: 230 | Input/Output: [[-95.75135900800467 -8] -103.75135900800467]
Test Case: 231 | Input/Output: [[29.246080023631862 -66] -36.75391997636814]
Test Case: 232 | Input/Output: [[93.88742964955438 -78] 15.887429649554377]
Test Case: 233 | Input/Output: [[-37.460529505312465 -56] -93.46052950531246]
Test Case: 234 | Input/Output: [[-2.2119448358488114 92] 89.78805516415119]
Test Case: 235 | Input/Output: [[48.660746611993176 100] 148.66074661199318]
Test Case: 236 | Input/Output: [[73.30351752448436 -14] 59.30351752448436]
Test Case: 237 | Input/Output: [[-38.34102642015469 -53] -91.34102642015469]
Test Case: 238 | Input/Output: [[95.92956353698193 -29] 66.92956353698193]
Test Case: 239 | Input/Output: [[-82.78514735851277 0] -82.78514735851277]
Test Case: 240 | Input/Output: [[-32.63320793792859 -54] -86.63320793792859]
Test Case: 241 | Input/Output: [[11.07846113194924 -30] -18.92153886805076]
Test Case: 242 | Input/Output: [[34.28426196975613 66] 100.28426196975613]
Test Case: 243 | Input/Output: [[-61.486652173707725 84] 22.513347826292275]
Test Case: 244 | Input/Output: [[56.99526381611105 55] 111.99526381611105]
Test Case: 245 | Input/Output: [[-92.81466680392063 78] -14.81466680392063]
Test Case: 246 | Input/Output: [[-14.012171493132072 -71] -85.01217149313207]
Test Case: 247 | Input/Output: [[-1.6289592401674184 -37] -38.62895924016742]
Test Case: 248 | Input/Output: [[-55.49050816219936 -98] -153.49050816219938]
Test Case: 249 | Input/Output: [[95.13473439243555 -63] 32.13473439243555]
Test Case: 250 | Input/Output: [[31.990318409224585 74] 105.99031840922459]
Test Case: 251 | Input/Output: [[52.34256257980431 24] 76.34256257980431]
Test Case: 252 | Input/Output: [[0.5487183174465144 83] 83.54871831744651]
Test Case: 253 | Input/Output: [[36.682553477895624 74] 110.68255347789562]
Test Case: 254 | Input/Output: [[2.156135127291776 100] 102.15613512729178]
Test Case: 255 | Input/Output: [[-89.33200756275963 86] -3.332007562759628]
Test Case: 256 | Input/Output: [[49.39363642786478 -59] -9.606363572135223]
Test Case: 257 | Input/Output: [[-78.59533603013486 -80] -158.59533603013486]
Test Case: 258 | Input/Output: [[20.61265024234234 -38] -17.38734975765766]
Test Case: 259 | Input/Output: [[19.457762086428176 -17] 2.4577620864281755]
Test Case: 260 | Input/Output: [[78.34737678973676 -98] -19.652623210263243]
Test Case: 261 | Input/Output: [[-56.24941146539941 88] 31.75058853460059]
Test Case: 262 | Input/Output: [[-96.45488449732673 -39] -135.45488449732673]
Test Case: 263 | Input/Output: [[15.970222333119949 60] 75.97022233311995]
Test Case: 264 | Input/Output: [[-68.9297937009583 -19] -87.9297937009583]
Test Case: 265 | Input/Output: [[86.06563794211911 -58] 28.06563794211911]
Test Case: 266 | Input/Output: [[-97.85980101571572 60] -37.85980101571572]
Test Case: 267 | Input/Output: [[-85.09118340356092 47] -38.09118340356092]
Test Case: 268 | Input/Output: [[83.71565725890312 -28] 55.71565725890312]
Test Case: 269 | Input/Output: [[-45.89347828144932 -74] -119.89347828144932]
Test Case: 270 | Input/Output: [[1.3371899681538792 -100] -98.66281003184612]
Test Case: 271 | Input/Output: [[-68.9511842045726 4] -64.9511842045726]
Test Case: 272 | Input/Output: [[-53.17751052215704 14] -39.17751052215704]
Test Case: 273 | Input/Output: [[38.38745262825418 61] 99.38745262825418]
Test Case: 274 | Input/Output: [[-18.11653339484849 -79] -97.11653339484849]
Test Case: 275 | Input/Output: [[-56.57633470411294 20] -36.57633470411294]
Test Case: 276 | Input/Output: [[-58.728148685934165 -5] -63.728148685934165]
Test Case: 277 | Input/Output: [[34.95535755205316 17] 51.95535755205316]
Test Case: 278 | Input/Output: [[-25.866809900934967 -50] -75.86680990093497]
Test Case: 279 | Input/Output: [[-11.607606875333914 -36] -47.607606875333914]
Test Case: 280 | Input/Output: [[-56.147309391047884 -21] -77.14730939104788]
Test Case: 281 | Input/Output: [[-9.161846488591067 -16] -25.161846488591067]
Test Case: 282 | Input/Output: [[-66.88782121250425 28] -38.88782121250425]
Test Case: 283 | Input/Output: [[56.354316462942364 82] 138.35431646294236]
Test Case: 284 | Input/Output: [[49.13262685091769 86] 135.1326268509177]
Test Case: 285 | Input/Output: [[-55.20715753068639 50] -5.207157530686388]
Test Case: 286 | Input/Output: [[0.1616433977054612 -77] -76.83835660229454]
Test Case: 287 | Input/Output: [[62.8066701678751 -34] 28.806670167875097]
Test Case: 288 | Input/Output: [[-77.98175139902715 60] -17.981751399027146]
Test Case: 289 | Input/Output: [[56.40340076609394 45] 101.40340076609394]
Test Case: 290 | Input/Output: [[40.37954750121915 62] 102.37954750121915]
Test Case: 291 | Input/Output: [[-15.601146758744022 10] -5.601146758744022]
Test Case: 292 | Input/Output: [[41.84265752840045 43] 84.84265752840045]
Test Case: 293 | Input/Output: [[10.146483212646089 69] 79.14648321264609]
Test Case: 294 | Input/Output: [[-48.53017718134866 -85] -133.53017718134868]
Test Case: 295 | Input/Output: [[84.04910285656302 50] 134.04910285656302]
Test Case: 296 | Input/Output: [[-65.39059387964579 65] -0.39059387964579173]
Test Case: 297 | Input/Output: [[7.727371634543175 50] 57.727371634543175]
Test Case: 298 | Input/Output: [[-91.21498923522458 -75] -166.21498923522458]
Test Case: 299 | Input/Output: [[79.21590589650575 88] 167.21590589650575]
Test Case: 300 | Input/Output: [[-43.15678934356693 18] -25.156789343566928]
Test Case: 301 | Input/Output: [[97.21580715774371 75] 172.2158071577437]
Test Case: 302 | Input/Output: [[-29.773520819216387 52] 22.226479180783613]
Test Case: 303 | Input/Output: [[59.122025774643305 -58] 1.1220257746433049]
Test Case: 304 | Input/Output: [[1.49634709904349 68] 69.49634709904349]
Test Case: 305 | Input/Output: [[22.81333351187442 -42] -19.18666648812558]
Test Case: 306 | Input/Output: [[-40.08106469270294 -25] -65.08106469270294]
Test Case: 307 | Input/Output: [[-43.2892497805313 -86] -129.2892497805313]
Test Case: 308 | Input/Output: [[-43.10125267843923 0] -43.10125267843923]
Test Case: 309 | Input/Output: [[34.74518407155563 65] 99.74518407155563]
Test Case: 310 | Input/Output: [[41.20593245725743 89] 130.20593245725743]
Test Case: 311 | Input/Output: [[-88.19443415959603 -74] -162.19443415959603]
Test Case: 312 | Input/Output: [[-4.341747564960286 96] 91.65825243503971]
Test Case: 313 | Input/Output: [[14.251048478383083 6] 20.251048478383083]
Test Case: 314 | Input/Output: [[-47.89301419705198 77] 29.106985802948017]
Test Case: 315 | Input/Output: [[-27.636987450365666 -87] -114.63698745036567]
Test Case: 316 | Input/Output: [[89.62469412954363 -80] 9.624694129543627]
Test Case: 317 | Input/Output: [[-1.9509597818741184 -29] -30.95095978187412]
Test Case: 318 | Input/Output: [[-40.05813004491059 -79] -119.0581300449106]
Test Case: 319 | Input/Output: [[56.847757684408464 -80] -23.152242315591536]
Test Case: 320 | Input/Output: [[1.9116262515755977 40] 41.9116262515756]
Test Case: 321 | Input/Output: [[36.11898237115079 36] 72.11898237115079]
Test Case: 322 | Input/Output: [[77.27604597485094 55] 132.27604597485094]
Test Case: 323 | Input/Output: [[27.881549077038898 57] 84.8815490770389]
Test Case: 324 | Input/Output: [[59.55886632977675 93] 152.55886632977675]
Test Case: 325 | Input/Output: [[-67.47306994858715 -2] -69.47306994858715]
Test Case: 326 | Input/Output: [[61.291974233450276 55] 116.29197423345028]
Test Case: 327 | Input/Output: [[-3.507213298227768 -53] -56.50721329822777]
Test Case: 328 | Input/Output: [[60.48577915490651 37] 97.48577915490651]
Test Case: 329 | Input/Output: [[55.973299946152764 32] 87.97329994615276]
Test Case: 330 | Input/Output: [[-61.89356232504417 69] 7.106437674955828]
Test Case: 331 | Input/Output: [[51.97682671988335 32] 83.97682671988335]
Test Case: 332 | Input/Output: [[16.74838723509238 -92] -75.25161276490762]
Test Case: 333 | Input/Output: [[-69.36956466779264 -83] -152.36956466779264]
Test Case: 334 | Input/Output: [[5.0765462242776636 -58] -52.923453775722336]
Test Case: 335 | Input/Output: [[-88.16388449709314 67] -21.163884497093136]
Test Case: 336 | Input/Output: [[70.58278935253625 84] 154.58278935253625]
Test Case: 337 | Input/Output: [[51.67561672264759 3] 54.67561672264759]
Test Case: 338 | Input/Output: [[-41.939187953990675 12] -29.939187953990675]
Test Case: 339 | Input/Output: [[-11.154381114422904 41] 29.845618885577096]
Test Case: 340 | Input/Output: [[45.9001109170361 -77] -31.099889082963898]
Test Case: 341 | Input/Output: [[-28.75440059904338 19] -9.754400599043379]
Test Case: 342 | Input/Output: [[70.09634131857376 54] 124.09634131857376]
Test Case: 343 | Input/Output: [[33.82024867738858 82] 115.82024867738858]
Test Case: 344 | Input/Output: [[-3.0895047707889773 -98] -101.08950477078898]
Test Case: 345 | Input/Output: [[7.770143137044826 3] 10.770143137044826]
Test Case: 346 | Input/Output: [[92.27239735729978 -58] 34.27239735729978]
Test Case: 347 | Input/Output: [[-60.82235408983703 -99] -159.82235408983703]
Test Case: 348 | Input/Output: [[86.37534525976022 99] 185.37534525976022]
Test Case: 349 | Input/Output: [[-52.36263466219824 -52] -104.36263466219825]
Test Case: 350 | Input/Output: [[34.925654688898305 -52] -17.074345311101695]
Test Case: 351 | Input/Output: [[43.36865235680571 57] 100.36865235680571]
Test Case: 352 | Input/Output: [[-2.971163835008255 22] 19.028836164991745]
Test Case: 353 | Input/Output: [[-55.88877341186462 -77] -132.88877341186463]
Test Case: 354 | Input/Output: [[-32.485327246981925 32] -0.48532724698192453]
Test Case: 355 | Input/Output: [[41.63062297764478 29] 70.63062297764478]
Test Case: 356 | Input/Output: [[-25.770588019196566 36] 10.229411980803434]
Test Case: 357 | Input/Output: [[-47.637017271088446 98] 50.362982728911554]
Test Case: 358 | Input/Output: [[-85.2008421263639 79] -6.200842126363895]
Test Case: 359 | Input/Output: [[28.92102513346859 59] 87.92102513346859]
Test Case: 360 | Input/Output: [[27.632047959624614 0] 27.632047959624614]
Test Case: 361 | Input/Output: [[49.53418067747407 -18] 31.53418067747407]
Test Case: 362 | Input/Output: [[49.90770850171833 58] 107.90770850171833]
Test Case: 363 | Input/Output: [[-59.353223222444605 -97] -156.3532232224446]
Test Case: 364 | Input/Output: [[-42.881952813579495 39] -3.8819528135794954]
Test Case: 365 | Input/Output: [[-25.829134682243037 56] 30.170865317756963]
Test Case: 366 | Input/Output: [[-69.6807741174943 72] 2.3192258825057053]
Test Case: 367 | Input/Output: [[-29.79533808193466 -91] -120.79533808193466]
Test Case: 368 | Input/Output: [[88.7208472446195 -68] 20.720847244619506]
Test Case: 369 | Input/Output: [[2.9005372308832875 -50] -47.09946276911671]
Test Case: 370 | Input/Output: [[14.382273658605584 -41] -26.617726341394416]
Test Case: 371 | Input/Output: [[-51.12556100065999 29] -22.125561000659992]
Test Case: 372 | Input/Output: [[-82.14640141300286 -98] -180.14640141300288]
Test Case: 373 | Input/Output: [[67.33235037997983 31] 98.33235037997983]
Test Case: 374 | Input/Output: [[78.98830058771179 -4] 74.98830058771179]
Test Case: 375 | Input/Output: [[73.11893433258857 90] 163.11893433258857]
Test Case: 376 | Input/Output: [[-92.10821178832698 -47] -139.10821178832697]
Test Case: 377 | Input/Output: [[-5.144835092196985 -34] -39.144835092196985]
Test Case: 378 | Input/Output: [[-84.2354009442134 -13] -97.2354009442134]
Test Case: 379 | Input/Output: [[-76.32096974518714 -56] -132.32096974518714]
Test Case: 380 | Input/Output: [[56.54080277838253 81] 137.54080277838253]
Test Case: 381 | Input/Output: [[-60.351149130402604 -53] -113.3511491304026]
Test Case: 382 | Input/Output: [[-51.43837182604714 -3] -54.43837182604714]
Test Case: 383 | Input/Output: [[14.033513509196808 39] 53.03351350919681]
Test Case: 384 | Input/Output: [[-66.97187249453363 4] -62.97187249453363]
Test Case: 385 | Input/Output: [[84.85699637279134 26] 110.85699637279134]
Test Case: 386 | Input/Output: [[51.200164219385556 -30] 21.200164219385556]
Test Case: 387 | Input/Output: [[-54.52611166618713 -22] -76.52611166618712]
Test Case: 388 | Input/Output: [[63.58804337686303 11] 74.58804337686303]
Test Case: 389 | Input/Output: [[33.37829287933653 -86] -52.62170712066347]
Test Case: 390 | Input/Output: [[13.676204875826855 -44] -30.323795124173145]
Test Case: 391 | Input/Output: [[1.084922318215689 23] 24.08492231821569]
Test Case: 392 | Input/Output: [[-80.05253401565464 -13] -93.05253401565464]
Test Case: 393 | Input/Output: [[70.67860477211929 72] 142.6786047721193]
Test Case: 394 | Input/Output: [[-30.545365128089145 0] -30.545365128089145]
Test Case: 395 | Input/Output: [[-48.773276715259485 74] 25.226723284740515]
Test Case: 396 | Input/Output: [[84.54189309591237 100] 184.54189309591237]
Test Case: 397 | Input/Output: [[68.1630700454593 100] 168.1630700454593]
Test Case: 398 | Input/Output: [[-79.48913873716022 53] -26.489138737160218]
Test Case: 399 | Input/Output: [[-41.95614318907337 -71] -112.95614318907337]
Test Case: 400 | Input/Output: [[-84.05831350576014 -3] -87.05831350576014]
Test Case: 401 | Input/Output: [[-65.43375946893028 92] 26.566240531069724]
Test Case: 402 | Input/Output: [[-71.12672321719178 92] 20.87327678280822]
Test Case: 403 | Input/Output: [[12.32051733064641 -97] -84.67948266935359]
Test Case: 404 | Input/Output: [[7.028599419223582 -12] -4.971400580776418]
Test Case: 405 | Input/Output: [[-87.75725224098724 -75] -162.75725224098724]
Test Case: 406 | Input/Output: [[-63.54148142451563 87] 23.45851857548437]
Test Case: 407 | Input/Output: [[8.76085010507444 -41] -32.23914989492556]
Test Case: 408 | Input/Output: [[-64.27897672479773 72] 7.7210232752022705]
Test Case: 409 | Input/Output: [[30.03215067496015 -30] 0.03215067496014967]
Test Case: 410 | Input/Output: [[43.1796439653055 -95] -51.8203560346945]
Test Case: 411 | Input/Output: [[47.24018189162592 19] 66.24018189162592]
Test Case: 412 | Input/Output: [[-92.79861430817584 12] -80.79861430817584]
Test Case: 413 | Input/Output: [[35.62448354155168 95] 130.62448354155168]
Test Case: 414 | Input/Output: [[96.77749485597235 -90] 6.77749485597235]
Test Case: 415 | Input/Output: [[-76.68005884058391 -49] -125.68005884058391]
Test Case: 416 | Input/Output: [[74.73235694388077 -38] 36.732356943880774]
Test Case: 417 | Input/Output: [[20.94426049243019 36] 56.94426049243019]
Test Case: 418 | Input/Output: [[-18.65306747723527 59] 40.34693252276473]
Test Case: 419 | Input/Output: [[92.58773338705603 -48] 44.58773338705603]
Test Case: 420 | Input/Output: [[-3.6964701842240117 -12] -15.696470184224012]
Test Case: 421 | Input/Output: [[-63.418308567861395 86] 22.581691432138605]
Test Case: 422 | Input/Output: [[45.74937759080427 67] 112.74937759080427]
Test Case: 423 | Input/Output: [[83.7077569451597 -55] 28.7077569451597]
Test Case: 424 | Input/Output: [[-11.055111471684214 -59] -70.05511147168421]
Test Case: 425 | Input/Output: [[-46.85639903005197 -28] -74.85639903005196]
Test Case: 426 | Input/Output: [[20.88267984786954 -20] 0.8826798478695395]
Test Case: 427 | Input/Output: [[88.29949331041502 30] 118.29949331041502]
Test Case: 428 | Input/Output: [[69.80968690911192 85] 154.80968690911192]
Test Case: 429 | Input/Output: [[-97.09008474014054 -65] -162.09008474014053]
Test Case: 430 | Input/Output: [[-98.4632568907085 -55] -153.4632568907085]
Test Case: 431 | Input/Output: [[-79.02642257339072 -86] -165.02642257339073]
Test Case: 432 | Input/Output: [[64.42443120388623 -34] 30.42443120388623]
Test Case: 433 | Input/Output: [[76.45625593179966 59] 135.45625593179966]
Test Case: 434 | Input/Output: [[16.03798312835616 -30] -13.96201687164384]
Test Case: 435 | Input/Output: [[86.06407646829342 85] 171.06407646829342]
Test Case: 436 | Input/Output: [[-91.00765011942617 -62] -153.00765011942616]
Test Case: 437 | Input/Output: [[30.65356379751637 89] 119.65356379751637]
Test Case: 438 | Input/Output: [[-2.207486686476301 -34] -36.2074866864763]
Test Case: 439 | Input/Output: [[80.08761495834761 70] 150.08761495834761]
Test Case: 440 | Input/Output: [[-16.474268512569054 -53] -69.47426851256905]
Test Case: 441 | Input/Output: [[86.28230362058619 -52] 34.28230362058619]
Test Case: 442 | Input/Output: [[24.84951125997344 -59] -34.15048874002656]
Test Case: 443 | Input/Output: [[37.311992477178705 17] 54.311992477178705]
Test Case: 444 | Input/Output: [[-98.12125624477022 5] -93.12125624477022]
Test Case: 445 | Input/Output: [[15.77128678035092 3] 18.77128678035092]
Test Case: 446 | Input/Output: [[81.59043396358797 -95] -13.40956603641203]
Test Case: 447 | Input/Output: [[1.7861186052828089 96] 97.78611860528281]
Test Case: 448 | Input/Output: [[-2.3565466749185617 99] 96.64345332508144]
Test Case: 449 | Input/Output: [[23.720505286117927 -25] -1.2794947138820731]
Test Case: 450 | Input/Output: [[-38.580415459901495 87] 48.419584540098505]
Test Case: 451 | Input/Output: [[-3.5937997280295377 -72] -75.59379972802954]
Test Case: 452 | Input/Output: [[42.65011184362069 69] 111.65011184362069]
Test Case: 453 | Input/Output: [[42.03785645587433 -40] 2.0378564558743335]
Test Case: 454 | Input/Output: [[-18.476800736810176 -9] -27.476800736810176]
Test Case: 455 | Input/Output: [[-1.493434826121515 65] 63.506565173878485]
Test Case: 456 | Input/Output: [[-92.41931601893008 -92] -184.4193160189301]
Test Case: 457 | Input/Output: [[-95.21111979972558 -7] -102.21111979972558]
Test Case: 458 | Input/Output: [[-57.31988173569435 -88] -145.31988173569437]
Test Case: 459 | Input/Output: [[96.18272003916019 40] 136.1827200391602]
Test Case: 460 | Input/Output: [[36.31016715679863 23] 59.31016715679863]
Test Case: 461 | Input/Output: [[78.03343792458139 76] 154.0334379245814]
Test Case: 462 | Input/Output: [[-4.491985581110129 62] 57.50801441888987]
Test Case: 463 | Input/Output: [[82.40381328371606 -51] 31.40381328371606]
Test Case: 464 | Input/Output: [[39.8334717525039 96] 135.8334717525039]
Test Case: 465 | Input/Output: [[11.093629520184265 -81] -69.90637047981573]
Test Case: 466 | Input/Output: [[55.7456158022128 44] 99.7456158022128]
Test Case: 467 | Input/Output: [[80.87930919559804 -29] 51.87930919559804]
Test Case: 468 | Input/Output: [[-93.47534166549369 21] -72.47534166549369]
Test Case: 469 | Input/Output: [[2.7446460905930223 -65] -62.25535390940698]
Test Case: 470 | Input/Output: [[-59.931824246599575 -96] -155.93182424659958]
Test Case: 471 | Input/Output: [[93.75453320886979 18] 111.75453320886979]
Test Case: 472 | Input/Output: [[35.27993073458788 17] 52.27993073458788]
Test Case: 473 | Input/Output: [[3.1381190234275778 -90] -86.86188097657242]
Test Case: 474 | Input/Output: [[15.428166035498819 69] 84.42816603549882]
Test Case: 475 | Input/Output: [[-38.36110750700359 -81] -119.3611075070036]
Test Case: 476 | Input/Output: [[-59.930008412820946 -5] -64.93000841282094]
Test Case: 477 | Input/Output: [[-90.5776524213259 18] -72.5776524213259]
Test Case: 478 | Input/Output: [[26.376486036477885 56] 82.37648603647789]
Test Case: 479 | Input/Output: [[-90.88096922941158 -96] -186.88096922941156]
Test Case: 480 | Input/Output: [[-27.69003679614805 42] 14.30996320385195]
Test Case: 481 | Input/Output: [[91.75227586140426 1] 92.75227586140426]
Test Case: 482 | Input/Output: [[50.31351481430326 -1] 49.31351481430326]
Test Case: 483 | Input/Output: [[-36.19068419431184 98] 61.80931580568816]
Test Case: 484 | Input/Output: [[-67.81745216555768 -89] -156.81745216555768]
Test Case: 485 | Input/Output: [[62.49928660886985 73] 135.49928660886985]
Test Case: 486 | Input/Output: [[50.024042645054294 -68] -17.975957354945706]
Test Case: 487 | Input/Output: [[9.981660837944702 -86] -76.0183391620553]
Test Case: 488 | Input/Output: [[49.77426474108685 -38] 11.774264741086853]
Test Case: 489 | Input/Output: [[58.47224140367882 -8] 50.47224140367882]
Test Case: 490 | Input/Output: [[-11.529081618055415 -75] -86.52908161805541]
Test Case: 491 | Input/Output: [[-17.919551154369557 19] 1.0804488456304426]
Test Case: 492 | Input/Output: [[-87.39903212964441 79] -8.39903212964441]
Test Case: 493 | Input/Output: [[98.99276695330502 -94] 4.992766953305022]
Test Case: 494 | Input/Output: [[-26.46371868362678 73] 46.53628131637322]
Test Case: 495 | Input/Output: [[4.509046299547734 -7] -2.490953700452266]
Test Case: 496 | Input/Output: [[79.69487852726775 99] 178.69487852726775]
Test Case: 497 | Input/Output: [[-42.90706933483066 -65] -107.90706933483065]
Test Case: 498 | Input/Output: [[-26.223787718497633 -47] -73.22378771849763]
Test Case: 499 | Input/Output: [[-99.84387566907486 -62] -161.84387566907486]
Test Case: 500 | Input/Output: [[-87.50774188032564 -43] -130.50774188032563]
Test Case: 501 | Input/Output: [[82.82432463319483 0] 82.82432463319483]
Test Case: 502 | Input/Output: [[-82.02718733369743 46] -36.02718733369743]
Test Case: 503 | Input/Output: [[-40.41689125280696 -43] -83.41689125280696]
Test Case: 504 | Input/Output: [[-26.948509265536003 43] 16.051490734463997]
Test Case: 505 | Input/Output: [[41.63080672985433 -91] -49.36919327014567]
Test Case: 506 | Input/Output: [[96.58849558056494 81] 177.58849558056494]
Test Case: 507 | Input/Output: [[80.22296994555543 9] 89.22296994555543]
Test Case: 508 | Input/Output: [[88.41687979581437 42] 130.41687979581437]
Test Case: 509 | Input/Output: [[39.25567374114476 27] 66.25567374114476]
Test Case: 510 | Input/Output: [[4.37527964563958 88] 92.37527964563958]
Test Case: 511 | Input/Output: [[98.16812437629969 2] 100.16812437629969]
Test Case: 512 | Input/Output: [[58.29818212073167 -85] -26.701817879268333]
Test Case: 513 | Input/Output: [[75.29223661489442 -100] -24.70776338510558]
Test Case: 514 | Input/Output: [[-41.26629752783359 42] 0.7337024721664065]
Test Case: 515 | Input/Output: [[36.345783746421006 -88] -51.654216253578994]
Test Case: 516 | Input/Output: [[-55.850347593963924 20] -35.850347593963924]
Test Case: 517 | Input/Output: [[-79.952531904365 -53] -132.952531904365]
Test Case: 518 | Input/Output: [[22.27573747960072 5] 27.27573747960072]
Test Case: 519 | Input/Output: [[40.043971011878256 -8] 32.043971011878256]
Test Case: 520 | Input/Output: [[-69.61611132301613 73] 3.3838886769838723]
Test Case: 521 | Input/Output: [[8.30061950983459 -25] -16.69938049016541]
Test Case: 522 | Input/Output: [[-62.13955841299177 -61] -123.13955841299176]
Test Case: 523 | Input/Output: [[-5.790182418147552 -42] -47.79018241814755]
Test Case: 524 | Input/Output: [[24.955082125663978 99] 123.95508212566398]
Test Case: 525 | Input/Output: [[-21.905761643094124 95] 73.09423835690588]
Test Case: 526 | Input/Output: [[10.063932625580208 -97] -86.93606737441979]
Test Case: 527 | Input/Output: [[94.34192633922959 93] 187.3419263392296]
Test Case: 528 | Input/Output: [[21.325162840377615 2] 23.325162840377615]
Test Case: 529 | Input/Output: [[-17.485353591111235 59] 41.514646408888765]
Test Case: 530 | Input/Output: [[81.2602840335484 18] 99.2602840335484]
Test Case: 531 | Input/Output: [[1.9735976007851548 -80] -78.02640239921485]
Test Case: 532 | Input/Output: [[-60.56137371458976 89] 28.438626285410237]
Test Case: 533 | Input/Output: [[-58.37682589128832 -1] -59.37682589128832]
Test Case: 534 | Input/Output: [[-14.250850258497351 -35] -49.25085025849735]
Test Case: 535 | Input/Output: [[-59.784406656195735 -28] -87.78440665619573]
Test Case: 536 | Input/Output: [[10.486851853088552 18] 28.486851853088552]
Test Case: 537 | Input/Output: [[-45.93223684003349 -33] -78.93223684003348]
Test Case: 538 | Input/Output: [[48.57420852573054 38] 86.57420852573054]
Test Case: 539 | Input/Output: [[-97.81492410208892 -67] -164.81492410208892]
Test Case: 540 | Input/Output: [[-3.8948663924779794 -70] -73.89486639247798]
Test Case: 541 | Input/Output: [[-2.3152956565258194 19] 16.68470434347418]
Test Case: 542 | Input/Output: [[97.11574827610266 -23] 74.11574827610266]
Test Case: 543 | Input/Output: [[-16.332001048105354 -63] -79.33200104810535]
Test Case: 544 | Input/Output: [[39.227748704265395 -73] -33.772251295734605]
Test Case: 545 | Input/Output: [[-79.14248425890047 -19] -98.14248425890047]
Test Case: 546 | Input/Output: [[2.6581647871400236 26] 28.658164787140024]
Test Case: 547 | Input/Output: [[-98.80241075393184 82] -16.802410753931838]
Test Case: 548 | Input/Output: [[60.312949766412714 15] 75.31294976641271]
Test Case: 549 | Input/Output: [[-28.347746630418243 4] -24.347746630418243]
Test Case: 550 | Input/Output: [[-55.27272921396224 -47] -102.27272921396224]
Test Case: 551 | Input/Output: [[22.521919974944964 9] 31.521919974944964]
Test Case: 552 | Input/Output: [[-7.949007213672459 -33] -40.94900721367246]
Test Case: 553 | Input/Output: [[-23.420235591060973 99] 75.57976440893903]
Test Case: 554 | Input/Output: [[93.7049680628584 91] 184.7049680628584]
Test Case: 555 | Input/Output: [[25.21375034560465 -68] -42.78624965439535]
Test Case: 556 | Input/Output: [[-52.57713844812273 10] -42.57713844812273]
Test Case: 557 | Input/Output: [[-9.487033256040476 -3] -12.487033256040476]
Test Case: 558 | Input/Output: [[-35.149205321921144 -36] -71.14920532192114]
Test Case: 559 | Input/Output: [[56.87500043390935 -67] -10.12499956609065]
Test Case: 560 | Input/Output: [[21.177371242821636 7] 28.177371242821636]
Test Case: 561 | Input/Output: [[40.738006676135115 44] 84.73800667613511]
Test Case: 562 | Input/Output: [[-58.37394676745977 -98] -156.37394676745976]
Test Case: 563 | Input/Output: [[-19.697076147342045 45] 25.302923852657955]
Test Case: 564 | Input/Output: [[13.342388240806045 -99] -85.65761175919395]
Test Case: 565 | Input/Output: [[19.024550043345428 -26] -6.975449956654572]
Test Case: 566 | Input/Output: [[1.7893879177805871 9] 10.789387917780587]
Test Case: 567 | Input/Output: [[51.70812424176211 -3] 48.70812424176211]
Test Case: 568 | Input/Output: [[25.297120561482615 -76] -50.702879438517385]
Test Case: 569 | Input/Output: [[-99.09370864232751 70] -29.093708642327513]
Test Case: 570 | Input/Output: [[-46.71635970887802 -95] -141.71635970887803]
Test Case: 571 | Input/Output: [[-24.38606847701135 35] 10.61393152298865]
Test Case: 572 | Input/Output: [[91.07021516635766 -4] 87.07021516635766]
Test Case: 573 | Input/Output: [[-2.492477651089999 35] 32.50752234891]
Test Case: 574 | Input/Output: [[-50.92980260194781 67] 16.070197398052187]
Test Case: 575 | Input/Output: [[-7.939833452403249 92] 84.06016654759675]
Test Case: 576 | Input/Output: [[-23.60263272105412 39] 15.397367278945879]
Test Case: 577 | Input/Output: [[-88.0740989449138 -90] -178.0740989449138]
Test Case: 578 | Input/Output: [[24.212368960603015 -39] -14.787631039396985]
Test Case: 579 | Input/Output: [[21.527651395632574 -8] 13.527651395632574]
Test Case: 580 | Input/Output: [[-39.367318843005414 -30] -69.36731884300542]
Test Case: 581 | Input/Output: [[22.006087794672652 -54] -31.993912205327348]
Test Case: 582 | Input/Output: [[32.15209127402008 -69] -36.84790872597992]
Test Case: 583 | Input/Output: [[-29.236974764677413 35] 5.763025235322587]
Test Case: 584 | Input/Output: [[-56.25154791966018 -3] -59.25154791966018]
Test Case: 585 | Input/Output: [[37.301935652718214 22] 59.301935652718214]
Test Case: 586 | Input/Output: [[98.9260501137039 -23] 75.9260501137039]
Test Case: 587 | Input/Output: [[64.64187548948374 70] 134.64187548948374]
Test Case: 588 | Input/Output: [[2.960575360221384 0] 2.960575360221384]
Test Case: 589 | Input/Output: [[-69.3530956600386 78] 8.646904339961395]
Test Case: 590 | Input/Output: [[-41.31056671283557 73] 31.689433287164427]
Test Case: 591 | Input/Output: [[43.989651906291215 -11] 32.989651906291215]
Test Case: 592 | Input/Output: [[78.97995316244933 42] 120.97995316244933]
Test Case: 593 | Input/Output: [[71.46336399932639 -46] 25.46336399932639]
Test Case: 594 | Input/Output: [[19.230823327671345 -12] 7.230823327671345]
Test Case: 595 | Input/Output: [[31.503877554454306 -85] -53.496122445545694]
Test Case: 596 | Input/Output: [[1.7471210598856857 -89] -87.25287894011431]
Test Case: 597 | Input/Output: [[89.73986135585398 51] 140.73986135585398]
Test Case: 598 | Input/Output: [[67.1676332574055 56] 123.1676332574055]
Test Case: 599 | Input/Output: [[32.197990460974836 -39] -6.802009539025164]
Test Case: 600 | Input/Output: [[65.87289388366753 -62] 3.8728938836675297]
Test Case: 601 | Input/Output: [[77.54815017826442 -42] 35.54815017826442]
Test Case: 602 | Input/Output: [[-87.95628322011002 -46] -133.95628322011004]
Test Case: 603 | Input/Output: [[45.61140089801819 -71] -25.38859910198181]
Test Case: 604 | Input/Output: [[-36.559413947559506 26] -10.559413947559506]
Test Case: 605 | Input/Output: [[41.3903543758411 -17] 24.3903543758411]
Test Case: 606 | Input/Output: [[45.440392424465415 50] 95.44039242446541]
Test Case: 607 | Input/Output: [[-15.124860846357407 94] 78.87513915364259]
Test Case: 608 | Input/Output: [[67.04846347499111 82] 149.0484634749911]
Test Case: 609 | Input/Output: [[47.01974471077551 23] 70.01974471077551]
Test Case: 610 | Input/Output: [[-82.48619490169504 53] -29.486194901695043]
Test Case: 611 | Input/Output: [[68.16281442194324 77] 145.16281442194324]
Test Case: 612 | Input/Output: [[39.25569444056683 -61] -21.744305559433172]
Test Case: 613 | Input/Output: [[-7.042517432931007 -29] -36.04251743293101]
Test Case: 614 | Input/Output: [[-30.55061799993601 77] 46.44938200006399]
Test Case: 615 | Input/Output: [[26.87372072077234 20] 46.87372072077234]
Test Case: 616 | Input/Output: [[-66.31449296185613 63] -3.314492961856132]
Test Case: 617 | Input/Output: [[-88.71537010310861 4] -84.71537010310861]
Test Case: 618 | Input/Output: [[-45.513852353463946 23] -22.513852353463946]
Test Case: 619 | Input/Output: [[31.470326969742644 -2] 29.470326969742644]
Test Case: 620 | Input/Output: [[80.30929086729313 -58] 22.30929086729313]
Test Case: 621 | Input/Output: [[75.49616935090862 70] 145.49616935090862]
Test Case: 622 | Input/Output: [[98.25421628056955 26] 124.25421628056955]
Test Case: 623 | Input/Output: [[-31.28963535588882 32] 0.7103646441111806]
Test Case: 624 | Input/Output: [[71.51772829561472 -50] 21.517728295614717]
Test Case: 625 | Input/Output: [[-42.11223621085387 44] 1.8877637891461276]
Test Case: 626 | Input/Output: [[-44.874075778467336 -51] -95.87407577846733]
Test Case: 627 | Input/Output: [[50.43702383097906 30] 80.43702383097906]
Test Case: 628 | Input/Output: [[26.453797825357242 50] 76.45379782535724]
Test Case: 629 | Input/Output: [[14.918934072240958 40] 54.91893407224096]
Test Case: 630 | Input/Output: [[-41.24695396021845 -28] -69.24695396021845]
Test Case: 631 | Input/Output: [[31.034211717308665 33] 64.03421171730866]
Test Case: 632 | Input/Output: [[39.80815067362323 -9] 30.80815067362323]
Test Case: 633 | Input/Output: [[14.709065110962399 -64] -49.2909348890376]
Test Case: 634 | Input/Output: [[37.23438051731435 44] 81.23438051731435]
Test Case: 635 | Input/Output: [[-11.434288742519755 24] 12.565711257480245]
Test Case: 636 | Input/Output: [[-78.16303398521296 93] 14.836966014787038]
Test Case: 637 | Input/Output: [[20.217280255205907 -25] -4.782719744794093]
Test Case: 638 | Input/Output: [[-30.981065141035486 -86] -116.98106514103549]
Test Case: 639 | Input/Output: [[43.533014115484576 11] 54.533014115484576]
Test Case: 640 | Input/Output: [[-65.44008915749488 38] -27.44008915749488]
Test Case: 641 | Input/Output: [[-77.65886998952662 76] -1.6588699895266217]
Test Case: 642 | Input/Output: [[79.56440907190759 -70] 9.56440907190759]
Test Case: 643 | Input/Output: [[53.48839030487261 78] 131.4883903048726]
Test Case: 644 | Input/Output: [[82.49228075731418 98] 180.49228075731418]
Test Case: 645 | Input/Output: [[-77.57338437341971 43] -34.573384373419714]
Test Case: 646 | Input/Output: [[87.2679785397512 -92] -4.732021460248802]
Test Case: 647 | Input/Output: [[48.21446769150904 -13] 35.21446769150904]
Test Case: 648 | Input/Output: [[-7.784240764622297 52] 44.2157592353777]
Test Case: 649 | Input/Output: [[74.62070953262935 16] 90.62070953262935]
Test Case: 650 | Input/Output: [[-27.406661348533007 -94] -121.406661348533]
Test Case: 651 | Input/Output: [[-80.51120558218918 54] -26.511205582189177]
Test Case: 652 | Input/Output: [[-30.367780169190056 -4] -34.367780169190056]
Test Case: 653 | Input/Output: [[-42.077166477714755 -93] -135.07716647771474]
Test Case: 654 | Input/Output: [[-46.211400790199406 6] -40.211400790199406]
Test Case: 655 | Input/Output: [[-29.356839415313416 56] 26.643160584686584]
Test Case: 656 | Input/Output: [[94.47401690906861 -13] 81.47401690906861]
Test Case: 657 | Input/Output: [[31.07914136045244 -61] -29.92085863954756]
Test Case: 658 | Input/Output: [[82.99952106083188 -95] -12.000478939168119]
Test Case: 659 | Input/Output: [[-67.46712262793912 88] 20.53287737206088]
Test Case: 660 | Input/Output: [[-28.354522188750877 42] 13.645477811249123]
Test Case: 661 | Input/Output: [[-60.48886842111338 10] -50.48886842111338]
Test Case: 662 | Input/Output: [[15.100264201758051 10] 25.10026420175805]
Test Case: 663 | Input/Output: [[-0.6261809750140372 -24] -24.626180975014037]
Test Case: 664 | Input/Output: [[-85.01127825830821 -76] -161.0112782583082]
Test Case: 665 | Input/Output: [[47.753308101899506 -32] 15.753308101899506]
Test Case: 666 | Input/Output: [[-91.37773666136344 -90] -181.37773666136343]
Test Case: 667 | Input/Output: [[-23.979668971284028 60] 36.02033102871597]
Test Case: 668 | Input/Output: [[36.42091426816066 13] 49.42091426816066]
Test Case: 669 | Input/Output: [[-81.93375615290313 -90] -171.93375615290313]
Test Case: 670 | Input/Output: [[-68.81661681692177 -54] -122.81661681692177]
Test Case: 671 | Input/Output: [[-74.00789300087126 70] -4.007893000871263]
Test Case: 672 | Input/Output: [[23.733778142910666 5] 28.733778142910666]
Test Case: 673 | Input/Output: [[67.18689256299723 -69] -1.8131074370027704]
Test Case: 674 | Input/Output: [[-17.62393642189801 58] 40.37606357810199]
Test Case: 675 | Input/Output: [[-80.5679061847884 -100] -180.5679061847884]
Test Case: 676 | Input/Output: [[-57.43474783287867 44] -13.43474783287867]
Test Case: 677 | Input/Output: [[-17.223811953860817 -26] -43.22381195386082]
Test Case: 678 | Input/Output: [[-78.08930858972005 -19] -97.08930858972005]
Test Case: 679 | Input/Output: [[51.41027892580746 -14] 37.41027892580746]
Test Case: 680 | Input/Output: [[-84.82211210268673 63] -21.82211210268673]
Test Case: 681 | Input/Output: [[-65.38153887520035 -68] -133.38153887520036]
Test Case: 682 | Input/Output: [[90.48561513371192 -67] 23.485615133711917]
Test Case: 683 | Input/Output: [[-6.175716090516488 49] 42.82428390948351]
Test Case: 684 | Input/Output: [[96.8223685784024 -98] -1.1776314215975958]
Test Case: 685 | Input/Output: [[7.938728942657789 -61] -53.06127105734221]
Test Case: 686 | Input/Output: [[-67.90010374972238 -18] -85.90010374972238]
Test Case: 687 | Input/Output: [[38.212833663965625 51] 89.21283366396563]
Test Case: 688 | Input/Output: [[-63.4028369516024 -42] -105.40283695160241]
Test Case: 689 | Input/Output: [[47.429330353124556 25] 72.42933035312456]
Test Case: 690 | Input/Output: [[-60.96033702722927 -86] -146.9603370272293]
Test Case: 691 | Input/Output: [[11.304646595556079 10] 21.30464659555608]
Test Case: 692 | Input/Output: [[-55.03254484224185 96] 40.96745515775815]
Test Case: 693 | Input/Output: [[-1.3107120027867154 -18] -19.310712002786715]
Test Case: 694 | Input/Output: [[91.70486248951616 -29] 62.70486248951616]
Test Case: 695 | Input/Output: [[-34.180167953419826 -42] -76.18016795341983]
Test Case: 696 | Input/Output: [[-8.75057176280552 53] 44.24942823719448]
Test Case: 697 | Input/Output: [[-85.07808036714921 -19] -104.07808036714921]
Test Case: 698 | Input/Output: [[-54.873546980066344 -85] -139.87354698006635]
Test Case: 699 | Input/Output: [[-32.11164035709051 54] 21.888359642909492]
Test Case: 700 | Input/Output: [[-9.94067028187429 64] 54.05932971812571]
Test Case: 701 | Input/Output: [[49.29759922106675 47] 96.29759922106675]
Test Case: 702 | Input/Output: [[-5.001709064550951 13] 7.998290935449049]
Test Case: 703 | Input/Output: [[56.91900178419644 -89] -32.08099821580356]
Test Case: 704 | Input/Output: [[6.867639121647656 -89] -82.13236087835234]
Test Case: 705 | Input/Output: [[-60.40230902214523 5] -55.40230902214523]
Test Case: 706 | Input/Output: [[-68.11740226739052 -73] -141.1174022673905]
Test Case: 707 | Input/Output: [[-0.4710566009296997 49] 48.5289433990703]
Test Case: 708 | Input/Output: [[-71.61359162696543 -44] -115.61359162696543]
Test Case: 709 | Input/Output: [[-1.8665431349529626 87] 85.13345686504704]
Test Case: 710 | Input/Output: [[21.25676217832941 12] 33.25676217832941]
Test Case: 711 | Input/Output: [[65.64451887759202 -12] 53.64451887759202]
Test Case: 712 | Input/Output: [[10.0210271497468 70] 80.0210271497468]
Test Case: 713 | Input/Output: [[-87.75131989286203 -62] -149.75131989286203]
Test Case: 714 | Input/Output: [[84.45766268585521 -40] 44.45766268585521]
Test Case: 715 | Input/Output: [[-42.41828321872161 25] -17.418283218721612]
Test Case: 716 | Input/Output: [[-49.327815411218026 2] -47.327815411218026]
Test Case: 717 | Input/Output: [[8.67035081747494 38] 46.67035081747494]
Test Case: 718 | Input/Output: [[29.152097988160904 97] 126.1520979881609]
Test Case: 719 | Input/Output: [[-42.91836893334187 36] -6.918368933341867]
Test Case: 720 | Input/Output: [[-22.323675149909405 89] 66.6763248500906]
Test Case: 721 | Input/Output: [[60.82529210106 3] 63.82529210106]
Test Case: 722 | Input/Output: [[-12.510188010319894 -39] -51.510188010319894]
Test Case: 723 | Input/Output: [[-45.39283892203119 -40] -85.39283892203119]
Test Case: 724 | Input/Output: [[92.9666578330727 87] 179.9666578330727]
Test Case: 725 | Input/Output: [[80.42997395922225 -41] 39.42997395922225]
Test Case: 726 | Input/Output: [[54.77611192515565 -64] -9.223888074844353]
Test Case: 727 | Input/Output: [[96.71917664239461 -16] 80.71917664239461]
Test Case: 728 | Input/Output: [[-33.73818388248317 94] 60.26181611751683]
Test Case: 729 | Input/Output: [[55.67201037173362 -42] 13.67201037173362]
Test Case: 730 | Input/Output: [[-94.28940651731786 -44] -138.28940651731784]
Test Case: 731 | Input/Output: [[-32.83323255829936 -91] -123.83323255829936]
Test Case: 732 | Input/Output: [[-52.44513283180194 57] 4.554867168198058]
Test Case: 733 | Input/Output: [[-36.36975973267267 3] -33.36975973267267]
Test Case: 734 | Input/Output: [[-87.07902030009743 -11] -98.07902030009743]
Test Case: 735 | Input/Output: [[-14.513145089637774 3] -11.513145089637774]
Test Case: 736 | Input/Output: [[37.56518447715655 -42] -4.434815522843451]
Test Case: 737 | Input/Output: [[19.14023588695008 62] 81.14023588695008]
Test Case: 738 | Input/Output: [[30.747853633445573 53] 83.74785363344557]
Test Case: 739 | Input/Output: [[86.6364188272176 -44] 42.6364188272176]
Test Case: 740 | Input/Output: [[-94.42414442924768 65] -29.424144429247676]
Test Case: 741 | Input/Output: [[-60.510901416017695 11] -49.510901416017695]
Test Case: 742 | Input/Output: [[-4.838926085703221 21] 16.16107391429678]
Test Case: 743 | Input/Output: [[9.296720335003442 71] 80.29672033500344]
Test Case: 744 | Input/Output: [[23.297294835247314 52] 75.29729483524731]
Test Case: 745 | Input/Output: [[80.90939229374635 67] 147.90939229374635]
Test Case: 746 | Input/Output: [[-85.8837215210892 -91] -176.8837215210892]
Test Case: 747 | Input/Output: [[-62.27667909533379 -26] -88.27667909533379]
Test Case: 748 | Input/Output: [[-56.23653717651991 34] -22.23653717651991]
Test Case: 749 | Input/Output: [[-77.7527428467406 17] -60.7527428467406]
Test Case: 750 | Input/Output: [[-46.197554550713264 44] -2.1975545507132637]
Test Case: 751 | Input/Output: [[67.20171917033599 -100] -32.79828082966401]
Test Case: 752 | Input/Output: [[-70.13607854986392 3] -67.13607854986392]
Test Case: 753 | Input/Output: [[25.109783850333443 35] 60.10978385033344]
Test Case: 754 | Input/Output: [[63.276239018104405 -92] -28.723760981895595]
Test Case: 755 | Input/Output: [[33.51500896247853 -39] -5.484991037521468]
Test Case: 756 | Input/Output: [[60.37581681967029 -16] 44.37581681967029]
Test Case: 757 | Input/Output: [[69.57084363010676 6] 75.57084363010676]
Test Case: 758 | Input/Output: [[-90.53750290175094 16] -74.53750290175094]
Test Case: 759 | Input/Output: [[75.61899710445178 -96] -20.38100289554822]
Test Case: 760 | Input/Output: [[67.61457388129583 -58] 9.614573881295826]
Test Case: 761 | Input/Output: [[68.67898439276513 -51] 17.67898439276513]
Test Case: 762 | Input/Output: [[-73.04554385390625 -46] -119.04554385390625]
Test Case: 763 | Input/Output: [[27.037683370994017 62] 89.03768337099402]
Test Case: 764 | Input/Output: [[-65.00883401332133 -73] -138.00883401332135]
Test Case: 765 | Input/Output: [[-65.92899132191792 52] -13.92899132191792]
Test Case: 766 | Input/Output: [[65.54523847215913 96] 161.54523847215913]
Test Case: 767 | Input/Output: [[13.918535240751908 -55] -41.08146475924809]
Test Case: 768 | Input/Output: [[9.532936879048307 -68] -58.46706312095169]
Test Case: 769 | Input/Output: [[-84.62775485069464 -59] -143.62775485069466]
Test Case: 770 | Input/Output: [[92.63240564802479 -64] 28.632405648024786]
Test Case: 771 | Input/Output: [[51.93464618149602 63] 114.93464618149602]
Test Case: 772 | Input/Output: [[75.30189805532544 -55] 20.301898055325438]
Test Case: 773 | Input/Output: [[-26.28051458291587 -74] -100.28051458291587]
Test Case: 774 | Input/Output: [[20.813242589129317 80] 100.81324258912932]
Test Case: 775 | Input/Output: [[12.667807814725649 85] 97.66780781472565]
Test Case: 776 | Input/Output: [[87.912009910895 -2] 85.912009910895]
Test Case: 777 | Input/Output: [[-14.273470228987478 29] 14.726529771012522]
Test Case: 778 | Input/Output: [[92.36665239876265 52] 144.36665239876265]
Test Case: 779 | Input/Output: [[59.93814697566134 51] 110.93814697566134]
Test Case: 780 | Input/Output: [[27.10700791684033 -32] -4.892992083159669]
Test Case: 781 | Input/Output: [[-79.58086160303606 -57] -136.58086160303606]
Test Case: 782 | Input/Output: [[-50.51427702487166 -77] -127.51427702487166]
Test Case: 783 | Input/Output: [[41.447521830708155 7] 48.447521830708155]
Test Case: 784 | Input/Output: [[25.491449596847644 -47] -21.508550403152356]
Test Case: 785 | Input/Output: [[-67.77413477648462 -62] -129.77413477648463]
Test Case: 786 | Input/Output: [[7.861123204924667 -82] -74.13887679507533]
Test Case: 787 | Input/Output: [[25.914860855269822 32] 57.91486085526982]
Test Case: 788 | Input/Output: [[12.53869798958172 50] 62.53869798958172]
Test Case: 789 | Input/Output: [[92.7247720448488 -86] 6.724772044848805]
Test Case: 790 | Input/Output: [[4.711558662977183 -33] -28.288441337022817]
Test Case: 791 | Input/Output: [[44.54907515505107 -42] 2.549075155051071]
Test Case: 792 | Input/Output: [[75.07887994824398 16] 91.07887994824398]
Test Case: 793 | Input/Output: [[3.8679718784832176 -58] -54.13202812151678]
Test Case: 794 | Input/Output: [[-32.87182814286315 44] 11.128171857136849]
Test Case: 795 | Input/Output: [[15.385427132256012 40] 55.38542713225601]
Test Case: 796 | Input/Output: [[20.340154100625213 56] 76.34015410062521]
Test Case: 797 | Input/Output: [[-55.69238701699366 -68] -123.69238701699366]
Test Case: 798 | Input/Output: [[81.13101816573962 -90] -8.868981834260381]
Test Case: 799 | Input/Output: [[-27.128474256899636 62] 34.871525743100364]
Test Case: 800 | Input/Output: [[75.54665573674063 -26] 49.54665573674063]
Test Case: 801 | Input/Output: [[58.62676144913627 62] 120.62676144913627]
Test Case: 802 | Input/Output: [[-48.240833617001975 -93] -141.24083361700198]
Test Case: 803 | Input/Output: [[-4.170545469575984 56] 51.829454530424016]
Test Case: 804 | Input/Output: [[-40.273629568471605 46] 5.7263704315283945]
Test Case: 805 | Input/Output: [[-96.59774972554888 -4] -100.59774972554888]
Test Case: 806 | Input/Output: [[-67.80740245784598 -20] -87.80740245784598]
Test Case: 807 | Input/Output: [[-57.14035814053198 65] 7.85964185946802]
Test Case: 808 | Input/Output: [[-62.64691379505136 49] -13.646913795051361]
Test Case: 809 | Input/Output: [[79.1527852350682 56] 135.1527852350682]
Test Case: 810 | Input/Output: [[-3.0367086288257923 52] 48.96329137117421]
Test Case: 811 | Input/Output: [[87.43590454666582 45] 132.43590454666582]
Test Case: 812 | Input/Output: [[49.317358750488495 52] 101.3173587504885]
Test Case: 813 | Input/Output: [[87.73746311564997 64] 151.73746311564997]
Test Case: 814 | Input/Output: [[43.38148976483677 -100] -56.61851023516323]
Test Case: 815 | Input/Output: [[-22.304059262939347 76] 53.69594073706065]
Test Case: 816 | Input/Output: [[-41.87133742053004 -60] -101.87133742053004]
Test Case: 817 | Input/Output: [[-57.26361880883077 -73] -130.26361880883076]
Test Case: 818 | Input/Output: [[86.81385261060379 -54] 32.81385261060379]
Test Case: 819 | Input/Output: [[47.68217527520673 18] 65.68217527520673]
Test Case: 820 | Input/Output: [[-72.14573409047995 44] -28.145734090479948]
Test Case: 821 | Input/Output: [[-78.59963352634192 60] -18.59963352634192]
Test Case: 822 | Input/Output: [[59.53172168580875 -34] 25.531721685808748]
Test Case: 823 | Input/Output: [[94.63597281168921 -88] 6.635972811689214]
Test Case: 824 | Input/Output: [[68.3738349139112 -70] -1.626165086088804]
Test Case: 825 | Input/Output: [[-92.70411239582461 65] -27.70411239582461]
Test Case: 826 | Input/Output: [[-45.113762904535434 -2] -47.113762904535434]
Test Case: 827 | Input/Output: [[-21.254010214721845 59] 37.745989785278155]
Test Case: 828 | Input/Output: [[81.52555709833129 -79] 2.5255570983312907]
Test Case: 829 | Input/Output: [[95.6132390148008 30] 125.6132390148008]
Test Case: 830 | Input/Output: [[-57.55095193971967 -54] -111.55095193971967]
Test Case: 831 | Input/Output: [[22.923695899059155 86] 108.92369589905915]
Test Case: 832 | Input/Output: [[-70.83677913878577 -22] -92.83677913878577]
Test Case: 833 | Input/Output: [[80.40473109334576 -60] 20.40473109334576]
Test Case: 834 | Input/Output: [[90.91719963081277 -60] 30.917199630812775]
Test Case: 835 | Input/Output: [[-65.51358338291277 -45] -110.51358338291277]
Test Case: 836 | Input/Output: [[-11.358357051345422 42] 30.641642948654578]
Test Case: 837 | Input/Output: [[42.81948834988688 4] 46.81948834988688]
Test Case: 838 | Input/Output: [[-11.593577587674275 56] 44.406422412325725]
Test Case: 839 | Input/Output: [[-17.256177491774707 33] 15.743822508225293]
Test Case: 840 | Input/Output: [[-64.035876510474 97] 32.964123489526]
Test Case: 841 | Input/Output: [[-17.887968982583402 -10] -27.887968982583402]
Test Case: 842 | Input/Output: [[-63.87256951253044 83] 19.12743048746956]
Test Case: 843 | Input/Output: [[-89.85620412462771 -94] -183.8562041246277]
Test Case: 844 | Input/Output: [[-98.22073832854453 84] -14.220738328544527]
Test Case: 845 | Input/Output: [[6.959824055939805 86] 92.9598240559398]
Test Case: 846 | Input/Output: [[-35.41528249410426 -98] -133.41528249410425]
Test Case: 847 | Input/Output: [[33.307681217660985 50] 83.30768121766098]
Test Case: 848 | Input/Output: [[-81.6091311318959 81] -0.609131131895893]
Test Case: 849 | Input/Output: [[87.8291785213228 81] 168.8291785213228]
Test Case: 850 | Input/Output: [[86.15062181562567 66] 152.15062181562567]
Test Case: 851 | Input/Output: [[-82.66817764976352 62] -20.66817764976352]
Test Case: 852 | Input/Output: [[42.769006901063904 -72] -29.230993098936096]
Test Case: 853 | Input/Output: [[-33.40720590742556 -80] -113.40720590742556]
Test Case: 854 | Input/Output: [[99.38774441291454 -15] 84.38774441291454]
Test Case: 855 | Input/Output: [[-45.79736133959569 93] 47.20263866040431]
Test Case: 856 | Input/Output: [[78.05051108768194 88] 166.05051108768194]
Test Case: 857 | Input/Output: [[6.428432517791478 -52] -45.57156748220852]
Test Case: 858 | Input/Output: [[-10.247679351039679 81] 70.75232064896032]
Test Case: 859 | Input/Output: [[33.896850661596545 -50] -16.103149338403455]
Test Case: 860 | Input/Output: [[-53.41900609206331 100] 46.58099390793669]
Test Case: 861 | Input/Output: [[85.04032783870514 -42] 43.04032783870514]
Test Case: 862 | Input/Output: [[-97.11179306240754 49] -48.11179306240754]
Test Case: 863 | Input/Output: [[-77.5862354104946 -39] -116.5862354104946]
Test Case: 864 | Input/Output: [[-60.12632349531055 14] -46.12632349531055]
Test Case: 865 | Input/Output: [[-0.845735090670118 -25] -25.845735090670118]
Test Case: 866 | Input/Output: [[69.50484690551238 -85] -15.49515309448762]
Test Case: 867 | Input/Output: [[-96.10637611604258 -11] -107.10637611604258]
Test Case: 868 | Input/Output: [[-63.75066238570739 21] -42.75066238570739]
Test Case: 869 | Input/Output: [[-98.11550673763074 81] -17.11550673763074]
Test Case: 870 | Input/Output: [[41.31247698559528 69] 110.31247698559528]
Test Case: 871 | Input/Output: [[-79.30811700656179 -14] -93.30811700656179]
Test Case: 872 | Input/Output: [[70.04155161054663 45] 115.04155161054663]
Test Case: 873 | Input/Output: [[27.536859086924267 31] 58.53685908692427]
Test Case: 874 | Input/Output: [[-85.3618644394767 -18] -103.3618644394767]
Test Case: 875 | Input/Output: [[49.32235158731078 -5] 44.32235158731078]
Test Case: 876 | Input/Output: [[-85.42363065287581 -64] -149.42363065287583]
Test Case: 877 | Input/Output: [[-94.91107998735689 -90] -184.91107998735689]
Test Case: 878 | Input/Output: [[-83.59051454255193 85] 1.4094854574480706]
Test Case: 879 | Input/Output: [[-75.68522509689456 -27] -102.68522509689456]
Test Case: 880 | Input/Output: [[76.10851613655458 -100] -23.891483863445416]
Test Case: 881 | Input/Output: [[3.2160270989019892 32] 35.21602709890199]
Test Case: 882 | Input/Output: [[-37.593605184744575 36] -1.5936051847445754]
Test Case: 883 | Input/Output: [[-91.70990083565773 28] -63.709900835657734]
Test Case: 884 | Input/Output: [[59.334983422147815 -33] 26.334983422147815]
Test Case: 885 | Input/Output: [[85.70654849779342 33] 118.70654849779342]
Test Case: 886 | Input/Output: [[-44.92937820598222 57] 12.070621794017782]
Test Case: 887 | Input/Output: [[-16.372483027971825 21] 4.627516972028175]
Test Case: 888 | Input/Output: [[-32.21214784536892 -7] -39.21214784536892]
Test Case: 889 | Input/Output: [[-35.911710083802404 56] 20.088289916197596]
Test Case: 890 | Input/Output: [[-19.020289208337687 94] 74.97971079166231]
Test Case: 891 | Input/Output: [[-78.3318050961297 39] -39.3318050961297]
Test Case: 892 | Input/Output: [[20.728225525006195 31] 51.728225525006195]
Test Case: 893 | Input/Output: [[-71.91929082455758 -60] -131.91929082455758]
Test Case: 894 | Input/Output: [[-35.37075236299401 61] 25.62924763700599]
Test Case: 895 | Input/Output: [[66.1301670522414 92] 158.1301670522414]
Test Case: 896 | Input/Output: [[96.76055546725118 85] 181.76055546725118]
Test Case: 897 | Input/Output: [[-56.44350271481038 4] -52.44350271481038]
Test Case: 898 | Input/Output: [[31.87789501189627 -1] 30.87789501189627]
Test Case: 899 | Input/Output: [[-7.194454136527057 -28] -35.19445413652706]
Test Case: 900 | Input/Output: [[7.0768241584927125 -8] -0.9231758415072875]
Test Case: 901 | Input/Output: [[-98.04185134835528 26] -72.04185134835528]
Test Case: 902 | Input/Output: [[-82.1195906820981 -42] -124.1195906820981]
Test Case: 903 | Input/Output: [[-62.03903772785395 84] 21.96096227214605]
Test Case: 904 | Input/Output: [[-9.978557244451096 43] 33.021442755548904]
Test Case: 905 | Input/Output: [[12.177215850650612 37] 49.17721585065061]
Test Case: 906 | Input/Output: [[-12.645705346266965 78] 65.35429465373304]
Test Case: 907 | Input/Output: [[-10.473080148506142 69] 58.52691985149386]
Test Case: 908 | Input/Output: [[22.272682284426367 -2] 20.272682284426367]
Test Case: 909 | Input/Output: [[65.91018074152728 -32] 33.910180741527284]
Test Case: 910 | Input/Output: [[-91.37525289541175 48] -43.37525289541175]
Test Case: 911 | Input/Output: [[-17.425186561811785 -87] -104.42518656181178]
Test Case: 912 | Input/Output: [[99.09139639865398 -43] 56.091396398653984]
Test Case: 913 | Input/Output: [[-80.34392593945014 -98] -178.34392593945014]
Test Case: 914 | Input/Output: [[89.48723684776897 -99] -9.512763152231031]
Test Case: 915 | Input/Output: [[22.009763485538443 -91] -68.99023651446156]
Test Case: 916 | Input/Output: [[-68.04132143798576 -3] -71.04132143798576]
Test Case: 917 | Input/Output: [[21.025392756458785 -98] -76.97460724354121]
Test Case: 918 | Input/Output: [[-19.973465595663683 62] 42.02653440433632]
Test Case: 919 | Input/Output: [[81.02577297133436 23] 104.02577297133436]
Test Case: 920 | Input/Output: [[-41.27731357307758 74] 32.72268642692242]
Test Case: 921 | Input/Output: [[-39.28376200379895 -30] -69.28376200379896]
Test Case: 922 | Input/Output: [[-0.8839638581924874 -59] -59.88396385819249]
Test Case: 923 | Input/Output: [[23.967646292086187 -3] 20.967646292086187]
Test Case: 924 | Input/Output: [[-32.992793808262405 99] 66.0072061917376]
Test Case: 925 | Input/Output: [[88.35540782522935 -72] 16.35540782522935]
Test Case: 926 | Input/Output: [[35.25140346469635 63] 98.25140346469635]
Test Case: 927 | Input/Output: [[-60.40826401560062 -42] -102.40826401560062]
Test Case: 928 | Input/Output: [[-97.14692230922364 32] -65.14692230922364]
Test Case: 929 | Input/Output: [[62.01506298904127 -57] 5.015062989041269]
Test Case: 930 | Input/Output: [[-98.95863888212037 -66] -164.95863888212037]
Test Case: 931 | Input/Output: [[20.216530910681655 -63] -42.783469089318345]
Test Case: 932 | Input/Output: [[-72.38214300713489 46] -26.382143007134886]
Test Case: 933 | Input/Output: [[-25.472360920943913 -7] -32.47236092094391]
Test Case: 934 | Input/Output: [[-29.119932407145583 61] 31.880067592854417]
Test Case: 935 | Input/Output: [[-17.949875035361032 -62] -79.94987503536103]
Test Case: 936 | Input/Output: [[22.61418071756256 65] 87.61418071756256]
Test Case: 937 | Input/Output: [[-14.888039821086181 100] 85.11196017891382]
Test Case: 938 | Input/Output: [[-50.585709812259914 63] 12.414290187740086]
Test Case: 939 | Input/Output: [[53.938443705492745 39] 92.93844370549274]
Test Case: 940 | Input/Output: [[69.67806277151612 -61] 8.678062771516124]
Test Case: 941 | Input/Output: [[26.97081677619026 97] 123.97081677619026]
Test Case: 942 | Input/Output: [[92.7220134064728 -21] 71.7220134064728]
Test Case: 943 | Input/Output: [[-19.019617726207855 -25] -44.019617726207855]
Test Case: 944 | Input/Output: [[87.89239776841393 60] 147.89239776841393]
Test Case: 945 | Input/Output: [[1.856324373628368 100] 101.85632437362837]
Test Case: 946 | Input/Output: [[-72.75387508476882 -37] -109.75387508476882]
Test Case: 947 | Input/Output: [[-89.28186510511611 -44] -133.2818651051161]
Test Case: 948 | Input/Output: [[-46.59247100867998 72] 25.40752899132002]
Test Case: 949 | Input/Output: [[7.14186819044204 61] 68.14186819044204]
Test Case: 950 | Input/Output: [[-69.9667040493843 -13] -82.9667040493843]
Test Case: 951 | Input/Output: [[68.48861552893794 44] 112.48861552893794]
Test Case: 952 | Input/Output: [[-57.187508966316344 60] 2.8124910336836564]
Test Case: 953 | Input/Output: [[-22.82751173431177 54] 31.17248826568823]
Test Case: 954 | Input/Output: [[0.4090178797067523 59] 59.40901787970675]
Test Case: 955 | Input/Output: [[10.207933961308655 39] 49.207933961308655]
Test Case: 956 | Input/Output: [[23.5860578348684 -14] 9.586057834868399]
Test Case: 957 | Input/Output: [[63.49420832556552 53] 116.49420832556552]
Test Case: 958 | Input/Output: [[80.87372488868724 51] 131.87372488868724]
Test Case: 959 | Input/Output: [[-17.06333857202347 -98] -115.06333857202347]
Test Case: 960 | Input/Output: [[32.901771390953996 94] 126.901771390954]
Test Case: 961 | Input/Output: [[43.41322695118416 36] 79.41322695118416]
Test Case: 962 | Input/Output: [[58.594978418414684 72] 130.59497841841468]
Test Case: 963 | Input/Output: [[-53.99706858631965 -42] -95.99706858631964]
Test Case: 964 | Input/Output: [[-65.52081678662911 -8] -73.52081678662911]
Test Case: 965 | Input/Output: [[-56.30385578073387 -87] -143.30385578073387]
Test Case: 966 | Input/Output: [[-9.189249541978441 -39] -48.18924954197844]
Test Case: 967 | Input/Output: [[46.457392899629326 -62] -15.542607100370674]
Test Case: 968 | Input/Output: [[4.0532409100942175 -94] -89.94675908990578]
Test Case: 969 | Input/Output: [[-75.54364192122347 -17] -92.54364192122347]
Test Case: 970 | Input/Output: [[-98.47458990350542 -95] -193.47458990350543]
Test Case: 971 | Input/Output: [[60.70616098975762 -14] 46.70616098975762]
Test Case: 972 | Input/Output: [[-23.172239476214102 11] -12.172239476214102]
Test Case: 973 | Input/Output: [[65.56336062993654 -3] 62.56336062993654]
Test Case: 974 | Input/Output: [[-24.095715383606205 -6] -30.095715383606205]
Test Case: 975 | Input/Output: [[93.34454261120388 -24] 69.34454261120388]
Test Case: 976 | Input/Output: [[-6.518383093176226 -50] -56.518383093176226]
Test Case: 977 | Input/Output: [[96.8511377494923 -17] 79.8511377494923]
Test Case: 978 | Input/Output: [[84.92071402003486 60] 144.92071402003486]
Test Case: 979 | Input/Output: [[-85.86874372256091 11] -74.86874372256091]
Test Case: 980 | Input/Output: [[23.038279821411138 68] 91.03827982141114]
Test Case: 981 | Input/Output: [[-95.88634478038729 34] -61.88634478038729]
Test Case: 982 | Input/Output: [[-79.77879542727786 51] -28.778795427277856]
Test Case: 983 | Input/Output: [[18.939114413226406 -63] -44.060885586773594]
Test Case: 984 | Input/Output: [[8.569066553351945 14] 22.569066553351945]
Test Case: 985 | Input/Output: [[38.06869573670747 -30] 8.068695736707468]
Test Case: 986 | Input/Output: [[46.01146377142916 100] 146.01146377142916]
Test Case: 987 | Input/Output: [[86.37307300215258 49] 135.37307300215258]
Test Case: 988 | Input/Output: [[-30.869940713155543 47] 16.130059286844457]
Test Case: 989 | Input/Output: [[53.308416271877064 -69] -15.691583728122936]
Test Case: 990 | Input/Output: [[-7.935104509985578 -24] -31.935104509985578]
Test Case: 991 | Input/Output: [[-69.59976521176141 -21] -90.59976521176141]
Test Case: 992 | Input/Output: [[-1.6698609872993728 39] 37.33013901270063]
Test Case: 993 | Input/Output: [[95.50992298867891 -62] 33.50992298867891]
Test Case: 994 | Input/Output: [[46.183872500851436 91] 137.18387250085144]
Test Case: 995 | Input/Output: [[-69.34800618948343 45] -24.348006189483428]
Test Case: 996 | Input/Output: [[-63.49587498095861 94] 30.50412501904139]
Test Case: 997 | Input/Output: [[-38.142127597267276 38] -0.14212759726727597]
Test Case: 998 | Input/Output: [[-71.87069426196449 56] -15.870694261964488]
Test Case: 999 | Input/Output: [[94.60227517463818 -60] 34.60227517463818]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 66 15 -5 7 -70 39 46 -6 53 27 36 -56 -126 94 24 35
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 56227.0
Test mean error for best: 28.11350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 47.2182085795 
Correct output: 44.8179022307  | Program output: 86.8179022307 
Correct output: 95.8032792622  | Program output: 83.8032792622 
Correct output: 8.0949473456   | Program output: 58.0949473456 
Correct output: -64.1503753092 | Program output: 16.8496246908 
Correct output: 27.1310761693  | Program output: 19.1310761693 
Correct output: -34.4699592842 | Program output: -43.4699592842
Correct output: 62.8135887966  | Program output: 85.8135887966 
Correct output: 96.6123363982  | Program output: 82.6123363982 
Correct output: 46.7196465918  | Program output: 27.7196465918 
Correct output: -59.2785304711 | Program output: -1.2785304711 
Correct output: -6.9174150193  | Program output: 30.0825849807 
Correct output: -68.4374020443 | Program output: -28.4374020443
Correct output: -11.1169636129 | Program output: -69.1169636129
Correct output: -76.8272599297 | Program output: -84.8272599297
Correct output: -26.5306664135 | Program output: -67.5306664135
Correct output: -40.4578849398 | Program output: -46.4578849398
Correct output: -124.5033370034 | Program output: -85.5033370034
Correct output: 26.2328206209  | Program output: -0.7671793791 
Correct output: -129.5990711743 | Program output: -55.5990711743
Correct output: -17.8249368738 | Program output: -5.8249368738 
Correct output: -16.8176198654 | Program output: 13.1823801346 
Correct output: 5.5639147954   | Program output: 26.5639147954 
Correct output: 15.7960197363  | Program output: 59.7960197363 
Correct output: -15.2347943829 | Program output: 43.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_rot} {:instruction integer_add} {:instruction float_div} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_min} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction float_max} {:instruction integer_stackdepth} {:instruction float_shove} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction in1} {:instruction print_float} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_frominteger} {:instruction float_cos} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction -45} {:instruction float_dec} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_mod} {:instruction tag_integer_380} {:instruction float_dup_items} {:instruction float_yank} {:instruction integer_add} {:instruction float_div} {:instruction float_min} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction float_dup_items} {:instruction float_yankdup})
Best program: (float_dup integer_yankdup integer_mult integer_dup_times integer_max integer_div integer_mult float_stackdepth float_stackdepth integer_fromfloat integer_rot integer_add float_div integer_min float_stackdepth integer_min float_mult integer_fromfloat float_max integer_stackdepth float_shove integer_yankdup float_dup_items in1 print_float integer_max integer_stackdepth integer_pop float_frominteger float_cos integer_fromfloat float_flush -45 float_dec print_float float_frominteger integer_mod tag_integer_380 float_dup_items float_yank integer_add float_div float_min integer_add float_dup_times integer_yank float_dup_items float_yankdup)
Errors: [33.0 2 42.0 2 12.0 2 50.0 1 81.0 12 8.0 2 9.0 2 23.0 2 14.0 2 19.0 2 58.0 2 37.0 12 40.0 1 58.0 2 8.0 2 41.0 2 6.0 1 39.0 3 27.0 12 74.0 3 12.0 2 30.0 11 21.0 2 44.0 2 59.0 13]
Total: 944.0
Mean: 18.88
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 18246.2585816
Median total errors in population: 25338.0
Error averages by case: (712.3941409000008 12.494 720.218158600002 12.426 722.0472318000033 12.541 713.117875200002 11.659 722.870978600001 13.76 703.3160004999997 12.51 709.9149116999974 13.363 721.715504399999 12.577 721.4260420000007 12.624 710.244870399999 12.521 721.2598820000014 13.102 711.1915097000007 12.918 725.1683586000024 13.141 712.8749301 13.407 720.5052408000006 13.414 712.3436169000008 13.248 709.4546869000008 13.166 739.6917549999984 14.119 707.7651830000001 13.131 740.1851391999991 14.046 713.1870424000006 13.198 711.3169432999989 13.773 709.7699151999989 11.805 713.776842199998 12.475 715.2418221999982 13.842)
Error minima by case: (1.4428 2 1.1814 2 1.8033 2 0.9051 1 1.0801 8 0.8689 2 0.8198 2 0.4786 2 1.3877 2 0.7203 2 0.2785 2 0.606 7 0.5626 1 3.5935 2 2.8227 2 0.5307 2 0.0308 1 26.5033 3 0.2328 3 18.5949 3 0.2042 2 0.368 8 0.7831 2 0.1351 2 1.9508 8)
Average genome size in population (length): 48.703
Average program size in population (points): 49.703
Average percent parens in population: 0.043
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.298
Error (vector) diversity:			 0.325
Behavioral diversity:				 0.348
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1221855
--- Timings ---
Current time: 1529614828960 milliseconds
Total Time:           3.9 seconds
Initialization:       0.1 seconds,  3.2%
Reproduction:         0.6 seconds, 15.1%
Fitness Testing:      3.2 seconds, 81.7%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 56253.0
Test mean error for best: 28.12650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 46.2182085795 
Correct output: 44.8179022307  | Program output: 85.8179022307 
Correct output: 95.8032792622  | Program output: 82.8032792622 
Correct output: 8.0949473456   | Program output: 57.0949473456 
Correct output: -64.1503753092 | Program output: 15.8496246908 
Correct output: 27.1310761693  | Program output: 18.1310761693 
Correct output: -34.4699592842 | Program output: -44.4699592842
Correct output: 62.8135887966  | Program output: 84.8135887966 
Correct output: 96.6123363982  | Program output: 81.6123363982 
Correct output: 46.7196465918  | Program output: 26.7196465918 
Correct output: -59.2785304711 | Program output: -2.2785304711 
Correct output: -6.9174150193  | Program output: 29.0825849807 
Correct output: -68.4374020443 | Program output: -29.4374020443
Correct output: -11.1169636129 | Program output: -70.1169636129
Correct output: -76.8272599297 | Program output: -85.8272599297
Correct output: -26.5306664135 | Program output: -68.5306664135
Correct output: -40.4578849398 | Program output: -47.4578849398
Correct output: -124.5033370034 | Program output: -86.5033370034
Correct output: 26.2328206209  | Program output: -1.7671793791 
Correct output: -129.5990711743 | Program output: -56.5990711743
Correct output: -17.8249368738 | Program output: -6.8249368738 
Correct output: -16.8176198654 | Program output: 12.1823801346 
Correct output: 5.5639147954   | Program output: 25.5639147954 
Correct output: 15.7960197363  | Program output: 58.7960197363 
Correct output: -15.2347943829 | Program output: 42.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div in2 float_dec integer_dup_times float_max float_frominteger float_swap float_div -8 integer_inc integer_swap float_dup_items float_div print_integer float_dup_items)
Errors: [32.0 2 41.0 2 13.0 2 49.0 2 80.0 13 9.0 2 10.0 1 22.0 2 15.0 2 20.0 1 57.0 2 36.0 12 39.0 2 59.0 2 9.0 2 42.0 2 7.0 1 38.0 3 28.0 12 73.0 3 11.0 2 29.0 11 20.0 1 43.0 2 58.0 13]
Total: 939.0
Mean: 18.78
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 6380.736380800007
Median total errors in population: 1458.9699000000003
Error averages by case: (231.38048900000078 10.354 250.05144249999867 10.276 259.00563589999945 10.436 231.81388829999898 9.686 264.9854294000021 12.767 215.3414491999996 10.42 227.0863970000005 11.223 255.01213409999852 10.552 257.9849948000009 10.608 232.2356560000014 10.52 258.4786600999968 10.761 227.07666140000111 12.065 264.21072829999827 10.725 232.09981459999932 11.192 253.2981122000013 11.272 235.14532690000087 10.87 229.61677540000085 10.663 296.896626800001 11.815 223.76215509999955 12.314 304.14856149999844 11.694 229.73946540000176 10.982 229.1353797000008 12.583 222.7204581000007 9.978 235.11620700000063 10.332 237.260932100001 13.045)
Error minima by case: (2.5383 2 2.6929 2 0.8033 2 0.9051 1 1.0801 8 0.8689 1 1.47 1 1.1864 2 1.3877 2 4.5947 1 0.2785 2 0.606 7 0.5626 1 3.5935 2 2.8227 2 0.5307 2 0.2025 1 26.5033 3 0.2328 3 19.5991 3 0.2042 2 0.1824 8 0.7831 1 0.9605 2 1.7652 8)
Average genome size in population (length): 56.945
Average program size in population (points): 57.945
Average percent parens in population: 0.023
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.489
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.773
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.773
Total error diversity:				 0.268
Error (vector) diversity:			 0.281
Behavioral diversity:				 0.304
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2650700
--- Timings ---
Current time: 1529614833096 milliseconds
Total Time:           8.3 seconds
Initialization:       0.1 seconds,  1.5%
Reproduction:         2.7 seconds, 31.9%
Fitness Testing:      4.8 seconds, 58.1%
Report:               0.7 seconds,  8.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 56253.0
Test mean error for best: 28.12650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 46.2182085795 
Correct output: 44.8179022307  | Program output: 85.8179022307 
Correct output: 95.8032792622  | Program output: 82.8032792622 
Correct output: 8.0949473456   | Program output: 57.0949473456 
Correct output: -64.1503753092 | Program output: 15.8496246908 
Correct output: 27.1310761693  | Program output: 18.1310761693 
Correct output: -34.4699592842 | Program output: -44.4699592842
Correct output: 62.8135887966  | Program output: 84.8135887966 
Correct output: 96.6123363982  | Program output: 81.6123363982 
Correct output: 46.7196465918  | Program output: 26.7196465918 
Correct output: -59.2785304711 | Program output: -2.2785304711 
Correct output: -6.9174150193  | Program output: 29.0825849807 
Correct output: -68.4374020443 | Program output: -29.4374020443
Correct output: -11.1169636129 | Program output: -70.1169636129
Correct output: -76.8272599297 | Program output: -85.8272599297
Correct output: -26.5306664135 | Program output: -68.5306664135
Correct output: -40.4578849398 | Program output: -47.4578849398
Correct output: -124.5033370034 | Program output: -86.5033370034
Correct output: 26.2328206209  | Program output: -1.7671793791 
Correct output: -129.5990711743 | Program output: -56.5990711743
Correct output: -17.8249368738 | Program output: -6.8249368738 
Correct output: -16.8176198654 | Program output: 12.1823801346 
Correct output: 5.5639147954   | Program output: 25.5639147954 
Correct output: 15.7960197363  | Program output: 58.7960197363 
Correct output: -15.2347943829 | Program output: 42.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div in2 float_dec integer_dup_times float_max float_frominteger float_swap float_div -8 integer_inc integer_swap float_dup_items float_div print_integer float_dup_items)
Errors: [32.0 2 41.0 2 13.0 2 49.0 2 80.0 13 9.0 2 10.0 1 22.0 2 15.0 2 20.0 1 57.0 2 36.0 12 39.0 2 59.0 2 9.0 2 42.0 2 7.0 1 38.0 3 28.0 12 73.0 3 11.0 2 29.0 11 20.0 1 43.0 2 58.0 13]
Total: 939.0
Mean: 18.78
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 4812.0739474
Median total errors in population: 987.0
Error averages by case: (177.52907749999983 6.409 189.9214224999998 6.706 181.5921753999998 6.771 186.68050079999983 6.007 216.36961340000045 13.088 161.5940837999999 6.602 167.20560530000026 6.849 182.4578707999998 6.724 182.9764361000001 6.755 173.56470640000006 6.568 202.87707629999952 6.727 177.98879030000032 12.626 195.27187609999964 6.338 192.98970969999988 6.767 176.00100390000017 6.944 185.67591890000008 6.782 166.65247189999988 6.084 207.32666500000036 7.726 174.27173689999972 12.822 230.08531029999978 7.728 165.4188212000004 6.794 174.0085932 11.879 167.5995706000001 6.372 184.6619274 6.393 193.38998370000033 13.502)
Error minima by case: (7.8712 2 11.2932 2 11.0 2 1.748 1 16.8496 9 6.3936 1 1.6072 1 1.4871 2 13.0 2 8.7196 1 1.2785 2 0.606 7 11.5626 1 3.5935 2 7.0 2 8.91 1 2.1457 1 25.5033 2 0.7672 2 18.4009 3 0.2042 2 0.368 8 0.7831 1 9.449 2 1.9508 8)
Average genome size in population (length): 53.893
Average program size in population (points): 54.893
Average percent parens in population: 0.025
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9405
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.692
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.692
Total error diversity:				 0.164
Error (vector) diversity:			 0.179
Behavioral diversity:				 0.202
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4004275
--- Timings ---
Current time: 1529614837504 milliseconds
Total Time:          12.6 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         4.2 seconds, 33.5%
Fitness Testing:      7.2 seconds, 57.0%
Report:               1.1 seconds,  8.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 56253.0
Test mean error for best: 28.12650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 46.2182085795 
Correct output: 44.8179022307  | Program output: 85.8179022307 
Correct output: 95.8032792622  | Program output: 82.8032792622 
Correct output: 8.0949473456   | Program output: 57.0949473456 
Correct output: -64.1503753092 | Program output: 15.8496246908 
Correct output: 27.1310761693  | Program output: 18.1310761693 
Correct output: -34.4699592842 | Program output: -44.4699592842
Correct output: 62.8135887966  | Program output: 84.8135887966 
Correct output: 96.6123363982  | Program output: 81.6123363982 
Correct output: 46.7196465918  | Program output: 26.7196465918 
Correct output: -59.2785304711 | Program output: -2.2785304711 
Correct output: -6.9174150193  | Program output: 29.0825849807 
Correct output: -68.4374020443 | Program output: -29.4374020443
Correct output: -11.1169636129 | Program output: -70.1169636129
Correct output: -76.8272599297 | Program output: -85.8272599297
Correct output: -26.5306664135 | Program output: -68.5306664135
Correct output: -40.4578849398 | Program output: -47.4578849398
Correct output: -124.5033370034 | Program output: -86.5033370034
Correct output: 26.2328206209  | Program output: -1.7671793791 
Correct output: -129.5990711743 | Program output: -56.5990711743
Correct output: -17.8249368738 | Program output: -6.8249368738 
Correct output: -16.8176198654 | Program output: 12.1823801346 
Correct output: 5.5639147954   | Program output: 25.5639147954 
Correct output: 15.7960197363  | Program output: 58.7960197363 
Correct output: -15.2347943829 | Program output: 42.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger})
Best program: (float_stackdepth float_sub float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div in2 float_dec integer_dup_times float_max float_frominteger)
Errors: [32.0 2 41.0 2 13.0 2 49.0 2 80.0 13 9.0 2 10.0 1 22.0 2 15.0 2 20.0 1 57.0 2 36.0 12 39.0 2 59.0 2 9.0 2 42.0 2 7.0 1 38.0 3 28.0 12 73.0 3 11.0 2 29.0 11 20.0 1 43.0 2 58.0 13]
Total: 939.0
Mean: 18.78
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 3559.0528782
Median total errors in population: 944.0
Error averages by case: (136.47186290000002 3.307 144.5304583 3.495 116.6817872 3.465 151.55098619999998 2.675 179.36356270000002 12.704 112.62373659999999 3.439 114.747941 3.404 127.72001890000001 3.472 118.45368640000001 3.473 122.42667909999999 3.3 159.90915900000002 3.526 140.03780129999998 12.428 144.04470870000003 2.856 158.0034111 3.548 114.32551400000001 3.561 143.07654810000002 3.523 112.14982020000001 2.661 143.55223589999997 4.511 129.41908109999997 12.206 174.56300190000005 4.551 118.9108087 3.531 133.86709029999997 11.441 125.8275173 3.239 146.22828510000005 3.306 159.58317620000003 13.362)
Error minima by case: (12.2342 2 13.7089 2 11.0 2 6.111 1 35.4043 10 7.0 1 7.016 1 4.2868 2 13.0 2 11.8071 1 48.6606 2 0.606 9 39.0 1 3.5935 2 6.016 2 19.0072 1 4.016 1 38.0 2 0.7672 2 73.0 3 10.3015 2 8.2612 10 3.5799 1 13.812 2 7.7114 9)
Average genome size in population (length): 35.055
Average program size in population (points): 36.055
Average percent parens in population: 0.038
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.435
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 86
Genome diversity (% unique Plush genomes):	 0.516
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 86
Syntactic diversity (% unique Push programs):	 0.516
Total error diversity:				 0.046
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4884025
--- Timings ---
Current time: 1529614840794 milliseconds
Total Time:          16.1 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.8 seconds, 36.3%
Fitness Testing:      8.6 seconds, 53.4%
Report:               1.5 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 56253.0
Test mean error for best: 28.12650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 46.2182085795 
Correct output: 44.8179022307  | Program output: 85.8179022307 
Correct output: 95.8032792622  | Program output: 82.8032792622 
Correct output: 8.0949473456   | Program output: 57.0949473456 
Correct output: -64.1503753092 | Program output: 15.8496246908 
Correct output: 27.1310761693  | Program output: 18.1310761693 
Correct output: -34.4699592842 | Program output: -44.4699592842
Correct output: 62.8135887966  | Program output: 84.8135887966 
Correct output: 96.6123363982  | Program output: 81.6123363982 
Correct output: 46.7196465918  | Program output: 26.7196465918 
Correct output: -59.2785304711 | Program output: -2.2785304711 
Correct output: -6.9174150193  | Program output: 29.0825849807 
Correct output: -68.4374020443 | Program output: -29.4374020443
Correct output: -11.1169636129 | Program output: -70.1169636129
Correct output: -76.8272599297 | Program output: -85.8272599297
Correct output: -26.5306664135 | Program output: -68.5306664135
Correct output: -40.4578849398 | Program output: -47.4578849398
Correct output: -124.5033370034 | Program output: -86.5033370034
Correct output: 26.2328206209  | Program output: -1.7671793791 
Correct output: -129.5990711743 | Program output: -56.5990711743
Correct output: -17.8249368738 | Program output: -6.8249368738 
Correct output: -16.8176198654 | Program output: 12.1823801346 
Correct output: 5.5639147954   | Program output: 25.5639147954 
Correct output: 15.7960197363  | Program output: 58.7960197363 
Correct output: -15.2347943829 | Program output: 42.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap float_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div in2 float_dec float_frominteger float_swap float_div -8 integer_inc integer_swap float_dup_items float_div print_integer float_dup_items)
Errors: [32.0 2 41.0 2 13.0 2 49.0 2 80.0 13 9.0 2 10.0 1 22.0 2 15.0 2 20.0 1 57.0 2 36.0 12 39.0 2 59.0 2 9.0 2 42.0 2 7.0 1 38.0 3 28.0 12 73.0 3 11.0 2 29.0 11 20.0 1 43.0 2 58.0 13]
Total: 939.0
Mean: 18.78
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2694.2639353
Median total errors in population: 944.0
Error averages by case: (100.2902395 2.772 108.65340880000001 2.813 83.1904444 2.801 115.9621251 2.305 144.92672620000002 12.722 78.9783757 2.75 83.0711345 2.425 91.269103 2.798 85.036655 2.804 89.19669579999999 2.355 125.5814149 2.84 104.0159174 12.172 110.0319497 2.421 127.8402997 2.852 82.45723980000001 2.863 112.3591839 2.812 80.3609508 1.924 109.5543351 3.794 98.4762537 11.653 141.7616445 3.849 83.53079900000002 2.829 97.62344929999998 11.261 89.22402020000001 2.317 110.4322497 2.782 124.3513196 13.174)
Error minima by case: (14.2182 2 5.578 2 5.1667 2 7.0952 1 8.196 9 1.1667 1 2.1667 1 12.4177 2 7.1667 2 3.6762 1 13.0679 2 5.9455 6 3.909 1 4.117 2 1.1667 2 19.5307 1 0.8333 1 38.0 2 7.2918 2 57.2527 3 11.0 2 16.6338 9 4.5736 1 15.796 2 15.0194 8)
Average genome size in population (length): 31.398
Average program size in population (points): 32.398
Average percent parens in population: 0.037
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 5.8945
Median age in population: 5.875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 145
Genome diversity (% unique Plush genomes):	 0.488
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 145
Syntactic diversity (% unique Push programs):	 0.488
Total error diversity:				 0.031
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5670175
--- Timings ---
Current time: 1529614844180 milliseconds
Total Time:          19.5 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         7.6 seconds, 38.9%
Fitness Testing:      9.9 seconds, 50.8%
Report:               1.9 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 56293.0
Test mean error for best: 28.14650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 45.2182085795 
Correct output: 44.8179022307  | Program output: 84.8179022307 
Correct output: 95.8032792622  | Program output: 81.8032792622 
Correct output: 8.0949473456   | Program output: 56.0949473456 
Correct output: -64.1503753092 | Program output: 14.8496246908 
Correct output: 27.1310761693  | Program output: 17.1310761693 
Correct output: -34.4699592842 | Program output: -45.4699592842
Correct output: 62.8135887966  | Program output: 83.8135887966 
Correct output: 96.6123363982  | Program output: 80.6123363982 
Correct output: 46.7196465918  | Program output: 25.7196465918 
Correct output: -59.2785304711 | Program output: -3.2785304711 
Correct output: -6.9174150193  | Program output: 28.0825849807 
Correct output: -68.4374020443 | Program output: -30.4374020443
Correct output: -11.1169636129 | Program output: -71.1169636129
Correct output: -76.8272599297 | Program output: -86.8272599297
Correct output: -26.5306664135 | Program output: -69.5306664135
Correct output: -40.4578849398 | Program output: -48.4578849398
Correct output: -124.5033370034 | Program output: -87.5033370034
Correct output: 26.2328206209  | Program output: -2.7671793791 
Correct output: -129.5990711743 | Program output: -57.5990711743
Correct output: -17.8249368738 | Program output: -7.8249368738 
Correct output: -16.8176198654 | Program output: 11.1823801346 
Correct output: 5.5639147954   | Program output: 24.5639147954 
Correct output: 15.7960197363  | Program output: 57.7960197363 
Correct output: -15.2347943829 | Program output: 41.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div in2 float_dec integer_dup_times float_max float_frominteger float_swap float_div -8 integer_inc integer_swap float_dup_items float_div print_integer float_dup_items)
Errors: [31.0 2 40.0 1 14.0 2 48.0 2 79.0 12 10.0 1 11.0 2 21.0 2 16.0 2 21.0 2 56.0 2 35.0 12 38.0 2 60.0 1 10.0 1 43.0 2 8.0 1 37.0 3 29.0 12 72.0 3 10.0 1 28.0 11 19.0 2 42.0 2 57.0 12]
Total: 930.0
Mean: 18.6
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2940.6710123
Median total errors in population: 939.0
Error averages by case: (110.62054310000002 2.81 118.87701200000001 2.835 97.21616760000002 2.846 126.17035109999999 2.752 151.92459420000003 13.094 89.76373289999998 2.72 95.34148130000001 2.079 101.6162501 2.819 99.03047839999999 2.84 101.7128496 2.022 129.9909889 2.867 113.7394295 12.111 117.9456931 2.87 139.52473990000001 2.885 94.81613029999998 2.89 124.28406070000003 2.778 92.67759610000002 1.953 117.8635698 3.759 105.5609168 11.114 149.75144649999996 3.865 88.3197104 2.853 104.61330830000003 11.232 98.2951986 1.958 120.66195380000002 2.814 134.4448093 13.142)
Error minima by case: (15.1236 2 10.2932 1 1.5215 2 9.0949 1 16.8496 10 5.3936 1 8.0 1 21.0 2 2.3305 2 12.195 1 1.2785 2 1.7855 9 28.4374 1 4.117 1 7.0 1 19.5307 1 5.0 1 37.0 2 0.7672 2 55.5991 3 5.8249 1 13.1824 9 0.5516 1 16.6899 2 14.0142 10)
Average genome size in population (length): 34.161
Average program size in population (points): 35.161
Average percent parens in population: 0.030
Minimum age in population: 5.25
Maximum age in population: 9.1875
Average age in population: 7.3515625
Median age in population: 7.375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 206
Genome diversity (% unique Plush genomes):	 0.514
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 206
Syntactic diversity (% unique Push programs):	 0.514
Total error diversity:				 0.034
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6525875
--- Timings ---
Current time: 1529614847736 milliseconds
Total Time:          23.0 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.4 seconds, 41.0%
Fitness Testing:     11.2 seconds, 48.9%
Report:               2.2 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 56293.0
Test mean error for best: 28.14650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 45.2182085795 
Correct output: 44.8179022307  | Program output: 84.8179022307 
Correct output: 95.8032792622  | Program output: 81.8032792622 
Correct output: 8.0949473456   | Program output: 56.0949473456 
Correct output: -64.1503753092 | Program output: 14.8496246908 
Correct output: 27.1310761693  | Program output: 17.1310761693 
Correct output: -34.4699592842 | Program output: -45.4699592842
Correct output: 62.8135887966  | Program output: 83.8135887966 
Correct output: 96.6123363982  | Program output: 80.6123363982 
Correct output: 46.7196465918  | Program output: 25.7196465918 
Correct output: -59.2785304711 | Program output: -3.2785304711 
Correct output: -6.9174150193  | Program output: 28.0825849807 
Correct output: -68.4374020443 | Program output: -30.4374020443
Correct output: -11.1169636129 | Program output: -71.1169636129
Correct output: -76.8272599297 | Program output: -86.8272599297
Correct output: -26.5306664135 | Program output: -69.5306664135
Correct output: -40.4578849398 | Program output: -48.4578849398
Correct output: -124.5033370034 | Program output: -87.5033370034
Correct output: 26.2328206209  | Program output: -2.7671793791 
Correct output: -129.5990711743 | Program output: -57.5990711743
Correct output: -17.8249368738 | Program output: -7.8249368738 
Correct output: -16.8176198654 | Program output: 11.1823801346 
Correct output: 5.5639147954   | Program output: 24.5639147954 
Correct output: 15.7960197363  | Program output: 57.7960197363 
Correct output: -15.2347943829 | Program output: 41.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div in2 float_dec integer_dup_times float_max float_frominteger float_swap float_div -8 integer_inc integer_swap float_dup_items float_div print_integer float_dup_items)
Errors: [31.0 2 40.0 1 14.0 2 48.0 2 79.0 12 10.0 1 11.0 2 21.0 2 16.0 2 21.0 2 56.0 2 35.0 12 38.0 2 60.0 1 10.0 1 43.0 2 8.0 1 37.0 3 29.0 12 72.0 3 10.0 1 28.0 11 19.0 2 42.0 2 57.0 12]
Total: 930.0
Mean: 18.6
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 3108.2910946
Median total errors in population: 939.0
Error averages by case: (116.3836264 2.838 124.6078946 2.857 103.8256687 2.869 131.8706263 2.806 159.10446960000002 13.168 98.8318056 2.749 101.9721511 2.122 107.334886 2.852 105.63809580000002 2.869 109.42866330000001 2.039 138.30525210000002 2.895 119.76695600000001 12.171 123.4298287 2.919 146.1980921 2.918 101.195223 2.927 130.8763332 2.835 99.27811480000001 2.002 123.06174779999999 3.799 115.27828059999999 11.169 154.9219393 3.901 96.4683072 2.891 112.2457986 11.283 104.8554967 1.977 126.4046263 2.844 140.1032108 13.204)
Error minima by case: (12.6608 2 12.6341 1 11.0 2 6.5375 1 65.7078 9 5.0527 1 8.0 1 21.0 2 13.0 2 14.5359 1 24.0407 2 8.4748 9 38.0 1 4.117 1 7.0 1 19.5307 1 5.0 1 37.0 2 5.9509 2 72.0 3 10.0 1 18.375 10 4.0065 1 14.2386 2 16.7922 11)
Average genome size in population (length): 34.467
Average program size in population (points): 35.467
Average percent parens in population: 0.030
Minimum age in population: 6.25
Maximum age in population: 10.75
Average age in population: 8.84
Median age in population: 8.875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 148
Genome diversity (% unique Plush genomes):	 0.583
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 148
Syntactic diversity (% unique Push programs):	 0.583
Total error diversity:				 0.023
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7389450
--- Timings ---
Current time: 1529614851109 milliseconds
Total Time:          26.3 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.9 seconds, 41.3%
Fitness Testing:     12.7 seconds, 48.5%
Report:               2.6 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 56293.0
Test mean error for best: 28.14650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 45.2182085795 
Correct output: 44.8179022307  | Program output: 84.8179022307 
Correct output: 95.8032792622  | Program output: 81.8032792622 
Correct output: 8.0949473456   | Program output: 56.0949473456 
Correct output: -64.1503753092 | Program output: 14.8496246908 
Correct output: 27.1310761693  | Program output: 17.1310761693 
Correct output: -34.4699592842 | Program output: -45.4699592842
Correct output: 62.8135887966  | Program output: 83.8135887966 
Correct output: 96.6123363982  | Program output: 80.6123363982 
Correct output: 46.7196465918  | Program output: 25.7196465918 
Correct output: -59.2785304711 | Program output: -3.2785304711 
Correct output: -6.9174150193  | Program output: 28.0825849807 
Correct output: -68.4374020443 | Program output: -30.4374020443
Correct output: -11.1169636129 | Program output: -71.1169636129
Correct output: -76.8272599297 | Program output: -86.8272599297
Correct output: -26.5306664135 | Program output: -69.5306664135
Correct output: -40.4578849398 | Program output: -48.4578849398
Correct output: -124.5033370034 | Program output: -87.5033370034
Correct output: 26.2328206209  | Program output: -2.7671793791 
Correct output: -129.5990711743 | Program output: -57.5990711743
Correct output: -17.8249368738 | Program output: -7.8249368738 
Correct output: -16.8176198654 | Program output: 11.1823801346 
Correct output: 5.5639147954   | Program output: 24.5639147954 
Correct output: 15.7960197363  | Program output: 57.7960197363 
Correct output: -15.2347943829 | Program output: 41.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div in2 float_dec integer_dup_times float_max float_frominteger float_swap float_div -8 integer_inc integer_swap float_dup_items float_div print_integer float_dup_items)
Errors: [31.0 2 40.0 1 14.0 2 48.0 2 79.0 12 10.0 1 11.0 2 21.0 2 16.0 2 21.0 2 56.0 2 35.0 12 38.0 2 60.0 1 10.0 1 43.0 2 8.0 1 37.0 3 29.0 12 72.0 3 10.0 1 28.0 11 19.0 2 42.0 2 57.0 12]
Total: 930.0
Mean: 18.6
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2880.5740247999997
Median total errors in population: 939.0
Error averages by case: (108.5576712 2.759 116.92964309999999 2.749 92.3255408 2.777 124.0943011 2.732 152.10441889999998 13.124 87.1658015 2.647 90.33136660000001 2.041 99.67061290000001 2.773 94.15520409999999 2.774 98.10852899999999 1.972 131.69346960000001 2.817 112.12240369999999 12.151 116.1577919 2.849 134.83254259999998 2.798 89.75822500000001 2.799 119.4518522 2.747 87.64327009999998 1.9 115.84763339999999 3.733 104.01895239999999 11.239 147.7733994 3.826 89.4421361 2.761 105.0452877 11.244 97.28431069999999 1.939 118.6274046 2.768 132.3492562 13.164)
Error minima by case: (14.2182 1 11.2932 1 11.0 2 8.0949 1 16.8496 11 6.3936 1 8.0 1 20.0 1 13.0 2 12.195 1 1.2785 2 0.0826 7 28.4374 1 4.117 1 7.0 1 19.5307 1 5.0 1 36.0 2 0.7672 2 55.5991 3 5.8249 1 9.8176 9 5.5639 1 15.796 2 8.2348 11)
Average genome size in population (length): 34.252
Average program size in population (points): 35.252
Average percent parens in population: 0.030
Minimum age in population: 7.90625
Maximum age in population: 12.078125
Average age in population: 10.347828125
Median age in population: 10.40625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 104
Genome diversity (% unique Plush genomes):	 0.628
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 104
Syntactic diversity (% unique Push programs):	 0.628
Total error diversity:				 0.027
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 8247775
--- Timings ---
Current time: 1529614854552 milliseconds
Total Time:          29.8 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.4 seconds, 41.6%
Fitness Testing:     14.3 seconds, 48.0%
Report:               3.0 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 56293.0
Test mean error for best: 28.14650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 45.2182085795 
Correct output: 44.8179022307  | Program output: 84.8179022307 
Correct output: 95.8032792622  | Program output: 81.8032792622 
Correct output: 8.0949473456   | Program output: 56.0949473456 
Correct output: -64.1503753092 | Program output: 14.8496246908 
Correct output: 27.1310761693  | Program output: 17.1310761693 
Correct output: -34.4699592842 | Program output: -45.4699592842
Correct output: 62.8135887966  | Program output: 83.8135887966 
Correct output: 96.6123363982  | Program output: 80.6123363982 
Correct output: 46.7196465918  | Program output: 25.7196465918 
Correct output: -59.2785304711 | Program output: -3.2785304711 
Correct output: -6.9174150193  | Program output: 28.0825849807 
Correct output: -68.4374020443 | Program output: -30.4374020443
Correct output: -11.1169636129 | Program output: -71.1169636129
Correct output: -76.8272599297 | Program output: -86.8272599297
Correct output: -26.5306664135 | Program output: -69.5306664135
Correct output: -40.4578849398 | Program output: -48.4578849398
Correct output: -124.5033370034 | Program output: -87.5033370034
Correct output: 26.2328206209  | Program output: -2.7671793791 
Correct output: -129.5990711743 | Program output: -57.5990711743
Correct output: -17.8249368738 | Program output: -7.8249368738 
Correct output: -16.8176198654 | Program output: 11.1823801346 
Correct output: 5.5639147954   | Program output: 24.5639147954 
Correct output: 15.7960197363  | Program output: 57.7960197363 
Correct output: -15.2347943829 | Program output: 41.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction float_flush} {:instruction float_dup_items} {:instruction float_div} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult float_dup integer_swap integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec print_float float_max float_frominteger float_swap float_div -8 integer_inc float_flush float_dup_items float_div float_swap float_div -8 integer_inc integer_swap float_dup_items float_div print_integer float_dup_items)
Errors: [31.0 2 40.0 1 14.0 2 48.0 2 79.0 12 10.0 1 11.0 2 21.0 2 16.0 2 21.0 2 56.0 2 35.0 12 38.0 2 60.0 1 10.0 1 43.0 2 8.0 1 37.0 3 29.0 12 72.0 3 10.0 1 28.0 11 19.0 2 42.0 2 57.0 12]
Total: 930.0
Mean: 18.6
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 3080.5383947
Median total errors in population: 939.0
Error averages by case: (116.0292617 2.825 124.3340475 2.637 103.3582022 2.845 131.42401500000003 2.797 156.86314770000004 12.919 96.2549184 2.558 101.34210399999999 2.282 107.20903020000002 2.84 105.16867439999997 2.86 108.06558289999997 2.217 135.21235670000002 2.888 119.20099800000003 12.142 123.17644539999998 2.911 145.40069200000002 2.685 100.6935332 2.688 130.1583468 2.838 98.67205570000002 1.978 123.13125079999998 3.828 111.6534499 11.469 154.8720168 3.892 93.42877190000002 2.659 109.53434159999998 11.254 103.71163210000002 2.168 126.0114173 2.835 139.6501025 12.967)
Error minima by case: (8.3849 1 10.2932 1 11.0 2 2.2616 1 57.1504 8 7.0 1 8.0 1 20.0 1 13.0 2 12.195 1 15.4162 2 0.0826 7 37.0 1 4.117 1 7.0 1 19.5307 1 5.0 1 36.0 2 8.2918 2 71.0 3 9.0 1 9.8176 9 0.2694 1 9.9627 2 8.2348 11)
Average genome size in population (length): 34.563
Average program size in population (points): 35.563
Average percent parens in population: 0.030
Minimum age in population: 9.375
Maximum age in population: 13.6796875
Average age in population: 11.8628125
Median age in population: 11.9296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 48
Genome diversity (% unique Plush genomes):	 0.651
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 48
Syntactic diversity (% unique Push programs):	 0.651
Total error diversity:				 0.036
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 9113650
--- Timings ---
Current time: 1529614857605 milliseconds
Total Time:          32.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.8 seconds, 41.8%
Fitness Testing:     15.6 seconds, 47.6%
Report:               3.3 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 56293.0
Test mean error for best: 28.14650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 45.2182085795 
Correct output: 44.8179022307  | Program output: 84.8179022307 
Correct output: 95.8032792622  | Program output: 81.8032792622 
Correct output: 8.0949473456   | Program output: 56.0949473456 
Correct output: -64.1503753092 | Program output: 14.8496246908 
Correct output: 27.1310761693  | Program output: 17.1310761693 
Correct output: -34.4699592842 | Program output: -45.4699592842
Correct output: 62.8135887966  | Program output: 83.8135887966 
Correct output: 96.6123363982  | Program output: 80.6123363982 
Correct output: 46.7196465918  | Program output: 25.7196465918 
Correct output: -59.2785304711 | Program output: -3.2785304711 
Correct output: -6.9174150193  | Program output: 28.0825849807 
Correct output: -68.4374020443 | Program output: -30.4374020443
Correct output: -11.1169636129 | Program output: -71.1169636129
Correct output: -76.8272599297 | Program output: -86.8272599297
Correct output: -26.5306664135 | Program output: -69.5306664135
Correct output: -40.4578849398 | Program output: -48.4578849398
Correct output: -124.5033370034 | Program output: -87.5033370034
Correct output: 26.2328206209  | Program output: -2.7671793791 
Correct output: -129.5990711743 | Program output: -57.5990711743
Correct output: -17.8249368738 | Program output: -7.8249368738 
Correct output: -16.8176198654 | Program output: 11.1823801346 
Correct output: 5.5639147954   | Program output: 24.5639147954 
Correct output: 15.7960197363  | Program output: 57.7960197363 
Correct output: -15.2347943829 | Program output: 41.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_max} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_shove} {:instruction float_yank} {:instruction float_yankdup})
Best program: (float_stackdepth float_sub float_mult float_dup float_stackdepth integer_max float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec print_float integer_sub integer_stackdepth integer_inc integer_max tag_integer_109 integer_shove float_yank float_yankdup)
Errors: [31.0 2 40.0 1 14.0 2 48.0 2 79.0 12 10.0 1 11.0 2 21.0 2 16.0 2 21.0 2 56.0 2 35.0 12 38.0 2 60.0 1 10.0 1 43.0 2 8.0 1 37.0 3 29.0 12 72.0 3 10.0 1 28.0 11 19.0 2 42.0 2 57.0 12]
Total: 930.0
Mean: 18.6
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2519.8537558000003
Median total errors in population: 930.0
Error averages by case: (93.1234587 2.636 101.7374771 1.95 83.617329 2.665 108.83128439999997 2.635 133.97517259999998 12.368 75.16917079999999 1.94 80.2296804 2.527 84.3042839 2.649 85.4635188 2.686 87.71877989999997 2.476 111.0035447 2.695 96.03286560000002 12.093 99.50758689999999 2.718 125.124166 1.991 79.73128139999999 2.002 109.62330680000002 2.691 77.52434319999999 1.76 99.71581589999998 3.681 90.8655132 11.958 132.14214200000004 3.7 68.0141372 1.98 85.39968349999998 11.183 79.9641376 2.44 103.3331039 2.661 117.20897230000003 12.408)
Error minima by case: (14.2182 1 12.2932 1 11.0 2 8.0949 1 16.8496 8 7.0 1 8.0 1 20.0 1 13.0 2 18.0 1 1.2785 2 0.0826 9 28.4374 1 4.117 1 7.0 1 19.5307 1 5.0 1 36.0 2 0.7672 2 55.5991 3 5.8249 1 9.8176 9 5.5639 1 15.796 2 8.2348 9)
Average genome size in population (length): 35.491
Average program size in population (points): 36.491
Average percent parens in population: 0.028
Minimum age in population: 10.375
Maximum age in population: 15.12109375
Average age in population: 13.38409765625
Median age in population: 13.421875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.539
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.539
Total error diversity:				 0.033
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 10001700
--- Timings ---
Current time: 1529614860863 milliseconds
Total Time:          36.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.1 seconds, 41.8%
Fitness Testing:     17.2 seconds, 47.7%
Report:               3.7 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 56370.0
Test mean error for best: 28.18500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 43.2182085795 
Correct output: 44.8179022307  | Program output: 82.8179022307 
Correct output: 95.8032792622  | Program output: 79.8032792622 
Correct output: 8.0949473456   | Program output: 54.0949473456 
Correct output: -64.1503753092 | Program output: 12.8496246908 
Correct output: 27.1310761693  | Program output: 15.1310761693 
Correct output: -34.4699592842 | Program output: -47.4699592842
Correct output: 62.8135887966  | Program output: 81.8135887966 
Correct output: 96.6123363982  | Program output: 78.6123363982 
Correct output: 46.7196465918  | Program output: 23.7196465918 
Correct output: -59.2785304711 | Program output: -5.2785304711 
Correct output: -6.9174150193  | Program output: 26.0825849807 
Correct output: -68.4374020443 | Program output: -32.4374020443
Correct output: -11.1169636129 | Program output: -73.1169636129
Correct output: -76.8272599297 | Program output: -88.8272599297
Correct output: -26.5306664135 | Program output: -71.5306664135
Correct output: -40.4578849398 | Program output: -50.4578849398
Correct output: -124.5033370034 | Program output: -89.5033370034
Correct output: 26.2328206209  | Program output: -4.7671793791 
Correct output: -129.5990711743 | Program output: -59.5990711743
Correct output: -17.8249368738 | Program output: -9.8249368738 
Correct output: -16.8176198654 | Program output: 9.1823801346  
Correct output: 5.5639147954   | Program output: 22.5639147954 
Correct output: 15.7960197363  | Program output: 55.7960197363 
Correct output: -15.2347943829 | Program output: 39.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_div} {:instruction integer_yank} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div in2 float_dec integer_dup_times float_max float_frominteger float_swap float_div -8 integer_inc integer_swap integer_swap float_div integer_yank float_dup_items)
Errors: [29.0 2 38.0 2 16.0 2 46.0 2 77.0 13 12.0 2 13.0 2 19.0 2 18.0 2 23.0 2 54.0 1 33.0 11 36.0 2 62.0 2 12.0 2 45.0 2 10.0 1 35.0 3 31.0 12 70.0 2 8.0 2 26.0 12 17.0 2 40.0 1 55.0 13]
Total: 924.0
Mean: 18.48
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2972.0425404000002
Median total errors in population: 930.0
Error averages by case: (110.80581369999999 2.791 119.90184830000001 1.963 100.81698000000002 2.84 126.7515566 2.787 151.0200656 12.202 93.01463949999999 1.968 98.28026260000001 2.869 102.8674452 2.806 102.62707450000002 2.849 104.99602199999997 2.807 129.56433719999998 2.875 113.84921650000001 12.063 117.93929040000003 2.886 142.28325129999996 2.029 97.75734790000001 2.021 127.07282320000002 2.903 95.6253305 1.959 118.67388709999999 3.891 109.66625709999998 12.124 150.3712544 3.876 87.5760013 2.002 103.4506236 11.203 98.1082396 2.747 121.3965898 2.825 134.1083825 12.232)
Error minima by case: (14.4314 1 38.0 1 12.0 2 8.2405 1 16.8496 8 8.0 1 9.0 1 19.0 1 14.0 2 19.0 1 1.2785 1 0.0826 9 21.8571 1 4.117 1 8.0 1 7.5409 2 6.0 1 34.2089 3 0.7672 8 39.3046 2 1.1649 1 2.1722 10 5.6554 1 16.0163 1 3.755 9)
Average genome size in population (length): 36.201
Average program size in population (points): 37.201
Average percent parens in population: 0.028
Minimum age in population: 11.875
Maximum age in population: 16.814453125
Average age in population: 14.859412109375
Median age in population: 14.92578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 75
Genome diversity (% unique Plush genomes):	 0.575
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.575
Total error diversity:				 0.032
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 10907350
--- Timings ---
Current time: 1529614864135 milliseconds
Total Time:          39.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.6 seconds, 42.1%
Fitness Testing:     18.7 seconds, 47.4%
Report:               4.0 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 56370.0
Test mean error for best: 28.18500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 43.2182085795 
Correct output: 44.8179022307  | Program output: 82.8179022307 
Correct output: 95.8032792622  | Program output: 79.8032792622 
Correct output: 8.0949473456   | Program output: 54.0949473456 
Correct output: -64.1503753092 | Program output: 12.8496246908 
Correct output: 27.1310761693  | Program output: 15.1310761693 
Correct output: -34.4699592842 | Program output: -47.4699592842
Correct output: 62.8135887966  | Program output: 81.8135887966 
Correct output: 96.6123363982  | Program output: 78.6123363982 
Correct output: 46.7196465918  | Program output: 23.7196465918 
Correct output: -59.2785304711 | Program output: -5.2785304711 
Correct output: -6.9174150193  | Program output: 26.0825849807 
Correct output: -68.4374020443 | Program output: -32.4374020443
Correct output: -11.1169636129 | Program output: -73.1169636129
Correct output: -76.8272599297 | Program output: -88.8272599297
Correct output: -26.5306664135 | Program output: -71.5306664135
Correct output: -40.4578849398 | Program output: -50.4578849398
Correct output: -124.5033370034 | Program output: -89.5033370034
Correct output: 26.2328206209  | Program output: -4.7671793791 
Correct output: -129.5990711743 | Program output: -59.5990711743
Correct output: -17.8249368738 | Program output: -9.8249368738 
Correct output: -16.8176198654 | Program output: 9.1823801346  
Correct output: 5.5639147954   | Program output: 22.5639147954 
Correct output: 15.7960197363  | Program output: 55.7960197363 
Correct output: -15.2347943829 | Program output: 39.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult integer_swap integer_rot float_dec integer_rot float_dec float_mult float_dec print_float integer_shove in2 float_dec integer_dup_times float_max float_frominteger float_swap float_swap float_div -8 integer_inc integer_swap float_dup_items float_div print_integer float_dup_items)
Errors: [29.0 2 38.0 2 16.0 2 46.0 2 77.0 13 12.0 2 13.0 2 19.0 2 18.0 2 23.0 2 54.0 1 33.0 11 36.0 2 62.0 2 12.0 2 45.0 2 10.0 1 35.0 3 31.0 12 70.0 2 8.0 2 26.0 12 17.0 2 40.0 1 55.0 13]
Total: 924.0
Mean: 18.48
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 3104.9583052000003
Median total errors in population: 930.0
Error averages by case: (117.98419220000001 2.854 126.37958749999997 2.085 107.6301213 2.908 133.25400769999996 2.867 155.2176106 12.239 96.2020709 2.086 104.2874682 2.958 109.45735359999999 2.883 109.42819489999998 2.94 110.34673579999998 2.883 129.94555640000002 2.931 120.45352550000003 12.068 123.98320589999996 2.985 147.88398709999998 2.144 103.85679010000001 2.148 132.86536080000002 2.967 101.6687419 2.053 124.51458269999999 3.974 107.783397 12.144 156.05860389999998 3.943 89.50348960000001 2.134 107.35244219999996 11.244 104.1398206 2.83 127.8967735 2.884 141.41068530000004 12.302)
Error minima by case: (5.048 1 25.5517 1 12.0 2 8.0949 1 63.1504 8 7.8649 1 9.0 1 19.0 1 14.0 2 19.0 1 52.8781 1 0.7855 9 36.0 1 4.117 1 8.0 1 19.5307 2 6.0 1 35.0 3 6.9666 9 70.0 2 8.0 1 15.4136 9 0.4484 1 3.4702 1 11.5265 8)
Average genome size in population (length): 36.283
Average program size in population (points): 37.283
Average percent parens in population: 0.028
Minimum age in population: 13.67578125
Maximum age in population: 18.2939453125
Average age in population: 16.3304541015625
Median age in population: 16.375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.639
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.639
Total error diversity:				 0.032
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 11815125
--- Timings ---
Current time: 1529614867327 milliseconds
Total Time:          42.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.0 seconds, 42.4%
Fitness Testing:     20.0 seconds, 47.1%
Report:               4.4 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 56476.0
Test mean error for best: 28.23800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 41.2182085795 
Correct output: 44.8179022307  | Program output: 80.8179022307 
Correct output: 95.8032792622  | Program output: 77.8032792622 
Correct output: 8.0949473456   | Program output: 52.0949473456 
Correct output: -64.1503753092 | Program output: 10.8496246908 
Correct output: 27.1310761693  | Program output: 13.1310761693 
Correct output: -34.4699592842 | Program output: -49.4699592842
Correct output: 62.8135887966  | Program output: 79.8135887966 
Correct output: 96.6123363982  | Program output: 76.6123363982 
Correct output: 46.7196465918  | Program output: 21.7196465918 
Correct output: -59.2785304711 | Program output: -7.2785304711 
Correct output: -6.9174150193  | Program output: 24.0825849807 
Correct output: -68.4374020443 | Program output: -34.4374020443
Correct output: -11.1169636129 | Program output: -75.1169636129
Correct output: -76.8272599297 | Program output: -90.8272599297
Correct output: -26.5306664135 | Program output: -73.5306664135
Correct output: -40.4578849398 | Program output: -52.4578849398
Correct output: -124.5033370034 | Program output: -91.5033370034
Correct output: 26.2328206209  | Program output: -6.7671793791 
Correct output: -129.5990711743 | Program output: -61.5990711743
Correct output: -17.8249368738 | Program output: -11.8249368738
Correct output: -16.8176198654 | Program output: 7.1823801346  
Correct output: 5.5639147954   | Program output: 20.5639147954 
Correct output: 15.7960197363  | Program output: 53.7960197363 
Correct output: -15.2347943829 | Program output: 37.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction float_stackdepth} {:instruction integer_dec} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction float_flush} {:instruction in2} {:instruction integer_div} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_dup} {:instruction integer_mod})
Best program: (float_stackdepth integer_rot float_mult float_dup integer_div integer_yank float_stackdepth integer_dec float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div in2 float_dec integer_dup_times in1 float_frominteger float_swap float_div -8 integer_inc float_swap float_div -8 integer_inc integer_swap float_dup_items float_div float_flush in2 integer_div integer_shove float_stackdepth float_dup integer_mod)
Errors: [27.0 2 36.0 2 18.0 2 44.0 2 75.0 13 14.0 2 15.0 2 17.0 2 20.0 1 25.0 2 52.0 2 31.0 12 34.0 2 64.0 2 14.0 2 47.0 2 12.0 2 33.0 3 33.0 11 68.0 3 6.0 1 24.0 12 15.0 2 38.0 2 53.0 13]
Total: 916.0
Mean: 18.32
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2853.2256969
Median total errors in population: 930.0
Error averages by case: (105.1527898 2.759 113.65433290000001 2.083 96.98822170000001 2.823 120.63345569999998 2.756 146.58270610000002 12.352 89.77978319999998 2.09 94.6209864 2.881 96.4508611 2.774 98.80959739999999 2.828 101.56238139999996 2.811 124.62965579999998 2.723 108.17926510000002 11.928 112.64958860000002 2.873 138.7808661 2.158 94.1365799 2.165 123.533679 2.89 91.96017570000001 1.95 112.56785579999999 3.865 106.0898062 12.109 144.5699222 3.718 82.5189538 2.136 98.70819360000002 11.354 92.74053660000003 2.739 115.22100479999999 2.658 128.901498 12.38)
Error minima by case: (14.2182 1 36.0 1 12.0 2 8.0949 1 57.1504 9 8.0 1 9.0 1 17.0 1 14.0 1 19.0 1 52.0 1 0.0826 9 34.0 1 4.117 1 8.0 1 19.5307 2 6.0 1 33.0 3 24.1099 8 68.0 2 6.0 1 9.8176 10 5.5639 1 15.796 1 8.2348 8)
Average genome size in population (length): 36.394
Average program size in population (points): 37.394
Average percent parens in population: 0.028
Minimum age in population: 14.9453125
Maximum age in population: 19.75927734375
Average age in population: 17.81924072265625
Median age in population: 17.820556640625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.651
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.651
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 12725700
--- Timings ---
Current time: 1529614870874 milliseconds
Total Time:          45.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.5 seconds, 42.4%
Fitness Testing:     21.5 seconds, 47.0%
Report:               4.7 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 56476.0
Test mean error for best: 28.23800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 41.2182085795 
Correct output: 44.8179022307  | Program output: 80.8179022307 
Correct output: 95.8032792622  | Program output: 77.8032792622 
Correct output: 8.0949473456   | Program output: 52.0949473456 
Correct output: -64.1503753092 | Program output: 10.8496246908 
Correct output: 27.1310761693  | Program output: 13.1310761693 
Correct output: -34.4699592842 | Program output: -49.4699592842
Correct output: 62.8135887966  | Program output: 79.8135887966 
Correct output: 96.6123363982  | Program output: 76.6123363982 
Correct output: 46.7196465918  | Program output: 21.7196465918 
Correct output: -59.2785304711 | Program output: -7.2785304711 
Correct output: -6.9174150193  | Program output: 24.0825849807 
Correct output: -68.4374020443 | Program output: -34.4374020443
Correct output: -11.1169636129 | Program output: -75.1169636129
Correct output: -76.8272599297 | Program output: -90.8272599297
Correct output: -26.5306664135 | Program output: -73.5306664135
Correct output: -40.4578849398 | Program output: -52.4578849398
Correct output: -124.5033370034 | Program output: -91.5033370034
Correct output: 26.2328206209  | Program output: -6.7671793791 
Correct output: -129.5990711743 | Program output: -61.5990711743
Correct output: -17.8249368738 | Program output: -11.8249368738
Correct output: -16.8176198654 | Program output: 7.1823801346  
Correct output: 5.5639147954   | Program output: 20.5639147954 
Correct output: 15.7960197363  | Program output: 53.7960197363 
Correct output: -15.2347943829 | Program output: 37.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_div} {:instruction integer_yank} {:instruction float_dup_items})
Best program: (float_stackdepth integer_fromfloat float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div in2 float_dec integer_dup_times float_max float_frominteger float_swap float_div -8 integer_inc integer_swap integer_swap float_div integer_yank float_dup_items)
Errors: [27.0 2 36.0 2 18.0 2 44.0 2 75.0 13 14.0 2 15.0 2 17.0 2 20.0 1 25.0 2 52.0 2 31.0 12 34.0 2 64.0 2 14.0 2 47.0 2 12.0 2 33.0 3 33.0 11 68.0 3 6.0 1 24.0 12 15.0 2 38.0 2 53.0 13]
Total: 916.0
Mean: 18.32
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2545.309080600001
Median total errors in population: 924.0
Error averages by case: (96.58951250000001 2.65 105.18554509999998 2.386 84.3724378 2.693 112.18343289999999 2.675 133.72306440000003 12.705 72.3077163 2.39 80.72441640000001 2.749 87.8665386 2.665 86.22004510000001 2.72 86.51124889999996 2.7 108.5737554 2.194 98.40143400000004 11.505 102.23988919999998 2.751 125.53335309999999 2.441 80.24014849999998 2.441 110.06587250000001 2.754 78.03753019999999 1.841 102.97685129999999 3.745 85.67973199999997 12.082 135.26330820000004 3.197 66.14402899999997 2.383 84.73200440000001 11.734 81.56182780000002 2.656 106.73630790000001 2.157 120.4630791 12.762)
Error minima by case: (14.2182 1 36.0 1 13.0 2 8.0949 2 32.8772 7 9.0 1 10.0 1 17.0 1 15.0 1 20.0 1 5.9514 1 0.0826 9 28.5901 2 4.117 1 9.0 1 19.5307 2 7.0 1 27.4758 3 22.5755 9 32.5715 2 6.0 1 9.8176 10 5.5639 1 15.796 1 8.2348 8)
Average genome size in population (length): 36.655
Average program size in population (points): 37.655
Average percent parens in population: 0.027
Minimum age in population: 16.673828125
Maximum age in population: 21.199462890625
Average age in population: 19.23236791992188
Median age in population: 19.28515625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 61
Genome diversity (% unique Plush genomes):	 0.599
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 61
Syntactic diversity (% unique Push programs):	 0.599
Total error diversity:				 0.033
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 13642325
--- Timings ---
Current time: 1529614874076 milliseconds
Total Time:          49.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.9 seconds, 42.4%
Fitness Testing:     22.9 seconds, 46.5%
Report:               5.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 56748.0
Test mean error for best: 28.37400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 37.2182085795 
Correct output: 44.8179022307  | Program output: 76.8179022307 
Correct output: 95.8032792622  | Program output: 73.8032792622 
Correct output: 8.0949473456   | Program output: 48.0949473456 
Correct output: -64.1503753092 | Program output: 6.8496246908  
Correct output: 27.1310761693  | Program output: 9.1310761693  
Correct output: -34.4699592842 | Program output: -53.4699592842
Correct output: 62.8135887966  | Program output: 75.8135887966 
Correct output: 96.6123363982  | Program output: 72.6123363982 
Correct output: 46.7196465918  | Program output: 17.7196465918 
Correct output: -59.2785304711 | Program output: -11.2785304711
Correct output: -6.9174150193  | Program output: 20.0825849807 
Correct output: -68.4374020443 | Program output: -38.4374020443
Correct output: -11.1169636129 | Program output: -79.1169636129
Correct output: -76.8272599297 | Program output: -94.8272599297
Correct output: -26.5306664135 | Program output: -77.5306664135
Correct output: -40.4578849398 | Program output: -56.4578849398
Correct output: -124.5033370034 | Program output: -95.5033370034
Correct output: 26.2328206209  | Program output: -10.7671793791
Correct output: -129.5990711743 | Program output: -65.5990711743
Correct output: -17.8249368738 | Program output: -15.8249368738
Correct output: -16.8176198654 | Program output: 3.1823801346  
Correct output: 5.5639147954   | Program output: 16.5639147954 
Correct output: 15.7960197363  | Program output: 49.7960197363 
Correct output: -15.2347943829 | Program output: 33.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub})
Best program: (float_stackdepth float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub)
Errors: [23.0 2 32.0 2 22.0 2 40.0 1 71.0 12 18.0 2 19.0 2 13.0 2 24.0 2 29.0 2 48.0 2 27.0 12 30.0 1 68.0 2 18.0 2 51.0 2 16.0 2 29.0 3 37.0 13 64.0 3 2.0 1 20.0 12 11.0 2 34.0 2 49.0 13]
Total: 896.0
Mean: 17.92
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 3041.2468024000004
Median total errors in population: 924.0
Error averages by case: (115.75358150000001 2.855 124.4335382 2.892 103.563843 2.889 131.266886 2.851 152.1398975 13.02 91.7046951 2.881 100.90001849999999 2.955 107.4279957 2.88 105.3724805 2.883 105.49920989999998 2.888 128.59065280000002 2.282 117.33121990000002 11.386 122.14581089999999 2.962 145.2256533 2.952 100.7209743 2.942 130.084954 2.953 98.3627479 2.24 123.29424239999999 3.954 105.80545279999998 12.064 154.86506020000002 3.266 87.1451926 2.727 104.25647959999999 12.079 101.4431272 2.843 125.9077996 2.231 139.046289 13.084)
Error minima by case: (13.9778 1 32.0 1 13.0 1 8.0949 1 60.0092 7 9.0 1 11.0 2 13.0 1 15.0 1 20.0 2 7.3133 1 0.2145 8 30.0 1 4.117 1 10.0 1 19.5307 1 8.0 1 29.0 2 15.4675 10 64.0 2 2.0 1 12.443 10 1.4484 2 15.5435 1 9.5265 8)
Average genome size in population (length): 38.402
Average program size in population (points): 39.402
Average percent parens in population: 0.026
Minimum age in population: 18.6962890625
Maximum age in population: 22.74658203125
Average age in population: 20.75958435058594
Median age in population: 20.8016357421875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 57
Genome diversity (% unique Plush genomes):	 0.558
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 57
Syntactic diversity (% unique Push programs):	 0.558
Total error diversity:				 0.04
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 14602800
--- Timings ---
Current time: 1529614877352 milliseconds
Total Time:          52.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.4 seconds, 42.6%
Fitness Testing:     24.3 seconds, 46.3%
Report:               5.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 56748.0
Test mean error for best: 28.37400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 37.2182085795 
Correct output: 44.8179022307  | Program output: 76.8179022307 
Correct output: 95.8032792622  | Program output: 73.8032792622 
Correct output: 8.0949473456   | Program output: 48.0949473456 
Correct output: -64.1503753092 | Program output: 6.8496246908  
Correct output: 27.1310761693  | Program output: 9.1310761693  
Correct output: -34.4699592842 | Program output: -53.4699592842
Correct output: 62.8135887966  | Program output: 75.8135887966 
Correct output: 96.6123363982  | Program output: 72.6123363982 
Correct output: 46.7196465918  | Program output: 17.7196465918 
Correct output: -59.2785304711 | Program output: -11.2785304711
Correct output: -6.9174150193  | Program output: 20.0825849807 
Correct output: -68.4374020443 | Program output: -38.4374020443
Correct output: -11.1169636129 | Program output: -79.1169636129
Correct output: -76.8272599297 | Program output: -94.8272599297
Correct output: -26.5306664135 | Program output: -77.5306664135
Correct output: -40.4578849398 | Program output: -56.4578849398
Correct output: -124.5033370034 | Program output: -95.5033370034
Correct output: 26.2328206209  | Program output: -10.7671793791
Correct output: -129.5990711743 | Program output: -65.5990711743
Correct output: -17.8249368738 | Program output: -15.8249368738
Correct output: -16.8176198654 | Program output: 3.1823801346  
Correct output: 5.5639147954   | Program output: 16.5639147954 
Correct output: 15.7960197363  | Program output: 49.7960197363 
Correct output: -15.2347943829 | Program output: 33.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub})
Best program: (float_stackdepth float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub)
Errors: [23.0 2 32.0 2 22.0 2 40.0 1 71.0 12 18.0 2 19.0 2 13.0 2 24.0 2 29.0 2 48.0 2 27.0 12 30.0 1 68.0 2 18.0 2 51.0 2 16.0 2 29.0 3 37.0 13 64.0 3 2.0 1 20.0 12 11.0 2 34.0 2 49.0 13]
Total: 896.0
Mean: 17.92
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 3143.4541796
Median total errors in population: 923.0
Error averages by case: (118.18119479999999 3.077 126.69292299999998 3.1 109.8195329 3.085 133.2596048 3.04 155.2869054 12.994 98.2385711 3.086 107.010019 3.176 110.04283149999999 3.1 111.60662250000001 2.95 112.17559139999999 3.092 129.77185780000002 2.984 120.38070340000003 11.859 125.2761457 3.184 150.2890292 3.167 106.7920862 3.173 135.38145730000002 3.167 104.43325829999998 2.958 126.12207689999998 4.155 109.42449089999998 11.909 157.35322420000003 3.959 88.97552330000003 2.46 107.6003818 12.087 105.32778629999999 3.036 128.006819 2.92 141.24554290000003 13.042)
Error minima by case: (14.2182 1 32.0 1 13.0 1 8.0949 1 35.9956 7 9.0 1 6.3152 1 13.0 1 15.0 1 20.0 1 31.1237 1 1.2145 8 30.0 1 5.9971 1 8.1727 1 1.6241 1 6.5421 1 29.0 2 8.3607 10 64.0 2 0.7109 1 0.2965 8 2.4484 1 15.796 1 1.8793 9)
Average genome size in population (length): 41.976
Average program size in population (points): 42.976
Average percent parens in population: 0.024
Minimum age in population: 19.7041015625
Maximum age in population: 24.06097412109375
Average age in population: 22.20797229003906
Median age in population: 22.26290893554688
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.596
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.047
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 15652975
--- Timings ---
Current time: 1529614880744 milliseconds
Total Time:          56.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.8 seconds, 42.6%
Fitness Testing:     25.9 seconds, 46.3%
Report:               6.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 56902.0
Test mean error for best: 28.45100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 36.2182085795 
Correct output: 44.8179022307  | Program output: 75.8179022307 
Correct output: 95.8032792622  | Program output: 72.8032792622 
Correct output: 8.0949473456   | Program output: 47.0949473456 
Correct output: -64.1503753092 | Program output: 5.8496246908  
Correct output: 27.1310761693  | Program output: 8.1310761693  
Correct output: -34.4699592842 | Program output: -54.4699592842
Correct output: 62.8135887966  | Program output: 74.8135887966 
Correct output: 96.6123363982  | Program output: 71.6123363982 
Correct output: 46.7196465918  | Program output: 16.7196465918 
Correct output: -59.2785304711 | Program output: -12.2785304711
Correct output: -6.9174150193  | Program output: 19.0825849807 
Correct output: -68.4374020443 | Program output: -39.4374020443
Correct output: -11.1169636129 | Program output: -80.1169636129
Correct output: -76.8272599297 | Program output: -95.8272599297
Correct output: -26.5306664135 | Program output: -78.5306664135
Correct output: -40.4578849398 | Program output: -57.4578849398
Correct output: -124.5033370034 | Program output: -96.5033370034
Correct output: 26.2328206209  | Program output: -11.7671793791
Correct output: -129.5990711743 | Program output: -66.5990711743
Correct output: -17.8249368738 | Program output: -16.8249368738
Correct output: -16.8176198654 | Program output: 2.1823801346  
Correct output: 5.5639147954   | Program output: 15.5639147954 
Correct output: 15.7960197363  | Program output: 48.7960197363 
Correct output: -15.2347943829 | Program output: 32.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction float_flush} {:instruction in2} {:instruction integer_div} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_dup} {:instruction integer_mod})
Best program: (integer_mult float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div in2 float_dec integer_dup_times in1 float_frominteger float_swap float_div -8 integer_inc float_swap float_div -8 integer_inc integer_swap float_dup_items float_div float_flush in2 integer_div integer_shove float_stackdepth float_dup integer_mod)
Errors: [22.0 2 31.0 2 23.0 2 39.0 2 70.0 13 19.0 2 20.0 1 12.0 2 25.0 2 30.0 1 47.0 2 26.0 12 29.0 2 69.0 2 19.0 2 52.0 2 17.0 2 28.0 3 38.0 13 63.0 3 1.0 1 19.0 12 10.0 1 33.0 2 48.0 13]
Total: 891.0
Mean: 17.82
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3426.026969700002
Median total errors in population: 916.0
Error averages by case: (130.7377352 3.233 139.00452589999998 3.268 123.5228697 3.194 145.61785949999995 3.181 159.96124140000003 12.968 105.1171974 3.263 122.0606528 3.377 122.55049109999999 3.263 125.28775799999998 2.891 122.42119089999994 3.251 135.49923809999999 3.268 131.3061662 12.044 138.03124399999996 3.333 164.6097491 3.342 121.86170100000002 3.374 149.99178240000003 3.301 119.53128139999998 3.334 139.57004479999998 4.196 117.23645009999997 11.687 170.34151459999993 4.216 94.75689080000004 2.487 111.43891310000001 12.029 113.64616849999999 3.175 140.4124578 3.23 153.5828459 13.024)
Error minima by case: (13.2182 1 13.8179 1 0.8698 1 7.0949 1 59.1504 7 3.8689 1 10.0 1 12.0 1 0.0607 1 15.7196 1 47.0 1 1.4068 8 29.0 1 4.117 1 9.0 1 17.1379 1 7.0 1 28.0 2 4.7672 10 63.0 2 1.0 1 11.5255 10 4.4484 1 14.796 1 9.0142 10)
Average genome size in population (length): 48.117
Average program size in population (points): 49.117
Average percent parens in population: 0.021
Minimum age in population: 21.4627685546875
Maximum age in population: 25.3865966796875
Average age in population: 23.55266906738281
Median age in population: 23.586669921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.652
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.652
Total error diversity:				 0.053
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 16856425
--- Timings ---
Current time: 1529614884295 milliseconds
Total Time:          59.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.3 seconds, 42.6%
Fitness Testing:     27.5 seconds, 46.3%
Report:               6.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 57266.0
Test mean error for best: 28.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 33.2182085795 
Correct output: 44.8179022307  | Program output: 72.8179022307 
Correct output: 95.8032792622  | Program output: 69.8032792622 
Correct output: 8.0949473456   | Program output: 44.0949473456 
Correct output: -64.1503753092 | Program output: 2.8496246908  
Correct output: 27.1310761693  | Program output: 5.1310761693  
Correct output: -34.4699592842 | Program output: -57.4699592842
Correct output: 62.8135887966  | Program output: 71.8135887966 
Correct output: 96.6123363982  | Program output: 68.6123363982 
Correct output: 46.7196465918  | Program output: 13.7196465918 
Correct output: -59.2785304711 | Program output: -15.2785304711
Correct output: -6.9174150193  | Program output: 16.0825849807 
Correct output: -68.4374020443 | Program output: -42.4374020443
Correct output: -11.1169636129 | Program output: -83.1169636129
Correct output: -76.8272599297 | Program output: -98.8272599297
Correct output: -26.5306664135 | Program output: -81.5306664135
Correct output: -40.4578849398 | Program output: -60.4578849398
Correct output: -124.5033370034 | Program output: -99.5033370034
Correct output: 26.2328206209  | Program output: -14.7671793791
Correct output: -129.5990711743 | Program output: -69.5990711743
Correct output: -17.8249368738 | Program output: -19.8249368738
Correct output: -16.8176198654 | Program output: -0.8176198654 
Correct output: 5.5639147954   | Program output: 12.5639147954 
Correct output: 15.7960197363  | Program output: 45.7960197363 
Correct output: -15.2347943829 | Program output: 29.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction print_integer})
Best program: (float_stackdepth integer_fromfloat float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_mult integer_rot float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_dec float_mult float_dec float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div integer_div in2 float_dec integer_dup_times float_max float_frominteger float_swap float_div -8 integer_inc integer_swap float_dup_items float_div print_integer)
Errors: [19.0 2 28.0 2 26.0 2 36.0 2 67.0 13 22.0 2 23.0 2 9.0 2 28.0 2 33.0 2 44.0 2 23.0 11 26.0 2 72.0 2 22.0 2 55.0 2 20.0 1 25.0 3 41.0 13 60.0 2 2.0 1 16.0 2 7.0 2 30.0 1 45.0 13]
Total: 869.0
Mean: 17.38
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2968.4101143000003
Median total errors in population: 905.0
Error averages by case: (112.5056625 3.023 120.86557339999999 3.041 106.0655919 2.856 126.91934829999998 2.838 145.80773970000004 12.847 89.70512960000002 3.006 102.9540702 3.079 103.8696824 3.039 107.87645140000001 2.933 105.79468659999996 2.989 116.5564731 2.923 113.71156810000005 12.049 117.98189829999998 2.965 147.2784247 3.085 102.7462398 3.084 131.2714431 2.877 100.42095090000001 3.081 119.29978320000001 3.691 97.79516659999999 12.141 150.08632250000002 3.887 75.9082877 2.186 96.71410759999999 11.868 95.534964 2.953 122.44023879999999 3.028 135.9243099 12.907)
Error minima by case: (14.2182 1 27.0 1 12.0 1 8.0949 1 57.293 8 8.0 1 9.0 1 8.0 1 14.0 1 19.0 1 43.0 1 0.9642 9 25.0 1 2.5529 1 8.0 1 20.1921 1 6.0 1 24.0 2 15.0412 9 59.0 2 0.0 0 9.4136 1 5.5639 1 15.796 1 5.5265 10)
Average genome size in population (length): 48.295
Average program size in population (points): 49.295
Average percent parens in population: 0.021
Minimum age in population: 22.65264892578125
Maximum age in population: 26.81622314453125
Average age in population: 25.01651759338379
Median age in population: 25.07192993164062
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 47
Genome diversity (% unique Plush genomes):	 0.642
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.642
Total error diversity:				 0.055
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 18064225
--- Timings ---
Current time: 1529614888025 milliseconds
Total Time:          63.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.8 seconds, 42.5%
Fitness Testing:     29.1 seconds, 46.2%
Report:               7.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 57816.0
Test mean error for best: 28.90800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 30.2182085795 
Correct output: 44.8179022307  | Program output: 69.8179022307 
Correct output: 95.8032792622  | Program output: 66.8032792622 
Correct output: 8.0949473456   | Program output: 41.0949473456 
Correct output: -64.1503753092 | Program output: -0.1503753092 
Correct output: 27.1310761693  | Program output: 2.1310761693  
Correct output: -34.4699592842 | Program output: -60.4699592842
Correct output: 62.8135887966  | Program output: 68.8135887966 
Correct output: 96.6123363982  | Program output: 65.6123363982 
Correct output: 46.7196465918  | Program output: 10.7196465918 
Correct output: -59.2785304711 | Program output: -18.2785304711
Correct output: -6.9174150193  | Program output: 13.0825849807 
Correct output: -68.4374020443 | Program output: -45.4374020443
Correct output: -11.1169636129 | Program output: -86.1169636129
Correct output: -76.8272599297 | Program output: -101.8272599297
Correct output: -26.5306664135 | Program output: -84.5306664135
Correct output: -40.4578849398 | Program output: -63.4578849398
Correct output: -124.5033370034 | Program output: -102.5033370034
Correct output: 26.2328206209  | Program output: -17.7671793791
Correct output: -129.5990711743 | Program output: -72.5990711743
Correct output: -17.8249368738 | Program output: -22.8249368738
Correct output: -16.8176198654 | Program output: -3.8176198654 
Correct output: 5.5639147954   | Program output: 9.5639147954  
Correct output: 15.7960197363  | Program output: 42.7960197363 
Correct output: -15.2347943829 | Program output: 26.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_sub})
Best program: (float_stackdepth float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_mult float_dec float_dec integer_rot float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_inc integer_sub)
Errors: [16.0 2 25.0 2 29.0 2 33.0 2 64.0 2 25.0 1 26.0 2 6.0 1 31.0 2 36.0 2 41.0 2 20.0 12 23.0 2 75.0 2 25.0 3 58.0 2 23.0 2 22.0 2 44.0 13 57.0 2 5.0 2 13.0 2 4.0 1 27.0 2 42.0 13]
Total: 850.0
Mean: 17.0
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3280.493122900001
Median total errors in population: 896.0
Error averages by case: (123.98202859999999 3.263 132.9913197 3.281 120.39513310000001 3.229 139.0012907 2.873 156.18679030000007 12.574 103.8041853 3.231 116.84901819999999 3.204 116.70141070000003 3.276 122.16924089999998 3.301 119.44941189999996 3.113 123.24769720000002 3.306 124.29012230000005 12.012 130.19061849999997 2.997 160.14718239999993 3.325 117.4207376 3.335 145.33775679999997 3.197 114.42056669999997 3.334 132.7608424 4.17 107.90950700000002 12.668 163.22024770000004 4.312 86.82104020000007 2.467 107.73621429999994 11.739 107.4770674 3.083 133.9215103 3.288 146.53618270000007 12.948)
Error minima by case: (13.2182 1 25.0 1 12.0 1 7.0949 1 53.241 2 8.0 1 9.0 1 6.0 1 14.0 1 19.0 1 4.8013 1 0.0826 8 23.0 1 0.2745 1 8.0 1 17.0823 1 6.0 1 22.0 2 25.2328 8 57.0 2 0.0 0 6.443 1 4.0 1 14.796 1 4.2967 6)
Average genome size in population (length): 49.792
Average program size in population (points): 50.792
Average percent parens in population: 0.021
Minimum age in population: 23.9549560546875
Maximum age in population: 28.48472595214844
Average age in population: 26.40817805480957
Median age in population: 26.44716262817383
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.647
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.647
Total error diversity:				 0.073
Error (vector) diversity:			 0.077
Behavioral diversity:				 0.08
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 19309350
--- Timings ---
Current time: 1529614891543 milliseconds
Total Time:          66.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.2 seconds, 42.4%
Fitness Testing:     30.7 seconds, 46.1%
Report:               7.6 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 58194.0
Test mean error for best: 29.09700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 28.2182085795 
Correct output: 44.8179022307  | Program output: 67.8179022307 
Correct output: 95.8032792622  | Program output: 64.8032792622 
Correct output: 8.0949473456   | Program output: 39.0949473456 
Correct output: -64.1503753092 | Program output: -2.1503753092 
Correct output: 27.1310761693  | Program output: 0.1310761693  
Correct output: -34.4699592842 | Program output: -62.4699592842
Correct output: 62.8135887966  | Program output: 66.8135887966 
Correct output: 96.6123363982  | Program output: 63.6123363982 
Correct output: 46.7196465918  | Program output: 8.7196465918  
Correct output: -59.2785304711 | Program output: -20.2785304711
Correct output: -6.9174150193  | Program output: 11.0825849807 
Correct output: -68.4374020443 | Program output: -47.4374020443
Correct output: -11.1169636129 | Program output: -88.1169636129
Correct output: -76.8272599297 | Program output: -103.8272599297
Correct output: -26.5306664135 | Program output: -86.5306664135
Correct output: -40.4578849398 | Program output: -65.4578849398
Correct output: -124.5033370034 | Program output: -104.5033370034
Correct output: 26.2328206209  | Program output: -19.7671793791
Correct output: -129.5990711743 | Program output: -74.5990711743
Correct output: -17.8249368738 | Program output: -24.8249368738
Correct output: -16.8176198654 | Program output: -5.8176198654 
Correct output: 5.5639147954   | Program output: 7.5639147954  
Correct output: 15.7960197363  | Program output: 40.7960197363 
Correct output: -15.2347943829 | Program output: 24.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_dup} {:instruction integer_mod})
Best program: (integer_mult float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult integer_swap integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_rot float_dec float_mult integer_inc integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div integer_rot float_dec integer_dup_times in1 float_frominteger float_swap float_div -8 integer_inc float_swap float_div -8 integer_inc integer_swap integer_div integer_shove float_stackdepth float_dup integer_mod)
Errors: [14.0 2 23.0 2 31.0 2 31.0 2 62.0 2 27.0 2 28.0 2 4.0 1 33.0 2 38.0 2 39.0 2 18.0 12 21.0 2 77.0 2 27.0 3 60.0 1 25.0 2 20.0 1 46.0 13 55.0 3 7.0 2 11.0 2 2.0 1 25.0 2 40.0 13]
Total: 844.0
Mean: 16.88
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3103.1248718999996
Median total errors in population: 891.0
Error averages by case: (115.20355440000002 3.053 123.6076042 3.012 115.71084699999997 3.123 130.24830969999996 2.998 149.41116139999997 12.559 102.24822119999999 2.997 112.03599150000001 2.908 106.91600060000002 3.034 117.51643109999999 3.142 116.85820799999999 2.829 114.7950828 3.182 116.1886564 11.933 121.17169740000001 3.124 155.55987119999998 3.079 111.61040410000001 3.101 140.527024 3.204 109.4213026 3.131 121.6730011 4.132 104.4633152 12.858 152.92482349999997 4.102 78.11891500000003 2.238 101.0082129 10.102 100.13780560000001 2.773 125.02378739999999 3.048 138.21564360000002 12.867)
Error minima by case: (13.0 1 22.0 1 12.0 1 8.0949 1 32.3656 2 8.0 1 9.0 1 3.0 1 14.0 1 19.0 1 21.4037 1 0.8464 8 20.0 1 0.0454 1 8.0 1 12.1379 1 6.0 1 19.0 1 0.9725 9 33.0831 2 0.0 0 6.4136 1 1.0 1 15.796 1 2.5265 8)
Average genome size in population (length): 53.019
Average program size in population (points): 54.019
Average percent parens in population: 0.019
Minimum age in population: 25.55770874023438
Maximum age in population: 29.82211303710938
Average age in population: 27.87741054153442
Median age in population: 27.92265701293945
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.678
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.678
Total error diversity:				 0.063
Error (vector) diversity:			 0.065
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 20635050
--- Timings ---
Current time: 1529614895326 milliseconds
Total Time:          70.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.8 seconds, 42.4%
Fitness Testing:     32.4 seconds, 46.0%
Report:               8.1 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 59152.0
Test mean error for best: 29.57600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 24.2182085795 
Correct output: 44.8179022307  | Program output: 63.8179022307 
Correct output: 95.8032792622  | Program output: 60.8032792622 
Correct output: 8.0949473456   | Program output: 35.0949473456 
Correct output: -64.1503753092 | Program output: -6.1503753092 
Correct output: 27.1310761693  | Program output: -3.8689238307 
Correct output: -34.4699592842 | Program output: -66.4699592842
Correct output: 62.8135887966  | Program output: 62.8135887966 
Correct output: 96.6123363982  | Program output: 59.6123363982 
Correct output: 46.7196465918  | Program output: 4.7196465918  
Correct output: -59.2785304711 | Program output: -24.2785304711
Correct output: -6.9174150193  | Program output: 7.0825849807  
Correct output: -68.4374020443 | Program output: -51.4374020443
Correct output: -11.1169636129 | Program output: -92.1169636129
Correct output: -76.8272599297 | Program output: -107.8272599297
Correct output: -26.5306664135 | Program output: -90.5306664135
Correct output: -40.4578849398 | Program output: -69.4578849398
Correct output: -124.5033370034 | Program output: -108.5033370034
Correct output: 26.2328206209  | Program output: -23.7671793791
Correct output: -129.5990711743 | Program output: -78.5990711743
Correct output: -17.8249368738 | Program output: -28.8249368738
Correct output: -16.8176198654 | Program output: -9.8176198654 
Correct output: 5.5639147954   | Program output: 3.5639147954  
Correct output: 15.7960197363  | Program output: 36.7960197363 
Correct output: -15.2347943829 | Program output: 20.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction float_swap} {:instruction float_div} {:instruction -9} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction float_flush} {:instruction in2})
Best program: (float_stackdepth float_sub float_stackdepth integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times float_dec float_dup_times float_dec float_mult float_dec integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div in2 float_dec integer_dup_times in1 float_frominteger float_swap float_div -8 integer_inc float_swap float_div -9 integer_inc integer_swap float_dup_items float_div float_flush in2)
Errors: [10.0 1 19.0 2 35.0 2 27.0 2 58.0 1 31.0 12 32.0 2 0.0 0 37.0 2 42.0 1 35.0 2 14.0 12 17.0 2 81.0 2 31.0 3 64.0 2 29.0 2 16.0 2 50.0 12 51.0 3 11.0 2 7.0 2 2.0 1 21.0 2 36.0 13]
Total: 843.0
Mean: 16.86
Genome size: 94
Size: 95
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3292.2224315
Median total errors in population: 869.0
Error averages by case: (122.3858174 3.163 130.71887940000002 3.121 129.6512102 3.229 137.28097679999996 3.184 150.60383330000002 11.814 110.6824825 3.246 125.86281499999998 3.314 114.19618280000003 3.03 131.3682054 3.231 126.90067309999996 3.202 112.90676730000001 3.252 120.76550690000002 11.731 127.94266729999998 3.305 168.8588006 3.21 125.53784069999999 3.368 154.045402 3.332 123.34832530000001 3.035 128.69145819999997 4.013 108.195138 12.809 159.512535 3.94 80.37844900000002 2.563 102.45465979999999 5.804 103.1575098 3.044 132.1119101 2.935 144.9463856 12.843)
Error minima by case: (1.1071 1 19.0 1 13.0 1 9.2647 1 7.8772 1 9.0 1 10.0 1 0.0 0 15.0 1 20.0 1 1.2785 1 0.0784 9 12.1643 1 0.3444 1 9.0 1 15.3647 1 7.0 1 16.0 1 0.7672 8 51.0 2 0.0 0 5.7448 1 0.0 0 5.0297 1 3.5812 6)
Average genome size in population (length): 57.146
Average program size in population (points): 58.146
Average percent parens in population: 0.018
Minimum age in population: 26.803466796875
Maximum age in population: 31.34295272827148
Average age in population: 29.37606472015381
Median age in population: 29.41365432739258
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.731
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.731
Total error diversity:				 0.069
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 22063900
--- Timings ---
Current time: 1529614899305 milliseconds
Total Time:          74.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.4 seconds, 42.3%
Fitness Testing:     34.2 seconds, 46.0%
Report:               8.6 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 58907.0
Test mean error for best: 29.45350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 25.2182085795 
Correct output: 44.8179022307  | Program output: 64.8179022307 
Correct output: 95.8032792622  | Program output: 61.8032792622 
Correct output: 8.0949473456   | Program output: 36.0949473456 
Correct output: -64.1503753092 | Program output: -5.1503753092 
Correct output: 27.1310761693  | Program output: -2.8689238307 
Correct output: -34.4699592842 | Program output: -65.4699592842
Correct output: 62.8135887966  | Program output: 63.8135887966 
Correct output: 96.6123363982  | Program output: 60.6123363982 
Correct output: 46.7196465918  | Program output: 5.7196465918  
Correct output: -59.2785304711 | Program output: -23.2785304711
Correct output: -6.9174150193  | Program output: 8.0825849807  
Correct output: -68.4374020443 | Program output: -50.4374020443
Correct output: -11.1169636129 | Program output: -91.1169636129
Correct output: -76.8272599297 | Program output: -106.8272599297
Correct output: -26.5306664135 | Program output: -89.5306664135
Correct output: -40.4578849398 | Program output: -68.4578849398
Correct output: -124.5033370034 | Program output: -107.5033370034
Correct output: 26.2328206209  | Program output: -22.7671793791
Correct output: -129.5990711743 | Program output: -77.5990711743
Correct output: -17.8249368738 | Program output: -27.8249368738
Correct output: -16.8176198654 | Program output: -8.8176198654 
Correct output: 5.5639147954   | Program output: 4.5639147954  
Correct output: 15.7960197363  | Program output: 37.7960197363 
Correct output: -15.2347943829 | Program output: 21.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger})
Best program: (float_stackdepth float_sub float_mult float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_dup_times float_dec float_mult integer_swap integer_rot float_dec integer_rot float_dec float_mult float_dec float_dec integer_rot float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_rot float_dec float_mult integer_inc integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div integer_rot float_dec integer_dup_times in1 float_frominteger)
Errors: [11.0 2 20.0 1 34.0 2 28.0 2 59.0 2 30.0 12 31.0 2 1.0 1 36.0 2 41.0 2 36.0 2 15.0 12 18.0 2 80.0 1 30.0 2 63.0 2 28.0 2 17.0 2 49.0 12 52.0 3 10.0 1 8.0 2 1.0 1 22.0 2 37.0 12]
Total: 843.0
Mean: 16.86
Genome size: 75
Size: 76
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3665.9248696
Median total errors in population: 865.0
Error averages by case: (135.6522425 3.39 143.90445069999998 3.443 144.2264218 3.335 150.24289399999998 3.32 165.10774149999997 8.316 125.86519629999998 4.293 141.4595003 3.52 127.79364300000002 2.83 146.0036325 3.296 142.56012099999995 3.372 130.792588 3.4 134.74756530000002 11.914 140.90388049999996 3.475 183.6634092 3.525 141.219957 4.1 169.08513920000001 3.476 138.94651229999997 3.387 142.21222740000002 3.792 129.81438609999998 12.728 172.48723540000006 4.194 102.47698540000002 3.273 117.17338740000001 3.856 117.18898500000003 2.916 145.18083260000003 3.276 157.8459352 12.943)
Error minima by case: (8.0 1 17.0 1 12.0 1 8.0949 1 21.8496 1 8.0 1 4.136 1 0.0 0 14.0 1 19.0 1 3.7215 1 0.0499 8 15.0 1 0.1279 1 8.0 1 3.8033 1 6.0 1 14.0 1 4.2328 9 49.0 2 0.0 0 0.6338 1 0.0 0 15.796 1 0.1146 6)
Average genome size in population (length): 62.857
Average program size in population (points): 63.857
Average percent parens in population: 0.016
Minimum age in population: 28.08737182617188
Maximum age in population: 32.66690158843994
Average age in population: 30.82761807537079
Median age in population: 30.86135482788086
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.762
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.762
Total error diversity:				 0.077
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.083
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 23635650
--- Timings ---
Current time: 1529614903199 milliseconds
Total Time:          78.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        32.8 seconds, 42.0%
Fitness Testing:     36.0 seconds, 46.1%
Report:               9.2 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_dec integer_rot float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_rot float_dec float_mult integer_inc integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div integer_rot float_dec integer_dup_times in1 float_frominteger)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3400.0300887
Median total errors in population: 846.0
Error averages by case: (120.9720483 3.199 129.68088829999996 3.215 135.42776419999998 3.092 136.030538 3.123 153.63529760000003 3.938 118.93353559999998 6.015 132.8304058 3.336 113.2359388 2.374 137.1786151 3.252 134.63236829999997 3.173 125.63853460000001 3.161 121.56666269999998 12.038 126.55922709999999 3.27 176.0695648 3.318 132.81075419999996 4.167 161.21662339999997 3.11 130.31276939999998 3.362 127.91567529999999 3.243 129.7911731 12.644 158.55080020000003 4.216 99.03865800000003 3.245 106.0912591 3.333 105.24286159999998 2.352 130.8174329 3.27 143.62269229999995 12.782)
Error minima by case: (0.0 0 9.0 1 14.0 1 8.4635 1 3.733 1 2.3474 1 11.0 1 0.0 0 16.0 1 21.0 1 1.2785 1 4.0 1 7.0 1 0.4737 1 10.0 1 2.1379 1 8.0 1 6.0 1 0.7672 9 41.0 2 0.0 0 0.1172 1 0.0 0 8.9876 1 1.2563 8)
Average genome size in population (length): 68.365
Average program size in population (points): 69.365
Average percent parens in population: 0.015
Minimum age in population: 29.93827724456787
Maximum age in population: 34.123939037323
Average age in population: 32.24043820667267
Median age in population: 32.27965450286865
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.77
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.77
Total error diversity:				 0.065
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.078
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 25345000
--- Timings ---
Current time: 1529614907476 milliseconds
Total Time:          82.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.3 seconds, 41.6%
Fitness Testing:     38.2 seconds, 46.3%
Report:               9.9 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction print_float} {:instruction integer_yank} {:instruction float_dup_items})
Best program: (integer_mult float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec float_mult float_dec float_dec integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times float_dup_times integer_swap integer_swap integer_rot float_dec float_dup_times float_mult float_dec float_dec integer_rot float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_mult float_dec float_dec float_mult float_dec integer_swap integer_rot float_dec float_dup_times integer_swap float_min float_dec print_float integer_yank float_dup_items)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 69
Size: 70
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3415.8961831000006
Median total errors in population: 844.0
Error averages by case: (120.49867300000001 3.133 129.0740091 3.146 137.80401030000002 3.254 135.3811786 3.211 150.60356689999998 3.452 120.63389899999999 8.468 136.8421851 3.377 113.02016250000003 2.328 139.5564879 3.304 135.86761069999997 3.118 123.62246360000003 3.321 119.4991045 12.015 125.8248315 3.377 179.7462458 3.248 136.59070190000003 4.077 164.9122417 3.17 134.34328250000002 3.372 126.69082389999998 3.265 133.49140509999998 12.431 157.15304750000004 4.298 99.68294520000002 3.167 103.39685239999999 3.385 104.12537359999999 2.426 130.2821232 3.257 142.93295759999995 12.72)
Error minima by case: (4.0 1 4.5404 1 14.0 1 7.0949 1 11.4257 1 10.0 1 11.0 1 0.0 0 16.0 1 21.0 1 1.2785 1 2.392 8 11.0 1 1.6519 1 10.0 1 15.7101 1 8.0 1 10.0 1 0.7672 9 18.4553 2 0.0 0 1.0 1 0.0 0 14.796 1 1.8829 9)
Average genome size in population (length): 73.034
Average program size in population (points): 74.034
Average percent parens in population: 0.014
Minimum age in population: 31.26849937438965
Maximum age in population: 35.80258083343506
Average age in population: 33.76780255961418
Median age in population: 33.81407117843628
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.07
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.082
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 27171125
--- Timings ---
Current time: 1529614911515 milliseconds
Total Time:          86.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.8 seconds, 41.4%
Fitness Testing:     40.2 seconds, 46.5%
Report:              10.4 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_dup float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_dec float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_mult float_yankdup integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_float integer_shove integer_stackdepth)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3614.184513800001
Median total errors in population: 843.0
Error averages by case: (127.60879900000003 3.228 136.13091410000004 3.263 150.3780873 3.499 142.01262889999998 3.405 155.52725170000005 3.371 130.6044078 11.47 146.7057254 3.561 121.11145229999998 2.464 152.0968173 3.502 146.44337539999995 3.3 125.83019660000004 3.508 124.99748969999999 11.823 133.41066669999998 3.526 188.14433039999997 3.357 146.95764590000005 4.213 174.02724969999997 3.574 144.27258400000002 3.431 135.0945894 3.672 136.79205979999998 12.11 165.07340829999995 4.319 105.62579440000003 3.269 107.68230540000003 3.291 111.59648360000001 2.733 137.07324910000006 3.31 149.29200160000002 12.496)
Error minima by case: (1.0 1 7.0 1 15.0 1 5.4378 1 41.4934 1 7.8689 1 11.9396 1 0.0 0 17.0 1 10.2804 1 11.1252 1 1.0132 1 5.0 1 0.3374 1 11.0 1 0.1379 1 9.0 1 4.0 1 2.5619 9 0.5991 2 0.0 0 0.0 0 0.0 0 9.0 1 0.8899 8)
Average genome size in population (length): 75.061
Average program size in population (points): 76.061
Average percent parens in population: 0.013
Minimum age in population: 32.67492866516113
Maximum age in population: 37.09176051616669
Average age in population: 35.18713512253761
Median age in population: 35.23172396421432
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.085
Error (vector) diversity:			 0.092
Behavioral diversity:				 0.094
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 29047900
--- Timings ---
Current time: 1529614915448 milliseconds
Total Time:          90.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.2 seconds, 41.1%
Fitness Testing:     42.3 seconds, 46.7%
Report:              10.9 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mult} {:instruction integer_div} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div})
Best program: (integer_mult float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec integer_swap integer_rot float_dec float_dup_times float_dec integer_swap float_dec float_mult float_dec tag_integer_916 float_dec float_mult float_dec float_dec float_mult float_dec tag_integer_916 float_dec float_mult integer_div tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap float_rot float_dec float_dup_times integer_swap print_integer float_dec integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 4046.9793061000005
Median total errors in population: 843.0
Error averages by case: (148.2118124 3.532 157.19941899999998 3.617 170.3833947 3.683 162.7935902 3.609 165.6979357000001 3.619 140.26191670000003 11.758 165.65009449999994 3.751 143.2581071 2.789 172.08998289999997 3.701 157.2748036 3.7 137.4373434 3.744 139.41189380000006 11.553 154.36857669999995 3.768 206.2335857 3.677 165.96126800000002 4.515 192.3560411 3.79 163.35527009999998 3.369 155.97970039999998 3.931 146.45849490000003 12.051 185.28492939999998 4.3 121.77507850000006 3.622 119.32353369999998 3.254 125.4779432 3.031 158.0207878 3.276 168.71580260000005 12.358)
Error minima by case: (0.0 0 8.0 1 12.0 1 5.4378 1 25.3008 1 8.0 1 7.3104 1 0.0 0 14.0 1 16.0053 1 24.0 1 1.028 1 6.0 1 0.0382 1 8.0 2 5.6732 1 6.0 1 5.0 1 1.5619 2 40.0 2 0.2604 1 0.0 0 0.0 0 10.0 1 0.1171 8)
Average genome size in population (length): 75.562
Average program size in population (points): 76.562
Average percent parens in population: 0.013
Minimum age in population: 34.1480073928833
Maximum age in population: 38.62626701593399
Average age in population: 36.55185870438814
Median age in population: 36.60092446208
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.833
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.833
Total error diversity:				 0.094
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.103
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 30937050
--- Timings ---
Current time: 1529614919786 milliseconds
Total Time:          94.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.7 seconds, 40.9%
Fitness Testing:     44.4 seconds, 46.9%
Report:              11.4 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_841} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_div} {:instruction float_flush} {:instruction in2} {:instruction integer_div} {:instruction integer_add})
Best program: (float_stackdepth float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_dec integer_rot float_dec float_mult float_dec float_dup_times integer_swap float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_841 float_dec float_dec integer_swap integer_rot float_shove float_dup_times integer_rot float_dec integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap integer_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div in2 float_dec integer_dup_times in1 float_frominteger float_swap float_div -8 integer_inc float_swap float_div -8 integer_inc integer_swap float_dup_items float_div float_flush in2 integer_div integer_add)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3454.1266457
Median total errors in population: 842.0
Error averages by case: (121.36470590000005 3.293 130.0489681 3.432 144.5854239 3.434 136.10661509999997 3.391 147.5326447 3.42 121.9976495 11.787 141.0037596 3.527 116.0177351 2.583 146.32025779999995 3.43 138.1593856 3.566 117.87984730000004 3.508 116.67627189999995 11.428 127.56596459999997 3.532 182.84160900000003 3.511 141.24349070000002 4.381 168.36365840000002 3.54 138.55193939999998 3.037 129.0052043 3.643 130.0645407 12.026 159.3233656 3.954 101.23464440000002 3.462 100.16632660000002 2.858 104.8831504 3.039 131.070211 2.914 143.1442761 12.279)
Error minima by case: (1.0 1 10.0 1 8.3963 1 5.0949 1 8.0677 1 6.5076 1 11.0953 1 0.0 0 9.2054 1 22.0 1 8.4037 1 2.1261 1 8.0 1 0.1261 1 11.0 2 2.5171 1 9.0 1 7.0 1 0.165 9 42.0 2 0.2604 1 0.0 0 0.0 0 5.9703 1 0.401 8)
Average genome size in population (length): 75.359
Average program size in population (points): 76.359
Average percent parens in population: 0.013
Minimum age in population: 35.1480073928833
Maximum age in population: 39.92019495368004
Average age in population: 37.90783997794986
Median age in population: 37.97071884572506
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.799
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.799
Total error diversity:				 0.074
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 32821300
--- Timings ---
Current time: 1529614924136 milliseconds
Total Time:          99.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.2 seconds, 40.6%
Fitness Testing:     46.7 seconds, 47.1%
Report:              12.1 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_841} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_shove} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger} {:instruction float_swap})
Best program: (float_stackdepth float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_dec integer_rot float_dec float_mult float_dec float_dup_times integer_swap float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_841 float_dec float_dec integer_swap integer_rot float_shove float_dup_times integer_rot float_dec integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap integer_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div in2 float_dec integer_dup_times in1 float_frominteger float_swap)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 76
Size: 77
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3637.3676438000007
Median total errors in population: 842.0
Error averages by case: (129.13643960000002 3.409 138.08120110000002 3.532 150.43700200000004 3.535 143.6462562 3.502 153.16058940000002 3.541 124.801362 11.699 147.32813289999996 3.61 124.37136970000002 2.708 152.169065 3.528 145.3909308 3.748 128.25460410000002 3.606 126.0170104 11.381 133.89452949999998 3.633 189.40427820000002 3.593 148.1488865 4.471 174.83037349999998 3.611 144.94749819999998 3.105 137.0110951 3.743 139.98629530000005 12.062 166.61484 4.03 110.28186710000006 3.555 105.36806879999996 2.998 113.8165988 3.22 138.75340400000002 3.02 150.38094560000005 12.295)
Error minima by case: (0.0 0 7.0 1 16.0 1 9.0943 1 10.4832 1 12.0 1 7.2626 1 0.0 0 18.0 1 23.0 1 5.5219 1 2.0 1 5.0 1 0.0818 1 12.0 1 0.7101 1 10.0 1 4.0 1 10.3291 8 39.0 2 0.0 0 0.0 0 0.0 0 9.0 1 0.1171 8)
Average genome size in population (length): 74.709
Average program size in population (points): 75.709
Average percent parens in population: 0.013
Minimum age in population: 36.45020079612732
Maximum age in population: 41.21356040239334
Average age in population: 39.27969026082754
Median age in population: 39.3150295317173
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.841
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.841
Total error diversity:				 0.086
Error (vector) diversity:			 0.093
Behavioral diversity:				 0.094
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 34689350
--- Timings ---
Current time: 1529614928419 milliseconds
Total Time:         103.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.6 seconds, 40.3%
Fitness Testing:     48.9 seconds, 47.3%
Report:              12.7 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_swap} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_sub})
Best program: (integer_swap float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dec float_dec float_dec float_dec tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_swap integer_dec float_dec float_mult float_dec float_dec float_mult float_dec tag_integer_916 float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times integer_swap float_dup_times float_dec float_dup_times float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float float_rot integer_stackdepth integer_inc integer_inc integer_sub)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3886.473351299999
Median total errors in population: 842.0
Error averages by case: (140.02497200000005 3.396 148.61904039999993 3.527 162.17458520000002 3.535 154.63863629999997 3.472 161.50106820000005 3.579 136.1021369 11.695 159.860932 3.638 134.5702006 2.693 163.87606499999995 3.529 153.50899489999995 3.722 132.43483360000005 3.596 133.9162294 11.487 146.08542909999997 3.621 201.7039216 3.612 159.95559290000003 4.46 187.3357972 3.647 157.49896929999994 3.142 147.9264024 3.75 144.32051160000006 12.086 177.7830087 4.063 115.69229520000002 3.56 113.4704319 3.035 120.86177529999995 3.035 149.69242590000002 3.046 161.64809570000003 12.345)
Error minima by case: (0.0 0 7.0 1 13.0 1 7.0949 1 39.7343 1 4.8031 1 10.0 1 0.0 0 15.0 1 20.0 1 10.2006 1 1.4485 1 5.0 1 0.7501 1 9.0 2 2.5171 1 7.0 1 4.0 1 0.165 9 39.0 2 1.0 1 0.0 0 0.0 0 4.987 1 0.1705 9)
Average genome size in population (length): 74.367
Average program size in population (points): 75.367
Average percent parens in population: 0.013
Minimum age in population: 38.12657403945923
Maximum age in population: 42.57233562320471
Average age in population: 40.70837373377383
Median age in population: 40.77667751535773
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.849
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.849
Total error diversity:				 0.082
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 36549050
--- Timings ---
Current time: 1529614932664 milliseconds
Total Time:         107.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.2 seconds, 40.1%
Fitness Testing:     51.1 seconds, 47.4%
Report:              13.4 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction print_float} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction tag_integer_923} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc})
Best program: (float_stackdepth float_sub print_float integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec integer_swap integer_rot float_dec float_dup_times integer_swap tag_integer_923 float_dec integer_swap integer_shove integer_swap integer_rot float_dec integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec integer_swap float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div in2 float_dec integer_dup_times integer_fromfloat float_frominteger float_swap float_div -8 integer_inc)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3736.2533666000004
Median total errors in population: 842.0
Error averages by case: (131.12061480000003 3.354 139.95021219999995 3.465 157.5341337 3.517 146.11809099999994 3.401 154.91622629999998 3.451 133.10516109999998 11.818 154.6022967 3.62 125.84154139999997 2.645 159.2425645 3.536 150.7390855 3.717 130.6804717 3.57 127.24437310000003 11.46 137.55156439999996 3.579 196.29413910000002 3.595 154.5052214 4.476 182.0725016 3.644 152.13597519999993 3.104 139.3435065 3.71 144.04830699999994 12.081 169.24006180000003 3.994 113.18474840000002 3.547 107.74608099999999 2.927 114.56328269999997 3.05 141.0941634 2.961 152.8340421 12.323)
Error minima by case: (0.0 0 9.0 1 12.0 1 8.0949 1 10.2953 1 4.3766 1 9.0 1 0.0 0 14.0 1 16.2804 1 15.1671 1 0.028 1 6.0082 1 0.5974 1 2.3816 2 2.5307 1 6.0 1 6.0 1 4.6993 8 6.5991 2 1.0 1 0.0 0 0.0 0 11.0 1 0.7674 9)
Average genome size in population (length): 74.405
Average program size in population (points): 75.405
Average percent parens in population: 0.013
Minimum age in population: 39.12657403945923
Maximum age in population: 43.72637097537518
Average age in population: 42.13533100007102
Median age in population: 42.19075431674719
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.851
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.851
Total error diversity:				 0.068
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.076
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 38409925
--- Timings ---
Current time: 1529614936884 milliseconds
Total Time:         111.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.8 seconds, 40.0%
Fitness Testing:     53.1 seconds, 47.5%
Report:              13.9 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_yank} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger})
Best program: (integer_mult float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dec float_dec float_dec float_dec tag_integer_916 float_dup_times integer_swap integer_min float_dec integer_swap integer_dec float_dec float_mult float_dec float_dec float_mult float_dec tag_integer_916 float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times integer_swap float_dup_items float_dec float_stackdepth float_dup_times integer_swap integer_rot float_dec float_dup_times float_yank float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 integer_div integer_rot float_dec integer_dup_times in1 float_frominteger)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 76
Size: 77
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3675.1344061000004
Median total errors in population: 842.0
Error averages by case: (132.30658920000005 3.523 141.90729149999996 3.68 155.9274577 3.682 146.85533400000006 3.629 146.73434160000002 3.698 122.1956524 11.674 152.79241779999995 3.781 128.342508 2.824 157.66807240000003 3.719 142.09011569999993 3.812 124.07935940000003 3.715 123.08070850000004 11.421 139.8175864 3.737 193.6050753 3.756 153.9988337 4.589 179.70832900000002 3.795 150.53162590000005 3.267 143.1382569 3.869 135.1310852999999 12.055 172.23839329999996 4.169 106.0830912000001 3.675 99.3175214 3.108 108.89304770000001 3.12 142.1529348 3.151 152.83877699999994 12.251)
Error minima by case: (0.0 0 9.0 1 12.0 1 5.1261 1 1.5189 1 1.2328 1 9.0 1 0.0 0 14.0 1 12.2804 1 3.6713 1 0.028 1 7.0 1 0.1169 1 8.0 1 2.5171 1 6.0 1 6.0 1 6.6022 8 2.5991 2 0.0 0 0.0 0 0.0 0 2.204 1 0.0286 5)
Average genome size in population (length): 73.755
Average program size in population (points): 74.755
Average percent parens in population: 0.014
Minimum age in population: 40.85708376765251
Maximum age in population: 45.50805565528572
Average age in population: 43.53876081167907
Median age in population: 43.54795140959322
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.84
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.84
Total error diversity:				 0.105
Error (vector) diversity:			 0.113
Behavioral diversity:				 0.114
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 40254475
--- Timings ---
Current time: 1529614941017 milliseconds
Total Time:         116.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.3 seconds, 39.9%
Fitness Testing:     55.1 seconds, 47.5%
Report:              14.5 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction float_mod} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction print_float} {:instruction integer_yank} {:instruction float_dup_items})
Best program: (integer_yank float_stackdepth float_sub integer_stackdepth float_dup float_mod integer_yank in1 tag_integer_916 float_dup_times float_dup_times integer_swap float_frominteger float_dec float_mult float_dec float_dec float_yankdup float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec float_mult float_dec float_dec integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_dup_times float_mult float_yankdup integer_swap integer_rot float_mult float_dec float_frominteger float_mult float_dec float_dec float_mult float_dec integer_swap integer_rot float_dec float_dup_times integer_swap float_min float_dec print_float integer_yank float_dup_items)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3792.0599766000005
Median total errors in population: 842.0
Error averages by case: (135.2226641 3.38 143.73666679999997 3.511 157.4212561 3.501 149.9288934 3.434 158.5547417 3.573 132.98437659999996 11.732 155.48732750000002 3.627 129.718959 2.672 159.22056830000002 3.534 150.73953410000001 3.686 131.98677049999995 3.571 130.62443650000003 11.461 141.64347219999996 3.614 197.05637600000003 3.6 155.54378930000004 4.465 182.84140079999997 3.639 153.05381500000004 3.102 143.87891960000005 3.752 143.23126189999996 12.079 173.27075679999996 4.011 114.07951770000004 3.542 111.76185359999998 3.028 117.67089119999997 3.027 145.02503420000002 2.975 156.5476937 12.313)
Error minima by case: (0.0 0 7.0 1 13.0 1 5.6187 1 43.161 1 5.5901 1 10.0 1 0.0 0 15.0 1 20.0 1 23.0 1 0.4972 1 5.0 1 0.8767 1 9.0 1 6.1921 1 7.0 1 4.0 1 26.2328 9 39.0 2 0.0 0 0.0 0 0.0 0 9.0 1 0.7 5)
Average genome size in population (length): 73.025
Average program size in population (points): 74.025
Average percent parens in population: 0.014
Minimum age in population: 42.69960168935359
Maximum age in population: 46.86648451816291
Average age in population: 44.91795023973007
Median age in population: 44.97504815412685
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.846
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.846
Total error diversity:				 0.075
Error (vector) diversity:			 0.081
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 42080700
--- Timings ---
Current time: 1529614945311 milliseconds
Total Time:         120.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.9 seconds, 39.8%
Fitness Testing:     57.1 seconds, 47.5%
Report:              15.1 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction print_float} {:instruction integer_yank} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 float_dec integer_swap integer_rot float_dec integer_swap float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec integer_swap tag_integer_916 float_dup_times integer_rot float_mult float_dec float_dec float_mult float_dec float_dec float_mult float_dec integer_swap integer_rot float_dec float_dup_times integer_swap float_min float_dec print_float integer_yank float_dup_items)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3509.5189668000003
Median total errors in population: 842.0
Error averages by case: (120.58831210000001 3.292 130.342601 3.418 146.20049229999998 3.447 136.13809570000004 3.338 149.97263119999997 3.488 126.3421587 11.746 141.66625649999995 3.531 116.09156999999996 2.562 147.87012530000004 3.441 141.64034719999995 3.596 129.6318226 3.506 117.65989590000001 11.517 127.93524079999997 3.518 183.56447139999997 3.502 141.8255403 4.375 169.40087290000002 3.538 139.25927670000002 3.026 128.96496599999998 3.643 142.5251289 12.065 159.36975689999997 3.955 110.57730500000004 3.485 103.35698790000001 2.927 106.20933380000004 2.862 131.15264149999996 2.933 142.1911362 12.331)
Error minima by case: (1.0 1 10.0 1 12.0 1 7.499 1 11.3136 1 6.5901 1 2.4689 1 0.0 0 14.0 1 5.1537 1 26.0 1 0.411 1 8.0 1 1.6055 1 8.0 2 3.5307 1 6.0 1 7.0 1 15.0678 9 42.0 2 0.7855 1 0.0 0 0.0 0 0.6763 1 1.2563 8)
Average genome size in population (length): 72.607
Average program size in population (points): 73.607
Average percent parens in population: 0.014
Minimum age in population: 43.99265363626182
Maximum age in population: 48.37692484399304
Average age in population: 46.34227149730595
Median age in population: 46.35860951757059
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.831
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.831
Total error diversity:				 0.062
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.068
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 43896525
--- Timings ---
Current time: 1529614949368 milliseconds
Total Time:         124.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.5 seconds, 39.7%
Fitness Testing:     59.1 seconds, 47.5%
Report:              15.8 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth})
Best program: (integer_yank integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dec float_dec float_dec float_dec tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_swap integer_dec float_dec float_mult float_dec float_dec float_mult float_dec tag_integer_916 float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times integer_swap integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_float integer_shove integer_stackdepth)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3624.711361300001
Median total errors in population: 842.0
Error averages by case: (127.74868950000001 3.358 136.1983792 3.467 150.4101787 3.496 142.19017359999998 3.424 152.92680270000002 3.461 127.4487603 11.788 148.5422422 3.588 122.26293380000001 2.632 152.1409922 3.496 142.9315055999999 3.667 126.9391188 3.555 121.92451050000005 11.436 136.00345249999995 3.575 190.19072410000004 3.556 148.66034699999997 4.434 175.75702329999996 3.583 146.10919639999997 3.071 137.6214279 3.711 138.1450476 12.069 167.63464359999998 3.99 109.60088700000004 3.53 106.40152529999996 2.919 110.21606009999999 3.037 137.21190649999997 2.955 149.4058329 12.291)
Error minima by case: (0.0 0 9.0 1 12.0 1 8.0949 1 1.5189 1 0.541 1 3.5311 1 0.0 0 14.0 1 19.0 1 1.9138 1 0.0841 1 7.0 1 0.0382 1 8.0 1 0.0893 1 6.0 1 6.0 1 9.2337 9 41.0 2 1.3449 1 0.0 0 0.0 0 11.0 1 0.045 5)
Average genome size in population (length): 72.174
Average program size in population (points): 73.174
Average percent parens in population: 0.014
Minimum age in population: 44.99606177210808
Maximum age in population: 49.73319032276049
Average age in population: 47.69922884659446
Median age in population: 47.7575398114277
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.829
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.829
Total error diversity:				 0.076
Error (vector) diversity:			 0.084
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 45701300
--- Timings ---
Current time: 1529614953622 milliseconds
Total Time:         128.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.9 seconds, 39.6%
Fitness Testing:     61.3 seconds, 47.6%
Report:              16.3 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_927} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction integer_inc} {:instruction float_yank} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction tagged_736} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction print_float} {:instruction integer_yank})
Best program: (float_sin float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_927 integer_rot float_dec float_mult float_dec tag_integer_916 float_dec float_dup_times integer_swap tag_integer_916 float_dec float_dec float_mult float_dec integer_rot float_dec float_dec float_dec integer_yankdup float_dec float_dec float_mult float_dec integer_rot float_dec float_dec float_dec float_mult float_dec integer_rot float_dec integer_yank float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_rot float_dec float_mult integer_inc float_yank float_dec float_dup_times integer_swap print_integer float_dec tagged_736 integer_swap float_min float_dec print_float integer_yank)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3735.3538673000007
Median total errors in population: 842.0
Error averages by case: (133.67384380000004 3.422 144.0342383 3.56 157.83612759999997 3.54 149.89503920000004 3.506 151.0447932 3.581 123.95819780000001 11.653 155.70540850000003 3.669 130.3187446 2.717 159.68391450000004 3.564 143.15830789999998 3.751 127.23450389999998 3.621 124.67260950000004 11.427 141.67756279999998 3.663 197.5831498 3.642 156.13726380000006 4.477 183.4885546 3.674 153.1437551 3.134 143.82204379999996 3.781 138.54793769999998 12.04 173.58263729999996 4.061 110.22680670000005 3.595 103.69281279999997 3.024 111.45737449999996 3.109 145.0334787 3.034 154.22576089999995 12.274)
Error minima by case: (0.892 1 8.0 1 13.0 1 7.0153 1 5.0811 1 1.541 1 2.8029 1 0.0 0 15.0 1 20.0 1 0.2092 1 0.0841 1 6.0 1 0.1169 1 9.0 2 0.1379 1 3.5771 1 5.0 1 6.2337 7 39.3269 2 0.3449 1 0.0 0 0.0 0 0.6858 1 0.2563 8)
Average genome size in population (length): 72.016
Average program size in population (points): 73.016
Average percent parens in population: 0.014
Minimum age in population: 46.8726581344381
Maximum age in population: 51.08313221205026
Average age in population: 49.06516159455245
Median age in population: 49.07456285337685
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.849
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.849
Total error diversity:				 0.094
Error (vector) diversity:			 0.099
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 47502025
--- Timings ---
Current time: 1529614957864 milliseconds
Total Time:         133.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.5 seconds, 39.5%
Fitness Testing:     63.5 seconds, 47.8%
Report:              16.9 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction float_cos} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_dup} {:instruction integer_mod})
Best program: (float_stackdepth float_stackdepth float_sub integer_dup_times float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_sub float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec float_mult float_dec float_dec integer_rot float_dec integer_rot float_dec float_dup_times float_dec float_dup_times float_dec float_mult float_dec float_dec float_mult float_dec integer_swap integer_rot float_dec float_dec float_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div integer_min float_dec integer_dup_times float_max float_frominteger float_swap float_div -8 float_cos integer_swap integer_swap float_swap float_div -8 integer_inc integer_swap integer_div integer_shove float_stackdepth float_dup integer_mod)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3878.591982400001
Median total errors in population: 842.0
Error averages by case: (137.4725444 3.44 146.06666489999998 3.577 160.15875879999996 3.553 151.9428514 3.522 162.2069346 3.621 137.44887540000002 11.8 159.38511350000002 3.691 132.44503629999997 2.716 161.90269849999996 3.597 153.61617959999995 3.833 136.6265568 3.681 133.24185320000004 11.45 146.38516969999992 3.716 200.2953501 3.671 159.62440850000002 4.527 186.1906195 3.683 157.0289849 3.182 148.77514069999998 3.834 147.6567605 12.045 178.25817480000003 4.116 118.78570030000009 3.632 114.16340099999996 3.052 120.54653609999997 3.192 147.0525893 3.068 158.8080796 12.308)
Error minima by case: (0.0 0 9.0 1 15.0 1 7.0949 1 16.8496 1 8.6721 1 1.9391 1 0.0 0 17.0 1 1.7009 1 1.2785 1 0.392 1 7.0 1 0.356 1 11.0 1 1.568 1 7.927 1 6.0 1 0.7672 8 41.0 2 0.0 0 0.0 0 0.0 0 11.0 1 0.2348 9)
Average genome size in population (length): 71.762
Average program size in population (points): 72.762
Average percent parens in population: 0.014
Minimum age in population: 47.96767988242209
Maximum age in population: 52.8044059863314
Average age in population: 50.50797152297379
Median age in population: 50.53691792915924
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.85
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.85
Total error diversity:				 0.084
Error (vector) diversity:			 0.09
Behavioral diversity:				 0.091
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 49296375
--- Timings ---
Current time: 1529614962055 milliseconds
Total Time:         136.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.9 seconds, 39.4%
Fitness Testing:     65.5 seconds, 47.8%
Report:              17.4 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction print_float} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_min} {:instruction print_float} {:instruction integer_shove} {:instruction float_dup} {:instruction float_dec})
Best program: (integer_mult float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dec float_dec float_dec float_dec tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_swap integer_dec float_dec float_mult float_dec float_dec float_mult float_dec tag_integer_916 float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times integer_swap float_rot float_dec float_dec float_dup_times integer_swap float_dup_times integer_swap float_min float_dec print_float float_dup_times float_dup_times integer_swap float_min print_float integer_shove float_dup float_dec)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3706.9835667
Median total errors in population: 842.0
Error averages by case: (130.79429049999996 3.391 139.54312410000003 3.522 152.84071029999996 3.508 145.3597633 3.448 159.4097227 3.517 133.6552859 11.798 148.93999929999998 3.6 125.49998109999999 2.667 154.80309739999996 3.54 148.64442169999992 3.662 132.98798179999997 3.621 128.0727941 11.447 137.00234749999996 3.621 191.73091759999997 3.626 149.6826489 4.47 177.4355402 3.645 145.21406390000007 3.091 138.68185519999997 3.744 142.40971480000002 12.105 168.4864223 4.038 113.34811180000001 3.573 112.6609 3.019 115.80381560000002 3.085 140.4191706 3.004 152.4778861 12.337)
Error minima by case: (1.0 1 8.0 1 6.3449 1 7.272 1 18.4574 1 6.5076 1 10.0 1 0.0 0 7.154 1 20.0 1 23.3292 1 0.4523 1 6.0 1 0.0753 1 5.7805 2 2.5171 1 7.0 1 5.0 1 0.165 8 40.0 2 1.0 1 0.0 0 0.0 0 10.0 1 0.301 8)
Average genome size in population (length): 72.068
Average program size in population (points): 73.068
Average percent parens in population: 0.014
Minimum age in population: 48.96767988242209
Maximum age in population: 54.05914814028074
Average age in population: 51.94256036850539
Median age in population: 51.9692650698853
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.86
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.86
Total error diversity:				 0.076
Error (vector) diversity:			 0.081
Behavioral diversity:				 0.083
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 51098400
--- Timings ---
Current time: 1529614966106 milliseconds
Total Time:         141.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.4 seconds, 39.3%
Fitness Testing:     67.5 seconds, 47.8%
Report:              18.1 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_swap} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_mod} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction print_float} {:instruction integer_yank} {:instruction float_dup_items})
Best program: (float_stackdepth integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec integer_max float_dec integer_swap float_dec float_mult float_dec float_dec float_frominteger float_dec tag_integer_916 float_dec integer_swap integer_rot integer_mod integer_rot float_dec float_mult float_dec tag_integer_916 float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap float_swap float_dec float_dup_times float_dec float_mult float_mod tag_integer_916 float_dec integer_swap float_div float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times float_dup_times integer_swap float_min float_dec print_float integer_yank float_dup_items)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3814.6798214000005
Median total errors in population: 842.0
Error averages by case: (134.60433450000002 3.516 144.1125686 3.638 158.98457390000002 3.671 149.02052819999997 3.578 162.82228959999995 3.658 137.48945349999997 11.803 155.70226090000006 3.747 130.45825560000003 2.816 160.70456230000005 3.69 152.494024 3.775 129.8940388 3.71 131.2636542 11.486 142.1694084999999 3.744 197.07318239999998 3.746 157.23396560000003 4.586 183.11571300000003 3.764 153.4564006 3.238 146.04455439999995 3.886 141.0749176 12.073 174.67774889999998 4.136 113.62134350000001 3.672 115.88312119999998 3.106 119.08334280000001 3.141 144.21667319999997 3.131 155.8519056 12.316)
Error minima by case: (2.0 1 3.6745 1 12.0 1 7.0949 1 32.7343 1 3.1144 1 4.3416 1 0.0 0 14.0 1 1.7728 1 14.6508 1 0.0841 1 9.0 1 1.8269 1 8.0 1 2.5307 1 6.0 1 8.0 1 22.2596 9 43.0 2 0.0 0 0.0 0 0.0 0 6.9703 1 0.2209 8)
Average genome size in population (length): 71.867
Average program size in population (points): 72.867
Average percent parens in population: 0.014
Minimum age in population: 49.96767988242209
Maximum age in population: 55.46626928645128
Average age in population: 53.30278274425071
Median age in population: 53.32986637101567
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.837
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.837
Total error diversity:				 0.093
Error (vector) diversity:			 0.095
Behavioral diversity:				 0.096
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 52895575
--- Timings ---
Current time: 1529614970407 milliseconds
Total Time:         145.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.9 seconds, 39.2%
Fitness Testing:     69.7 seconds, 48.0%
Report:              18.6 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction print_float} {:instruction integer_yank})
Best program: (integer_mult float_stackdepth float_sub integer_dup_times float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_sub float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec float_mult float_dec float_dec integer_rot float_dec integer_rot float_dec integer_mod float_dec float_dup_times float_dec float_mult float_dec float_dec float_mult float_dec integer_swap integer_rot float_dec float_dec float_mult float_dec print_float print_float integer_yank)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3487.6628305000004
Median total errors in population: 842.0
Error averages by case: (123.42919580000003 3.356 132.25731649999997 3.463 147.75348760000003 3.496 138.0594605 3.439 145.01177019999997 3.53 120.6210339 11.741 142.68331229999995 3.585 118.48166539999998 2.644 149.492672 3.493 139.13733319999994 3.64 119.56837999999996 3.539 118.00905710000004 11.465 129.4721044 3.566 184.37101199999998 3.548 142.20564819999998 4.391 169.8959421 3.584 140.303951 3.048 131.3297657 3.683 130.66885169999998 12.055 161.42468410000004 3.959 103.03603590000004 3.499 97.74567380000002 2.917 104.74592689999994 3.067 133.12953259999998 2.941 144.8860176 12.294)
Error minima by case: (0.0 0 9.0 1 12.0 1 8.0949 1 36.7343 1 8.0 1 1.4689 1 0.0 0 14.0 1 19.0 1 25.0 1 0.0841 1 7.0 1 0.3484 1 8.0 2 0.4829 1 6.0 1 6.0 1 2.6022 8 41.0 2 0.2731 1 0.0 0 0.0 0 5.9703 1 0.1146 8)
Average genome size in population (length): 71.486
Average program size in population (points): 72.486
Average percent parens in population: 0.014
Minimum age in population: 50.96767988242209
Maximum age in population: 56.84369420693838
Average age in population: 54.71961894921081
Median age in population: 54.76589132401205
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.845
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.845
Total error diversity:				 0.085
Error (vector) diversity:			 0.091
Behavioral diversity:				 0.091
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 54683200
--- Timings ---
Current time: 1529614974361 milliseconds
Total Time:         149.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.4 seconds, 39.1%
Fitness Testing:     71.7 seconds, 47.9%
Report:              19.3 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_max} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction print_float} {:instruction integer_yank} {:instruction float_dup_items})
Best program: (integer_mult float_sub integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec float_mult float_dec integer_max integer_shove float_dec tag_integer_916 float_dec integer_swap integer_rot tag_integer_916 float_dec integer_swap integer_rot float_dec integer_shove integer_swap integer_rot float_dec float_dup_times float_dec float_dec float_dec float_dup_times float_mult float_yankdup integer_swap integer_swap integer_rot integer_sub float_dec float_dec float_mult float_dec float_dec float_mult float_dec integer_swap integer_rot float_dec float_dup_times integer_swap float_min float_dec print_float integer_yank float_dup_items)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3665.6626979000016
Median total errors in population: 842.0
Error averages by case: (131.94192400000003 3.332 140.64347149999998 3.447 154.48882169999996 3.45 146.42756420000003 3.39 150.48208790000004 3.487 125.85225619999997 11.728 150.89544460000002 3.559 126.63686920000002 2.611 156.16181749999998 3.497 144.84395919999997 3.631 123.91874590000002 3.548 126.13254930000005 11.458 137.17549799999998 3.546 193.30707069999997 3.521 151.61782180000003 4.418 178.52673409999994 3.573 148.6237807 3.03 139.90122879999998 3.682 135.26488270000004 12.063 169.72563369999997 3.938 105.01610810000008 3.486 101.90538159999996 2.906 111.61478520000003 2.998 141.56407040000002 2.925 153.45019090000002 12.32)
Error minima by case: (0.0 0 6.0 1 12.0 1 10.395 1 8.0677 1 0.5901 1 6.47 1 0.0 0 14.0 1 19.0 1 20.7138 1 0.0751 1 4.0 1 0.8767 1 8.0 1 1.4693 1 6.0 1 3.0 1 0.4381 2 38.0 2 0.7396 1 0.0 0 0.0 0 7.4479 1 1.8899 8)
Average genome size in population (length): 71.553
Average program size in population (points): 72.553
Average percent parens in population: 0.014
Minimum age in population: 53.00695722056844
Maximum age in population: 58.08898555767155
Average age in population: 56.1099448287931
Median age in population: 56.16481514207044
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.842
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.842
Total error diversity:				 0.076
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 56472775
--- Timings ---
Current time: 1529614978346 milliseconds
Total Time:         153.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.9 seconds, 39.0%
Fitness Testing:     73.7 seconds, 48.0%
Report:              19.8 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_max} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction tagged_989} {:instruction float_dec} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction print_float} {:instruction integer_yank} {:instruction float_dup_items})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap print_integer float_dec float_mult float_dec float_dec float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 float_dec integer_swap integer_rot float_dec integer_swap float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap float_max float_dec integer_swap tag_integer_916 float_dup_times integer_swap tagged_989 float_dec float_mult integer_rot float_dec float_mult float_dec float_dec integer_dup_items float_dec integer_swap integer_yankdup float_dec float_dup_times integer_swap float_min float_dec print_float integer_yank float_dup_items)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3415.9222259999997
Median total errors in population: 842.0
Error averages by case: (119.8565827 3.253 129.03447509999998 3.388 143.940537 3.393 135.14793879999996 3.333 143.7062368 3.408 118.38449959999998 11.839 140.3011764 3.463 114.9995083 2.572 145.58262679999999 3.386 134.86710229999997 3.664 116.80440970000001 3.422 113.39714369999996 11.426 127.56551660000001 3.465 182.540293 3.438 140.69868720000002 4.305 167.9929474 3.477 137.83065560000003 2.946 128.60184049999998 3.595 127.72765829999999 12.04 158.90429719999997 3.876 101.00613199999997 3.394 96.40177049999998 2.786 101.04320529999998 3.083 130.11006929999996 2.849 141.4169159 12.259)
Error minima by case: (1.0 1 10.0 1 13.0 1 7.0949 1 16.3685 1 1.1921 1 10.0 1 0.0 0 15.0 1 3.2533 1 26.0 1 1.485 1 8.0 1 0.7501 1 9.0 2 3.5307 1 7.0 1 7.0 1 4.3291 8 42.0 2 0.7407 1 0.0 0 0.0 0 12.0 1 0.1705 6)
Average genome size in population (length): 71.281
Average program size in population (points): 72.281
Average percent parens in population: 0.014
Minimum age in population: 54.00695722056844
Maximum age in population: 59.38908348443874
Average age in population: 57.53162912675852
Median age in population: 57.63996355321615
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.847
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.847
Total error diversity:				 0.081
Error (vector) diversity:			 0.088
Behavioral diversity:				 0.09
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 58255575
--- Timings ---
Current time: 1529614982398 milliseconds
Total Time:         157.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.4 seconds, 39.0%
Fitness Testing:     75.6 seconds, 48.0%
Report:              20.3 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_max} {:instruction tag_integer_109} {:instruction integer_div})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec float_dup_times float_mult integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times float_dec float_dup_times float_dec float_mult float_dec integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc float_max tag_integer_109 integer_div)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 75
Size: 76
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3819.822858
Median total errors in population: 842.0
Error averages by case: (135.3526103 3.468 144.43323139999995 3.611 156.51297960000002 3.602 149.89435150000003 3.554 163.5621385 3.652 136.45123629999998 11.765 152.51216029999995 3.682 130.69072789999998 2.769 158.19733699999998 3.589 151.63860399999993 3.702 140.69722290000004 3.7 131.72827109999997 11.494 141.87936529999996 3.706 193.86618259999995 3.677 153.2238684 4.528 179.54742489999995 3.702 150.26979429999997 3.169 143.5419652 3.845 148.37373999999997 12.13 173.17408579999992 4.135 121.48452900000005 3.663 117.9517261 3.111 120.60580060000001 3.079 145.1191296 3.107 156.3043754 12.37)
Error minima by case: (0.0 0 9.0 1 13.0 1 6.4378 1 8.9789 1 3.3039 1 2.4689 1 0.0 0 15.0 1 16.2847 1 25.0 1 0.0132 1 7.0 1 0.8831 1 9.0 1 3.5369 1 7.0 1 6.0 1 0.9037 8 41.0 2 0.7407 1 0.0 0 0.0 0 11.0 1 1.301 8)
Average genome size in population (length): 70.658
Average program size in population (points): 71.658
Average percent parens in population: 0.014
Minimum age in population: 55.00695722056844
Maximum age in population: 60.7823460889831
Average age in population: 58.91242967829882
Median age in population: 58.97373362677081
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.837
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.837
Total error diversity:				 0.084
Error (vector) diversity:			 0.092
Behavioral diversity:				 0.094
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 60023050
--- Timings ---
Current time: 1529614986484 milliseconds
Total Time:         161.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.9 seconds, 39.0%
Fitness Testing:     77.6 seconds, 48.0%
Report:              20.9 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_max} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction integer_min} {:instruction float_dec} {:instruction float_min} {:instruction float_max} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_div} {:instruction -9} {:instruction float_cos} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_swap} {:instruction float_div} {:instruction -8} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_div} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_dup} {:instruction integer_mod})
Best program: (float_stackdepth float_sub integer_stackdepth float_dup integer_div integer_max in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_max float_dec float_dec float_mult float_dec integer_rot float_dec float_dec integer_rot float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec float_mult float_dec float_dec integer_rot float_dec integer_rot float_dec float_dup_times float_dec float_dup_times float_dec float_mult float_dec float_dec float_mult float_dec integer_swap integer_rot float_dec float_dec float_mult float_dec print_float integer_shove integer_stackdepth integer_inc integer_max tag_integer_109 integer_div integer_min float_dec float_min float_max float_frominteger float_swap float_div -9 float_cos integer_swap integer_swap float_swap float_div -8 integer_inc integer_swap integer_div integer_shove float_stackdepth float_dup integer_mod)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3674.4110713
Median total errors in population: 842.0
Error averages by case: (131.3719749 3.376 140.71654229999996 3.506 153.2319418 3.494 146.61681549999997 3.451 153.6265519 3.539 127.19295580000002 11.725 148.2600944 3.554 126.9214425 2.682 154.2757877 3.492 144.50410079999997 3.757 129.5605577 3.575 125.61665480000002 11.456 137.4748087 3.595 191.4856942 3.546 148.47035790000004 4.394 177.024369 3.564 145.52918189999997 3.048 139.14127539999998 3.697 139.18006039999997 12.1 169.2327861 4.013 111.70786170000004 3.538 105.86595989999996 2.948 112.5316433 3.156 141.67185569999998 2.999 152.654797 12.34)
Error minima by case: (0.0 0 5.8473 1 15.0 1 8.0949 1 2.5492 1 0.541 1 10.0 1 0.0 0 17.0 1 16.0053 1 7.421 1 1.0506 1 1.7379 1 0.1169 1 9.0 2 2.5171 1 7.0 1 6.0 1 2.6022 9 41.0 2 1.0 1 0.0 0 0.0 0 11.0 1 0.2563 8)
Average genome size in population (length): 70.574
Average program size in population (points): 71.574
Average percent parens in population: 0.014
Minimum age in population: 57.20836567883271
Maximum age in population: 62.28907523428643
Average age in population: 60.34643557784173
Median age in population: 60.40650243927303
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.861
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.861
Total error diversity:				 0.083
Error (vector) diversity:			 0.089
Behavioral diversity:				 0.092
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 61788300
--- Timings ---
Current time: 1529614990702 milliseconds
Total Time:         165.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.4 seconds, 38.9%
Fitness Testing:     79.6 seconds, 48.1%
Report:              21.4 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mult} {:instruction float_sub} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_772} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_max} {:instruction tag_integer_109} {:instruction integer_div} {:instruction float_shove})
Best program: (integer_mult float_sub float_stackdepth integer_stackdepth float_sub integer_dup_times float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_772 float_dec integer_sub float_mult float_dec float_yankdup float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec float_mult float_dec float_dec integer_rot float_dec integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec integer_swap integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc float_max tag_integer_109 integer_div float_shove)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 75
Size: 76
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3643.9890636
Median total errors in population: 842.0
Error averages by case: (126.53280640000003 3.302 135.63773369999998 3.424 148.41591170000004 3.398 141.42562569999998 3.354 155.96620190000002 3.537 128.73195050000004 11.63 147.9833973 3.49 121.6035808 2.605 150.13421080000003 3.403 142.2596977 3.634 135.09875959999997 3.487 122.5548172 11.465 136.16656789999993 3.526 190.34519479999994 3.466 148.40842490000003 4.346 175.81291589999995 3.503 145.58260900000002 2.987 137.99684259999998 3.633 145.4711873 12.135 167.8695766 3.945 116.29278600000006 3.464 108.79973259999996 2.886 111.10913860000001 3.133 136.3299499 2.906 148.45144419999997 12.349)
Error minima by case: (1.0 1 8.0 1 5.2365 1 8.0949 1 0.2231 1 0.541 1 9.47 1 0.0 0 6.0456 1 16.2804 1 24.0 1 0.9159 1 6.0 1 0.1261 1 9.0 1 1.5307 1 7.0 1 5.0 1 12.6637 8 6.5991 2 0.0 0 0.0 0 0.0 0 5.9703 1 0.8667 8)
Average genome size in population (length): 70.557
Average program size in population (points): 71.557
Average percent parens in population: 0.014
Minimum age in population: 58.78482919443923
Maximum age in population: 63.74859739528256
Average age in population: 61.74990768652068
Median age in population: 61.79063616976691
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.869
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.869
Total error diversity:				 0.08
Error (vector) diversity:			 0.085
Behavioral diversity:				 0.085
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 63553325
--- Timings ---
Current time: 1529614995119 milliseconds
Total Time:         170.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.0 seconds, 38.8%
Fitness Testing:     81.9 seconds, 48.1%
Report:              22.1 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_dec})
Best program: (float_stackdepth integer_stackdepth float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_dec float_mult float_dec float_dec integer_rot float_dec integer_rot float_dec float_dup_times float_dec float_dup_times float_dec float_mult float_dec integer_dup_items float_dec float_dup_times float_dec integer_dec float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dec integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub float_dec)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3842.4182533000003
Median total errors in population: 842.0
Error averages by case: (133.75698930000001 3.381 142.80390819999994 3.523 157.76146959999997 3.516 148.79446059999998 3.446 163.1422393 3.562 138.49894500000002 11.773 158.28175800000002 3.67 128.8418565 2.668 159.49205019999997 3.542 153.18443850000003 3.754 136.22022890000002 3.617 131.0540005 11.48 143.3234161 3.66 200.13011240000003 3.638 158.72118860000003 4.523 185.84122639999993 3.684 155.90272010000007 3.157 145.39638469999997 3.791 149.90276710000003 12.135 175.06502749999999 4.071 119.57579040000002 3.595 116.71123789999997 2.97 119.183429 3.09 143.85112270000002 3.002 155.37548580000004 12.358)
Error minima by case: (0.0 0 9.0 1 12.0 1 8.0949 1 29.6015 1 5.6721 1 9.0 1 0.0 0 14.0 1 19.0 1 1.2245 1 1.6195 1 7.0 1 1.8553 1 8.0 2 2.5307 1 6.0 1 6.0 1 4.6709 8 41.0 2 0.0961 1 0.0 0 0.0 0 11.0 1 0.5692 5)
Average genome size in population (length): 70.202
Average program size in population (points): 71.202
Average percent parens in population: 0.014
Minimum age in population: 59.98867146456405
Maximum age in population: 65.1948064593389
Average age in population: 63.1528892213403
Median age in population: 63.15675443105192
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.851
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.851
Total error diversity:				 0.076
Error (vector) diversity:			 0.082
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 65309300
--- Timings ---
Current time: 1529614999003 milliseconds
Total Time:         174.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.5 seconds, 38.7%
Fitness Testing:     83.8 seconds, 48.2%
Report:              22.7 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_yank} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_dec})
Best program: (print_float float_sub integer_stackdepth float_dup integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_dup float_dec float_mult float_dec float_dec integer_dup float_dec float_dec float_mult float_dec integer_mod integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec float_swap float_dec integer_dec float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec integer_flush integer_swap integer_yank float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub float_dec)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3601.4404943000004
Median total errors in population: 842.0
Error averages by case: (124.53342060000004 3.362 133.82751729999995 3.478 149.27858330000004 3.49 139.2804248 3.425 153.1209942 3.465 127.314851 11.731 146.96676920000002 3.588 119.9670917 2.634 151.0182535 3.516 142.92101859999994 3.656 130.82573780000004 3.562 121.68294089999998 11.462 133.76856229999996 3.602 188.5795607 3.562 147.61317810000003 4.434 174.4279862 3.585 144.60487259999996 3.091 135.83273909999997 3.691 141.07888979999998 12.071 165.5699288 3.996 112.16617210000001 3.537 106.72242200000002 2.907 109.8830482 3.06 134.4075681 2.978 145.85896340000002 12.306)
Error minima by case: (1.0 1 8.0 1 26.0 1 7.0949 1 21.566 1 16.8031 1 9.47 1 0.0 0 28.0 1 33.0 1 24.0 1 0.6195 1 6.0 1 0.1261 1 22.0 2 1.5307 1 15.4579 1 5.0 1 5.5619 8 40.0 2 1.5692 1 0.0 0 0.0 0 10.0 1 0.4308 5)
Average genome size in population (length): 70.408
Average program size in population (points): 71.408
Average percent parens in population: 0.014
Minimum age in population: 61.82828582964612
Maximum age in population: 66.87911765242609
Average age in population: 64.59737476809804
Median age in population: 64.65174893394897
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.076
Error (vector) diversity:			 0.084
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 67070450
--- Timings ---
Current time: 1529615003017 milliseconds
Total Time:         178.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.9 seconds, 38.7%
Fitness Testing:     85.9 seconds, 48.2%
Report:              23.2 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_533} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_1068} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_mult float_dec float_dup_times integer_swap integer_swap integer_rot float_dec float_mult float_dec float_dec float_dup_times float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times float_dec float_dup_times float_dec float_mult float_dup_times integer_swap integer_rot float_dec integer_swap integer_dec float_dec float_dec tagged_533 integer_swap integer_rot float_dec integer_swap tag_integer_1068 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec integer_dup_items float_dec float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_shove integer_stackdepth integer_inc integer_sub)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 4049.135682
Median total errors in population: 842.0
Error averages by case: (143.2463042 3.623 154.11073689999998 3.743 168.07916579999997 3.765 158.9219172 3.662 168.8766287 3.776 143.0871736 11.786 163.8104689 3.834 139.56534000000002 2.912 168.80135389999995 3.766 161.83016399999994 4.019 147.26515180000007 3.822 140.42036129999997 11.475 150.192243 3.822 203.91311799999997 3.837 164.2888787 4.666 190.3413659 3.88 161.57382610000002 3.356 152.976078 3.972 157.77896730000003 12.127 182.55162220000005 4.299 131.09427350000007 3.788 123.58745869999998 3.236 128.63137390000003 3.275 153.2843251 3.24 164.87738530000004 12.349)
Error minima by case: (1.0 1 5.0 1 10.8033 1 7.0949 1 5.1732 1 10.4924 1 8.4734 1 0.0 0 11.6123 1 6.566 1 21.0 1 0.0 0 3.0 1 0.0382 1 14.0 1 1.1269 1 12.0 1 2.0 1 4.9313 9 37.0 2 0.0 0 0.0 0 0.0 0 7.0 1 1.0286 9)
Average genome size in population (length): 70.469
Average program size in population (points): 71.469
Average percent parens in population: 0.014
Minimum age in population: 63.51681366921252
Maximum age in population: 68.07599395639869
Average age in population: 66.01097907442944
Median age in population: 66.0275040539474
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.871
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.871
Total error diversity:				 0.093
Error (vector) diversity:			 0.096
Behavioral diversity:				 0.097
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 68833450
--- Timings ---
Current time: 1529615007246 milliseconds
Total Time:         182.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.4 seconds, 38.7%
Fitness Testing:     87.9 seconds, 48.2%
Report:              23.7 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_shove} {:instruction float_dup} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_times} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1006} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction float_shove} {:instruction integer_mod})
Best program: (float_sub integer_shove float_dup integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_sub float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_mult float_dec float_dec integer_rot float_dec float_mult integer_mult float_dup_times integer_div float_dec float_dec float_mult float_dec tag_integer_1006 float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_rot float_dec float_mult integer_inc integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_integer float_dec print_float integer_shove float_shove integer_mod)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3512.1525809
Median total errors in population: 842.0
Error averages by case: (121.95075809999999 3.356 130.61662489999998 3.51 145.1689717 3.491 136.3271283 3.441 150.1534494 3.553 124.28101420000003 11.762 141.85710930000002 3.588 116.81757149999997 2.674 146.925801 3.513 140.10952899999995 3.797 128.43593470000002 3.562 119.09112179999997 11.434 128.78108360000002 3.597 183.25120839999997 3.568 142.28385990000004 4.443 168.9471718 3.579 139.49178729999997 3.079 130.6966266 3.705 139.78495809999998 12.091 160.7473801 4.002 110.06386890000002 3.538 102.95363060000003 2.946 108.0485486 3.174 131.4023961 2.979 143.28204699999998 12.301)
Error minima by case: (2.0 1 11.0 1 12.0 1 7.1723 1 10.1997 1 8.0 1 5.0014 1 0.0 0 14.0 1 19.0 1 5.3279 1 0.392 1 9.0 1 0.2499 1 8.0 1 0.1379 1 6.0 1 8.0 1 1.4381 8 38.474 2 0.0 0 0.0 0 0.0 0 5.9703 1 0.5351 5)
Average genome size in population (length): 70.548
Average program size in population (points): 71.548
Average percent parens in population: 0.014
Minimum age in population: 64.84696334087312
Maximum age in population: 69.3828749128252
Average age in population: 67.45800841142636
Median age in population: 67.5424442846082
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.844
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.844
Total error diversity:				 0.081
Error (vector) diversity:			 0.084
Behavioral diversity:				 0.085
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 70598450
--- Timings ---
Current time: 1529615011466 milliseconds
Total Time:         186.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.1 seconds, 38.6%
Fitness Testing:     89.9 seconds, 48.2%
Report:              24.4 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction float_min} {:instruction float_sub} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_sub} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_max} {:instruction float_min} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_min} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_rot} {:instruction tag_integer_109} {:instruction integer_div} {:instruction float_stackdepth} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_sin})
Best program: (float_stackdepth float_sub float_mult integer_div float_min float_sub in1 tag_integer_916 integer_sub integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_dec integer_rot float_dec float_mult float_dec float_max float_min integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_stackdepth integer_rot float_mult float_dec float_min integer_rot float_dec float_dec integer_inc float_dec print_float integer_shove integer_stackdepth integer_inc float_rot tag_integer_109 integer_div float_stackdepth float_dec integer_dup_times float_max float_sin)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 4175.2982397000005
Median total errors in population: 842.0
Error averages by case: (149.200688 3.534 159.52384380000004 3.68 174.01585180000004 3.681 165.348423 3.59 172.6106208 3.776 148.8410786 11.673 171.57595170000005 3.789 144.5516946 2.835 174.9353569 3.692 164.90883609999995 3.818 146.87254069999994 3.754 143.64148609999998 11.526 157.543308 3.789 212.69311829999998 3.792 171.11290359999998 4.633 198.88919639999997 3.808 169.03803360000003 3.292 159.086619 3.934 158.13126219999998 12.1 189.0360786 4.224 130.98718800000003 3.721 126.30762449999999 3.209 131.4490712 3.141 159.5654831 3.176 170.88898109999997 12.376)
Error minima by case: (0.0 0 8.0 1 12.0 1 8.6853 1 1.5189 1 4.0938 1 9.0 1 0.0 0 14.0 1 3.1537 1 24.0 1 1.028 1 6.0 1 1.7501 1 8.0 1 5.1269 1 6.0 1 5.0 1 3.1956 9 40.0 2 0.1896 1 0.0 0 0.0 0 7.2412 1 0.7674 8)
Average genome size in population (length): 69.675
Average program size in population (points): 70.675
Average percent parens in population: 0.014
Minimum age in population: 66.34718330811859
Maximum age in population: 70.7670092783768
Average age in population: 68.86260893740064
Median age in population: 68.92003337634081
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.85
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.85
Total error diversity:				 0.078
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.088
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 72341400
--- Timings ---
Current time: 1529615015482 milliseconds
Total Time:         190.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.5 seconds, 38.6%
Fitness Testing:     91.9 seconds, 48.3%
Report:              24.9 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_766} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_max} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_mult} {:instruction float_yank} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction tag_integer_1006} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_sub})
Best program: (in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_766 float_dec integer_swap float_dec float_mult float_dec integer_max integer_rot float_dec tag_integer_916 float_dec integer_swap float_dec float_mult float_yank float_dup_times integer_swap float_dec float_dec integer_min float_dec tag_integer_1006 float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_rot integer_yankdup integer_rot integer_inc integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_inc integer_sub)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3506.2437617000005
Median total errors in population: 842.0
Error averages by case: (121.30456280000001 3.207 130.4608447 3.331 145.48559970000002 3.352 136.42183449999996 3.262 149.00865180000002 3.351 125.08428209999998 11.875 141.9897973 3.447 116.0668343 2.47 147.2193982 3.37 141.66083949999998 3.537 128.06320279999997 3.418 119.21500210000004 11.477 127.44435859999996 3.427 184.8932457 3.437 142.2366043 4.317 170.138307 3.446 139.5259726 2.928 129.47804250000002 3.54 140.9491084 12.106 159.7642985 3.858 108.53650510000004 3.379 101.89388269999998 2.812 107.41294819999996 2.873 131.3301045 2.811 143.27653379999998 12.352)
Error minima by case: (1.0 1 8.0 1 14.0 1 8.0949 1 9.9684 1 8.2838 1 10.47 1 0.0 0 16.0 1 21.0 1 24.0 1 1.4523 1 6.0 1 0.2499 1 10.0 1 0.1379 1 8.0 1 5.0 1 20.2053 8 40.0 2 0.0 0 0.0 0 0.0 0 10.0 1 0.0286 8)
Average genome size in population (length): 69.597
Average program size in population (points): 70.597
Average percent parens in population: 0.014
Minimum age in population: 67.57395848783841
Maximum age in population: 72.16792117398153
Average age in population: 70.29239393578256
Median age in population: 70.3646199388734
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.849
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.849
Total error diversity:				 0.064
Error (vector) diversity:			 0.073
Behavioral diversity:				 0.076
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 74082425
--- Timings ---
Current time: 1529615019552 milliseconds
Total Time:         194.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.1 seconds, 38.6%
Fitness Testing:     93.9 seconds, 48.3%
Report:              25.5 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction tag_integer_176} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 float_dec integer_swap integer_dup_items float_dec tag_integer_176 float_dec integer_rot float_dec integer_shove float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec integer_swap tag_integer_916 float_dup_times integer_inc integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_swap float_shove float_dec float_dec float_mult float_dec print_float integer_shove integer_stackdepth)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3045.1555504000007
Median total errors in population: 842.0
Error averages by case: (101.15310010000002 3.175 110.3798328 3.293 126.17649779999999 3.319 115.98908669999997 3.246 136.16168519999997 3.384 110.9225816 11.771 121.64078249999997 3.394 96.23150539999997 2.44 127.94874749999998 3.336 123.0768035 3.483 113.30551980000001 3.372 99.56835610000003 11.43 108.77976919999999 3.394 163.97574190000003 3.356 122.25538990000003 4.243 149.42076399999996 3.398 119.23487759999998 2.857 110.59428489999999 3.505 124.9025348 12.06 141.1316088 3.791 93.39556650000003 3.345 89.07165849999997 2.782 89.55665180000004 2.895 110.97983919999999 2.769 122.97436430000005 12.29)
Error minima by case: (1.9224 1 11.0 1 7.8123 1 4.2009 1 2.6315 1 0.2788 1 4.8123 1 0.0 0 9.8123 1 6.8733 1 27.0 1 1.485 1 9.0 1 1.5974 1 3.8123 1 0.8621 1 1.8123 1 8.0 1 1.9313 9 3.5991 2 0.0 0 0.0 0 0.0 0 3.5002 1 0.0286 5)
Average genome size in population (length): 69.773
Average program size in population (points): 70.773
Average percent parens in population: 0.014
Minimum age in population: 68.62664469098853
Maximum age in population: 73.63049432028981
Average age in population: 71.68375572146817
Median age in population: 71.74408116317863
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.078
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.083
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 75828150
--- Timings ---
Current time: 1529615023570 milliseconds
Total Time:         198.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        76.6 seconds, 38.6%
Fitness Testing:     95.9 seconds, 48.3%
Report:              26.0 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_swap} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_mod} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction print_float} {:instruction integer_yank} {:instruction float_dup_items})
Best program: (float_stackdepth in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec float_min float_dec integer_swap float_dec integer_inc float_dec float_dec float_frominteger float_dec tag_integer_916 float_dec integer_swap integer_rot integer_mod integer_rot float_dec float_mult float_dec tag_integer_916 float_dec float_mult float_dec tag_integer_916 float_dec integer_swap float_sub float_dec float_dup_times integer_swap float_swap float_dec float_dup_times float_dec float_mult float_mod tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times float_dup_times integer_swap float_min float_dec print_float integer_yank float_dup_items)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3596.0383814000006
Median total errors in population: 842.0
Error averages by case: (129.48972720000006 3.378 138.1243163 3.514 149.30415879999998 3.472 143.99853019999998 3.429 149.9943056 3.522 121.24012350000001 11.735 146.7120472 3.566 124.15045319999999 2.659 151.02598190000003 3.493 140.67115939999994 3.658 122.8121981 3.552 123.86518460000002 11.446 136.1876623 3.594 188.01966309999997 3.549 146.09620409999997 4.426 173.81134029999998 3.581 143.3220369 3.047 138.30569569999997 3.73 131.8022243 12.028 168.21112850000003 3.982 106.04869770000002 3.532 102.61756050000001 2.981 110.18679380000002 3.04 139.0868049 2.969 150.78538329999998 12.286)
Error minima by case: (0.0 0 9.0 1 3.0136 1 3.1267 1 17.516 1 5.5076 1 2.4689 1 0.0 0 3.8227 1 19.0 1 25.0 1 0.485 1 7.0 1 0.0382 1 8.0 1 0.5306 1 6.0 1 6.0 1 0.835 8 41.0 2 0.0 0 0.0 0 0.0 0 4.5744 1 1.7652 8)
Average genome size in population (length): 69.668
Average program size in population (points): 70.668
Average percent parens in population: 0.014
Minimum age in population: 70.68237147853011
Maximum age in population: 74.98769541363282
Average age in population: 73.06878312401338
Median age in population: 73.14051919353867
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.828
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.828
Total error diversity:				 0.083
Error (vector) diversity:			 0.089
Behavioral diversity:				 0.09
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 77571225
--- Timings ---
Current time: 1529615027566 milliseconds
Total Time:         202.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        78.1 seconds, 38.6%
Fitness Testing:     97.9 seconds, 48.3%
Report:              26.5 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 59410.0
Test mean error for best: 29.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 59.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.8689238307 
Correct output: -34.4699592842 | Program output: -67.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 58.6123363982 
Correct output: 46.7196465918  | Program output: 3.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -93.1169636129
Correct output: -76.8272599297 | Program output: -108.8272599297
Correct output: -26.5306664135 | Program output: -91.5306664135
Correct output: -40.4578849398 | Program output: -70.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -24.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_flush} {:instruction float_sub} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_shove} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_889} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_sub} {:instruction tag_integer_109} {:instruction in1} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_dup_times} {:instruction in1} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_sub} {:instruction -8} {:instruction integer_inc} {:instruction float_swap} {:instruction float_div} {:instruction -9})
Best program: (float_flush float_sub float_stackdepth integer_stackdepth integer_inc integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_shove float_dec integer_shove float_mult float_dec float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_stackdepth float_dec float_mult float_dec tag_integer_916 float_dec integer_rot float_dec tag_integer_889 float_dec float_mult float_dec float_dup_times integer_stackdepth integer_rot float_dec float_mult float_dec tag_integer_916 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap print_integer float_dec print_float integer_shove integer_stackdepth integer_inc integer_sub tag_integer_109 in1 integer_flush float_dec integer_dup_times in1 float_frominteger float_swap float_sub -8 integer_inc float_swap float_div -9)
Errors: [9.0 2 18.0 2 36.0 2 26.0 2 57.0 2 32.0 12 33.0 2 1.0 1 38.0 2 43.0 2 34.0 2 13.0 11 16.0 2 82.0 2 32.0 3 65.0 2 30.0 1 15.0 2 51.0 12 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 842.0
Mean: 16.84
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3331.1292852000006
Median total errors in population: 842.0
Error averages by case: (114.10471940000002 3.22 123.7683827 3.349 140.2141279 3.366 129.6383548 3.302 140.14343389999996 3.397 115.31101250000002 11.751 138.393255 3.46 109.71944489999998 2.498 141.9858334 3.379 131.71127509999997 3.582 116.972045 3.409 108.63175929999998 11.42 123.64380369999999 3.458 180.6159967 3.415 138.93699220000005 4.308 166.1282062 3.46 136.00808040000004 2.937 125.6480821 3.541 129.0662492 12.079 155.79692379999995 3.836 98.2976824 3.368 92.19882700000001 2.766 96.33636020000002 2.934 124.64785910000002 2.808 135.90657830000006 12.261)
Error minima by case: (0.0 0 8.0 1 12.5982 1 6.7439 1 38.1504 1 4.3766 1 8.47 1 0.0 0 13.4073 1 16.5929 1 24.0 1 0.8027 1 6.0 1 0.0382 1 9.0 2 0.5307 1 7.0 1 5.0 1 14.3291 8 40.0 2 0.8733 1 0.0 0 0.0 0 10.0 1 0.2119 6)
Average genome size in population (length): 69.411
Average program size in population (points): 70.411
Average percent parens in population: 0.014
Minimum age in population: 71.68237147853011
Maximum age in population: 76.26934582228046
Average age in population: 74.45457654985923
Median age in population: 74.51283519081512
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.838
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.838
Total error diversity:				 0.083
Error (vector) diversity:			 0.091
Behavioral diversity:				 0.091
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 79307625
--- Timings ---
Current time: 1529615031875 milliseconds
Total Time:         206.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.7 seconds, 38.5%
Fitness Testing:     99.9 seconds, 48.3%
Report:              27.1 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 57527.0
Test mean error for best: 28.76350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 20.2182085795 
Correct output: 44.8179022307  | Program output: 59.8179022307 
Correct output: 95.8032792622  | Program output: 61.8032792622 
Correct output: 8.0949473456   | Program output: 31.0949473456 
Correct output: -64.1503753092 | Program output: -10.1503753092
Correct output: 27.1310761693  | Program output: -2.8689238307 
Correct output: -34.4699592842 | Program output: -65.4699592842
Correct output: 62.8135887966  | Program output: 58.8135887966 
Correct output: 96.6123363982  | Program output: 60.6123363982 
Correct output: 46.7196465918  | Program output: 5.7196465918  
Correct output: -59.2785304711 | Program output: -28.2785304711
Correct output: -6.9174150193  | Program output: 3.0825849807  
Correct output: -68.4374020443 | Program output: -55.4374020443
Correct output: -11.1169636129 | Program output: -91.1169636129
Correct output: -76.8272599297 | Program output: -106.8272599297
Correct output: -26.5306664135 | Program output: -89.5306664135
Correct output: -40.4578849398 | Program output: -68.4578849398
Correct output: -124.5033370034 | Program output: -112.5033370034
Correct output: 26.2328206209  | Program output: -22.7671793791
Correct output: -129.5990711743 | Program output: -82.5990711743
Correct output: -17.8249368738 | Program output: -32.8249368738
Correct output: -16.8176198654 | Program output: -13.8176198654
Correct output: 5.5639147954   | Program output: -0.4360852046 
Correct output: 15.7960197363  | Program output: 32.7960197363 
Correct output: -15.2347943829 | Program output: 16.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction float_shove} {:instruction integer_mod})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot float_dec integer_swap tag_integer_916 float_dup_times integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec print_float integer_shove float_shove integer_mod)
Errors: [6.0 2 15.0 2 34.0 2 23.0 2 54.0 2 30.0 12 31.0 2 4.0 2 36.0 2 41.0 2 31.0 2 10.0 12 13.0 2 80.0 1 30.0 2 63.0 2 28.0 2 12.0 2 49.0 12 47.0 2 15.0 2 3.0 1 6.0 11 17.0 2 32.0 12]
Total: 807.0
Mean: 16.14
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3611.7467290000013
Median total errors in population: 842.0
Error averages by case: (127.40863949999999 3.436 136.7482856 3.543 149.18713719999997 3.577 142.07837419999993 3.494 154.99667389999996 3.649 126.22299039999997 11.76 144.87349349999997 3.665 123.09675829999999 2.712 150.92909379999995 3.601 144.39009429999987 3.839 126.79132859999999 3.643 124.74456159999998 11.404 134.84421249999997 3.649 186.19533189999999 3.648 145.58163290000002 4.499 171.98923939999997 3.688 142.5050596 3.129 137.09039279999993 3.788 136.0994126 12.081 166.80960299999998 4.069 109.56398860000004 3.61 108.48917460000001 3.04 113.16443360000002 3.169 137.2098193 3.024 148.7249973 12.295)
Error minima by case: (0.0 0 7.0 1 12.0 1 8.0949 1 3.7228 1 8.0 1 9.0 1 0.0 0 14.0 1 13.7594 1 5.1252 1 0.0826 1 5.0 1 0.3049 1 8.0 1 2.5171 1 6.0 1 4.0 1 3.6709 3 39.0 2 0.0 0 0.0 0 0.0 0 6.9703 1 0.8295 8)
Average genome size in population (length): 69.667
Average program size in population (points): 70.667
Average percent parens in population: 0.014
Minimum age in population: 73.34880809001135
Maximum age in population: 77.96844707444237
Average age in population: 75.87415206578113
Median age in population: 75.87886307263226
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.851
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.851
Total error diversity:				 0.091
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.102
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 81050350
--- Timings ---
Current time: 1529615036030 milliseconds
Total Time:         211.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.3 seconds, 38.5%
Fitness Testing:    101.9 seconds, 48.3%
Report:              27.8 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 59728.6738
Test mean error for best: 29.86434
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 23.2182085795 
Correct output: 44.8179022307  | Program output: 62.8179022307 
Correct output: 95.8032792622  | Program output: 64.8032792622 
Correct output: 8.0949473456   | Program output: 34.0949473456 
Correct output: -64.1503753092 | Program output: -7.1503753092 
Correct output: 27.1310761693  | Program output: -4.5895905298 
Correct output: -34.4699592842 | Program output: -62.4699592842
Correct output: 62.8135887966  | Program output: 61.8135887966 
Correct output: 96.6123363982  | Program output: 63.6123363982 
Correct output: 46.7196465918  | Program output: 8.7196465918  
Correct output: -59.2785304711 | Program output: -25.2785304711
Correct output: -6.9174150193  | Program output: 6.0825849807  
Correct output: -68.4374020443 | Program output: -52.4374020443
Correct output: -11.1169636129 | Program output: -88.1169636129
Correct output: -76.8272599297 | Program output: -103.8272599297
Correct output: -26.5306664135 | Program output: -86.5306664135
Correct output: -40.4578849398 | Program output: -65.4578849398
Correct output: -124.5033370034 | Program output: -109.5033370034
Correct output: 26.2328206209  | Program output: -19.7671793791
Correct output: -129.5990711743 | Program output: -79.5990711743
Correct output: -17.8249368738 | Program output: -29.8249368738
Correct output: -16.8176198654 | Program output: -10.8176198654
Correct output: 5.5639147954   | Program output: 2.5639147954  
Correct output: 15.7960197363  | Program output: 35.7960197363 
Correct output: -15.2347943829 | Program output: 19.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_shove} {:instruction print_integer} {:instruction float_min} {:instruction float_dec} {:instruction print_float})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_mult float_dec integer_swap integer_rot float_dec integer_mod integer_swap float_min float_dec float_dec float_dup_times float_shove print_integer float_min float_dec print_float)
Errors: [9.0 2 18.0 2 31.0 2 26.0 2 57.0 2 31.7207 11 28.0 2 1.0 1 33.0 2 38.0 2 34.0 2 13.0 11 16.0 2 77.0 2 27.0 3 60.0 1 25.0 2 15.0 2 46.0 13 50.0 2 12.0 2 6.0 1 3.0 1 20.0 1 35.0 12]
Total: 796.7207
Mean: 15.934414
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3533.3972830000007
Median total errors in population: 842.0
Error averages by case: (123.11473489999999 3.332 132.2991434 3.427 148.7874247 3.479 138.07216349999996 3.379 146.4848644 3.507 120.81569860000003 11.773 145.58363059999996 3.572 118.4082893 2.607 150.81384160000002 3.475 140.7606346 3.636 126.42197760000005 3.508 118.10803529999997 11.392 130.28008309999996 3.527 188.30579089999995 3.551 146.1465041 4.431 173.8477225 3.59 143.03524110000004 3.016 132.99862769999996 3.679 138.56782879999997 12.065 162.9583688 3.916 105.8681912 3.475 99.06419770000001 2.865 105.63640129999999 2.911 133.13046480000003 2.888 144.6184225 12.268)
Error minima by case: (0.0 0 9.0 1 12.0 1 7.0949 1 18.1426 1 4.6068 1 2.4689 1 0.0 0 14.0 1 1.8463 1 25.0 1 0.0841 1 7.0 1 1.1261 1 8.0 1 3.5306 1 6.0 1 6.0 1 9.7663 9 40.9951 2 0.0 0 0.0 0 0.0 0 11.0 1 0.5692 8)
Average genome size in population (length): 69.486
Average program size in population (points): 70.486
Average percent parens in population: 0.014
Minimum age in population: 74.6229264703393
Maximum age in population: 79.16855647296725
Average age in population: 77.29146313232518
Median age in population: 77.36890419930887
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.848
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.848
Total error diversity:				 0.081
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.087
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 82788500
--- Timings ---
Current time: 1529615040071 milliseconds
Total Time:         215.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        82.7 seconds, 38.5%
Fitness Testing:    103.8 seconds, 48.3%
Report:              28.4 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 58888.3841
Test mean error for best: 29.44419
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 27.2182085795 
Correct output: 44.8179022307  | Program output: 66.8179022307 
Correct output: 95.8032792622  | Program output: 68.8032792622 
Correct output: 8.0949473456   | Program output: 38.0949473456 
Correct output: -64.1503753092 | Program output: -3.1503753092 
Correct output: 27.1310761693  | Program output: 4.1310761693  
Correct output: -34.4699592842 | Program output: -58.4699592842
Correct output: 62.8135887966  | Program output: 65.8135887966 
Correct output: 96.6123363982  | Program output: 67.6123363982 
Correct output: 46.7196465918  | Program output: 12.7196465918 
Correct output: -59.2785304711 | Program output: -21.2785304711
Correct output: -6.9174150193  | Program output: 10.0825849807 
Correct output: -68.4374020443 | Program output: -48.4374020443
Correct output: -11.1169636129 | Program output: -84.1169636129
Correct output: -76.8272599297 | Program output: -99.8272599297
Correct output: -26.5306664135 | Program output: -82.5306664135
Correct output: -40.4578849398 | Program output: -61.4578849398
Correct output: -124.5033370034 | Program output: -105.5033370034
Correct output: 26.2328206209  | Program output: -15.7671793791
Correct output: -129.5990711743 | Program output: -75.5990711743
Correct output: -17.8249368738 | Program output: -25.8249368738
Correct output: -16.8176198654 | Program output: -6.8176198654 
Correct output: 5.5639147954   | Program output: 6.5639147954  
Correct output: 15.7960197363  | Program output: 39.7960197363 
Correct output: -15.2347943829 | Program output: 23.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_shove} {:instruction print_integer} {:instruction float_min} {:instruction float_dec} {:instruction print_float})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_mult float_dec integer_swap integer_rot float_dec integer_mod integer_swap float_min float_dec float_dec float_dup_times float_shove print_integer float_min float_dec print_float)
Errors: [13.0 2 22.0 2 27.0 2 30.0 1 61.0 2 23.0 2 24.0 2 3.0 1 29.0 2 34.0 2 38.0 2 17.0 12 20.0 1 73.0 2 23.0 2 56.0 2 21.0 2 19.0 2 42.0 13 54.0 3 8.0 2 10.0 1 1.0 1 24.0 2 39.0 13]
Total: 789.0
Mean: 15.78
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3976.8223806000005
Median total errors in population: 842.0
Error averages by case: (143.85514059999997 3.487 153.83936400000002 3.627 166.7507094 3.602 159.62062609999998 3.563 160.58002439999999 3.699 132.66191159999997 11.662 166.00892650000003 3.718 139.3886471 2.821 167.55148439999996 3.662 151.95934139999994 3.87 136.73763300000007 3.704 135.04004890000002 11.44 152.6693144 3.745 205.81062159999996 3.716 165.2957286 4.568 192.21548420000002 3.732 163.62535419999998 3.266 154.79758369999996 3.884 146.92395860000002 12.081 184.83107170000002 4.181 119.87172930000004 3.678 113.58513209999998 3.105 120.227259 3.371 153.88690480000002 3.154 165.43338100000003 12.319)
Error minima by case: (0.0 0 8.0 1 20.0 1 8.0949 1 0.9241 1 2.541 1 7.47 1 0.0 0 22.0 1 27.0 1 24.0 1 0.485 1 6.0 1 0.5974 1 16.0 1 0.4693 1 13.4579 1 5.0 1 2.6022 2 40.0 2 0.0 0 0.0 0 0.0 0 10.0 1 0.7652 9)
Average genome size in population (length): 69.525
Average program size in population (points): 70.525
Average percent parens in population: 0.014
Minimum age in population: 76.05700380494422
Maximum age in population: 80.63165240004878
Average age in population: 78.69714108283516
Median age in population: 78.7432662678277
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.861
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.861
Total error diversity:				 0.109
Error (vector) diversity:			 0.116
Behavioral diversity:				 0.116
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 84527600
--- Timings ---
Current time: 1529615044325 milliseconds
Total Time:         219.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.3 seconds, 38.4%
Fitness Testing:    106.1 seconds, 48.3%
Report:              29.0 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 63238.108700000004
Test mean error for best: 31.61905
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 21.2182085795 
Correct output: 44.8179022307  | Program output: 60.8179022307 
Correct output: 95.8032792622  | Program output: 70.8032792622 
Correct output: 8.0949473456   | Program output: 32.0949473456 
Correct output: -64.1503753092 | Program output: -9.1503753092 
Correct output: 27.1310761693  | Program output: 6.1310761693  
Correct output: -34.4699592842 | Program output: -56.4699592842
Correct output: 62.8135887966  | Program output: 59.8135887966 
Correct output: 96.6123363982  | Program output: 69.6123363982 
Correct output: 46.7196465918  | Program output: 14.7196465918 
Correct output: -59.2785304711 | Program output: -27.2785304711
Correct output: -6.9174150193  | Program output: 4.0825849807  
Correct output: -68.4374020443 | Program output: -54.4374020443
Correct output: -11.1169636129 | Program output: -82.1169636129
Correct output: -76.8272599297 | Program output: -97.8272599297
Correct output: -26.5306664135 | Program output: -80.5306664135
Correct output: -40.4578849398 | Program output: -59.4578849398
Correct output: -124.5033370034 | Program output: -111.5033370034
Correct output: 26.2328206209  | Program output: -13.7671793791
Correct output: -129.5990711743 | Program output: -81.5990711743
Correct output: -17.8249368738 | Program output: -31.8249368738
Correct output: -16.8176198654 | Program output: -12.8176198654
Correct output: 5.5639147954   | Program output: 0.5639147954  
Correct output: 15.7960197363  | Program output: 33.7960197363 
Correct output: -15.2347943829 | Program output: 17.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_rot} {:instruction tag_integer_109} {:instruction integer_div} {:instruction float_stackdepth} {:instruction float_dec} {:instruction integer_dup_times})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc float_rot tag_integer_109 integer_div float_stackdepth float_dec integer_dup_times)
Errors: [7.0 2 16.0 2 25.0 2 24.0 2 55.0 2 21.0 2 22.0 2 3.0 2 27.0 2 32.0 2 32.0 2 11.0 12 14.0 2 71.0 2 21.0 2 54.0 2 19.0 2 13.0 2 40.0 13 48.0 3 14.0 2 4.0 1 5.0 1 18.0 2 33.0 12]
Total: 709.0
Mean: 14.18
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3864.1177291999998
Median total errors in population: 842.0
Error averages by case: (140.1658979 3.49 149.8583434 3.654 160.67468490000002 3.649 155.12090960000006 3.599 160.76900440000003 3.633 128.39516760000004 11.614 156.4193879 3.779 136.36647649999998 2.861 162.57854649999996 3.673 149.27879529999993 3.859 132.7721532 3.708 133.3328648 11.479 147.16420259999995 3.764 198.2661958 3.751 157.62792510000003 4.588 184.15025699999998 3.78 156.8442678 3.357 149.8594222 3.885 138.77746779999995 12.077 179.12832300000005 4.201 116.74244220000006 3.698 113.04915539999998 3.117 121.16396319999998 3.59 150.25361829999997 3.191 161.0532568 12.308)
Error minima by case: (0.0 0 2.3409 1 10.3439 1 9.6268 1 20.8496 1 5.0851 1 4.0861 1 0.0 0 7.077 1 0.4392 1 2.7215 1 1.8027 1 7.0 1 0.3049 1 15.0 2 0.8621 1 10.0741 1 6.0 1 0.165 9 41.0 2 1.0 1 0.0 0 0.0 0 1.9257 1 0.2348 8)
Average genome size in population (length): 69.755
Average program size in population (points): 70.755
Average percent parens in population: 0.014
Minimum age in population: 77.34141830512156
Maximum age in population: 82.1507050723751
Average age in population: 80.09697326928276
Median age in population: 80.16769005298028
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.827
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.827
Total error diversity:				 0.118
Error (vector) diversity:			 0.124
Behavioral diversity:				 0.125
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 86272850
--- Timings ---
Current time: 1529615048310 milliseconds
Total Time:         223.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        85.7 seconds, 38.4%
Fitness Testing:    108.0 seconds, 48.4%
Report:              29.4 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 62507.733
Test mean error for best: 31.25387
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 18.2182085795 
Correct output: 44.8179022307  | Program output: 57.8179022307 
Correct output: 95.8032792622  | Program output: 70.8032792622 
Correct output: 8.0949473456   | Program output: 29.0949473456 
Correct output: -64.1503753092 | Program output: -12.1503753092
Correct output: 27.1310761693  | Program output: 6.1310761693  
Correct output: -34.4699592842 | Program output: -56.4699592842
Correct output: 62.8135887966  | Program output: 56.8135887966 
Correct output: 96.6123363982  | Program output: 69.6123363982 
Correct output: 46.7196465918  | Program output: 14.7196465918 
Correct output: -59.2785304711 | Program output: -30.2785304711
Correct output: -6.9174150193  | Program output: 1.0825849807  
Correct output: -68.4374020443 | Program output: -57.4374020443
Correct output: -11.1169636129 | Program output: -82.1169636129
Correct output: -76.8272599297 | Program output: -97.8272599297
Correct output: -26.5306664135 | Program output: -80.5306664135
Correct output: -40.4578849398 | Program output: -59.4578849398
Correct output: -124.5033370034 | Program output: -114.5033370034
Correct output: 26.2328206209  | Program output: -13.7671793791
Correct output: -129.5990711743 | Program output: -84.5990711743
Correct output: -17.8249368738 | Program output: -34.8249368738
Correct output: -16.8176198654 | Program output: -15.8176198654
Correct output: 5.5639147954   | Program output: -2.4360852046 
Correct output: 15.7960197363  | Program output: 30.7960197363 
Correct output: -15.2347943829 | Program output: 14.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc)
Errors: [4.0 1 13.0 2 25.0 2 21.0 2 52.0 2 21.0 2 22.0 2 6.0 2 27.0 2 32.0 2 29.0 2 8.0 12 11.0 2 71.0 2 21.0 2 54.0 2 19.0 2 10.0 1 40.0 13 45.0 3 17.0 2 1.0 1 8.0 11 15.0 2 30.0 12]
Total: 690.0
Mean: 13.8
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3846.4284412
Median total errors in population: 842.0
Error averages by case: (138.90357010000005 3.514 148.58682539999998 3.646 161.01813059999995 3.71 154.1064433 3.572 162.65643789999996 3.738 124.57412090000003 11.248 155.394726 3.796 135.51947329999996 2.924 161.8628996 3.74 150.47713779999998 3.871 133.22586209999997 3.712 136.07104140000004 11.473 144.05166359999996 3.759 195.26853169999993 3.714 154.6597362 4.565 182.82028270000004 3.798 152.99418330000003 3.409 147.4073378 3.896 139.41735319999998 12.144 176.6392186 4.22 118.24015650000005 3.673 114.78048669999997 3.151 123.87986789999994 4.02 148.6001078 3.239 160.4228468 12.318)
Error minima by case: (0.0 0 7.0 1 16.0 1 6.0949 1 10.157 1 2.3279 1 3.53 1 0.0 0 18.0 1 23.0 1 1.2785 1 0.0826 1 5.0 1 0.4737 1 3.1727 2 2.4693 1 3.5421 1 4.0 1 0.7672 8 39.0 2 0.262 1 0.0 0 0.0 0 9.0 1 0.1705 8)
Average genome size in population (length): 69.358
Average program size in population (points): 70.358
Average percent parens in population: 0.014
Minimum age in population: 78.72736638005009
Maximum age in population: 83.6602939010392
Average age in population: 81.53204749930788
Median age in population: 81.59928734990073
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.792
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.792
Total error diversity:				 0.144
Error (vector) diversity:			 0.161
Behavioral diversity:				 0.162
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 88007250
--- Timings ---
Current time: 1529615052777 milliseconds
Total Time:         227.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.4 seconds, 38.4%
Fitness Testing:    110.0 seconds, 48.3%
Report:              30.0 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 62507.733
Test mean error for best: 31.25387
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 18.2182085795 
Correct output: 44.8179022307  | Program output: 57.8179022307 
Correct output: 95.8032792622  | Program output: 70.8032792622 
Correct output: 8.0949473456   | Program output: 29.0949473456 
Correct output: -64.1503753092 | Program output: -12.1503753092
Correct output: 27.1310761693  | Program output: 6.1310761693  
Correct output: -34.4699592842 | Program output: -56.4699592842
Correct output: 62.8135887966  | Program output: 56.8135887966 
Correct output: 96.6123363982  | Program output: 69.6123363982 
Correct output: 46.7196465918  | Program output: 14.7196465918 
Correct output: -59.2785304711 | Program output: -30.2785304711
Correct output: -6.9174150193  | Program output: 1.0825849807  
Correct output: -68.4374020443 | Program output: -57.4374020443
Correct output: -11.1169636129 | Program output: -82.1169636129
Correct output: -76.8272599297 | Program output: -97.8272599297
Correct output: -26.5306664135 | Program output: -80.5306664135
Correct output: -40.4578849398 | Program output: -59.4578849398
Correct output: -124.5033370034 | Program output: -114.5033370034
Correct output: 26.2328206209  | Program output: -13.7671793791
Correct output: -129.5990711743 | Program output: -84.5990711743
Correct output: -17.8249368738 | Program output: -34.8249368738
Correct output: -16.8176198654 | Program output: -15.8176198654
Correct output: 5.5639147954   | Program output: -2.4360852046 
Correct output: 15.7960197363  | Program output: 30.7960197363 
Correct output: -15.2347943829 | Program output: 14.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc)
Errors: [4.0 1 13.0 2 25.0 2 21.0 2 52.0 2 21.0 2 22.0 2 6.0 2 27.0 2 32.0 2 29.0 2 8.0 12 11.0 2 71.0 2 21.0 2 54.0 2 19.0 2 10.0 1 40.0 13 45.0 3 17.0 2 1.0 1 8.0 11 15.0 2 30.0 12]
Total: 690.0
Mean: 13.8
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3793.8876713999994
Median total errors in population: 825.688
Error averages by case: (146.93879 3.573 156.1600673 3.736 134.77107660000004 3.468 161.2945551 3.595 173.68314150000003 3.786 107.99964800000001 9.472 133.61653200000003 3.608 143.72234800000004 3.113 136.6297938999999 3.501 123.94460969999993 3.644 154.8679814 3.852 144.6117331 11.568 152.62206390000003 3.822 176.7843869 3.523 135.23403830000004 4.298 162.45950810000002 3.616 131.16753169999993 3.479 155.41006989999997 3.975 131.1225782 12.468 183.8739169 4.564 135.07206440000004 3.809 128.31790739999997 3.359 134.4995409 4.717 156.55035230000001 3.595 167.94843590000002 12.444)
Error minima by case: (0.0 0 8.0 1 12.0 1 7.6853 1 11.7372 1 6.2135 1 5.4689 1 0.0 0 14.0 1 15.2856 1 1.2785 1 1.8046 1 6.0 1 1.125 1 7.1727 1 0.5307 1 5.5421 1 5.0 1 0.7672 9 40.0 2 0.7855 1 0.0 0 0.0 0 10.0 1 0.4396 8)
Average genome size in population (length): 68.549
Average program size in population (points): 69.549
Average percent parens in population: 0.015
Minimum age in population: 80.41359590415404
Maximum age in population: 85.17348509587625
Average age in population: 82.96735959024957
Median age in population: 82.96192680323222
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.763
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.763
Total error diversity:				 0.188
Error (vector) diversity:			 0.22
Behavioral diversity:				 0.221
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 89721225
--- Timings ---
Current time: 1529615057277 milliseconds
Total Time:         232.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        89.0 seconds, 38.3%
Fitness Testing:    112.4 seconds, 48.4%
Report:              30.8 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 74292.9283
Test mean error for best: 37.14646
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 12.2182085795 
Correct output: 44.8179022307  | Program output: 51.8179022307 
Correct output: 95.8032792622  | Program output: 65.8032792622 
Correct output: 8.0949473456   | Program output: 23.0949473456 
Correct output: -64.1503753092 | Program output: -18.1503753092
Correct output: 27.1310761693  | Program output: 1.1310761693  
Correct output: -34.4699592842 | Program output: -61.4699592842
Correct output: 62.8135887966  | Program output: 50.8135887966 
Correct output: 96.6123363982  | Program output: 64.6123363982 
Correct output: 46.7196465918  | Program output: 9.7196465918  
Correct output: -59.2785304711 | Program output: -36.2785304711
Correct output: -6.9174150193  | Program output: -4.9174150193 
Correct output: -68.4374020443 | Program output: -63.4374020443
Correct output: -11.1169636129 | Program output: -87.1169636129
Correct output: -76.8272599297 | Program output: -102.8272599297
Correct output: -26.5306664135 | Program output: -85.5306664135
Correct output: -40.4578849398 | Program output: -64.4578849398
Correct output: -124.5033370034 | Program output: -120.5033370034
Correct output: 26.2328206209  | Program output: -18.7671793791
Correct output: -129.5990711743 | Program output: -90.5990711743
Correct output: -17.8249368738 | Program output: -40.8249368738
Correct output: -16.8176198654 | Program output: -21.8176198654
Correct output: 5.5639147954   | Program output: -8.4360852046 
Correct output: 15.7960197363  | Program output: 24.7960197363 
Correct output: -15.2347943829 | Program output: 8.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction float_shove} {:instruction integer_mod})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec float_dec float_mult float_dec float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_sub float_dec integer_mod float_dec float_dec float_mult float_dec float_dec float_sub float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_rot float_dec tag_integer_916 integer_max float_dup_times integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times float_dec float_dup_times integer_swap float_rot integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec print_float integer_shove float_shove integer_mod)
Errors: [2.0 1 7.0 2 30.0 1 15.0 2 46.0 2 26.0 2 27.0 2 12.0 2 32.0 2 37.0 2 23.0 2 2.0 1 5.0 1 76.0 2 26.0 3 59.0 2 24.0 2 4.0 1 45.0 13 39.0 3 23.0 2 5.0 2 14.0 11 9.0 2 24.0 13]
Total: 690.0
Mean: 13.8
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 4268.039568700003
Median total errors in population: 789.0
Error averages by case: (174.93420370000007 3.863 183.92179569999996 4.027 145.402799 3.477 188.82999969999995 3.862 193.6100325000001 4.098 114.73987019999993 6.446 146.0499178 3.624 172.27646999999993 3.457 147.24081029999996 3.517 131.9229156999999 3.641 172.7433635 4.186 169.6461895 11.358 179.47340069999993 4.103 188.32007449999998 3.579 145.92294340000004 4.25 174.35996080000007 3.603 143.56285829999996 3.587 182.45566570000003 4.332 133.47253729999997 12.65 210.1962628 5.093 155.54684410000007 4.093 149.08097030000005 3.803 158.80317309999992 4.965 184.33222480000003 4.073 194.9822853 12.525)
Error minima by case: (0.0 0 6.0 1 12.0 1 7.6771 1 14.8052 1 0.5901 1 7.1234 1 0.0 0 14.0 1 19.0 1 1.2785 1 0.2775 1 4.0 1 2.2295 1 1.8717 1 0.4573 1 6.0 1 3.0 1 0.7672 8 38.0 2 0.0 0 0.0 0 0.0 0 8.0 1 0.1204 7)
Average genome size in population (length): 69.916
Average program size in population (points): 70.916
Average percent parens in population: 0.014
Minimum age in population: 82.31899580363296
Maximum age in population: 86.14363683933468
Average age in population: 84.44863484908721
Median age in population: 84.51689534050831
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.771
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.771
Total error diversity:				 0.223
Error (vector) diversity:			 0.273
Behavioral diversity:				 0.273
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 91469300
--- Timings ---
Current time: 1529615061296 milliseconds
Total Time:         236.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        90.4 seconds, 38.3%
Fitness Testing:    114.4 seconds, 48.4%
Report:              31.4 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 61860.6243
Test mean error for best: 30.93031
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 13.2182085795 
Correct output: 44.8179022307  | Program output: 52.8179022307 
Correct output: 95.8032792622  | Program output: 70.8032792622 
Correct output: 8.0949473456   | Program output: 24.0949473456 
Correct output: -64.1503753092 | Program output: -17.1503753092
Correct output: 27.1310761693  | Program output: 6.1310761693  
Correct output: -34.4699592842 | Program output: -56.4699592842
Correct output: 62.8135887966  | Program output: 51.8135887966 
Correct output: 96.6123363982  | Program output: 69.6123363982 
Correct output: 46.7196465918  | Program output: 14.7196465918 
Correct output: -59.2785304711 | Program output: -35.2785304711
Correct output: -6.9174150193  | Program output: -3.9174150193 
Correct output: -68.4374020443 | Program output: -62.4374020443
Correct output: -11.1169636129 | Program output: -82.1169636129
Correct output: -76.8272599297 | Program output: -97.8272599297
Correct output: -26.5306664135 | Program output: -80.5306664135
Correct output: -40.4578849398 | Program output: -59.4578849398
Correct output: -124.5033370034 | Program output: -119.5033370034
Correct output: 26.2328206209  | Program output: -13.7671793791
Correct output: -129.5990711743 | Program output: -89.5990711743
Correct output: -17.8249368738 | Program output: -39.8249368738
Correct output: -16.8176198654 | Program output: -20.8176198654
Correct output: 5.5639147954   | Program output: -7.4360852046 
Correct output: 15.7960197363  | Program output: 25.7960197363 
Correct output: -15.2347943829 | Program output: 9.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_min} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_rot} {:instruction tag_integer_109} {:instruction integer_div} {:instruction float_stackdepth} {:instruction float_dec} {:instruction integer_dup_times})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dec integer_sub float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_min float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc float_rot tag_integer_109 integer_div float_stackdepth float_dec integer_dup_times)
Errors: [1.0 1 8.0 2 25.0 2 16.0 2 47.0 2 21.0 2 22.0 2 11.0 2 27.0 2 32.0 2 24.0 2 3.0 1 6.0 1 71.0 2 21.0 2 54.0 2 19.0 2 5.0 2 40.0 13 40.0 2 22.0 2 4.0 2 13.0 11 10.0 1 25.0 13]
Total: 644.0
Mean: 12.88
Genome size: 102
Size: 103
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 4902.913667000002
Median total errors in population: 774.0
Error averages by case: (198.67273640000002 4.052 206.70115519999996 4.334 168.8559902 3.801 211.5712237 4.191 222.93227579999999 4.45 137.87328159999998 5.76 168.86294249999997 3.982 197.5750070999999 3.953 170.44149439999995 3.788 156.6038028999999 3.986 202.64136669999994 4.512 193.2559078 10.743 205.2546596 4.48 209.71326049999996 3.924 169.60597740000009 4.502 196.10767540000003 3.954 166.52940149999995 3.858 207.84449260000005 4.73 163.38379939999996 12.72 234.90550989999994 5.409 188.53884280000003 4.461 180.26184149999995 4.019 186.99880429999996 6.238 207.26408050000003 4.329 217.87213729999996 12.47)
Error minima by case: (0.0 0 4.0 1 11.0 1 1.2081 1 9.2181 1 3.051 1 8.0 1 0.0 0 13.0 1 13.2856 1 1.2785 1 0.0 0 2.0 1 0.885 1 7.0 1 6.1379 1 5.0 1 1.0 1 0.7672 2 36.0 2 0.2252 1 0.0 0 0.0 0 6.0 1 0.2326 9)
Average genome size in population (length): 77.281
Average program size in population (points): 78.281
Average percent parens in population: 0.013
Minimum age in population: 83.59190278800497
Maximum age in population: 87.7167247380366
Average age in population: 85.82350921560943
Median age in population: 85.88397476491375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.825
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.825
Total error diversity:				 0.231
Error (vector) diversity:			 0.283
Behavioral diversity:				 0.284
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 93401525
--- Timings ---
Current time: 1529615066127 milliseconds
Total Time:         240.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        92.0 seconds, 38.2%
Fitness Testing:    116.8 seconds, 48.5%
Report:              32.0 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 71988.9816
Test mean error for best: 35.99449
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 10.2182085795 
Correct output: 44.8179022307  | Program output: 49.8179022307 
Correct output: 95.8032792622  | Program output: 70.8032792622 
Correct output: 8.0949473456   | Program output: 21.0949473456 
Correct output: -64.1503753092 | Program output: -20.1503753092
Correct output: 27.1310761693  | Program output: 6.1310761693  
Correct output: -34.4699592842 | Program output: -56.4699592842
Correct output: 62.8135887966  | Program output: 48.8135887966 
Correct output: 96.6123363982  | Program output: 69.6123363982 
Correct output: 46.7196465918  | Program output: 14.7196465918 
Correct output: -59.2785304711 | Program output: -38.2785304711
Correct output: -6.9174150193  | Program output: -6.9174150193 
Correct output: -68.4374020443 | Program output: -65.4374020443
Correct output: -11.1169636129 | Program output: -82.1169636129
Correct output: -76.8272599297 | Program output: -97.8272599297
Correct output: -26.5306664135 | Program output: -80.5306664135
Correct output: -40.4578849398 | Program output: -59.4578849398
Correct output: -124.5033370034 | Program output: -122.5033370034
Correct output: 26.2328206209  | Program output: -13.7671793791
Correct output: -129.5990711743 | Program output: -92.5990711743
Correct output: -17.8249368738 | Program output: -42.8249368738
Correct output: -16.8176198654 | Program output: -23.8176198654
Correct output: 5.5639147954   | Program output: -10.4360852046
Correct output: 15.7960197363  | Program output: 22.7960197363 
Correct output: -15.2347943829 | Program output: 6.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_min} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_rot} {:instruction tag_integer_109} {:instruction integer_div} {:instruction float_stackdepth} {:instruction float_dec} {:instruction integer_dup_times})
Best program: (float_stackdepth float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap float_dec tag_integer_916 float_dec integer_sub float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_min float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc float_rot tag_integer_109 integer_div float_stackdepth float_dec integer_dup_times)
Errors: [4.0 1 5.0 1 25.0 2 13.0 2 44.0 2 21.0 2 22.0 2 14.0 2 27.0 2 32.0 2 21.0 2 0.0 0 3.0 1 71.0 2 21.0 2 54.0 2 19.0 2 2.0 1 40.0 13 37.0 2 25.0 2 7.0 2 16.0 12 7.0 2 22.0 13]
Total: 628.0
Mean: 12.56
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 4870.141408300002
Median total errors in population: 730.0
Error averages by case: (189.9008289 3.949 199.76223099999993 4.341 187.42800800000003 3.926 204.25260459999998 4.152 204.24898540000007 4.482 142.34924889999996 4.836 184.39333260000004 4.055 192.20185539999997 4.166 188.3309595 3.883 175.80436229999995 4.188 182.33010879999995 4.419 180.4193760999999 10.15 194.43413639999997 4.35 223.98281790000001 3.984 183.60578429999998 4.41 210.7491941 4.064 183.89461149999997 3.963 198.59298619999996 4.592 171.2733005 12.888 226.3840882 5.351 171.8150713 4.403 160.46880510000005 3.821 173.34557239999995 7.679 199.01477369999998 4.299 208.5683651999999 12.239)
Error minima by case: (0.0 0 2.0 1 13.0 1 2.3244 1 3.3494 1 1.7735 1 5.0953 1 0.0 0 15.0 1 13.3217 1 1.2785 1 0.0 0 0.9376 1 0.883 1 9.0 1 1.2496 1 3.04 1 1.0 1 2.6718 9 10.5991 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2209 2)
Average genome size in population (length): 83.045
Average program size in population (points): 84.045
Average percent parens in population: 0.012
Minimum age in population: 84.67242451983947
Maximum age in population: 89.13497441057483
Average age in population: 87.1023473692543
Median age in population: 87.13559391290376
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.83
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.83
Total error diversity:				 0.269
Error (vector) diversity:			 0.32
Behavioral diversity:				 0.321
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 95478150
--- Timings ---
Current time: 1529615070716 milliseconds
Total Time:         245.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        93.5 seconds, 38.1%
Fitness Testing:    119.2 seconds, 48.5%
Report:              32.9 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 71077.91209999999
Test mean error for best: 35.53896
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 10.2182085795 
Correct output: 44.8179022307  | Program output: 49.8179022307 
Correct output: 95.8032792622  | Program output: 71.8032792622 
Correct output: 8.0949473456   | Program output: 21.0949473456 
Correct output: -64.1503753092 | Program output: -20.1503753092
Correct output: 27.1310761693  | Program output: 7.1310761693  
Correct output: -34.4699592842 | Program output: -55.4699592842
Correct output: 62.8135887966  | Program output: 48.8135887966 
Correct output: 96.6123363982  | Program output: 70.6123363982 
Correct output: 46.7196465918  | Program output: 15.7196465918 
Correct output: -59.2785304711 | Program output: -38.2785304711
Correct output: -6.9174150193  | Program output: -6.9174150193 
Correct output: -68.4374020443 | Program output: -65.4374020443
Correct output: -11.1169636129 | Program output: -81.1169636129
Correct output: -76.8272599297 | Program output: -96.8272599297
Correct output: -26.5306664135 | Program output: -79.5306664135
Correct output: -40.4578849398 | Program output: -58.4578849398
Correct output: -124.5033370034 | Program output: -122.5033370034
Correct output: 26.2328206209  | Program output: -12.7671793791
Correct output: -129.5990711743 | Program output: -92.5990711743
Correct output: -17.8249368738 | Program output: -42.8249368738
Correct output: -16.8176198654 | Program output: -23.8176198654
Correct output: 5.5639147954   | Program output: -10.4360852046
Correct output: 15.7960197363  | Program output: 22.7960197363 
Correct output: -15.2347943829 | Program output: 6.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_sub} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec float_dup_times integer_rot integer_rot float_dec integer_dup_times float_dup_times integer_swap integer_rot float_dec integer_swap integer_rot integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap float_sub float_dec integer_dup_times float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_dup_times float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc)
Errors: [4.0 1 5.0 1 24.0 2 13.0 2 44.0 2 20.0 1 21.0 2 14.0 2 26.0 2 31.0 2 21.0 2 0.0 0 3.0 1 70.0 1 20.0 1 53.0 2 18.0 2 2.0 1 39.0 13 37.0 2 25.0 2 7.0 2 16.0 12 7.0 2 22.0 13]
Total: 615.0
Mean: 12.3
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 4849.910493700001
Median total errors in population: 704.0
Error averages by case: (193.63828920000006 3.75 204.57700239999997 4.334 169.09872539999998 3.687 210.0241783 4.129 215.37683460000005 4.461 133.56756289999996 4.278 165.97164959999995 3.835 200.80077350000002 4.279 170.67489139999995 3.674 159.71368950000002 3.97 201.56125319999995 4.44 185.897442 8.729 202.3476685 4.245 208.43107869999994 3.774 165.93151830000005 4.099 195.58332780000003 3.868 166.5516464 3.771 206.01349169999995 4.563 163.31491440000005 12.924 232.63837789999994 5.394 191.2036053 4.459 175.19293830000004 3.824 185.44499759999994 9.747 204.89476570000002 4.319 210.61087109999988 12.296)
Error minima by case: (0.0 0 3.0 1 12.0 1 2.6853 1 0.6756 1 8.0 1 2.9789 1 0.0 0 1.375 1 6.7519 1 6.7215 1 0.0 0 1.0 1 0.6991 1 4.7184 1 3.4693 1 5.3701 1 0.0 0 0.7672 8 4.3898 2 0.0 0 0.0 0 0.0 0 5.0 1 0.8268 7)
Average genome size in population (length): 87.991
Average program size in population (points): 88.991
Average percent parens in population: 0.011
Minimum age in population: 85.67242451983947
Maximum age in population: 90.6414570729259
Average age in population: 88.4730252966894
Median age in population: 88.48031520212656
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.848
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.848
Total error diversity:				 0.233
Error (vector) diversity:			 0.269
Behavioral diversity:				 0.27
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 97678150
--- Timings ---
Current time: 1529615075666 milliseconds
Total Time:         250.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        95.0 seconds, 37.9%
Fitness Testing:    121.7 seconds, 48.6%
Report:              33.6 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 54677.023799999995
Test mean error for best: 27.33851
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 15.2182085795 
Correct output: 44.8179022307  | Program output: 54.8179022307 
Correct output: 95.8032792622  | Program output: 76.8032792622 
Correct output: 8.0949473456   | Program output: 26.0949473456 
Correct output: -64.1503753092 | Program output: -15.1503753092
Correct output: 27.1310761693  | Program output: 12.1310761693 
Correct output: -34.4699592842 | Program output: -50.4699592842
Correct output: 62.8135887966  | Program output: 53.8135887966 
Correct output: 96.6123363982  | Program output: 75.6123363982 
Correct output: 46.7196465918  | Program output: 20.7196465918 
Correct output: -59.2785304711 | Program output: -33.2785304711
Correct output: -6.9174150193  | Program output: -1.9174150193 
Correct output: -68.4374020443 | Program output: -60.4374020443
Correct output: -11.1169636129 | Program output: -76.1169636129
Correct output: -76.8272599297 | Program output: -91.8272599297
Correct output: -26.5306664135 | Program output: -74.5306664135
Correct output: -40.4578849398 | Program output: -53.4578849398
Correct output: -124.5033370034 | Program output: -117.5033370034
Correct output: 26.2328206209  | Program output: -7.7671793791 
Correct output: -129.5990711743 | Program output: -87.5990711743
Correct output: -17.8249368738 | Program output: -37.8249368738
Correct output: -16.8176198654 | Program output: -18.8176198654
Correct output: 5.5639147954   | Program output: -5.4360852046 
Correct output: 15.7960197363  | Program output: 27.7960197363 
Correct output: -15.2347943829 | Program output: 11.7652056171 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_max} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction float_shove} {:instruction integer_mod})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot in1 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_max float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec integer_rot float_dec integer_dup_times float_dec integer_swap integer_rot float_dec integer_dup_times float_dec float_dup_times integer_swap float_rot float_dec float_max float_dec print_float integer_shove float_shove integer_mod)
Errors: [1.0 1 10.0 1 19.0 2 18.0 2 49.0 2 15.0 2 16.0 2 9.0 2 21.0 2 26.0 2 26.0 2 5.0 1 8.0 1 65.0 2 15.0 2 48.0 2 13.0 2 7.0 2 34.0 12 42.0 3 20.0 1 2.0 1 11.0 10 12.0 2 27.0 12]
Total: 592.0
Mean: 11.84
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 5234.0916492
Median total errors in population: 685.0
Error averages by case: (204.75666560000002 3.682 215.3058675 4.317 189.31523369999996 4.015 219.4162698 4.217 224.70092600000012 4.576 151.18705029999992 4.428 189.40163810000004 4.155 214.730889 4.366 191.01799300000002 3.992 182.21821450000004 4.336 209.0294769 4.54 194.42407549999996 6.369 213.37559870000004 4.11 231.10393720000002 4.122 190.22824480000006 4.271 217.42143330000002 4.18 193.52370559999997 4.082 215.0625703 4.553 189.36996480000005 13.002 241.97264650000002 5.432 204.86284 4.489 185.66513799999998 4.092 195.90289179999996 10.709 215.45578230000004 4.363 221.73159600000002 12.513)
Error minima by case: (0.0 0 0.0 0 12.0 1 0.6853 1 16.8496 1 1.994 1 8.553 1 0.0 0 2.586 1 2.8411 1 1.2785 1 0.0 0 0.0 0 1.2575 1 7.8729 1 6.4045 1 6.0 1 0.0 0 0.7672 9 10.6313 2 0.0 0 0.0 0 0.0 0 1.0 1 0.1732 1)
Average genome size in population (length): 94.159
Average program size in population (points): 95.159
Average percent parens in population: 0.011
Minimum age in population: 87.59630268469024
Maximum age in population: 91.90960239276845
Average age in population: 89.8833082716149
Median age in population: 89.91804400339738
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.883
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.883
Total error diversity:				 0.257
Error (vector) diversity:			 0.307
Behavioral diversity:				 0.308
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 100032475
--- Timings ---
Current time: 1529615080476 milliseconds
Total Time:         255.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        96.6 seconds, 37.8%
Fitness Testing:    124.3 seconds, 48.7%
Report:              34.4 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 69262.46729999999
Test mean error for best: 34.63123
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 9.2182085795  
Correct output: 44.8179022307  | Program output: 48.8179022307 
Correct output: 95.8032792622  | Program output: 75.8032792622 
Correct output: 8.0949473456   | Program output: 20.0949473456 
Correct output: -64.1503753092 | Program output: -21.1503753092
Correct output: 27.1310761693  | Program output: 11.1310761693 
Correct output: -34.4699592842 | Program output: -51.4699592842
Correct output: 62.8135887966  | Program output: 47.8135887966 
Correct output: 96.6123363982  | Program output: 74.6123363982 
Correct output: 46.7196465918  | Program output: 19.7196465918 
Correct output: -59.2785304711 | Program output: -39.2785304711
Correct output: -6.9174150193  | Program output: -7.9174150193 
Correct output: -68.4374020443 | Program output: -66.4374020443
Correct output: -11.1169636129 | Program output: -77.1169636129
Correct output: -76.8272599297 | Program output: -92.8272599297
Correct output: -26.5306664135 | Program output: -75.5306664135
Correct output: -40.4578849398 | Program output: -54.4578849398
Correct output: -124.5033370034 | Program output: -123.5033370034
Correct output: 26.2328206209  | Program output: -8.7671793791 
Correct output: -129.5990711743 | Program output: -93.5990711743
Correct output: -17.8249368738 | Program output: -43.8249368738
Correct output: -16.8176198654 | Program output: -24.8176198654
Correct output: 5.5639147954   | Program output: -11.4360852046
Correct output: 15.7960197363  | Program output: 21.7960197363 
Correct output: -15.2347943829 | Program output: 5.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec integer_swap tag_integer_916 float_dup_times integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_dup_times float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc)
Errors: [5.0 2 4.0 1 20.0 1 12.0 2 43.0 2 16.0 2 17.0 2 15.0 2 22.0 2 27.0 2 20.0 1 1.0 1 2.0 1 66.0 2 16.0 2 49.0 2 14.0 2 1.0 1 35.0 12 36.0 3 26.0 2 8.0 2 17.0 12 6.0 2 21.0 12]
Total: 574.0
Mean: 11.48
Genome size: 113
Size: 114
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 5162.624921700002
Median total errors in population: 655.0
Error averages by case: (201.35463910000007 3.732 208.89403699999997 4.28 197.561432 4.2 214.03990069999998 4.252 206.55575720000002 4.57 151.32984010000004 4.485 199.09518530000003 4.244 212.05740599999993 4.414 199.0991816 4.177 183.28403089999998 4.381 188.53249689999996 4.545 189.18125920000003 4.646 206.47542649999997 3.962 237.92288070000004 4.228 198.1494834 4.335 225.52305559999996 4.322 209.22595899999993 4.353 210.84202459999995 4.409 182.7937945000001 13.021 237.33838729999997 5.371 187.89319839999996 4.49 168.01337620000007 4.266 190.19401230000008 11.06 208.88031209999997 4.322 215.72684509999996 12.596)
Error minima by case: (0.0 0 0.0 0 5.0993 1 3.0 1 4.3678 1 8.0 1 0.0767 1 1.0 1 1.375 1 19.0 1 1.2785 1 0.0 0 0.0 0 0.2159 1 8.0 1 0.1987 1 6.0 1 0.0 0 0.7672 9 17.9165 2 0.2094 1 0.0 0 1.0 1 0.0 0 0.2554 1)
Average genome size in population (length): 100.905
Average program size in population (points): 101.905
Average percent parens in population: 0.010
Minimum age in population: 88.93341637315098
Maximum age in population: 93.55402592494042
Average age in population: 91.3229492123054
Median age in population: 91.33403416355203
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.883
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.883
Total error diversity:				 0.283
Error (vector) diversity:			 0.335
Behavioral diversity:				 0.336
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 102555475
--- Timings ---
Current time: 1529615085594 milliseconds
Total Time:         260.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        98.1 seconds, 37.7%
Fitness Testing:    127.0 seconds, 48.8%
Report:              35.0 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 50715.1798
Test mean error for best: 25.35759
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 8.2182085795  
Correct output: 44.8179022307  | Program output: 47.8179022307 
Correct output: 95.8032792622  | Program output: 82.8032792622 
Correct output: 8.0949473456   | Program output: 19.0949473456 
Correct output: -64.1503753092 | Program output: -22.1503753092
Correct output: 27.1310761693  | Program output: 18.1310761693 
Correct output: -34.4699592842 | Program output: -44.4699592842
Correct output: 62.8135887966  | Program output: 46.8135887966 
Correct output: 96.6123363982  | Program output: 81.6123363982 
Correct output: 46.7196465918  | Program output: 26.7196465918 
Correct output: -59.2785304711 | Program output: -40.2785304711
Correct output: -6.9174150193  | Program output: -8.9174150193 
Correct output: -68.4374020443 | Program output: -67.4374020443
Correct output: -11.1169636129 | Program output: -70.1169636129
Correct output: -76.8272599297 | Program output: -85.8272599297
Correct output: -26.5306664135 | Program output: -68.5306664135
Correct output: -40.4578849398 | Program output: -47.4578849398
Correct output: -124.5033370034 | Program output: -124.5033370034
Correct output: 26.2328206209  | Program output: -1.7671793791 
Correct output: -129.5990711743 | Program output: -94.5990711743
Correct output: -17.8249368738 | Program output: -44.8249368738
Correct output: -16.8176198654 | Program output: -25.8176198654
Correct output: 5.5639147954   | Program output: -12.4360852046
Correct output: 15.7960197363  | Program output: 20.7960197363 
Correct output: -15.2347943829 | Program output: 4.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec integer_swap float_dec integer_rot in1 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec integer_swap integer_rot float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec integer_swap integer_rot float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_dup_times float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc)
Errors: [6.0 2 3.0 1 13.0 2 11.0 2 42.0 2 9.0 2 10.0 1 16.0 2 15.0 2 20.0 1 19.0 2 2.0 1 1.0 1 59.0 2 9.0 2 42.0 2 7.0 1 0.0 0 28.0 12 35.0 3 27.0 2 9.0 2 18.0 12 5.0 2 20.0 13]
Total: 500.0
Mean: 10.0
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 5504.575538700002
Median total errors in population: 640.0
Error averages by case: (217.4604699 4.023 224.5565471 4.33 208.9184494 4.372 228.38033680000004 4.432 222.11316400000004 4.819 155.13936999999999 4.733 206.77891230000003 4.358 228.53856109999998 4.59 210.504026 4.394 193.01481719999995 4.639 202.75405419999998 4.688 200.0670283000001 4.718 223.16212799999997 4.16 245.4031794 4.411 207.83794359999996 4.46 232.36608350000003 4.499 240.9418162 4.871 227.1604222 4.519 190.41071730000002 12.96 252.87843800000005 5.585 203.8130046000001 4.695 185.29359260000004 4.527 205.22809809999998 11.193 224.2149318 4.501 230.54744710000006 12.615)
Error minima by case: (0.0 0 0.0 0 12.0 1 5.0 1 0.4954 1 1.7378 1 2.53 1 0.0 0 14.0 1 4.4393 1 1.2785 1 0.0 0 0.0 0 0.883 1 8.0 1 3.5545 1 3.4579 1 0.0 0 0.7672 3 11.2368 2 0.8246 1 0.0 0 1.0 1 0.0 0 0.1759 1)
Average genome size in population (length): 105.303
Average program size in population (points): 106.303
Average percent parens in population: 0.009
Minimum age in population: 90.30147433872352
Maximum age in population: 94.87571241321407
Average age in population: 92.78559496212226
Median age in population: 92.80420978708003
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.911
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.911
Total error diversity:				 0.327
Error (vector) diversity:			 0.379
Behavioral diversity:				 0.38
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 105188450
--- Timings ---
Current time: 1529615090753 milliseconds
Total Time:         265.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        99.7 seconds, 37.5%
Fitness Testing:    129.9 seconds, 48.9%
Report:              36.0 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 51315.9724
Test mean error for best: 25.65799
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 82.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 18.1310761693 
Correct output: -34.4699592842 | Program output: -44.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 81.6123363982 
Correct output: 46.7196465918  | Program output: 26.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -70.1169636129
Correct output: -76.8272599297 | Program output: -85.8272599297
Correct output: -26.5306664135 | Program output: -68.5306664135
Correct output: -40.4578849398 | Program output: -47.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: -1.7671793791 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_995} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec integer_swap float_dec integer_rot in1 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec integer_swap integer_rot float_dec tag_integer_995 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap tag_integer_916 float_dup_times integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_dup_times float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 13.0 2 10.0 1 41.0 2 9.0 2 10.0 1 17.0 2 15.0 2 20.0 1 18.0 2 3.0 1 0.0 0 59.0 2 9.0 2 42.0 2 7.0 1 1.0 1 28.0 12 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 496.0
Mean: 9.92
Genome size: 121
Size: 122
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5347.632568300001
Median total errors in population: 624.0
Error averages by case: (206.40621289999999 3.902 212.58146900000003 4.138 208.30336770000002 4.242 216.24741160000002 4.281 217.54114520000007 4.604 162.73804340000007 4.666 201.41607600000003 4.147 217.63327450000003 4.415 210.9196372 4.273 195.15266710000003 4.53 201.50450069999994 4.5 194.4093861 4.54 214.76439319999997 4.0 243.24786869999997 4.275 204.14553740000002 4.354 230.82042880000003 4.296 217.11649000000003 4.451 218.56947460000004 4.316 184.66123390000004 12.681 243.5642977 5.434 200.78608810000006 4.518 182.6185509 4.369 196.71775699999998 11.297 212.9601078 4.35 219.6521487999999 12.576)
Error minima by case: (0.0 0 0.0 0 12.0 1 2.0 1 16.8496 1 1.3279 1 2.1275 1 2.0 1 14.0 1 19.0 1 1.2785 1 0.0 0 0.0 0 1.117 1 7.1727 1 0.6737 1 5.5421 1 0.0 0 0.7672 9 20.9165 2 0.0 0 0.0 0 0.0 0 0.0 0 0.3829 1)
Average genome size in population (length): 106.251
Average program size in population (points): 107.251
Average percent parens in population: 0.009
Minimum age in population: 91.30147433872352
Maximum age in population: 96.14724025404153
Average age in population: 94.16145037525979
Median age in population: 94.18581551670155
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.891
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.891
Total error diversity:				 0.323
Error (vector) diversity:			 0.389
Behavioral diversity:				 0.393
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 107845075
--- Timings ---
Current time: 1529615096061 milliseconds
Total Time:         270.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       101.3 seconds, 37.4%
Fitness Testing:    132.6 seconds, 49.0%
Report:              36.7 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 61499.490000000005
Test mean error for best: 30.74975
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 82.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 18.1310761693 
Correct output: -34.4699592842 | Program output: -44.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 81.6123363982 
Correct output: 46.7196465918  | Program output: 26.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -70.1169636129
Correct output: -76.8272599297 | Program output: -85.8272599297
Correct output: -26.5306664135 | Program output: -68.5306664135
Correct output: -40.4578849398 | Program output: -47.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: -1.7671793791 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec integer_swap float_dec integer_rot in1 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec integer_swap integer_rot float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec integer_swap integer_rot float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec integer_swap integer_rot float_mod integer_yankdup float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dup_times float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_dec print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 13.0 2 10.0 1 41.0 2 9.0 2 10.0 1 17.0 2 15.0 2 20.0 1 18.0 2 3.0 1 0.0 0 59.0 2 9.0 2 42.0 2 7.0 1 1.0 1 28.0 12 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 496.0
Mean: 9.92
Genome size: 120
Size: 121
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5874.357920199999
Median total errors in population: 605.0
Error averages by case: (230.3805287 4.297 238.4350909 4.463 226.21549290000002 4.374 241.86500369999993 4.6 234.19245440000003 5.006 183.95775769999997 4.629 220.15229700000003 4.269 242.07781219999998 4.743 227.94774240000004 4.374 209.5504323 4.519 219.63618419999995 4.88 215.64454210000005 5.164 239.41900919999995 4.407 260.9533767 4.421 222.61564680000004 4.443 246.8636305 4.324 248.65587470000008 4.647 243.91179170000007 4.748 197.9162805000001 12.333 267.0827537999999 5.796 217.54924110000007 4.87 200.4616581 4.714 218.5117987 11.172 238.1025879 4.664 243.929932 12.472)
Error minima by case: (0.0 0 0.0 0 12.0 1 0.6853 1 14.6081 1 1.925 1 9.0 1 0.0 0 14.0 1 8.5285 1 1.2785 1 0.0 0 0.0 0 2.115 1 1.9313 1 0.9827 1 6.0 1 0.0 0 0.2 5 12.5991 2 0.3405 1 0.0 0 0.0 0 0.0 0 0.325 1)
Average genome size in population (length): 106.018
Average program size in population (points): 107.018
Average percent parens in population: 0.009
Minimum age in population: 93.34491101716645
Maximum age in population: 97.19249025463839
Average age in population: 95.52628949197192
Median age in population: 95.59546188884327
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.361
Error (vector) diversity:			 0.431
Behavioral diversity:				 0.432
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 110495950
--- Timings ---
Current time: 1529615101194 milliseconds
Total Time:         276.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       102.9 seconds, 37.3%
Fitness Testing:    135.5 seconds, 49.1%
Report:              37.6 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 46591.4691
Test mean error for best: 23.29573
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 82.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 18.1310761693 
Correct output: -34.4699592842 | Program output: -44.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 81.6123363982 
Correct output: 46.7196465918  | Program output: 26.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -70.1169636129
Correct output: -76.8272599297 | Program output: -85.8272599297
Correct output: -26.5306664135 | Program output: -68.5306664135
Correct output: -40.4578849398 | Program output: -47.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: -1.7671793791 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_sub} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec integer_swap float_dec integer_rot in1 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot float_dec float_dup_times integer_swap integer_rot integer_dup_items integer_sub float_dup_times float_dup_times float_dec integer_yankdup float_dec float_dup_times integer_swap integer_rot float_dec float_dec tag_integer_1035 float_dec float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap tag_integer_916 float_dup_times integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_times integer_mod float_sub integer_swap float_rot float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_rot float_dec float_dec integer_dup_times integer_flush integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec integer_yankdup integer_swap integer_rot float_dec float_swap integer_inc print_integer float_dec print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 13.0 2 10.0 1 41.0 2 9.0 2 10.0 1 17.0 2 15.0 2 20.0 1 18.0 2 3.0 1 0.0 0 59.0 2 9.0 2 42.0 2 7.0 1 1.0 1 28.0 12 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 496.0
Mean: 9.92
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5337.241032200001
Median total errors in population: 577.0
Error averages by case: (212.2131768 4.039 218.5889689 4.169 203.90589479999997 4.236 222.7746355 4.346 214.35823170000012 4.691 157.78275290000002 4.255 203.00942749999996 3.999 222.1747851 4.512 204.56151920000002 4.15 181.14153229999997 3.972 195.7462679999999 4.644 198.42761010000007 5.093 222.97673599999996 4.173 242.1043816 4.287 203.6243412 4.255 230.00517740000004 4.29 211.4657018 4.021 226.5813106 4.398 161.40314790000008 12.174 252.6519178 5.55 199.61851910000007 4.627 177.56387529999998 4.442 198.63632380000004 11.143 217.64461320000004 4.366 225.92318369999995 12.525)
Error minima by case: (0.0 0 0.0 0 11.0 1 3.0 1 16.8496 1 7.0 1 2.853 1 0.0 0 1.375 1 11.3351 1 1.2785 1 0.0 0 0.0 0 1.25 1 7.0 1 0.2172 1 5.0 1 0.0 0 0.7672 2 27.0 2 0.0 0 0.0 0 0.0 0 0.0 0 1.0049 1)
Average genome size in population (length): 106.322
Average program size in population (points): 107.322
Average percent parens in population: 0.009
Minimum age in population: 94.75209624471263
Maximum age in population: 98.71658297779797
Average age in population: 96.86376584914966
Median age in population: 96.91251677312404
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.902
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.902
Total error diversity:				 0.328
Error (vector) diversity:			 0.401
Behavioral diversity:				 0.402
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 113154575
--- Timings ---
Current time: 1529615106357 milliseconds
Total Time:         281.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       104.3 seconds, 37.1%
Fitness Testing:    138.5 seconds, 49.2%
Report:              38.3 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 69471.7889
Test mean error for best: 34.73589
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 84.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 20.1310761693 
Correct output: -34.4699592842 | Program output: -42.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 83.6123363982 
Correct output: 46.7196465918  | Program output: 28.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -68.1169636129
Correct output: -76.8272599297 | Program output: -83.8272599297
Correct output: -26.5306664135 | Program output: -66.5306664135
Correct output: -40.4578849398 | Program output: -45.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 0.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction in2} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec integer_swap float_dec integer_rot in1 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec integer_sub float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec in2 integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 11.0 2 10.0 1 41.0 2 7.0 1 8.0 2 17.0 2 13.0 2 18.0 2 18.0 2 3.0 1 0.0 0 57.0 2 7.0 2 40.0 1 5.0 1 1.0 1 26.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 466.0
Mean: 9.32
Genome size: 119
Size: 120
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5359.979756500002
Median total errors in population: 520.0
Error averages by case: (222.75798190000003 4.376 229.74358209999994 4.224 199.23706460000002 4.164 232.22997009999997 4.518 205.82223650000012 4.823 149.6147912 4.026 201.1913076 3.583 237.35852229999992 4.749 201.3391346 4.131 178.11670360000005 3.484 191.39202429999997 4.783 195.28764500000003 4.572 231.95690969999987 4.342 243.70609280000005 4.224 202.9319612 4.168 230.20591290000002 4.247 210.6728546 3.707 237.51905150000002 4.469 139.13598280000002 12.152 260.84823459999996 5.708 200.05915250000015 4.812 169.6600318999999 4.676 196.70053450000003 11.426 228.5574198 4.448 231.83465389999998 12.288)
Error minima by case: (0.0 0 0.0 0 11.0 1 0.0164 1 19.3118 1 2.5539 1 0.53 1 0.0 0 13.0 1 1.3126 1 0.0788 1 0.0 0 0.0 0 3.0553 1 7.0 1 8.4693 1 5.0 1 0.0 0 0.2328 2 20.5991 2 0.3072 1 0.0 0 1.0 1 0.0 0 0.5633 1)
Average genome size in population (length): 112.179
Average program size in population (points): 113.179
Average percent parens in population: 0.009
Minimum age in population: 96.11070193262184
Maximum age in population: 100.2877013597869
Average age in population: 98.27324202015171
Median age in population: 98.28368931925961
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.904
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.904
Total error diversity:				 0.319
Error (vector) diversity:			 0.366
Behavioral diversity:				 0.367
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 115959725
--- Timings ---
Current time: 1529615111605 milliseconds
Total Time:         286.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       105.9 seconds, 37.0%
Fitness Testing:    141.4 seconds, 49.4%
Report:              39.1 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 69471.7889
Test mean error for best: 34.73589
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 84.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 20.1310761693 
Correct output: -34.4699592842 | Program output: -42.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 83.6123363982 
Correct output: 46.7196465918  | Program output: 28.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -68.1169636129
Correct output: -76.8272599297 | Program output: -83.8272599297
Correct output: -26.5306664135 | Program output: -66.5306664135
Correct output: -40.4578849398 | Program output: -45.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 0.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction in2} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec integer_swap float_dec integer_rot in1 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec integer_shove float_dec float_mult float_dec integer_sub float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec in2 integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 11.0 2 10.0 1 41.0 2 7.0 1 8.0 2 17.0 2 13.0 2 18.0 2 18.0 2 3.0 1 0.0 0 57.0 2 7.0 2 40.0 1 5.0 1 1.0 1 26.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 466.0
Mean: 9.32
Genome size: 119
Size: 120
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5345.1687984
Median total errors in population: 504.0
Error averages by case: (223.6929981 4.548 228.6808246 4.003 191.2947081 4.079 231.50250959999994 4.423 212.6034930999999 4.803 145.50931389999997 3.999 195.85652859999996 3.445 238.99166319999995 4.706 192.901033 4.047 166.2289834 3.314 200.7679878 4.766 198.93588520000003 4.422 235.2370316999999 4.224 238.1469391 4.203 196.6721858 4.157 224.5875073 4.179 201.44533969999995 3.527 238.62285240000003 4.355 136.41999169999997 12.176 261.9817168 5.726 210.22750749999997 4.729 183.27266319999995 4.673 203.54969189999997 11.616 227.35640460000002 4.251 230.18103809999997 12.131)
Error minima by case: (0.0 0 0.0 0 11.0 1 0.0 0 4.4115 1 7.0 1 6.1323 1 0.0 0 13.0 1 18.0 1 8.0 1 0.0 0 0.0 0 9.117 1 5.901 1 1.807 1 5.0 1 0.0 0 1.6709 2 24.0 2 0.0 0 0.0 0 2.0 1 0.0 0 0.2565 1)
Average genome size in population (length): 117.746
Average program size in population (points): 118.746
Average percent parens in population: 0.008
Minimum age in population: 97.51795062940712
Maximum age in population: 101.6192289958083
Average age in population: 99.64082669187292
Median age in population: 99.6744711058541
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.919
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.919
Total error diversity:				 0.278
Error (vector) diversity:			 0.305
Behavioral diversity:				 0.306
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 118904225
--- Timings ---
Current time: 1529615117095 milliseconds
Total Time:         291.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       107.4 seconds, 36.8%
Fitness Testing:    144.7 seconds, 49.5%
Report:              39.8 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 69471.7889
Test mean error for best: 34.73589
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 84.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 20.1310761693 
Correct output: -34.4699592842 | Program output: -42.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 83.6123363982 
Correct output: 46.7196465918  | Program output: 28.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -68.1169636129
Correct output: -76.8272599297 | Program output: -83.8272599297
Correct output: -26.5306664135 | Program output: -66.5306664135
Correct output: -40.4578849398 | Program output: -45.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 0.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_rot} {:instruction in1} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction in2} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec integer_swap float_dec integer_rot in1 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec integer_sub float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_dec float_dec float_dec integer_sub float_dec in2 integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot integer_yank float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 11.0 2 10.0 1 41.0 2 7.0 1 8.0 2 17.0 2 13.0 2 18.0 2 18.0 2 3.0 1 0.0 0 57.0 2 7.0 2 40.0 1 5.0 1 1.0 1 26.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 466.0
Mean: 9.32
Genome size: 118
Size: 119
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5051.8177265
Median total errors in population: 502.0
Error averages by case: (218.8071537 4.573 226.22309169999997 4.007 171.41000269999998 3.887 227.55330000000004 4.39 201.82567790000016 4.815 126.87728979999999 3.86 175.4222071 3.282 236.96930979999993 4.715 174.50008709999997 3.871 149.70506939999993 3.263 188.02587879999996 4.789 193.06474310000004 4.338 227.88892769999995 4.195 218.8618171 4.004 176.94150180000003 3.968 205.572099 3.954 181.5858141 3.301 233.9986574 4.365 114.77396260000003 11.661 256.53679589999996 5.679 198.20572990000016 4.773 172.97704549999995 4.643 195.74319099999994 11.607 224.19197120000004 4.173 226.29040220000005 11.753)
Error minima by case: (0.0 0 0.0 0 3.0 1 0.0 0 4.7931 1 1.8689 1 8.0 1 1.0 1 13.0 1 4.0517 1 4.0 1 0.0 0 0.0 0 5.115 1 7.0 1 21.5306 1 5.0 1 0.0 0 0.2328 2 8.7477 1 0.0 0 0.0 0 3.0 1 0.0 0 0.2348 1)
Average genome size in population (length): 119.649
Average program size in population (points): 120.649
Average percent parens in population: 0.008
Minimum age in population: 98.76499018649872
Maximum age in population: 102.8837014990769
Average age in population: 101.0515206833798
Median age in population: 101.0502099295587
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.939
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.939
Total error diversity:				 0.296
Error (vector) diversity:			 0.327
Behavioral diversity:				 0.327
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 121896800
--- Timings ---
Current time: 1529615122502 milliseconds
Total Time:         297.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.8 seconds, 36.6%
Fitness Testing:    147.6 seconds, 49.7%
Report:              40.6 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 57943.442200000005
Test mean error for best: 28.97172
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 8.2182085795  
Correct output: 44.8179022307  | Program output: 47.8179022307 
Correct output: 95.8032792622  | Program output: 85.8032792622 
Correct output: 8.0949473456   | Program output: 19.0949473456 
Correct output: -64.1503753092 | Program output: -22.1503753092
Correct output: 27.1310761693  | Program output: 21.1310761693 
Correct output: -34.4699592842 | Program output: -41.4699592842
Correct output: 62.8135887966  | Program output: 46.8135887966 
Correct output: 96.6123363982  | Program output: 84.6123363982 
Correct output: 46.7196465918  | Program output: 29.7196465918 
Correct output: -59.2785304711 | Program output: -40.2785304711
Correct output: -6.9174150193  | Program output: -8.9174150193 
Correct output: -68.4374020443 | Program output: -67.4374020443
Correct output: -11.1169636129 | Program output: -67.1169636129
Correct output: -76.8272599297 | Program output: -82.8272599297
Correct output: -26.5306664135 | Program output: -65.5306664135
Correct output: -40.4578849398 | Program output: -44.4578849398
Correct output: -124.5033370034 | Program output: -124.5033370034
Correct output: 26.2328206209  | Program output: 1.2328206209  
Correct output: -129.5990711743 | Program output: -94.5990711743
Correct output: -17.8249368738 | Program output: -44.8249368738
Correct output: -16.8176198654 | Program output: -25.8176198654
Correct output: 5.5639147954   | Program output: -12.4360852046
Correct output: 15.7960197363  | Program output: 20.7960197363 
Correct output: -15.2347943829 | Program output: 4.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_yank integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap tag_integer_916 float_dup_times integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap float_swap integer_swap integer_rot float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [6.0 2 3.0 1 10.0 1 11.0 2 42.0 2 6.0 1 7.0 2 16.0 2 12.0 2 17.0 2 19.0 2 2.0 1 1.0 1 56.0 2 6.0 2 39.0 2 4.0 1 0.0 0 25.0 2 35.0 3 27.0 2 9.0 2 18.0 12 5.0 2 20.0 13]
Total: 460.0
Mean: 9.2
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5581.639208799999
Median total errors in population: 502.0
Error averages by case: (241.65803680000008 4.84 247.77797789999994 4.368 191.40613030000003 4.087 249.8979876 4.653 227.0437369000001 5.112 140.2746604 3.989 193.19491420000003 3.744 257.40075499999995 4.977 193.27085289999997 4.095 166.28919199999999 3.66 214.07742979999992 5.1 216.47355190000005 4.708 255.79599529999993 4.583 232.26952289999997 4.215 194.9655161 4.211 219.02943640000004 4.031 202.09152809999998 3.61 261.1511246000001 4.742 124.43412429999994 10.431 282.3910297999999 6.012 225.96714830000013 5.09 198.43202620000002 4.927 220.58532380000008 11.609 245.32941350000002 4.475 247.48379380000003 11.679)
Error minima by case: (0.0 0 0.0 0 10.0 1 0.0 0 7.5038 1 6.0 1 6.7789 1 0.0 0 12.0 1 11.5929 1 1.2785 1 0.0 0 0.0 0 0.0994 1 6.0 1 1.5307 1 4.0 1 0.0 0 0.8292 1 6.1407 2 0.211 1 0.0 0 1.5639 1 0.0 0 0.1559 1)
Average genome size in population (length): 120.182
Average program size in population (points): 121.182
Average percent parens in population: 0.008
Minimum age in population: 99.91218205089477
Maximum age in population: 104.2576042708427
Average age in population: 102.4347645239468
Median age in population: 102.4809205318064
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.937
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.937
Total error diversity:				 0.33
Error (vector) diversity:			 0.359
Behavioral diversity:				 0.36
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 124902950
--- Timings ---
Current time: 1529615128436 milliseconds
Total Time:         303.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.4 seconds, 36.4%
Fitness Testing:    151.2 seconds, 49.9%
Report:              41.5 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 57966.5717
Test mean error for best: 28.98329
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 8.2182085795  
Correct output: 44.8179022307  | Program output: 47.8179022307 
Correct output: 95.8032792622  | Program output: 85.8032792622 
Correct output: 8.0949473456   | Program output: 19.0949473456 
Correct output: -64.1503753092 | Program output: -22.1503753092
Correct output: 27.1310761693  | Program output: 21.1310761693 
Correct output: -34.4699592842 | Program output: -41.4699592842
Correct output: 62.8135887966  | Program output: 46.8135887966 
Correct output: 96.6123363982  | Program output: 84.6123363982 
Correct output: 46.7196465918  | Program output: 29.7196465918 
Correct output: -59.2785304711 | Program output: -40.2785304711
Correct output: -6.9174150193  | Program output: -8.9174150193 
Correct output: -68.4374020443 | Program output: -67.4374020443
Correct output: -11.1169636129 | Program output: -67.1169636129
Correct output: -76.8272599297 | Program output: -82.8272599297
Correct output: -26.5306664135 | Program output: -65.5306664135
Correct output: -40.4578849398 | Program output: -44.4578849398
Correct output: -124.5033370034 | Program output: -124.5033370034
Correct output: 26.2328206209  | Program output: 1.2328206209  
Correct output: -129.5990711743 | Program output: -94.5990711743
Correct output: -17.8249368738 | Program output: -44.8249368738
Correct output: -16.8176198654 | Program output: -25.8176198654
Correct output: 5.5639147954   | Program output: -12.4360852046
Correct output: 15.7960197363  | Program output: 20.7960197363 
Correct output: -15.2347943829 | Program output: 4.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_mult float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_dec integer_swap float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [6.0 2 3.0 1 10.0 1 11.0 2 42.0 2 6.0 1 7.0 2 16.0 2 12.0 2 17.0 2 19.0 2 2.0 1 1.0 1 56.0 2 6.0 2 39.0 2 4.0 1 0.0 0 25.0 2 35.0 3 27.0 2 9.0 2 18.0 12 5.0 2 20.0 13]
Total: 460.0
Mean: 9.2
Genome size: 125
Size: 126
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5221.9647646
Median total errors in population: 496.0
Error averages by case: (215.63629280000006 4.345 219.71556539999997 3.949 196.64401 4.039 222.7949149 4.277 201.75992920000002 4.667 148.57511560000003 3.594 198.6637738 3.963 229.31381609999997 4.525 198.93551540000004 4.074 174.0092044 3.901 189.38247159999997 4.594 190.4418933000001 4.243 226.01567889999995 4.057 238.08937249999997 4.154 199.0537244 4.142 224.9514283 3.71 210.3463248 3.551 230.01315720000002 4.202 123.40029080000002 7.274 253.81876219999995 5.491 199.16991780000004 4.614 172.6275383 4.498 193.64867120000005 11.602 218.77596620000003 4.125 222.8914295 11.699)
Error minima by case: (0.0 0 0.0 0 10.0 1 0.0 1 16.8496 1 1.5901 1 7.0 1 2.0 1 12.0 1 11.2856 1 8.0 1 0.0 0 0.0 0 8.7878 1 4.1727 1 8.4896 1 4.0 1 0.0 0 0.7448 2 24.0 2 0.4607 1 0.0 0 1.0 1 0.0 0 0.4323 1)
Average genome size in population (length): 121.102
Average program size in population (points): 122.102
Average percent parens in population: 0.008
Minimum age in population: 101.1822163693965
Maximum age in population: 105.5001900501766
Average age in population: 103.8251295830313
Median age in population: 103.8899159103084
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.921
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.921
Total error diversity:				 0.321
Error (vector) diversity:			 0.358
Behavioral diversity:				 0.359
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 127931800
--- Timings ---
Current time: 1529615133939 milliseconds
Total Time:         308.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       111.9 seconds, 36.3%
Fitness Testing:    154.2 seconds, 50.0%
Report:              42.3 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 48631.001500000006
Test mean error for best: 24.31550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 85.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 21.1310761693 
Correct output: -34.4699592842 | Program output: -41.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 84.6123363982 
Correct output: 46.7196465918  | Program output: 29.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -67.1169636129
Correct output: -76.8272599297 | Program output: -82.8272599297
Correct output: -26.5306664135 | Program output: -65.5306664135
Correct output: -40.4578849398 | Program output: -44.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 1.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec float_dup_times integer_rot integer_rot integer_dup_items float_dec float_dup_times integer_rot float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec integer_swap integer_rot float_mod integer_rot float_mod integer_yankdup float_dup_times integer_swap integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 10.0 1 10.0 1 41.0 2 6.0 1 7.0 2 17.0 2 12.0 2 17.0 2 18.0 2 3.0 1 0.0 0 56.0 2 6.0 2 39.0 2 4.0 1 1.0 1 25.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 456.0
Mean: 9.12
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5350.125876700001
Median total errors in population: 480.0
Error averages by case: (225.2511018 4.779 232.89851339999987 4.286 194.1741044 4.169 234.23484409999995 4.648 213.04367769999988 5.012 147.30844129999997 3.481 197.01958029999997 4.331 243.00007069999995 4.915 195.91552220000005 4.263 169.68607759999998 4.215 195.15267180000004 4.868 199.65108419999996 4.617 232.84873449999998 4.419 236.14011589999998 4.388 198.23247890000005 4.33 222.8908808 3.776 204.84718060000003 3.776 239.1268131 4.54 122.46572569999998 5.038 261.31032439999984 5.815 208.3703980000001 4.861 183.5076909 4.889 204.10344229999998 11.54 230.837532 4.524 230.7698700999999 11.859)
Error minima by case: (0.0 0 0.0 0 10.0 1 0.0 0 15.0977 1 1.4443 1 3.1888 1 0.0 0 12.0 1 12.019 1 1.2785 1 0.0 0 0.0 0 6.0642 1 6.0 1 3.6272 1 3.0005 1 0.0 0 0.7672 2 20.5991 2 0.4346 1 0.0 0 1.0 1 0.0 0 1.1033 1)
Average genome size in population (length): 122.481
Average program size in population (points): 123.481
Average percent parens in population: 0.008
Minimum age in population: 102.8726328397269
Maximum age in population: 107.1241577764055
Average age in population: 105.1972777269581
Median age in population: 105.2353829611647
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.941
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.941
Total error diversity:				 0.33
Error (vector) diversity:			 0.367
Behavioral diversity:				 0.368
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 130994950
--- Timings ---
Current time: 1529615139800 milliseconds
Total Time:         314.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.5 seconds, 36.1%
Fitness Testing:    157.7 seconds, 50.1%
Report:              43.3 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 69435.2825
Test mean error for best: 34.71764
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 85.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 21.1310761693 
Correct output: -34.4699592842 | Program output: -41.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 84.6123363982 
Correct output: 46.7196465918  | Program output: 29.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -67.1169636129
Correct output: -76.8272599297 | Program output: -82.8272599297
Correct output: -26.5306664135 | Program output: -65.5306664135
Correct output: -40.4578849398 | Program output: -44.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 1.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_sub} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction tagged_17} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_swap} {:instruction in2} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_rot} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth integer_swap integer_inc integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec print_integer float_dec integer_rot float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dup_times integer_swap integer_rot integer_dup_items integer_sub float_dup_times float_dup_times float_dec integer_yankdup float_dec float_dup_times integer_mod float_dec float_dec float_dec integer_sub float_dec float_rot integer_swap integer_rot integer_dup_items float_dec integer_flush float_dec float_mult float_dec float_dup_times integer_swap integer_rot integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap tag_integer_916 float_dup_times tagged_17 integer_rot float_dec tag_integer_916 float_dec integer_swap integer_rot integer_swap integer_rot float_dec tag_integer_916 float_dec float_mult integer_mult float_dec integer_dup_times float_dec float_dup_times integer_swap float_rot float_dup_times integer_swap in2 float_dec float_mult float_dec tag_integer_1035 float_rot float_shove integer_rot float_dec float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 10.0 1 10.0 1 41.0 2 6.0 1 7.0 2 17.0 2 12.0 2 17.0 2 18.0 2 3.0 1 0.0 0 56.0 2 6.0 2 39.0 2 4.0 1 1.0 1 25.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 456.0
Mean: 9.12
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5259.896056599999
Median total errors in population: 472.0
Error averages by case: (220.86397200000005 4.464 224.31801839999991 4.013 190.63047189999997 3.924 226.3913057 4.411 208.50817160000017 4.794 150.13892470000002 3.477 195.1319213 4.325 233.55016059999994 4.672 194.12281220000003 4.196 171.98722690000002 4.247 190.7990169999999 4.737 199.1402703 4.284 224.29462069999997 4.224 234.39628009999998 4.371 196.95875760000004 4.353 220.70235420000003 3.903 210.84250439999997 3.817 230.463634 4.31 125.17881430000003 4.556 253.20862250000002 5.647 202.48234530000008 4.738 177.62150870000002 4.683 202.85473099999993 11.61 222.2426172 4.24 229.09599400000008 11.975)
Error minima by case: (0.0 0 0.0 0 10.0 1 1.0 1 1.8763 1 5.2584 1 5.47 1 1.0 1 12.0 1 5.3469 1 1.2785 1 0.0 0 0.0 0 1.115 1 6.0 1 2.4693 1 4.0 1 0.0 0 0.3291 1 16.5991 2 0.0273 1 0.0 0 0.0 0 0.0 0 1.3638 1)
Average genome size in population (length): 123.827
Average program size in population (points): 124.827
Average percent parens in population: 0.008
Minimum age in population: 104.3766412863022
Maximum age in population: 108.2355084112168
Average age in population: 106.5163305985496
Median age in population: 106.52450430929
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.935
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.935
Total error diversity:				 0.283
Error (vector) diversity:			 0.319
Behavioral diversity:				 0.321
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 134091750
--- Timings ---
Current time: 1529615145498 milliseconds
Total Time:         320.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       115.0 seconds, 35.9%
Fitness Testing:    160.8 seconds, 50.2%
Report:              44.1 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 49086.023799999995
Test mean error for best: 24.54301
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 6.2182085795  
Correct output: 44.8179022307  | Program output: 45.8179022307 
Correct output: 95.8032792622  | Program output: 86.8032792622 
Correct output: 8.0949473456   | Program output: 17.0949473456 
Correct output: -64.1503753092 | Program output: -24.1503753092
Correct output: 27.1310761693  | Program output: 22.1310761693 
Correct output: -34.4699592842 | Program output: -40.4699592842
Correct output: 62.8135887966  | Program output: 44.8135887966 
Correct output: 96.6123363982  | Program output: 85.6123363982 
Correct output: 46.7196465918  | Program output: 30.7196465918 
Correct output: -59.2785304711 | Program output: -42.2785304711
Correct output: -6.9174150193  | Program output: -10.9174150193
Correct output: -68.4374020443 | Program output: -69.4374020443
Correct output: -11.1169636129 | Program output: -66.1169636129
Correct output: -76.8272599297 | Program output: -81.8272599297
Correct output: -26.5306664135 | Program output: -64.5306664135
Correct output: -40.4578849398 | Program output: -43.4578849398
Correct output: -124.5033370034 | Program output: -126.5033370034
Correct output: 26.2328206209  | Program output: 2.2328206209  
Correct output: -129.5990711743 | Program output: -96.5990711743
Correct output: -17.8249368738 | Program output: -46.8249368738
Correct output: -16.8176198654 | Program output: -27.8176198654
Correct output: 5.5639147954   | Program output: -14.4360852046
Correct output: 15.7960197363  | Program output: 18.7960197363 
Correct output: -15.2347943829 | Program output: 2.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dec float_yank integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap tag_integer_916 float_dup_times integer_mod integer_rot float_dec tag_integer_916 float_dec integer_swap float_swap integer_swap integer_rot float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [8.0 2 1.0 1 9.0 2 9.0 2 40.0 1 5.0 1 6.0 2 18.0 2 11.0 2 16.0 2 17.0 2 4.0 2 1.0 1 55.0 2 5.0 2 38.0 2 3.0 1 2.0 1 24.0 1 33.0 3 29.0 2 11.0 2 20.0 12 3.0 1 18.0 13]
Total: 450.0
Mean: 9.0
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5173.652607100001
Median total errors in population: 471.0
Error averages by case: (208.4165084 4.533 213.00654299999988 4.004 201.61067919999996 3.714 215.51723270000002 4.471 191.26655090000014 4.818 151.0314805 3.6 211.21010469999996 4.374 223.69586219999985 4.698 202.76071480000002 4.31 176.76525279999998 4.329 177.35111769999992 4.77 182.41187740000012 4.45 216.89031519999995 4.293 250.25716070000001 4.416 212.09402240000006 4.413 236.7608672 4.27 220.54956179999994 3.807 223.69727900000004 4.365 125.10873570000003 4.576 246.23908569999995 5.662 186.43140110000016 4.729 161.0935500000001 4.701 184.95363790000002 11.493 212.04701760000003 4.277 217.57204850000014 11.841)
Error minima by case: (0.0 0 0.0 0 9.0 1 1.0 1 11.7519 1 5.0 1 2.47 1 1.0 1 11.0 1 8.2804 1 1.2785 1 0.0 0 0.0 0 1.8365 1 5.0 1 4.4693 1 0.5421 1 0.0 0 2.4381 1 18.5991 2 1.0 1 0.0 0 0.0 0 0.0 0 0.0278 1)
Average genome size in population (length): 126.454
Average program size in population (points): 127.454
Average percent parens in population: 0.008
Minimum age in population: 105.9252914538622
Maximum age in population: 110.1608000952787
Average age in population: 107.9827324405755
Median age in population: 108.010949025395
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.952
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.952
Total error diversity:				 0.326
Error (vector) diversity:			 0.365
Behavioral diversity:				 0.366
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 137254450
--- Timings ---
Current time: 1529615151248 milliseconds
Total Time:         326.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.6 seconds, 35.8%
Fitness Testing:    164.2 seconds, 50.4%
Report:              45.1 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 48961.023799999995
Test mean error for best: 24.48051
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 5.2182085795  
Correct output: 44.8179022307  | Program output: 44.8179022307 
Correct output: 95.8032792622  | Program output: 86.8032792622 
Correct output: 8.0949473456   | Program output: 16.0949473456 
Correct output: -64.1503753092 | Program output: -25.1503753092
Correct output: 27.1310761693  | Program output: 22.1310761693 
Correct output: -34.4699592842 | Program output: -40.4699592842
Correct output: 62.8135887966  | Program output: 43.8135887966 
Correct output: 96.6123363982  | Program output: 85.6123363982 
Correct output: 46.7196465918  | Program output: 30.7196465918 
Correct output: -59.2785304711 | Program output: -43.2785304711
Correct output: -6.9174150193  | Program output: -11.9174150193
Correct output: -68.4374020443 | Program output: -70.4374020443
Correct output: -11.1169636129 | Program output: -66.1169636129
Correct output: -76.8272599297 | Program output: -81.8272599297
Correct output: -26.5306664135 | Program output: -64.5306664135
Correct output: -40.4578849398 | Program output: -43.4578849398
Correct output: -124.5033370034 | Program output: -127.5033370034
Correct output: 26.2328206209  | Program output: 2.2328206209  
Correct output: -129.5990711743 | Program output: -97.5990711743
Correct output: -17.8249368738 | Program output: -47.8249368738
Correct output: -16.8176198654 | Program output: -28.8176198654
Correct output: 5.5639147954   | Program output: -15.4360852046
Correct output: 15.7960197363  | Program output: 17.7960197363 
Correct output: -15.2347943829 | Program output: 1.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dec float_yank integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap tag_integer_916 float_dup_times integer_mod integer_rot float_dec tag_integer_916 float_dec integer_swap float_swap integer_swap integer_rot float_mult float_dec tag_integer_1035 float_dec float_dup_items float_dec tag_integer_916 float_dec float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [9.0 2 0.0 0 9.0 2 8.0 2 39.0 2 5.0 1 6.0 2 19.0 2 11.0 2 16.0 2 16.0 2 5.0 2 2.0 2 55.0 2 5.0 2 38.0 2 3.0 1 3.0 1 24.0 1 32.0 3 30.0 1 12.0 2 21.0 11 2.0 1 17.0 12]
Total: 449.0
Mean: 8.98
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5360.370169
Median total errors in population: 464.0
Error averages by case: (217.91682540000005 4.771 226.34820739999992 4.14 208.2390556999999 3.634 225.52002539999992 4.594 193.27518780000017 4.966 136.99158139999997 3.516 226.2515898 4.478 237.43440159999994 4.905 208.86226099999993 4.355 167.3084744 4.34 173.12742149999997 4.898 185.40015549999995 4.601 236.09968729999997 4.421 264.95874140000006 4.506 226.99200160000004 4.466 252.17272110000005 4.476 232.9667561 3.865 243.62186090000003 4.518 116.09313159999995 4.556 264.8955236 5.799 189.68454170000007 4.802 163.54532009999994 4.807 188.33949200000012 11.547 221.99779760000007 4.342 225.41440710000006 11.61)
Error minima by case: (0.0 0 0.0 0 9.0 1 0.0 0 3.1955 1 1.2788 1 1.53 1 1.0 1 11.0 1 9.4393 1 1.2785 1 0.0 0 0.0 0 1.117 1 0.6416 1 3.4693 1 2.9834 1 0.0 0 0.4711 1 14.5991 2 0.0368 1 0.0 0 0.0 0 0.0 0 1.2366 1)
Average genome size in population (length): 128.911
Average program size in population (points): 129.911
Average percent parens in population: 0.008
Minimum age in population: 107.3499125166487
Maximum age in population: 111.2525387087156
Average age in population: 109.447147268574
Median age in population: 109.4720294925448
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.333
Error (vector) diversity:			 0.351
Behavioral diversity:				 0.353
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 140479375
--- Timings ---
Current time: 1529615157398 milliseconds
Total Time:         331.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.1 seconds, 35.6%
Fitness Testing:    167.8 seconds, 50.6%
Report:              46.0 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 46328.3454
Test mean error for best: 23.16417
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 86.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 22.1310761693 
Correct output: -34.4699592842 | Program output: -40.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 85.6123363982 
Correct output: 46.7196465918  | Program output: 30.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -66.1169636129
Correct output: -76.8272599297 | Program output: -81.8272599297
Correct output: -26.5306664135 | Program output: -64.5306664135
Correct output: -40.4578849398 | Program output: -43.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 2.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_shove} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dec float_yank integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove float_dec integer_swap integer_rot float_mod integer_yankdup float_dup_times integer_swap integer_dup_times float_add float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec integer_swap float_rot float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap float_shove float_dec float_swap integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 9.0 2 10.0 1 41.0 2 5.0 1 6.0 2 17.0 2 11.0 2 16.0 2 18.0 2 3.0 1 0.0 0 55.0 2 5.0 2 38.0 2 3.0 1 1.0 1 24.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 446.0
Mean: 8.92
Genome size: 129
Size: 130
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4822.3913268999995
Median total errors in population: 464.0
Error averages by case: (212.75028790000005 4.798 217.1700586999999 4.156 171.4271555 3.249 218.60877669999996 4.51 181.48669640000003 4.845 131.63175650000002 3.223 173.95020730000002 3.989 228.37606769999985 4.821 175.09700319999996 4.035 151.51808509999998 3.986 163.94794119999986 4.854 177.22721950000007 4.629 216.73017729999984 4.285 214.78233020000002 4.07 174.91830250000004 4.027 200.9345209 4.046 177.8012848 3.355 222.4670668 4.424 105.09280039999993 4.251 244.9728925 5.693 177.0371993000001 4.746 149.32943900000004 4.69 179.29946250000003 11.555 215.25675720000004 4.284 218.5658378000001 11.491)
Error minima by case: (0.0 0 0.0 0 9.0 1 0.0 0 5.6315 1 3.4811 1 1.47 1 0.0 0 11.0 1 2.332 1 1.2785 1 0.0 0 0.0 0 1.9586 1 1.1901 1 6.4693 1 0.5421 1 0.0 0 1.7672 1 21.0 2 0.4959 1 0.0 0 0.0 0 0.0 0 0.1799 1)
Average genome size in population (length): 130.236
Average program size in population (points): 131.236
Average percent parens in population: 0.008
Minimum age in population: 108.3499125166487
Maximum age in population: 112.7653329091796
Average age in population: 110.8766005798541
Median age in population: 110.9269299074292
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.943
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.943
Total error diversity:				 0.322
Error (vector) diversity:			 0.342
Behavioral diversity:				 0.343
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 143737500
--- Timings ---
Current time: 1529615163004 milliseconds
Total Time:         337.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.6 seconds, 35.4%
Fitness Testing:    171.0 seconds, 50.6%
Report:              47.0 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 49186.023799999995
Test mean error for best: 24.59301
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 86.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 22.1310761693 
Correct output: -34.4699592842 | Program output: -40.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 85.6123363982 
Correct output: 46.7196465918  | Program output: 30.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -66.1169636129
Correct output: -76.8272599297 | Program output: -81.8272599297
Correct output: -26.5306664135 | Program output: -64.5306664135
Correct output: -40.4578849398 | Program output: -43.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 2.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_stackdepth} {:instruction tag_integer_1039} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dec float_yank integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap tag_integer_916 float_dup_times integer_mod integer_rot float_dec tag_integer_916 float_dec integer_swap float_swap integer_swap integer_rot float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_stackdepth tag_integer_1039 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 9.0 2 10.0 1 41.0 2 5.0 1 6.0 2 17.0 2 11.0 2 16.0 2 18.0 2 3.0 1 0.0 0 55.0 2 5.0 2 38.0 2 3.0 1 1.0 1 24.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 446.0
Mean: 8.92
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5066.136962300001
Median total errors in population: 464.0
Error averages by case: (217.50572650000007 4.637 226.1971166999999 4.063 183.63325619999995 3.455 228.11603269999998 4.394 191.27176849999995 4.791 129.75143349999993 3.279 191.47047190000004 4.125 237.27085879999993 4.754 185.5678939 4.17 157.3198231 4.07 177.24123879999996 4.812 186.21050969999996 4.401 225.66100629999997 4.214 231.5174015 4.255 193.84138950000005 4.18 217.77291380000003 4.194 197.13544939999994 3.524 230.76639049999994 4.356 93.12907940000005 4.302 254.0414319999999 5.671 188.45693280000017 4.782 162.77764379999996 4.602 187.12549260000011 11.62 224.661115 4.163 225.44058540000003 11.44)
Error minima by case: (0.0 0 0.0 0 4.3421 1 0.0 0 3.7219 1 0.0433 1 0.47 1 0.0 0 2.3421 1 0.2804 1 1.2785 1 0.0 0 0.0 0 2.117 1 2.0374 1 7.4693 1 3.0 1 0.0 0 0.7672 1 11.5991 2 0.1751 1 0.0 0 1.0 1 0.0 0 0.2661 1)
Average genome size in population (length): 130.364
Average program size in population (points): 131.364
Average percent parens in population: 0.008
Minimum age in population: 109.8474912827104
Maximum age in population: 114.021275659546
Average age in population: 112.2595550028734
Median age in population: 112.3110874887384
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.939
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.939
Total error diversity:				 0.348
Error (vector) diversity:			 0.371
Behavioral diversity:				 0.374
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 146998475
--- Timings ---
Current time: 1529615169092 milliseconds
Total Time:         343.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.3 seconds, 35.3%
Fitness Testing:    174.7 seconds, 50.8%
Report:              47.8 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 57084.863
Test mean error for best: 28.54243
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 5.2182085795  
Correct output: 44.8179022307  | Program output: 44.8179022307 
Correct output: 95.8032792622  | Program output: 87.8032792622 
Correct output: 8.0949473456   | Program output: 16.0949473456 
Correct output: -64.1503753092 | Program output: -25.1503753092
Correct output: 27.1310761693  | Program output: 23.1310761693 
Correct output: -34.4699592842 | Program output: -39.4699592842
Correct output: 62.8135887966  | Program output: 43.8135887966 
Correct output: 96.6123363982  | Program output: 86.6123363982 
Correct output: 46.7196465918  | Program output: 31.7196465918 
Correct output: -59.2785304711 | Program output: -43.2785304711
Correct output: -6.9174150193  | Program output: -11.9174150193
Correct output: -68.4374020443 | Program output: -70.4374020443
Correct output: -11.1169636129 | Program output: -65.1169636129
Correct output: -76.8272599297 | Program output: -80.8272599297
Correct output: -26.5306664135 | Program output: -63.5306664135
Correct output: -40.4578849398 | Program output: -42.4578849398
Correct output: -124.5033370034 | Program output: -127.5033370034
Correct output: 26.2328206209  | Program output: 3.2328206209  
Correct output: -129.5990711743 | Program output: -97.5990711743
Correct output: -17.8249368738 | Program output: -47.8249368738
Correct output: -16.8176198654 | Program output: -28.8176198654
Correct output: 5.5639147954   | Program output: -15.4360852046
Correct output: 15.7960197363  | Program output: 17.7960197363 
Correct output: -15.2347943829 | Program output: 1.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_yank} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_yank float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_rot tag_integer_1035 float_dec float_shove integer_pop integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap integer_swap integer_rot float_dec integer_swap integer_rot integer_swap integer_rot integer_pop float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add integer_rot float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [9.0 2 0.0 0 8.0 2 8.0 2 39.0 2 4.0 1 5.0 1 19.0 2 10.0 1 15.0 2 16.0 2 5.0 2 2.0 2 54.0 2 4.0 2 37.0 2 2.0 1 3.0 1 23.0 2 32.0 3 30.0 1 12.0 2 21.0 11 2.0 1 17.0 12]
Total: 438.0
Mean: 8.76
Genome size: 146
Size: 147
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5424.262391999999
Median total errors in population: 462.0
Error averages by case: (224.24227560000003 4.821 233.36253269999983 4.148 200.78137709999996 3.657 234.8944597999999 4.507 205.02398240000008 4.916 150.05998119999995 3.307 211.41584960000003 4.229 244.33972149999983 4.853 203.79364439999995 4.202 178.36843499999998 4.149 193.3375154 4.847 200.1193509000001 4.503 238.02096269999996 4.32 249.87508270000004 4.293 212.34343920000003 4.269 236.7273522 4.277 210.50974350000007 3.516 244.94331450000007 4.414 115.80699969999999 4.205 266.56664149999995 5.719 204.4514867000001 4.817 176.77083229999988 4.743 201.96041229999994 11.634 231.57265230000004 4.297 230.9183467999999 11.413)
Error minima by case: (0.0 0 0.0 0 8.0 1 0.0 0 5.3234 1 2.4811 1 1.7782 1 1.0 1 10.0 1 11.7196 1 1.2785 1 0.0 0 0.0 0 1.0971 1 4.0 1 11.0203 1 2.0 1 0.0 0 0.7672 1 18.5991 2 0.3905 1 0.1817 1 1.0 1 0.0 0 0.1776 1)
Average genome size in population (length): 131.612
Average program size in population (points): 132.612
Average percent parens in population: 0.008
Minimum age in population: 111.1818500968313
Maximum age in population: 115.7185029542356
Average age in population: 113.5945545194116
Median age in population: 113.6051657121433
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.942
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.942
Total error diversity:				 0.324
Error (vector) diversity:			 0.347
Behavioral diversity:				 0.348
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 150290485
--- Timings ---
Current time: 1529615175027 milliseconds
Total Time:         349.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.7 seconds, 35.1%
Fitness Testing:    178.1 seconds, 50.9%
Report:              48.7 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 41988.6976
Test mean error for best: 20.99435
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 87.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 23.1310761693 
Correct output: -34.4699592842 | Program output: -39.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 86.6123363982 
Correct output: 46.7196465918  | Program output: 31.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -65.1169636129
Correct output: -76.8272599297 | Program output: -80.8272599297
Correct output: -26.5306664135 | Program output: -63.5306664135
Correct output: -40.4578849398 | Program output: -42.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 3.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec integer_div integer_rot integer_rot integer_dup_items float_dec float_dup_times integer_rot float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec integer_swap integer_rot float_mod integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 8.0 2 10.0 1 41.0 2 4.0 1 5.0 1 17.0 2 10.0 1 15.0 2 18.0 2 3.0 1 0.0 0 54.0 2 4.0 2 37.0 2 2.0 1 1.0 1 23.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 435.0
Mean: 8.7
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 5139.726816400001
Median total errors in population: 461.0
Error averages by case: (216.59394880000005 4.719 224.76525230000004 4.115 188.54222439999995 3.971 225.39957049999995 4.495 197.9891105000001 4.876 133.0050573 3.404 196.6369406 4.235 235.64380839999993 4.824 190.2527415 4.257 159.86277559999994 4.218 188.14904700000002 4.838 187.67385930000003 4.479 228.34184999999997 4.327 235.78210030000002 4.323 198.814236 4.288 222.439872 4.333 195.2779891 3.538 233.50584580000006 4.416 95.81331989999997 4.034 256.12557359999994 5.741 199.19191960000012 4.82 169.13234179999984 4.753 190.04205610000008 11.619 221.96160930000008 4.322 224.0957667 11.743)
Error minima by case: (0.0 0 0.0 0 8.0 1 0.0 0 0.0636 1 0.7212 1 5.0 1 0.0 0 10.0 1 2.7196 1 4.4429 1 0.0 0 0.0 0 0.3911 1 4.0 1 2.6026 1 2.0 1 0.0 0 4.8616 1 15.5991 2 0.2962 1 0.0 0 1.0 1 0.0 0 0.6492 1)
Average genome size in population (length): 132.755
Average program size in population (points): 133.755
Average percent parens in population: 0.008
Minimum age in population: 112.8886166515779
Maximum age in population: 117.1660273786059
Average age in population: 114.9658838886769
Median age in population: 115.0232256914873
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.936
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.936
Total error diversity:				 0.329
Error (vector) diversity:			 0.358
Behavioral diversity:				 0.359
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 153610660
--- Timings ---
Current time: 1529615181080 milliseconds
Total Time:         355.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.4 seconds, 34.9%
Fitness Testing:    181.7 seconds, 51.0%
Report:              49.7 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 48676.9981
Test mean error for best: 24.33850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 87.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 23.1310761693 
Correct output: -34.4699592842 | Program output: -39.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 86.6123363982 
Correct output: 46.7196465918  | Program output: 31.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -65.1169636129
Correct output: -76.8272599297 | Program output: -80.8272599297
Correct output: -26.5306664135 | Program output: -63.5306664135
Correct output: -40.4578849398 | Program output: -42.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 3.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_mult} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_mult integer_div integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_dec float_mult float_dec float_dec float_dec float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dec float_yank integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap tag_integer_916 float_dup_times integer_mod integer_rot float_dec tag_integer_916 float_dec integer_swap float_swap integer_swap integer_rot float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec float_dec integer_swap integer_rot integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dec float_shove integer_rot float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 8.0 2 10.0 1 41.0 2 4.0 1 5.0 1 17.0 2 10.0 1 15.0 2 18.0 2 3.0 1 0.0 0 54.0 2 4.0 2 37.0 2 2.0 1 1.0 1 23.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 435.0
Mean: 8.7
Genome size: 140
Size: 141
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5205.957149399999
Median total errors in population: 454.0
Error averages by case: (211.23208150000002 4.705 222.07186199999995 4.102 193.03659869999996 4.095 224.0123411999999 4.563 200.56867230000012 4.882 143.26421249999996 3.338 202.75444579999993 4.169 233.02984549999988 4.817 195.21822390000005 4.149 168.95263609999998 4.113 190.14333499999978 4.846 186.5455997 4.499 227.31289759999987 4.377 242.71646749999996 4.263 204.2997919 4.21 229.46212350000005 4.254 202.67850420000002 3.483 233.18357060000005 4.431 112.00277079999995 3.734 255.58085039999997 5.756 200.34037070000008 4.787 173.34697500000004 4.791 191.36808489999999 11.601 220.46177090000006 4.347 218.28811720000002 11.773)
Error minima by case: (0.0 0 0.0 0 8.0 1 1.0 1 2.6466 1 0.8689 1 4.47 1 0.0 0 10.0 1 3.2804 1 1.2785 1 0.0 0 0.0 0 3.883 1 4.0 1 0.3148 1 2.0 1 0.0 0 0.3694 1 18.0 2 0.0849 1 0.0943 1 1.0 1 0.0 0 0.0077 1)
Average genome size in population (length): 133.943
Average program size in population (points): 134.943
Average percent parens in population: 0.007
Minimum age in population: 114.3168655869839
Maximum age in population: 118.5487110975285
Average age in population: 116.3373057956854
Median age in population: 116.3625681380774
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.943
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.943
Total error diversity:				 0.323
Error (vector) diversity:			 0.352
Behavioral diversity:				 0.354
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 156960235
--- Timings ---
Current time: 1529615186643 milliseconds
Total Time:         361.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       125.8 seconds, 34.8%
Fitness Testing:    184.9 seconds, 51.2%
Report:              50.5 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 44218.895300000004
Test mean error for best: 22.10945
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 88.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 24.1310761693 
Correct output: -34.4699592842 | Program output: -38.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 87.6123363982 
Correct output: 46.7196465918  | Program output: 32.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -64.1169636129
Correct output: -76.8272599297 | Program output: -79.8272599297
Correct output: -26.5306664135 | Program output: -62.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 4.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_946} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1102} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in2} {:instruction integer_inc})
Best program: (float_dup float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap float_mult float_dec print_integer integer_min float_mult float_dec in2 float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times integer_dup_items float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec integer_rot float_dec integer_mod float_dec integer_mod float_dec integer_inc float_dec integer_sub float_dec float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec integer_max float_dec integer_sub float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot integer_dup_items float_dec float_dec integer_sub float_dec integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec tag_integer_916 float_dup_times integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap float_swap integer_swap integer_rot float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_946 float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1102 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_float in2 integer_inc)
Errors: [7.0 2 2.0 1 7.0 2 10.0 1 41.0 2 3.0 1 4.0 1 17.0 2 9.0 2 14.0 2 18.0 2 3.0 1 0.0 0 53.0 2 3.0 1 36.0 2 1.0 1 1.0 1 22.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 425.0
Mean: 8.5
Genome size: 145
Size: 146
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5111.657810300003
Median total errors in population: 454.0
Error averages by case: (220.50247080000003 4.763 222.80314389999995 4.165 187.55641260000002 4.09 224.2187465999999 4.573 194.90749420000012 4.844 134.58270259999998 3.314 198.9816313 4.11 233.93092589999986 4.858 188.94559220000005 4.072 158.54696189999999 4.035 169.52006169999999 4.754 191.97002790000005 4.469 224.72852859999983 4.276 239.6008311 4.274 200.78777670000005 4.223 226.15580050000005 4.26 203.02797710000002 3.522 231.99504740000006 4.363 101.01604870000001 3.685 254.16085089999987 5.677 181.78922150000008 4.756 159.2538422999999 4.689 191.9284835 11.646 221.58541650000004 4.305 225.8018139 11.637)
Error minima by case: (0.0 0 0.0 0 7.0 1 0.0 0 13.3713 1 1.4099 1 4.0 1 0.0 0 9.0 1 4.7196 1 1.2785 1 0.0 0 0.0 0 7.117 1 1.5347 1 0.4693 1 1.0 1 0.0 0 0.4381 1 24.0 2 0.3501 1 0.1824 1 0.0 0 0.0 0 0.1759 1)
Average genome size in population (length): 134.774
Average program size in population (points): 135.774
Average percent parens in population: 0.007
Minimum age in population: 115.5134547116009
Maximum age in population: 119.8424651017759
Average age in population: 117.6268530313061
Median age in population: 117.6294962648025
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.951
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.951
Total error diversity:				 0.327
Error (vector) diversity:			 0.362
Behavioral diversity:				 0.364
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 160330670
--- Timings ---
Current time: 1529615193154 milliseconds
Total Time:         367.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.6 seconds, 34.7%
Fitness Testing:    188.4 seconds, 51.3%
Report:              51.4 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 47773.0752
Test mean error for best: 23.88654
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 8.2182085795  
Correct output: 44.8179022307  | Program output: 47.8179022307 
Correct output: 95.8032792622  | Program output: 89.8032792622 
Correct output: 8.0949473456   | Program output: 19.0949473456 
Correct output: -64.1503753092 | Program output: -22.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -37.4699592842
Correct output: 62.8135887966  | Program output: 46.8135887966 
Correct output: 96.6123363982  | Program output: 88.6123363982 
Correct output: 46.7196465918  | Program output: 33.7196465918 
Correct output: -59.2785304711 | Program output: -40.2785304711
Correct output: -6.9174150193  | Program output: -8.9174150193 
Correct output: -68.4374020443 | Program output: -67.4374020443
Correct output: -11.1169636129 | Program output: -63.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -61.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -124.5033370034
Correct output: 26.2328206209  | Program output: 5.2328206209  
Correct output: -129.5990711743 | Program output: -94.5990711743
Correct output: -17.8249368738 | Program output: -44.8249368738
Correct output: -16.8176198654 | Program output: -25.8176198654
Correct output: 5.5639147954   | Program output: -12.4360852046
Correct output: 15.7960197363  | Program output: 20.7960197363 
Correct output: -15.2347943829 | Program output: 4.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec print_integer float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dec float_yank integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove integer_swap integer_rot integer_pop float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [6.0 2 3.0 1 6.0 2 11.0 2 42.0 2 2.0 1 3.0 1 16.0 2 8.0 2 13.0 2 19.0 2 2.0 1 1.0 1 52.0 2 2.0 1 35.0 2 0.0 0 0.0 0 21.0 2 35.0 3 27.0 2 9.0 2 18.0 12 5.0 2 20.0 13]
Total: 418.0
Mean: 8.36
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5172.504362300001
Median total errors in population: 454.0
Error averages by case: (218.83028520000013 4.82 227.2478876999999 4.349 183.81749549999998 4.185 227.44163549999993 4.718 200.37266880000013 5.057 135.09068000000002 3.391 195.24741520000003 3.958 237.98079739999986 5.008 184.75488730000004 3.968 158.4110872 4.189 183.3291232 4.976 192.75069700000006 4.676 232.21801879999987 4.427 234.73180239999994 4.321 198.14370710000009 4.263 221.55179690000003 4.286 197.23673330000005 3.531 237.83616160000005 4.546 107.23164349999999 3.86 260.3759763999999 5.813 196.49923420000005 4.921 168.7599492999999 4.878 194.3742053000001 11.554 224.20363190000006 4.497 228.30184159999988 11.573)
Error minima by case: (0.0 0 0.0 0 6.0 1 0.0 0 1.1204 1 2.0 1 3.0 1 0.0 0 8.0 1 4.7196 1 3.0 1 0.0 0 0.0 0 0.117 1 2.0 1 0.4103 1 0.0 0 0.0 0 0.0275 1 19.0 2 0.3821 1 0.0 0 2.0 1 0.0 0 0.2348 1)
Average genome size in population (length): 134.515
Average program size in population (points): 135.515
Average percent parens in population: 0.007
Minimum age in population: 116.8655243080598
Maximum age in population: 120.92578232221
Average age in population: 118.9770155660794
Median age in population: 118.9758657498154
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.95
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.95
Total error diversity:				 0.35
Error (vector) diversity:			 0.393
Behavioral diversity:				 0.393
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 163694590
--- Timings ---
Current time: 1529615199017 milliseconds
Total Time:         373.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       129.1 seconds, 34.6%
Fitness Testing:    191.7 seconds, 51.3%
Report:              52.6 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 43849.1009
Test mean error for best: 21.92455
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 9.2182085795  
Correct output: 44.8179022307  | Program output: 48.8179022307 
Correct output: 95.8032792622  | Program output: 89.8032792622 
Correct output: 8.0949473456   | Program output: 20.0949473456 
Correct output: -64.1503753092 | Program output: -21.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -37.4699592842
Correct output: 62.8135887966  | Program output: 47.8135887966 
Correct output: 96.6123363982  | Program output: 88.6123363982 
Correct output: 46.7196465918  | Program output: 33.7196465918 
Correct output: -59.2785304711 | Program output: -39.2785304711
Correct output: -6.9174150193  | Program output: -7.9174150193 
Correct output: -68.4374020443 | Program output: -66.4374020443
Correct output: -11.1169636129 | Program output: -63.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -61.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -123.5033370034
Correct output: 26.2328206209  | Program output: 5.2328206209  
Correct output: -129.5990711743 | Program output: -93.5990711743
Correct output: -17.8249368738 | Program output: -43.8249368738
Correct output: -16.8176198654 | Program output: -24.8176198654
Correct output: 5.5639147954   | Program output: -11.4360852046
Correct output: 15.7960197363  | Program output: 21.7960197363 
Correct output: -15.2347943829 | Program output: 5.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_min} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec print_integer float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub integer_min float_yank integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove integer_swap integer_rot integer_pop float_dup_times integer_swap float_rot float_dec print_integer float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_yankdup float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [5.0 2 4.0 1 6.0 2 12.0 2 43.0 2 2.0 1 3.0 1 15.0 2 8.0 2 13.0 2 20.0 1 1.0 1 2.0 1 52.0 2 2.0 1 35.0 2 0.0 0 1.0 1 21.0 2 36.0 3 26.0 2 8.0 2 17.0 12 6.0 2 21.0 12]
Total: 420.0
Mean: 8.4
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4777.168043
Median total errors in population: 452.0
Error averages by case: (199.6980383000001 4.565 206.34246559999977 4.094 166.48416889999996 3.949 207.5763457999999 4.436 188.26950880000024 4.831 121.83946380000003 3.249 178.7868068 3.477 217.1643665999998 4.75 168.74448750000002 3.489 146.85848689999995 3.95 172.2013276999998 4.748 177.97207480000014 4.389 211.33299919999993 4.247 221.75002699999996 4.066 184.88256560000002 3.987 208.55668110000008 4.055 181.07228330000004 3.292 218.02932610000005 4.355 104.10271560000001 4.114 240.80062169999988 5.639 184.17229610000012 4.741 154.43049190000008 4.726 181.63481609999997 11.561 204.1997802000001 4.229 209.55589760000018 11.771)
Error minima by case: (0.0 0 0.0 0 5.0 1 0.0 0 15.0226 1 2.0 1 3.0 1 1.0 1 7.0 1 0.7196 1 1.2785 1 0.0 0 0.0 0 0.883 1 2.0 1 7.5307 1 0.0 0 0.0 0 0.7672 1 24.0 2 0.0758 1 0.0 0 0.0 0 0.0 0 0.2348 1)
Average genome size in population (length): 133.531
Average program size in population (points): 134.531
Average percent parens in population: 0.007
Minimum age in population: 118.0764843385575
Maximum age in population: 122.367528679985
Average age in population: 120.318993353848
Median age in population: 120.3441512585893
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.347
Error (vector) diversity:			 0.402
Behavioral diversity:				 0.403
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 167033715
--- Timings ---
Current time: 1529615205374 milliseconds
Total Time:         379.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.9 seconds, 34.5%
Fitness Testing:    195.3 seconds, 51.4%
Report:              53.6 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 43130.2396
Test mean error for best: 21.56512
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 89.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -37.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 88.6123363982 
Correct output: 46.7196465918  | Program output: 33.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -63.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -61.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 5.2328206209  
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_add} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_max integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dup_times integer_rot float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_yankdup float_dup_times integer_swap integer_rot integer_swap integer_rot float_dec float_dec float_shove integer_rot float_dec integer_add integer_swap float_dup_items float_dec float_swap integer_swap print_integer float_inc print_integer float_inc print_float in1 integer_inc)
Errors: [11.0 2 2.0 1 6.0 2 6.0 2 37.0 2 2.0 1 3.0 1 21.0 2 8.0 2 13.0 2 14.0 2 7.0 2 4.0 2 52.0 2 2.0 1 35.0 2 0.0 0 5.0 1 21.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 414.0
Mean: 8.28
Genome size: 152
Size: 153
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5391.843257300003
Median total errors in population: 450.0
Error averages by case: (215.64263200000016 5.022 223.9260380999998 4.502 196.42451559999998 4.422 223.5736706999999 4.809 218.4237361000002 5.252 157.52608219999993 3.659 205.1716426 3.672 234.04508639999983 5.117 199.28223550000007 3.92 178.2110703 4.362 203.22261179999973 5.001 200.63680170000003 4.827 232.29536409999983 4.503 244.37067580000001 4.409 209.39476000000008 4.2 231.5703205000001 4.381 212.1541719000001 3.758 238.01846050000017 4.665 129.92672819999996 4.708 260.51106269999985 5.892 211.7700522000001 4.99 187.4618381000001 5.126 205.19352070000005 11.509 220.3714793000001 4.647 223.53670030000018 11.829)
Error minima by case: (0.0 0 0.0 0 3.1177 1 0.0 0 6.1204 1 1.0 1 2.0 1 2.0 1 2.3087 1 2.7196 1 1.2785 1 0.0 0 0.0 0 1.1557 1 1.0 1 0.5307 1 0.0 0 0.0 0 0.7672 1 18.5991 2 0.1677 1 0.0 0 0.0 0 0.0 0 1.2348 1)
Average genome size in population (length): 134.003
Average program size in population (points): 135.003
Average percent parens in population: 0.007
Minimum age in population: 119.1738220867853
Maximum age in population: 123.7218244119073
Average age in population: 121.6888381467735
Median age in population: 121.7516110636031
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.952
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.952
Total error diversity:				 0.365
Error (vector) diversity:			 0.419
Behavioral diversity:				 0.419
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 170384395
--- Timings ---
Current time: 1529615211156 milliseconds
Total Time:         385.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       132.5 seconds, 34.3%
Fitness Testing:    198.5 seconds, 51.5%
Report:              54.7 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 65840.25330000001
Test mean error for best: 32.92013
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 6.2182085795  
Correct output: 44.8179022307  | Program output: 45.8179022307 
Correct output: 95.8032792622  | Program output: 90.8032792622 
Correct output: 8.0949473456   | Program output: 17.0949473456 
Correct output: -64.1503753092 | Program output: -24.1503753092
Correct output: 27.1310761693  | Program output: 26.1310761693 
Correct output: -34.4699592842 | Program output: -36.4699592842
Correct output: 62.8135887966  | Program output: 44.8135887966 
Correct output: 96.6123363982  | Program output: 89.6123363982 
Correct output: 46.7196465918  | Program output: 34.7196465918 
Correct output: -59.2785304711 | Program output: -42.2785304711
Correct output: -6.9174150193  | Program output: -10.9174150193
Correct output: -68.4374020443 | Program output: -69.4374020443
Correct output: -11.1169636129 | Program output: -62.1169636129
Correct output: -76.8272599297 | Program output: -77.8272599297
Correct output: -26.5306664135 | Program output: -60.5306664135
Correct output: -40.4578849398 | Program output: -39.4578849398
Correct output: -124.5033370034 | Program output: -126.5033370034
Correct output: 26.2328206209  | Program output: 6.2328206209  
Correct output: -129.5990711743 | Program output: -96.5990711743
Correct output: -17.8249368738 | Program output: -46.8249368738
Correct output: -16.8176198654 | Program output: -27.8176198654
Correct output: 5.5639147954   | Program output: -14.4360852046
Correct output: 15.7960197363  | Program output: 18.7960197363 
Correct output: -15.2347943829 | Program output: 2.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_sub} {:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_sub float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec print_integer float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec integer_div integer_rot integer_rot integer_dup_items integer_swap integer_rot float_dec integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_shove float_dup_times integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot tag_integer_1035 float_dec float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec float_add integer_swap tag_integer_916 float_dup_times float_dec print_integer float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [8.0 2 1.0 1 5.0 1 9.0 2 40.0 1 1.0 1 2.0 1 18.0 2 7.0 2 12.0 2 17.0 2 4.0 2 1.0 1 51.0 2 1.0 1 34.0 2 1.0 2 2.0 1 20.0 1 33.0 3 29.0 2 11.0 2 20.0 12 3.0 1 18.0 13]
Total: 410.0
Mean: 8.2
Genome size: 140
Size: 141
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4886.670561500002
Median total errors in population: 443.0
Error averages by case: (202.6102837000001 4.767 210.16707629999982 4.216 170.398036 4.063 211.49370959999987 4.596 198.87607770000005 5.02 125.51517550000003 3.359 174.89743269999997 3.374 220.5442942999998 4.876 171.79287740000007 3.77 153.56935859999993 4.097 184.3994412999999 4.734 186.01925599999993 4.684 214.6851244999999 4.29 218.44252539999994 4.19 183.00106510000006 3.76 205.5640643000001 4.156 181.4226203999999 3.439 221.43572010000008 4.4 116.37137799999999 4.423 243.52672159999997 5.675 192.5434905000001 4.753 168.63938320000008 4.869 189.76979819999994 11.527 208.17356140000007 4.405 209.67308970000008 11.696)
Error minima by case: (0.0 0 0.0 0 4.0 1 1.0 1 1.6002 1 0.0 0 1.0 1 0.0 0 3.9567 1 3.9027 1 1.2785 1 0.0 0 0.0 0 2.117 1 0.0 0 0.4693 1 0.0 0 0.0 0 0.7672 1 23.0 2 0.1428 1 0.0 0 1.0 1 0.0 0 0.5037 1)
Average genome size in population (length): 135.051
Average program size in population (points): 136.051
Average percent parens in population: 0.007
Minimum age in population: 120.528723666051
Maximum age in population: 124.9926384053962
Average age in population: 123.0991022636299
Median age in population: 123.1432912215168
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.951
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.951
Total error diversity:				 0.349
Error (vector) diversity:			 0.426
Behavioral diversity:				 0.426
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 173761380
--- Timings ---
Current time: 1529615217666 milliseconds
Total Time:         392.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.2 seconds, 34.2%
Fitness Testing:    202.4 seconds, 51.6%
Report:              55.6 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 43010.895300000004
Test mean error for best: 21.50545
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 8.2182085795  
Correct output: 44.8179022307  | Program output: 47.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 19.0949473456 
Correct output: -64.1503753092 | Program output: -22.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 46.8135887966 
Correct output: 96.6123363982  | Program output: 90.6123363982 
Correct output: 46.7196465918  | Program output: 35.7196465918 
Correct output: -59.2785304711 | Program output: -40.2785304711
Correct output: -6.9174150193  | Program output: -8.9174150193 
Correct output: -68.4374020443 | Program output: -67.4374020443
Correct output: -11.1169636129 | Program output: -61.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -59.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -124.5033370034
Correct output: 26.2328206209  | Program output: 7.2328206209  
Correct output: -129.5990711743 | Program output: -94.5990711743
Correct output: -17.8249368738 | Program output: -44.8249368738
Correct output: -16.8176198654 | Program output: -25.8176198654
Correct output: 5.5639147954   | Program output: -12.4360852046
Correct output: 15.7960197363  | Program output: 20.7960197363 
Correct output: -15.2347943829 | Program output: 4.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_dup} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dup_items} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_962} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_inc} {:instruction float_shove} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_max})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_yank float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 integer_dup integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap float_inc integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec integer_div integer_rot integer_rot integer_dup_items float_dec float_dup_times integer_rot float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dup_items integer_yankdup float_dup_times integer_swap integer_dup_times float_dec float_dec tag_integer_962 float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dec tag_integer_1035 float_dec integer_inc float_shove tag_integer_1035 float_dec float_dup_times float_dec tag_integer_1035 float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float integer_shove integer_max)
Errors: [6.0 2 3.0 1 4.0 1 11.0 2 42.0 2 0.0 0 1.0 1 16.0 2 6.0 1 11.0 2 19.0 2 2.0 1 1.0 1 50.0 1 0.0 0 33.0 2 2.0 2 0.0 0 19.0 2 35.0 3 27.0 2 9.0 2 18.0 12 5.0 2 20.0 13]
Total: 399.0
Mean: 7.98
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4848.5675999
Median total errors in population: 440.0
Error averages by case: (207.17839200000017 4.953 215.09634199999988 4.491 162.438912 4.071 214.56559389999987 4.85 195.73484050000005 5.095 115.98284820000002 3.302 173.6308339 3.242 225.8211105999999 5.099 166.65403969999997 3.998 139.58054269999982 4.043 181.1113642999998 4.985 184.42153710000005 4.768 218.01029889999978 4.535 214.25572770000002 4.022 178.24750279999998 3.401 201.1990007 4.018 187.40938930000004 3.328 224.50278880000005 4.655 103.23949139999999 4.263 246.88008159999998 5.854 186.97691230000015 4.941 166.6303740000001 5.041 187.29102020000002 11.524 211.6063790000001 4.639 215.42327630000014 11.561)
Error minima by case: (0.0 0 0.0 0 3.0 1 0.0 0 7.6241 1 0.0 0 0.0 0 0.1864 1 5.0 1 1.7196 1 1.2785 1 0.0 0 0.0 0 0.117 1 0.0 0 0.4693 1 0.0 0 0.0 0 0.4381 1 17.5991 2 0.0849 1 0.0 0 0.2128 1 0.0 0 0.2348 1)
Average genome size in population (length): 136.585
Average program size in population (points): 137.585
Average percent parens in population: 0.007
Minimum age in population: 122.2012726929864
Maximum age in population: 126.4727077112973
Average age in population: 124.4225448286402
Median age in population: 124.464658008347
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.378
Error (vector) diversity:			 0.446
Behavioral diversity:				 0.448
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 177177280
--- Timings ---
Current time: 1529615223652 milliseconds
Total Time:         398.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.7 seconds, 34.1%
Fitness Testing:    205.7 seconds, 51.7%
Report:              56.6 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 45636.274699999994
Test mean error for best: 22.81814
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 90.6123363982 
Correct output: 46.7196465918  | Program output: 35.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -61.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -59.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 7.2328206209  
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_dup} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yank} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_shove} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_shove} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_integer} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_yank float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 integer_dup integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_916 float_inc integer_rot float_inc float_dup_times float_inc float_dup_times integer_dup_items float_rot float_dup_times integer_swap integer_rot float_dec integer_mod integer_dec float_dec float_dec integer_sub float_dec integer_rot integer_dup_items float_dec float_yankdup float_dec float_yank integer_swap integer_rot integer_dup_items float_dec float_dup_times integer_dup_items float_shove float_dup_times float_dec float_mult float_dec float_dup_times integer_swap integer_rot float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap float_shove float_dec integer_swap integer_rot float_mod integer_yankdup float_dup_times integer_swap integer_dup_times float_add float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec integer_swap float_rot float_dec print_integer float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove float_dec float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc print_integer print_integer float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 4.0 1 6.0 2 37.0 2 0.0 0 1.0 1 21.0 2 6.0 1 11.0 2 14.0 2 7.0 2 4.0 2 50.0 1 0.0 0 33.0 2 2.0 2 5.0 1 19.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 395.0
Mean: 7.9
Genome size: 160
Size: 161
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5563.0120592
Median total errors in population: 445.0
Error averages by case: (227.23877770000027 5.041 240.94767709999982 4.619 195.16452199999992 4.436 240.68158259999984 4.921 222.35138950000004 5.402 145.43800809999996 3.718 201.4427137 3.688 251.30025189999975 5.214 196.9544036 4.479 175.08081950000005 4.452 208.13761389999993 5.142 213.9497411 5.065 253.0530299999999 4.78 241.86137949999997 4.511 206.28822680000007 3.808 229.44384300000004 4.463 214.11412459999997 3.687 260.008949 4.897 124.1711678 4.718 281.01268840000006 6.025 215.54757239999998 5.115 192.00846350000003 5.274 217.2510355 11.463 238.4351006000001 4.725 240.02597740000013 11.46)
Error minima by case: (0.0 0 0.0 0 3.0 1 0.0 0 0.1356 1 0.0 0 0.0 0 0.1864 1 5.0 1 2.1562 1 1.2785 1 0.0 0 0.0 0 1.117 1 0.0 0 0.5307 1 0.0 0 0.0 0 0.2337 1 14.5991 2 0.0 0 0.0 0 1.5639 1 0.0 0 0.2348 1)
Average genome size in population (length): 138.664
Average program size in population (points): 139.664
Average percent parens in population: 0.007
Minimum age in population: 123.4886843731826
Maximum age in population: 127.7804475390591
Average age in population: 125.7766116585789
Median age in population: 125.8363761571115
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.407
Error (vector) diversity:			 0.476
Behavioral diversity:				 0.478
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 180645100
--- Timings ---
Current time: 1529615229986 milliseconds
Total Time:         404.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.4 seconds, 33.9%
Fitness Testing:    209.5 seconds, 51.8%
Report:              57.7 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 41667.92959999999
Test mean error for best: 20.83396
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 36.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -60.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -58.5306664135
Correct output: -40.4578849398 | Program output: -42.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 8.2328206209  
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_add} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot float_dec integer_mod integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dup_times integer_rot float_dec float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_dec integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_dup_items float_dec tag_integer_916 float_add float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_dup_times float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float)
Errors: [11.0 2 2.0 1 3.0 1 6.0 2 37.0 2 1.0 1 0.0 0 21.0 2 5.0 1 10.0 1 14.0 2 7.0 2 4.0 2 49.0 2 1.0 1 32.0 2 2.0 1 5.0 1 18.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 390.0
Mean: 7.8
Genome size: 155
Size: 156
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5296.1917112
Median total errors in population: 431.0
Error averages by case: (211.51188120000006 4.897 221.3092654999998 4.388 199.73655239999997 4.185 219.94457499999993 4.775 207.02510840000008 5.067 151.74746860000005 3.593 207.6309825 3.522 231.57013399999988 5.016 201.7486573 4.346 176.85307649999996 4.32 188.25886699999998 4.849 198.19077420000005 4.707 227.31014809999994 4.446 245.25071949999995 4.343 210.84213530000005 3.626 233.29133730000004 4.367 213.12241160000002 3.482 233.31133379999994 4.512 123.405608 4.478 256.04070749999994 5.698 196.42137300000002 4.806 176.30818670000002 5.022 200.72313770000005 11.495 217.19681160000002 4.537 221.5454585000001 11.418)
Error minima by case: (0.0 0 0.0 0 3.0 1 0.0 0 14.1504 1 0.0 0 0.0 0 1.0 1 5.0 1 8.3394 1 1.2785 1 0.0 0 0.0 0 2.2054 1 0.0 0 0.403 1 0.0 0 0.0 0 0.7672 1 22.0 2 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 140.776
Average program size in population (points): 141.776
Average percent parens in population: 0.007
Minimum age in population: 124.7552296869021
Maximum age in population: 129.2051471127393
Average age in population: 127.1408342295395
Median age in population: 127.2371958011982
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.961
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.961
Total error diversity:				 0.399
Error (vector) diversity:			 0.476
Behavioral diversity:				 0.477
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 184165535
--- Timings ---
Current time: 1529615236330 milliseconds
Total Time:         410.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.0 seconds, 33.8%
Fitness Testing:    213.0 seconds, 51.9%
Report:              58.6 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 41667.92959999999
Test mean error for best: 20.83396
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 36.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -60.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -58.5306664135
Correct output: -40.4578849398 | Program output: -42.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 8.2328206209  
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_add} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot float_dec integer_mod integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dup_times integer_rot float_dec float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_dec integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_dup_items float_dec tag_integer_916 float_add float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_dup_times float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float)
Errors: [11.0 2 2.0 1 3.0 1 6.0 2 37.0 2 1.0 1 0.0 0 21.0 2 5.0 1 10.0 1 14.0 2 7.0 2 4.0 2 49.0 2 1.0 1 32.0 2 2.0 1 5.0 1 18.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 390.0
Mean: 7.8
Genome size: 155
Size: 156
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5687.048693500001
Median total errors in population: 431.0
Error averages by case: (237.54258230000008 5.056 245.43449459999977 4.583 196.0454178 3.968 246.00316489999992 4.928 228.98750450000023 5.318 159.27340899999996 3.521 209.25731250000004 3.549 254.93554519999978 5.185 198.69192919999998 4.297 182.29996449999996 4.299 207.88997559999996 5.081 223.94711410000002 4.993 253.36175989999995 4.661 247.8325747 4.381 213.99261420000002 3.634 234.98575690000004 4.402 217.865745 3.816 260.54983680000004 4.802 129.6265695 4.306 281.45919330000004 5.959 217.07868680000007 5.029 197.4961222 5.198 224.99543000000008 11.48 242.624813 4.72 246.1141770000001 11.591)
Error minima by case: (0.0 0 0.0 0 1.0 1 0.0 0 5.5713 1 0.0 0 0.0 0 0.0 0 3.0 1 3.7196 1 0.6994 1 0.0 0 0.0 0 1.6797 1 0.0 0 0.4693 1 0.0 0 0.0 0 0.7672 1 18.5991 2 0.0 0 0.0 0 0.0 0 0.0 0 0.8241 1)
Average genome size in population (length): 140.675
Average program size in population (points): 141.675
Average percent parens in population: 0.007
Minimum age in population: 126.1716482406525
Maximum age in population: 130.5935063200646
Average age in population: 128.4557589411605
Median age in population: 128.4860796721715
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.397
Error (vector) diversity:			 0.483
Behavioral diversity:				 0.484
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 187683480
--- Timings ---
Current time: 1529615242890 milliseconds
Total Time:         417.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       140.8 seconds, 33.7%
Fitness Testing:    216.8 seconds, 51.9%
Report:              59.7 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 41667.92959999999
Test mean error for best: 20.83396
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 36.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -60.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -58.5306664135
Correct output: -40.4578849398 | Program output: -42.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 8.2328206209  
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_add} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_rot float_dec integer_mod integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dup_times integer_rot float_dec float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_dec integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_dup_items float_dec tag_integer_916 float_add float_dec integer_swap integer_rot float_dec integer_dup_items float_dec float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_dup_times float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float)
Errors: [11.0 2 2.0 1 3.0 1 6.0 2 37.0 2 1.0 1 0.0 0 21.0 2 5.0 1 10.0 1 14.0 2 7.0 2 4.0 2 49.0 2 1.0 1 32.0 2 2.0 1 5.0 1 18.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 390.0
Mean: 7.8
Genome size: 155
Size: 156
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5414.294453900001
Median total errors in population: 422.0
Error averages by case: (226.88276270000014 4.952 238.0353166999999 4.403 183.1112441 3.737 237.39293109999994 4.747 223.16297260000002 5.095 154.9702859 3.329 189.68665290000004 3.48 248.3925645999998 5.039 184.46414080000005 4.103 171.03353909999996 4.22 203.49511049999992 4.903 211.52405080000005 4.67 240.7960215 4.471 228.7293352 4.194 194.10887860000005 3.497 215.89879970000007 4.326 200.76892630000003 4.206 247.48613470000012 4.593 133.24104149999997 4.111 268.85395059999985 5.783 209.64008490000012 4.926 192.11028389999993 4.97 214.00841119999998 11.629 235.00277970000008 4.543 236.0512343 11.52)
Error minima by case: (0.0 0 0.0 0 0.5553 1 0.0 0 16.8496 1 0.0 0 0.0 0 1.0 1 0.2537 1 1.4534 1 1.2785 1 0.0 0 0.0 0 0.0135 1 0.0 0 2.5307 1 0.0 0 0.0 0 0.0 0 0.4009 2 0.014 1 0.0 0 0.712 1 0.0 0 0.168 1)
Average genome size in population (length): 142.049
Average program size in population (points): 143.049
Average percent parens in population: 0.007
Minimum age in population: 127.1716482406525
Maximum age in population: 131.6992221767129
Average age in population: 129.7667386850868
Median age in population: 129.8290280029033
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.95
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.95
Total error diversity:				 0.377
Error (vector) diversity:			 0.471
Behavioral diversity:				 0.471
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 191235970
--- Timings ---
Current time: 1529615249110 milliseconds
Total Time:         423.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.3 seconds, 33.6%
Fitness Testing:    220.4 seconds, 52.0%
Report:              60.7 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 54997.409400000004
Test mean error for best: 27.49870
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 36.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -60.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -58.5306664135
Correct output: -40.4578849398 | Program output: -42.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 8.2328206209  
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_rot} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot float_dec integer_mod float_mult float_dec integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_swap float_dup_times float_dec integer_rot print_integer integer_dup_times float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec float_swap integer_swap float_dup_times integer_rot tag_integer_1035 integer_rot float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec float_add integer_swap tag_integer_916 float_dup_times float_dec print_integer float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec tag_integer_1035 float_dec integer_shove integer_rot float_dec integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 10.0 1 18.0 2 3.0 1 0.0 0 49.0 2 1.0 1 32.0 2 2.0 1 1.0 1 18.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 390.0
Mean: 7.8
Genome size: 149
Size: 150
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 5442.128050799999
Median total errors in population: 421.0
Error averages by case: (223.5055895000001 4.901 233.37315399999983 4.479 187.24129069999995 3.727 233.6568183999999 4.841 215.5155787000003 5.275 158.56595949999993 3.353 206.5061713 3.576 242.75267699999984 5.099 188.4216771 3.959 173.64904179999988 4.154 200.01583729999993 4.998 204.4337085999999 4.859 241.6022584999999 4.456 241.08530149999999 4.243 208.51699130000006 3.51 228.43805800000004 4.465 215.94194920000007 4.352 247.28320690000007 4.606 132.75856440000004 4.33 269.9729491999999 5.844 208.48308180000015 4.96 186.289012 5.147 205.1025396 11.415 230.6180638000001 4.646 231.32557070000004 11.878)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.5314 1 5.9323 1 0.0 0 0.0 0 0.0 0 1.0 1 0.7222 1 1.2785 1 0.0 0 0.0 0 0.0135 1 0.0 0 5.5307 1 0.0 0 0.0 0 0.7672 1 10.5991 2 0.1062 1 0.0 0 0.0 0 0.0 0 0.0278 1)
Average genome size in population (length): 143.676
Average program size in population (points): 144.676
Average percent parens in population: 0.007
Minimum age in population: 128.7968593501799
Maximum age in population: 132.9602427532277
Average age in population: 131.1451124259906
Median age in population: 131.154836653332
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.393
Error (vector) diversity:			 0.497
Behavioral diversity:				 0.498
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 194829315
--- Timings ---
Current time: 1529615255529 milliseconds
Total Time:         430.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.0 seconds, 33.5%
Fitness Testing:    224.3 seconds, 52.1%
Report:              61.8 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 37750.714
Test mean error for best: 18.87536
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 96.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 32.1310761693 
Correct output: -34.4699592842 | Program output: -30.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 95.6123363982 
Correct output: 46.7196465918  | Program output: 40.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -56.1169636129
Correct output: -76.8272599297 | Program output: -71.8272599297
Correct output: -26.5306664135 | Program output: -54.5306664135
Correct output: -40.4578849398 | Program output: -33.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 12.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_dup} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction integer_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_inc} {:instruction tag_integer_916} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_yank float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 integer_dup integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_916 integer_dec integer_swap integer_rot float_inc float_dup_times float_inc float_dup_times integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec integer_rot float_dec integer_mod float_dec float_dec integer_div integer_rot integer_rot integer_dup_items integer_swap integer_rot float_dec integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_shove float_dup_times integer_dup_items float_dec float_dup_times integer_flush float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec integer_swap integer_rot float_mod integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec integer_inc tag_integer_916 integer_swap integer_rot float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec float_dec float_dup_items integer_rot float_dec integer_dup_items float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_dup float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 1.0 1 10.0 1 41.0 2 5.0 2 4.0 1 17.0 2 1.0 1 6.0 1 18.0 2 3.0 1 0.0 0 45.0 2 5.0 1 28.0 2 7.0 2 1.0 1 14.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 388.0
Mean: 7.76
Genome size: 156
Size: 157
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5282.6508509
Median total errors in population: 419.0
Error averages by case: (219.86950860000007 4.933 228.6906537999999 4.478 165.4893578 3.398 229.2396268999999 4.747 227.9407680000001 5.149 138.770681 2.977 179.04943120000004 3.156 238.37234509999988 5.058 166.65206049999998 3.484 157.1959101 3.818 213.37390929999998 5.005 214.7217909999999 4.777 240.94606599999995 4.524 219.1116396 3.917 183.71329210000005 3.127 206.37534240000002 4.256 191.16096389999996 4.028 247.40781290000004 4.687 127.07945320000003 4.344 269.0311820999999 5.889 221.18384440000005 5.035 197.37549670000007 5.007 220.2778258 11.559 225.76417360000005 4.577 230.3327149000001 11.595)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.5789 1 0.0 0 0.0 0 1.0 1 1.0 1 4.7196 1 1.2785 1 0.0 0 0.0 0 1.0135 1 0.0 0 6.6026 1 0.0 0 0.0 0 0.4598 1 15.5991 2 0.2988 1 0.0 0 0.0 0 0.0 0 0.2349 1)
Average genome size in population (length): 146.126
Average program size in population (points): 147.126
Average percent parens in population: 0.007
Minimum age in population: 130.4137824995017
Maximum age in population: 134.415982960419
Average age in population: 132.5441319207158
Median age in population: 132.6101288693972
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.378
Error (vector) diversity:			 0.504
Behavioral diversity:				 0.505
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 198483775
--- Timings ---
Current time: 1529615262105 milliseconds
Total Time:         436.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       145.5 seconds, 33.3%
Fitness Testing:    228.1 seconds, 52.3%
Report:              62.7 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 37750.714
Test mean error for best: 18.87536
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 96.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 32.1310761693 
Correct output: -34.4699592842 | Program output: -30.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 95.6123363982 
Correct output: 46.7196465918  | Program output: 40.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -56.1169636129
Correct output: -76.8272599297 | Program output: -71.8272599297
Correct output: -26.5306664135 | Program output: -54.5306664135
Correct output: -40.4578849398 | Program output: -33.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 12.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_dup} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction integer_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_inc} {:instruction tag_integer_916} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_yank float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 integer_dup integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_916 integer_dec integer_swap integer_rot float_inc float_dup_times float_inc float_dup_times integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec integer_rot float_dec integer_mod float_dec float_dec integer_div integer_rot integer_rot integer_dup_items integer_swap integer_rot float_dec integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_shove float_dup_times integer_dup_items float_dec float_dup_times integer_flush float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec integer_swap integer_rot float_mod integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec integer_inc tag_integer_916 integer_swap integer_rot float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec float_dec float_dup_items integer_rot float_dec integer_dup_items float_rot float_dec print_integer float_dec float_dec float_dec integer_rot float_dec integer_shove float_dup_times integer_swap integer_dup float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 1.0 1 10.0 1 41.0 2 5.0 2 4.0 1 17.0 2 1.0 1 6.0 1 18.0 2 3.0 1 0.0 0 45.0 2 5.0 1 28.0 2 7.0 2 1.0 1 14.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 388.0
Mean: 7.76
Genome size: 156
Size: 157
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5355.729715499999
Median total errors in population: 417.0
Error averages by case: (236.12130160000015 5.23 244.87072049999986 4.718 163.3458463 3.355 244.83320869999991 4.916 223.55210150000022 5.325 132.53418660000003 3.033 178.19070460000003 2.985 254.5072690999998 5.258 164.45037889999995 3.379 149.73205479999993 3.685 202.47994329999983 5.142 224.64648759999983 4.888 246.4976376999998 4.676 217.16010880000002 3.873 183.79072090000008 3.181 203.67375290000004 4.121 198.26855530000003 4.053 255.16467770000014 4.85 113.70559490000002 4.222 276.32148039999987 6.037 211.89434220000015 5.176 193.97122510000005 5.216 225.44940709999992 11.502 241.06516240000005 4.772 244.26284660000002 11.647)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 4.5715 1 0.0 0 0.0 0 0.0 0 0.9877 1 2.8088 1 0.2785 1 0.0 0 0.0 0 2.117 1 0.0 0 1.1504 1 0.0 0 0.0 0 0.7672 1 18.5991 2 0.0 0 0.0 0 0.0 0 0.0 0 0.2348 1)
Average genome size in population (length): 147.589
Average program size in population (points): 148.589
Average percent parens in population: 0.007
Minimum age in population: 131.4137824995017
Maximum age in population: 135.796455143642
Average age in population: 133.84326839425
Median age in population: 133.8734027894192
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.381
Error (vector) diversity:			 0.523
Behavioral diversity:				 0.524
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 202174960
--- Timings ---
Current time: 1529615268331 milliseconds
Total Time:         442.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.1 seconds, 33.2%
Fitness Testing:    231.6 seconds, 52.3%
Report:              63.9 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 45793.0666
Test mean error for best: 22.89653
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 36.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -60.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -58.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 8.2328206209  
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_flush} {:instruction in2} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction integer_swap} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_swap} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_stackdepth integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_max integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec integer_div integer_rot float_dec float_dec float_sub float_dec float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_shove integer_yank float_dec integer_sub integer_flush in2 integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times float_dec float_dec integer_dup_times float_dec float_dec integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec integer_swap float_rot float_dec float_dec float_shove print_integer integer_swap float_dec float_shove print_integer float_dec print_integer integer_flush print_integer float_dec float_dec integer_add integer_rot float_dec integer_dup_times float_dup_times float_shove float_dec float_dec float_mult float_dec tag_integer_1035 float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 3.0 1 6.0 2 37.0 2 1.0 1 0.0 0 21.0 2 5.0 1 10.0 1 14.0 2 7.0 2 4.0 2 49.0 2 1.0 1 32.0 2 0.0 0 5.0 1 18.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 387.0
Mean: 7.74
Genome size: 154
Size: 155
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4976.203915100001
Median total errors in population: 410.0
Error averages by case: (196.60306830000013 4.961 206.1264929999998 4.434 171.4507745 3.544 204.9347023999999 4.679 205.28182210000014 5.191 143.8396237000001 3.302 189.8364353 3.098 216.61294749999985 5.029 171.1858387 3.55 161.96690399999997 3.777 188.04385370000003 5.072 188.68973519999992 4.718 209.69262399999985 4.476 226.6692303 4.165 195.56730510000006 3.436 214.55369559999997 4.295 203.36045820000004 4.147 219.3185338000001 4.742 125.93712970000004 4.374 240.18317349999995 5.903 193.17472300000009 4.993 177.2862332 5.062 193.8368385 11.533 201.7910935000002 4.473 205.85367829999998 11.453)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.4811 1 0.0 0 0.0 0 0.0 0 0.0 0 0.9609 1 1.2785 1 0.0 0 0.0 0 0.117 1 0.0 0 2.7191 1 0.0 0 0.0 0 1.6709 1 7.5991 2 0.0 0 0.0 0 0.5639 1 0.0 0 0.1384 1)
Average genome size in population (length): 149.144
Average program size in population (points): 150.144
Average percent parens in population: 0.007
Minimum age in population: 132.4137824995017
Maximum age in population: 137.1267660519546
Average age in population: 135.2375093668122
Median age in population: 135.2999149874028
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.387
Error (vector) diversity:			 0.527
Behavioral diversity:				 0.528
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 205905655
--- Timings ---
Current time: 1529615274801 milliseconds
Total Time:         449.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       148.9 seconds, 33.1%
Fitness Testing:    235.4 seconds, 52.4%
Report:              65.0 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 41394.714
Test mean error for best: 20.69736
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 96.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 31.1310761693 
Correct output: -34.4699592842 | Program output: -30.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 95.6123363982 
Correct output: 46.7196465918  | Program output: 40.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -56.1169636129
Correct output: -76.8272599297 | Program output: -71.8272599297
Correct output: -26.5306664135 | Program output: -54.5306664135
Correct output: -40.4578849398 | Program output: -34.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 12.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_dup} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_916} {:instruction integer_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_rot} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_inc} {:instruction tag_integer_916} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_yank float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 integer_dup integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_916 integer_dec integer_swap integer_rot float_inc float_dup_times float_inc float_dup_times integer_rot tag_integer_916 float_dup_times integer_swap integer_rot float_dec integer_mod float_dec float_dec integer_rot float_dec integer_mod float_dec float_dec integer_div integer_rot integer_rot integer_dup_items integer_swap integer_rot float_dec integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_shove float_dup_times integer_dup_items float_dec float_dup_times integer_flush float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec integer_swap integer_rot float_mod integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec integer_inc tag_integer_916 integer_swap integer_rot float_mult float_dec integer_shove float_dup_times integer_swap integer_rot float_dec float_mult float_dec integer_yank float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec tag_integer_1035 float_dec float_shove float_dec float_shove integer_swap float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dec float_dup_times float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 1.0 1 6.0 2 37.0 2 4.0 2 4.0 1 21.0 2 1.0 1 6.0 1 14.0 2 7.0 2 4.0 2 45.0 2 5.0 1 28.0 2 6.0 2 5.0 1 14.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 386.0
Mean: 7.72
Genome size: 164
Size: 165
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5394.093440100002
Median total errors in population: 419.0
Error averages by case: (238.7201667000001 5.361 244.6734592999999 4.883 161.40511580000003 3.526 244.6666836999999 5.075 235.05993899999996 5.62 134.54779010000001 3.548 171.0044544 3.146 254.2777225999998 5.418 163.28555030000004 3.524 152.54641330000007 3.775 212.5295550000001 5.387 229.18560609999986 5.205 248.6210664999998 4.885 210.21104019999999 4.205 178.54841310000015 3.559 197.24781940000005 4.274 191.34682370000013 4.226 258.5926095000001 5.106 118.69409269999994 4.451 278.24730320000003 6.228 217.65283350000018 5.394 205.76609570000008 5.462 229.83153430000013 11.475 241.70925990000018 4.882 245.7800921 11.327)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 9.1504 1 0.0 0 0.0 0 1.0 1 0.0 0 1.4466 1 1.2785 1 0.0 0 0.0 0 0.0135 1 0.0 0 0.4881 1 0.0 0 0.0 0 2.3137 1 2.4009 2 0.0 0 0.0 0 0.5639 1 0.0 0 0.2124 1)
Average genome size in population (length): 151.294
Average program size in population (points): 152.294
Average percent parens in population: 0.007
Minimum age in population: 134.1927354046137
Maximum age in population: 138.7137214511241
Average age in population: 136.6077838234159
Median age in population: 136.6472805083936
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.965
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.965
Total error diversity:				 0.409
Error (vector) diversity:			 0.57
Behavioral diversity:				 0.573
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 209690065
--- Timings ---
Current time: 1529615281524 milliseconds
Total Time:         455.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.5 seconds, 33.0%
Fitness Testing:    239.4 seconds, 52.5%
Report:              65.9 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 45040.575699999994
Test mean error for best: 22.52029
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 94.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 30.1310761693 
Correct output: -34.4699592842 | Program output: -32.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 93.6123363982 
Correct output: 46.7196465918  | Program output: 38.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -58.1169636129
Correct output: -76.8272599297 | Program output: -73.8272599297
Correct output: -26.5306664135 | Program output: -56.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 10.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times integer_mod float_mult float_dec integer_div integer_rot integer_rot integer_dup_items float_dec float_dec float_dec integer_sub float_dec integer_rot float_dec integer_mod integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dup_times integer_rot float_dec float_dec float_swap integer_swap float_dup_times float_dec float_div float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec integer_dup_times integer_dup_times float_dec float_dec integer_rot float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_yankdup float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec integer_rot float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 1.0 1 6.0 2 37.0 2 3.0 2 2.0 1 21.0 2 3.0 1 8.0 2 14.0 2 7.0 2 4.0 2 47.0 2 3.0 1 30.0 1 0.0 0 5.0 1 16.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 383.0
Mean: 7.66
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5213.6801351
Median total errors in population: 416.5
Error averages by case: (210.18372520000008 4.887 217.4200766999998 4.423 190.59577850000005 3.599 216.56427249999987 4.756 201.64581730000003 5.142 159.07878829999999 3.637 201.63164930000002 3.192 227.97399849999985 4.992 190.55280320000003 3.59 182.09609479999997 3.814 175.1238613 4.966 201.77787119999985 4.824 220.88016669999988 4.488 238.59150679999996 4.325 203.77015860000006 3.535 225.9911609 4.266 214.6116312 4.116 229.76707970000004 4.608 142.7177548 4.277 251.3509131999999 5.749 182.28554250000013 4.913 170.5053926999999 5.011 200.1582209000001 11.505 213.9055782 4.435 220.4712920999999 10.979)
Error minima by case: (0.0 0 0.0 0 0.0 0 1.0 1 1.6692 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.2785 1 0.0 0 0.0 0 0.3919 1 0.0 0 2.1981 1 0.0 0 0.0 0 1.452 1 10.5991 2 0.162 1 0.0 0 0.4361 1 0.0 0 0.1502 1)
Average genome size in population (length): 152.777
Average program size in population (points): 153.777
Average percent parens in population: 0.007
Minimum age in population: 135.7336040002118
Maximum age in population: 140.2530951185008
Average age in population: 137.9136829528085
Median age in population: 137.9589926189739
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.413
Error (vector) diversity:			 0.606
Behavioral diversity:				 0.608
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 213510955
--- Timings ---
Current time: 1529615287989 milliseconds
Total Time:         462.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.1 seconds, 32.9%
Fitness Testing:    243.0 seconds, 52.6%
Report:              67.2 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 45040.575699999994
Test mean error for best: 22.52029
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 94.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 30.1310761693 
Correct output: -34.4699592842 | Program output: -32.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 93.6123363982 
Correct output: 46.7196465918  | Program output: 38.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -58.1169636129
Correct output: -76.8272599297 | Program output: -73.8272599297
Correct output: -26.5306664135 | Program output: -56.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 10.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times integer_mod float_mult float_dec integer_div integer_rot integer_rot integer_dup_items float_dec float_dec float_dec integer_sub float_dec integer_rot float_dec integer_mod integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dup_times integer_rot float_dec float_dec float_swap integer_swap float_dup_times float_dec float_div float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec integer_dup_times integer_dup_times float_dec float_dec integer_rot float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_yankdup float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec integer_rot float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 1.0 1 6.0 2 37.0 2 3.0 2 2.0 1 21.0 2 3.0 1 8.0 2 14.0 2 7.0 2 4.0 2 47.0 2 3.0 1 30.0 1 0.0 0 5.0 1 16.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 383.0
Mean: 7.66
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5151.225715799999
Median total errors in population: 416.0
Error averages by case: (213.52566070000023 5.18 222.1309720999998 4.635 172.4759976 3.608 220.9289397999999 4.892 216.55062580000018 5.364 154.38269339999997 3.879 180.2743374 3.395 231.24042229999986 5.195 172.7037506 3.632 165.95965940000002 3.939 196.3681214999999 5.156 205.48137959999988 4.964 221.58149719999997 4.73 214.73324129999997 4.381 185.74603130000008 3.696 202.02971570000005 4.292 198.9162967 4.271 230.6062682000001 4.91 132.427487 4.433 250.62919159999996 5.987 199.90571900000018 5.164 185.38816130000004 5.193 207.47565520000006 11.594 217.67517970000006 4.634 223.92071139999996 11.044)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 6.3719 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.4702 1 0.0 0 0.0 0 0.117 1 0.0 0 1.4693 1 0.0 0 0.0 0 0.5775 1 9.5991 1 0.3447 1 0.0 0 0.0 0 0.0 0 0.0668 1)
Average genome size in population (length): 154.34
Average program size in population (points): 155.34
Average percent parens in population: 0.006
Minimum age in population: 136.9099322379755
Maximum age in population: 141.1522906988828
Average age in population: 139.1943226973607
Median age in population: 139.2451693773174
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.951
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.951
Total error diversity:				 0.401
Error (vector) diversity:			 0.601
Behavioral diversity:				 0.601
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 217370400
--- Timings ---
Current time: 1529615294678 milliseconds
Total Time:         469.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.7 seconds, 32.8%
Fitness Testing:    247.2 seconds, 52.7%
Report:              68.3 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 46788.597299999994
Test mean error for best: 23.39430
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 94.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 30.1310761693 
Correct output: -34.4699592842 | Program output: -32.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 93.6123363982 
Correct output: 46.7196465918  | Program output: 38.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -58.1169636129
Correct output: -76.8272599297 | Program output: -73.8272599297
Correct output: -26.5306664135 | Program output: -56.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 10.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_div} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec float_div in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap float_dec print_integer float_dec float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 1.0 1 10.0 1 41.0 2 3.0 2 2.0 1 17.0 2 3.0 1 8.0 2 18.0 2 3.0 1 0.0 0 47.0 2 3.0 1 30.0 1 0.0 0 1.0 1 16.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 383.0
Mean: 7.66
Genome size: 156
Size: 157
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5481.998417300001
Median total errors in population: 421.0
Error averages by case: (226.21593250000024 5.541 234.75740129999986 4.931 181.85974009999998 3.713 232.76935699999987 5.162 232.5458505 5.549 161.62263359999997 4.101 193.18171080000002 3.649 244.57273319999976 5.469 182.08139099999997 3.737 176.47926600000005 4.019 216.29924669999983 5.454 214.50695609999994 5.172 235.25648249999983 5.035 226.0242542999999 4.578 194.46038800000014 3.87 213.9885607 4.433 218.08319690000002 4.459 244.14748610000012 5.21 147.5245846 4.637 263.44608539999984 6.245 222.93188150000006 5.444 204.85907989999998 5.45 219.49117760000001 11.608 230.20016550000003 4.935 231.32485549999998 10.967)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.5263 1 0.0 0 0.0 0 0.0 0 0.0 0 0.2804 1 1.2785 1 0.0 0 0.0 0 6.117 1 0.0 0 0.2677 1 0.0 0 0.0 0 0.1981 1 1.8809 2 0.0273 1 0.0 0 0.0 0 0.0 0 0.1424 1)
Average genome size in population (length): 154.682
Average program size in population (points): 155.682
Average percent parens in population: 0.006
Minimum age in population: 137.9099322379755
Maximum age in population: 142.5378010620774
Average age in population: 140.4966916274924
Median age in population: 140.5139756970105
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.427
Error (vector) diversity:			 0.64
Behavioral diversity:				 0.641
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 221238805
--- Timings ---
Current time: 1529615301474 milliseconds
Total Time:         475.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       155.2 seconds, 32.6%
Fitness Testing:    251.4 seconds, 52.8%
Report:              69.2 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 45040.575699999994
Test mean error for best: 22.52029
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 94.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 30.1310761693 
Correct output: -34.4699592842 | Program output: -32.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 93.6123363982 
Correct output: 46.7196465918  | Program output: 38.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -58.1169636129
Correct output: -76.8272599297 | Program output: -73.8272599297
Correct output: -26.5306664135 | Program output: -56.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 10.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_div integer_mult in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times integer_mod float_mult float_dec integer_div integer_rot integer_rot integer_dup_items float_dec float_dec float_dec integer_sub float_dec integer_rot float_dec integer_mod integer_sub float_dec integer_rot integer_dup_items float_dec integer_sub float_dup_times integer_rot float_dec float_dec float_swap integer_swap float_dup_times float_dec float_div float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec integer_dup_times integer_dup_times float_dec float_dec integer_rot float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_yankdup float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec integer_rot float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 1.0 1 6.0 2 37.0 2 3.0 2 2.0 1 21.0 2 3.0 1 8.0 2 14.0 2 7.0 2 4.0 2 47.0 2 3.0 1 30.0 1 0.0 0 5.0 1 16.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 383.0
Mean: 7.66
Genome size: 159
Size: 160
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5574.711443599999
Median total errors in population: 434.0
Error averages by case: (224.7041170000002 5.349 238.1576805999999 4.769 197.6579582 3.912 235.7355185999998 5.015 217.4919616 5.394 175.7782519 4.245 205.4171761 3.768 248.35645949999977 5.305 198.09193139999996 3.93 188.3424585000001 4.185 199.55360999999994 5.29 209.79250649999983 5.063 238.21824199999992 4.952 241.1908655 4.724 213.51143060000007 4.035 228.45557100000005 4.613 228.84224239999995 4.547 249.1027135000001 5.068 164.53730730000004 4.804 267.8886446999998 6.132 205.15464180000015 5.255 188.71019470000007 5.281 211.0361526 11.508 234.0137081000001 4.726 232.20209950000003 10.898)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 7.9017 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 6.3388 1 0.0 0 0.0 0 0.2328 1 4.4209 1 0.0273 1 0.0 0 1.0 1 0.0 0 0.5304 1)
Average genome size in population (length): 155.171
Average program size in population (points): 156.171
Average percent parens in population: 0.006
Minimum age in population: 138.9586000282647
Maximum age in population: 143.7502686919547
Average age in population: 141.7851597221736
Median age in population: 141.832875381583
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.449
Error (vector) diversity:			 0.694
Behavioral diversity:				 0.695
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 225119615
--- Timings ---
Current time: 1529615307986 milliseconds
Total Time:         482.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.8 seconds, 32.5%
Fitness Testing:    255.1 seconds, 52.9%
Report:              70.4 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 64315.986
Test mean error for best: 32.15799
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 94.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -32.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 93.6123363982 
Correct output: 46.7196465918  | Program output: 38.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -58.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -56.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 10.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_930} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction integer_swap} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (integer_div integer_mult in1 tag_integer_930 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot float_dec integer_mod float_mult float_dec integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec float_sub float_dec float_dec integer_rot float_dec tag_integer_916 float_dec float_max float_dec float_frominteger integer_swap tag_integer_961 float_dup_times tag_integer_1035 integer_pop float_shove integer_swap integer_rot float_dec integer_rot float_dec tag_integer_916 float_dec float_add integer_swap tag_integer_916 float_dup_times float_dec print_integer float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_min float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 1.0 1 10.0 1 41.0 2 2.0 1 2.0 1 17.0 2 3.0 1 8.0 2 18.0 2 3.0 1 0.0 0 47.0 2 2.0 1 30.0 1 0.0 0 1.0 1 16.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 380.0
Mean: 7.6
Genome size: 154
Size: 155
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5483.433904400001
Median total errors in population: 415.5
Error averages by case: (221.82714380000013 5.139 231.51557659999975 4.469 183.14008629999998 3.685 230.41137979999982 4.74 234.1636789 5.278 169.78417689999995 4.187 196.4646913 3.66 240.83710149999985 5.05 181.71232619999992 3.744 173.8169037 4.11 213.6352949999999 5.114 219.50881859999984 4.781 232.56713279999985 4.604 228.72949599999995 4.525 207.40409200000013 3.905 214.45377410000006 4.381 221.54596169999996 4.37 242.49534900000006 4.761 142.16684080000002 4.536 261.70638899999994 5.852 219.0835671 5.072 206.82790870000002 5.189 223.33520659999994 11.536 227.9108332 4.496 230.20317479999989 11.003)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.1537 1 0.0 0 0.0 0 0.0 0 0.0 0 2.0 1 0.3561 1 0.0 0 0.0 0 1.117 1 0.0 0 0.5307 1 0.0 0 0.0 0 0.7672 1 2.5991 2 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 155.807
Average program size in population (points): 156.807
Average percent parens in population: 0.006
Minimum age in population: 139.9586000282647
Maximum age in population: 144.8492147980032
Average age in population: 143.0282240375889
Median age in population: 143.0900067964981
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.421
Error (vector) diversity:			 0.683
Behavioral diversity:				 0.684
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 229016625
--- Timings ---
Current time: 1529615314683 milliseconds
Total Time:         489.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       158.6 seconds, 32.4%
Fitness Testing:    259.1 seconds, 52.9%
Report:              71.5 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 57761.4707
Test mean error for best: 28.88074
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 2.2182085795  
Correct output: 44.8179022307  | Program output: 41.8179022307 
Correct output: 95.8032792622  | Program output: 97.8032792622 
Correct output: 8.0949473456   | Program output: 13.0949473456 
Correct output: -64.1503753092 | Program output: -28.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -37.4699592842
Correct output: 62.8135887966  | Program output: 40.8135887966 
Correct output: 96.6123363982  | Program output: 96.6123363982 
Correct output: 46.7196465918  | Program output: 41.7196465918 
Correct output: -59.2785304711 | Program output: -46.2785304711
Correct output: -6.9174150193  | Program output: -14.9174150193
Correct output: -68.4374020443 | Program output: -73.4374020443
Correct output: -11.1169636129 | Program output: -55.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -53.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -130.5033370034
Correct output: 26.2328206209  | Program output: 13.2328206209 
Correct output: -129.5990711743 | Program output: -100.5990711743
Correct output: -17.8249368738 | Program output: -50.8249368738
Correct output: -16.8176198654 | Program output: -31.8176198654
Correct output: 5.5639147954   | Program output: -18.4360852046
Correct output: 15.7960197363  | Program output: 14.7960197363 
Correct output: -15.2347943829 | Program output: -1.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer float_dec float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec tag_integer_1035 float_dec integer_shove integer_rot float_dec integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [12.0 2 3.0 1 2.0 1 5.0 2 36.0 2 2.0 1 3.0 1 22.0 2 0.0 0 5.0 1 13.0 2 8.0 2 5.0 2 44.0 2 2.0 1 27.0 2 0.0 0 6.0 2 13.0 2 29.0 2 33.0 2 15.0 2 24.0 12 1.0 1 14.0 1]
Total: 372.0
Mean: 7.44
Genome size: 170
Size: 171
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5408.244936500002
Median total errors in population: 421.0
Error averages by case: (223.53635910000014 5.265 229.54311129999982 4.586 181.88558250000003 3.636 229.73330929999992 4.836 222.5961389 5.275 156.08505879999996 4.065 194.43898080000002 3.642 239.53401969999982 5.151 183.73615729999997 3.728 172.8897632 4.024 199.8516417999999 5.213 217.10631159999983 4.914 228.53219039999988 4.721 231.19189249999994 4.489 202.59716970000008 3.882 217.27155720000005 4.355 235.00390980000014 4.5 238.97107600000015 4.867 136.66957979999995 4.583 258.81993739999984 5.943 207.44119280000007 5.188 193.32245820000003 5.21 218.79767480000007 11.553 226.63289190000012 4.616 232.8949716999999 10.92)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.8196 1 0.0 0 0.0 0 0.0 0 0.0 0 2.0 1 1.2785 1 0.0 0 0.0 0 0.883 1 0.0 0 3.5216 1 0.0 0 0.0 0 0.2328 1 2.0408 1 1.1279 1 0.0 0 0.0 0 0.0 0 0.2364 1)
Average genome size in population (length): 156.207
Average program size in population (points): 157.207
Average percent parens in population: 0.006
Minimum age in population: 141.6284535707495
Maximum age in population: 146.2657397203094
Average age in population: 144.3728144209617
Median age in population: 144.3898192240778
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.447
Error (vector) diversity:			 0.708
Behavioral diversity:				 0.709
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 232923640
--- Timings ---
Current time: 1529615321346 milliseconds
Total Time:         495.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.3 seconds, 32.3%
Fitness Testing:    263.0 seconds, 53.0%
Report:              72.5 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 57763.4707
Test mean error for best: 28.88174
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 2.2182085795  
Correct output: 44.8179022307  | Program output: 41.8179022307 
Correct output: 95.8032792622  | Program output: 97.8032792622 
Correct output: 8.0949473456   | Program output: 13.0949473456 
Correct output: -64.1503753092 | Program output: -28.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -37.4699592842
Correct output: 62.8135887966  | Program output: 40.8135887966 
Correct output: 96.6123363982  | Program output: 96.6123363982 
Correct output: 46.7196465918  | Program output: 41.7196465918 
Correct output: -59.2785304711 | Program output: -46.2785304711
Correct output: -6.9174150193  | Program output: -14.9174150193
Correct output: -68.4374020443 | Program output: -73.4374020443
Correct output: -11.1169636129 | Program output: -55.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -53.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -130.5033370034
Correct output: 26.2328206209  | Program output: 13.2328206209 
Correct output: -129.5990711743 | Program output: -100.5990711743
Correct output: -17.8249368738 | Program output: -50.8249368738
Correct output: -16.8176198654 | Program output: -31.8176198654
Correct output: 5.5639147954   | Program output: -18.4360852046
Correct output: 15.7960197363  | Program output: 14.7960197363 
Correct output: -15.2347943829 | Program output: -1.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dec integer_max float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap float_frominteger float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove integer_inc)
Errors: [12.0 2 3.0 1 2.0 1 5.0 2 36.0 2 2.0 1 3.0 1 22.0 2 0.0 0 5.0 1 13.0 2 8.0 2 5.0 2 44.0 2 2.0 1 27.0 2 0.0 0 6.0 2 13.0 2 29.0 2 33.0 2 15.0 2 24.0 12 1.0 1 14.0 1]
Total: 372.0
Mean: 7.44
Genome size: 176
Size: 177
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5815.3477442
Median total errors in population: 427.0
Error averages by case: (244.22840390000013 5.527 254.70148639999994 4.954 190.47981149999998 3.612 252.70846739999988 5.182 241.16657010000003 5.617 169.94719099999995 4.046 205.79489610000005 3.834 264.08576989999983 5.463 193.47799650000002 3.71 183.0432221 4.104 219.5484720999999 5.472 234.11760599999988 5.329 249.76393839999986 5.152 237.39648110000002 4.635 214.53324560000013 4.03 224.06568130000002 4.457 230.40409310000004 4.391 260.3142621 5.294 156.7900563 4.508 279.3220693999999 6.328 224.29723219999997 5.467 213.1071026 5.549 235.3609796 11.523 250.19919870000004 4.995 252.27051079999993 11.044)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 4.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 0.3599 1 0.0 0 8.3004 1 0.0 0 0.0 0 0.2328 1 7.5991 1 0.0 0 0.0 0 0.4361 1 0.0 0 1.0 1)
Average genome size in population (length): 157.315
Average program size in population (points): 158.315
Average percent parens in population: 0.006
Minimum age in population: 143.5494690804693
Maximum age in population: 147.4618080192013
Average age in population: 145.7187764223643
Median age in population: 145.7416325804309
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.433
Error (vector) diversity:			 0.722
Behavioral diversity:				 0.723
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 236859140
--- Timings ---
Current time: 1529615328151 milliseconds
Total Time:         502.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       161.9 seconds, 32.2%
Fitness Testing:    267.2 seconds, 53.1%
Report:              73.5 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 57763.4707
Test mean error for best: 28.88174
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 2.2182085795  
Correct output: 44.8179022307  | Program output: 41.8179022307 
Correct output: 95.8032792622  | Program output: 97.8032792622 
Correct output: 8.0949473456   | Program output: 13.0949473456 
Correct output: -64.1503753092 | Program output: -28.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -37.4699592842
Correct output: 62.8135887966  | Program output: 40.8135887966 
Correct output: 96.6123363982  | Program output: 96.6123363982 
Correct output: 46.7196465918  | Program output: 41.7196465918 
Correct output: -59.2785304711 | Program output: -46.2785304711
Correct output: -6.9174150193  | Program output: -14.9174150193
Correct output: -68.4374020443 | Program output: -73.4374020443
Correct output: -11.1169636129 | Program output: -55.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -53.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -130.5033370034
Correct output: 26.2328206209  | Program output: 13.2328206209 
Correct output: -129.5990711743 | Program output: -100.5990711743
Correct output: -17.8249368738 | Program output: -50.8249368738
Correct output: -16.8176198654 | Program output: -31.8176198654
Correct output: 5.5639147954   | Program output: -18.4360852046
Correct output: 15.7960197363  | Program output: 14.7960197363 
Correct output: -15.2347943829 | Program output: -1.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 float_dup_items print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dec integer_max float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap float_frominteger float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove integer_inc)
Errors: [12.0 2 3.0 1 2.0 1 5.0 2 36.0 2 2.0 1 3.0 1 22.0 2 0.0 0 5.0 1 13.0 2 8.0 2 5.0 2 44.0 2 2.0 1 27.0 2 0.0 0 6.0 2 13.0 2 29.0 2 33.0 2 15.0 2 24.0 12 1.0 1 14.0 1]
Total: 372.0
Mean: 7.44
Genome size: 176
Size: 177
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5213.798730600001
Median total errors in population: 424.0
Error averages by case: (220.6813706000001 5.299 225.2644276999998 4.6 163.34373819999996 3.382 224.0498215999999 4.839 216.97523079999993 5.32 160.54904699999997 4.073 186.11695590000005 3.678 234.15007259999985 5.12 163.22591679999988 3.455 156.29566399999993 3.897 189.62603230000008 5.101 210.55548179999988 5.022 223.41360119999968 4.751 210.03248979999998 4.252 197.04001230000006 3.992 196.58466610000005 4.06 234.40019010000003 4.436 235.76851960000013 4.888 138.996879 4.275 254.26521299999993 5.928 197.47056720000003 5.104 185.61313289999995 5.22 212.12499959999997 11.35 221.08205020000005 4.594 228.63865029999994 10.898)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 5.581 1 0.0 0 0.0 0 0.0 0 0.0 0 1.5607 1 0.1371 1 0.0 0 0.0 0 0.117 1 0.0 0 8.4188 1 0.0 0 0.0 0 0.7672 1 0.3134 2 0.1751 1 0.0 0 0.0 0 0.0 0 0.0049 1)
Average genome size in population (length): 158.851
Average program size in population (points): 159.851
Average percent parens in population: 0.006
Minimum age in population: 144.8196572408623
Maximum age in population: 148.8477189038219
Average age in population: 147.0867866386621
Median age in population: 147.1096163127654
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.439
Error (vector) diversity:			 0.729
Behavioral diversity:				 0.731
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 240833065
--- Timings ---
Current time: 1529615334880 milliseconds
Total Time:         509.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.4 seconds, 32.1%
Fitness Testing:    271.2 seconds, 53.3%
Report:              74.5 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 55866.51419999999
Test mean error for best: 27.93326
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 6.2182085795  
Correct output: 44.8179022307  | Program output: 45.8179022307 
Correct output: 95.8032792622  | Program output: 98.8032792622 
Correct output: 8.0949473456   | Program output: 17.0949473456 
Correct output: -64.1503753092 | Program output: -24.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -37.4699592842
Correct output: 62.8135887966  | Program output: 44.8135887966 
Correct output: 96.6123363982  | Program output: 97.6123363982 
Correct output: 46.7196465918  | Program output: 42.7196465918 
Correct output: -59.2785304711 | Program output: -42.2785304711
Correct output: -6.9174150193  | Program output: -10.9174150193
Correct output: -68.4374020443 | Program output: -69.4374020443
Correct output: -11.1169636129 | Program output: -54.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -52.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -126.5033370034
Correct output: 26.2328206209  | Program output: 14.2328206209 
Correct output: -129.5990711743 | Program output: -96.5990711743
Correct output: -17.8249368738 | Program output: -46.8249368738
Correct output: -16.8176198654 | Program output: -27.8176198654
Correct output: 5.5639147954   | Program output: -14.4360852046
Correct output: 15.7960197363  | Program output: 18.7960197363 
Correct output: -15.2347943829 | Program output: 2.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_dec} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_pop} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_shove} {:instruction integer_rot} {:instruction float_min} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (integer_flush integer_dec in1 tag_integer_916 float_dup_times integer_swap integer_rot float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items integer_pop float_dup_times integer_dup_items integer_rot float_dec integer_mod float_mult float_dec integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_swap float_dup_times float_dec integer_rot integer_rot integer_dup_items integer_swap integer_rot float_dec integer_rot float_dec integer_mod float_dec float_dec float_dec integer_sub float_dec integer_shove float_dup_times integer_dup_items float_dec float_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_dec float_dec integer_swap integer_rot float_mod integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec float_dec tag_integer_916 integer_swap integer_rot float_mult float_dec tag_integer_1035 float_dec float_inc float_dec tag_integer_916 float_dec float_dec float_dup_items integer_rot float_dec integer_dup_items float_shove integer_rot float_min float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec tag_integer_1035 float_dec integer_shove integer_rot float_dec integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [8.0 2 1.0 1 3.0 1 9.0 2 40.0 1 2.0 1 3.0 1 18.0 2 1.0 1 4.0 1 17.0 2 4.0 2 1.0 1 43.0 2 2.0 1 26.0 2 0.0 0 2.0 1 12.0 2 33.0 3 29.0 2 11.0 2 20.0 12 3.0 1 18.0 13]
Total: 369.0
Mean: 7.38
Genome size: 176
Size: 177
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5632.175019000001
Median total errors in population: 421.5
Error averages by case: (241.6768347000001 5.501 251.0001393999999 4.857 185.5615506 3.653 250.59593909999984 5.093 230.55191289999993 5.529 164.00906649999996 4.118 194.04950100000005 3.833 260.0542666999999 5.314 184.43457860000007 3.74 176.10772520000003 4.237 202.19731480000007 5.353 230.30008269999982 5.189 245.51068469999984 4.964 225.8201359 4.552 200.93705890000007 3.992 212.9086343000001 4.307 223.71135900000004 4.133 260.19694320000013 5.161 149.83451450000004 4.559 278.49377979999974 6.178 207.08099440000007 5.352 197.98032719999995 5.447 229.45473769999992 11.467 247.42574640000012 4.854 249.81019079999987 11.088)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.3008 1 0.0 0 0.0 0 0.8835 1 0.0 0 2.0 1 1.0 1 0.0 0 0.0 0 2.883 1 0.0 0 0.7503 1 0.0 0 0.0 0 1.7672 1 12.5991 1 0.0 0 0.0 0 0.0 1 0.0 0 0.0 0)
Average genome size in population (length): 159.379
Average program size in population (points): 160.379
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 150.2733435081388
Average age in population: 148.2748145325087
Median age in population: 148.4404275217077
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.439
Error (vector) diversity:			 0.687
Behavioral diversity:				 0.69
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 244820195
--- Timings ---
Current time: 1529615341417 milliseconds
Total Time:         516.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.2 seconds, 32.0%
Fitness Testing:    275.0 seconds, 53.3%
Report:              75.7 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 64317.0572
Test mean error for best: 32.15853
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 97.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -37.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 96.6123363982 
Correct output: 46.7196465918  | Program output: 41.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -55.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -53.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 13.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction tag_integer_410} {:instruction float_inc} {:instruction float_yank} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 float_dup_items print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_yankdup float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_961 float_dup_times integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_frominteger float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_min float_dec float_mult float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_dec tag_integer_1035 float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap tag_integer_410 float_inc float_yank float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [11.0 2 2.0 1 2.0 1 6.0 2 37.0 2 2.0 1 3.0 1 21.0 2 0.0 0 5.0 1 14.0 2 7.0 2 4.0 2 44.0 2 2.0 1 27.0 2 0.0 0 5.0 1 13.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 366.0
Mean: 7.32
Genome size: 174
Size: 175
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4813.1232981
Median total errors in population: 418.9684
Error averages by case: (198.95002310000015 5.116 207.15514089999974 4.493 158.70157790000002 3.329 206.0036730999999 4.72 198.8421247999998 5.174 143.4801791 3.639 172.35355980000006 3.526 216.30905809999982 4.976 158.69929999999997 3.372 149.13964679999998 3.798 170.56722510000003 4.993 194.80971619999985 4.94 207.34707889999976 4.564 200.89112889999993 4.234 181.64057230000006 3.693 187.04016409999994 3.93 211.5404718000001 4.026 221.08662160000011 4.681 116.28399640000006 4.09 239.55813959999995 5.76 177.55261220000006 4.964 165.1360059999999 5.024 194.9811725000001 11.468 203.4306740000001 4.459 207.8004348999999 10.854)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.1087 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.2785 1 0.0 0 0.0 0 1.071 1 0.0 0 0.225 1 0.0 0 0.0 0 0.7672 1 8.3369 1 0.0 0 0.0 0 0.5639 1 0.0 0 1.2348 1)
Average genome size in population (length): 160.339
Average program size in population (points): 161.339
Average percent parens in population: 0.006
Minimum age in population: 147.4989200303186
Maximum age in population: 151.6962236519667
Average age in population: 149.6707549800929
Median age in population: 149.6921109162539
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.455
Error (vector) diversity:			 0.716
Behavioral diversity:				 0.719
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 248831055
--- Timings ---
Current time: 1529615348284 milliseconds
Total Time:         522.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.0 seconds, 31.9%
Fitness Testing:    279.0 seconds, 53.4%
Report:              76.8 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 43366.300100000015
Test mean error for best: 21.68315
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 96.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 95.6123363982 
Correct output: 46.7196465918  | Program output: 40.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -56.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -54.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 12.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_shove} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_mod} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_yank in1 tag_integer_916 integer_rot integer_mod float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot float_dec integer_dup_items integer_rot float_dec integer_mod float_mult float_dec integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec float_sub float_dec float_dec integer_rot float_dec tag_integer_916 float_dec integer_swap float_dec float_frominteger integer_swap tag_integer_961 float_dup_times tag_integer_1035 integer_pop float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec float_dec float_dec float_dec integer_sub float_dup_times integer_dup_items float_dec float_dup_times float_shove float_dec float_div float_dec float_shove print_integer float_dec print_integer float_dec float_dec integer_swap integer_rot float_mod integer_rot float_mod float_mod float_dup_times integer_swap integer_dup_times float_dec integer_inc float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 1.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 1.0 1 6.0 1 18.0 2 3.0 1 0.0 0 45.0 2 0.0 0 28.0 2 2.0 2 1.0 1 14.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 367.0
Mean: 7.34
Genome size: 165
Size: 166
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5399.328511000003
Median total errors in population: 430.0
Error averages by case: (232.87630080000017 5.43 242.50032109999984 4.915 170.28442180000005 3.662 241.10022779999989 5.06 217.91625109999995 5.454 156.45994819999999 4.107 190.24237289999996 3.916 250.84620169999982 5.362 168.90319710000006 3.673 159.33322159999992 4.195 189.57799170000015 5.329 218.58275539999985 5.052 240.4872277999999 4.935 214.56047799999996 4.514 199.30163150000013 4.12 201.3111428000001 4.302 228.30802530000003 4.343 255.46267330000015 5.131 138.94342799999998 4.51 272.8116689 6.148 195.9376963 5.339 184.81654859999995 5.364 216.95900029999993 11.434 239.2825468 4.853 240.34023219999992 11.035)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.0682 1 0.0 0 0.0 0 1.0 1 0.0 0 0.2804 1 0.0 0 0.0 0 0.0 0 3.1267 1 0.0 0 2.5307 1 0.0 0 0.0 0 0.2328 1 9.5991 1 0.72 1 0.0 0 0.0 0 0.0 0 1.0 1)
Average genome size in population (length): 161.004
Average program size in population (points): 162.004
Average percent parens in population: 0.006
Minimum age in population: 148.4989200303186
Maximum age in population: 153.0432162357559
Average age in population: 151.025437782961
Median age in population: 151.0233469231668
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.459
Error (vector) diversity:			 0.705
Behavioral diversity:				 0.709
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 252859180
--- Timings ---
Current time: 1529615355028 milliseconds
Total Time:         529.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       168.5 seconds, 31.8%
Fitness Testing:    283.0 seconds, 53.5%
Report:              77.7 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 57791.4707
Test mean error for best: 28.89574
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 97.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 25.1310761693 
Correct output: -34.4699592842 | Program output: -37.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 96.6123363982 
Correct output: 46.7196465918  | Program output: 41.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -55.1169636129
Correct output: -76.8272599297 | Program output: -78.8272599297
Correct output: -26.5306664135 | Program output: -53.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 13.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction integer_div} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_max} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (print_integer float_dup_times integer_max integer_div integer_mult in1 float_dup_items print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult integer_div float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot integer_max integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec float_mult float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_dec integer_max float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap float_frominteger float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 2.0 1 6.0 2 37.0 2 2.0 1 3.0 1 21.0 2 0.0 0 5.0 1 14.0 2 7.0 2 4.0 2 44.0 2 2.0 1 27.0 2 0.0 0 5.0 1 13.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 366.0
Mean: 7.32
Genome size: 176
Size: 177
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5834.191896500001
Median total errors in population: 418.0
Error averages by case: (242.35178370000017 5.378 253.4243466999998 4.86 183.75076080000002 3.458 254.09484519999992 5.063 241.4530319 5.504 184.94298740000002 3.9 212.2250622 3.848 262.2110157999999 5.368 184.48329470000002 3.572 179.36833739999997 4.01 220.2099599000001 5.395 237.25265149999984 5.239 255.95860959999987 5.023 227.62286239999997 4.406 221.23424510000007 4.021 214.53945550000003 4.221 239.35974670000004 4.333 266.6371722000002 5.177 152.82763020000004 4.366 285.5891333999998 6.181 226.8965376000001 5.377 211.3791195 5.397 240.28189400000005 11.495 252.05362620000014 4.839 252.56078689999993 11.052)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.3299 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 3.1395 1 0.0 0 2.7413 1 0.0 0 0.0 0 0.2435 1 12.5991 1 0.4325 1 0.0 0 0.4361 1 0.0 0 0.4803 1)
Average genome size in population (length): 162.494
Average program size in population (points): 163.494
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 154.3081213151244
Average age in population: 152.2139604993467
Median age in population: 152.3958689666162
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.419
Error (vector) diversity:			 0.679
Behavioral diversity:				 0.682
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 256924415
--- Timings ---
Current time: 1529615361554 milliseconds
Total Time:         536.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.2 seconds, 31.7%
Fitness Testing:    286.8 seconds, 53.5%
Report:              79.0 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 49975.038
Test mean error for best: 24.98752
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 97.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 96.6123363982 
Correct output: 46.7196465918  | Program output: 41.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -55.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -53.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 13.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction float_dup} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_yank} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction tagged_42} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_flush} {:instruction in2} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_mod} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_div} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (integer_div float_dup in1 tag_integer_916 float_dup_times integer_swap integer_yank float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec float_dec float_mult float_dec in2 integer_rot float_dec tagged_42 float_dec float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times integer_mod float_mult float_dec integer_div integer_rot integer_rot integer_sub float_dec float_dec float_dec integer_sub float_dec integer_rot float_dec integer_mod integer_sub float_dec integer_rot integer_flush in2 integer_swap integer_rot integer_dup_items float_dec float_dup_times float_dec float_mult float_dec float_dup_times float_dec float_dec integer_dup_times float_dec float_dec integer_rot float_mod integer_inc float_dup_times integer_swap integer_dup_times float_dec integer_rot float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_mod integer_add float_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_yankdup float_dec float_dec print_integer float_dec float_dec float_dec integer_swap print_integer float_dec integer_shove integer_swap integer_swap integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec float_shove float_div float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 2.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 0.0 0 5.0 1 18.0 2 3.0 1 0.0 0 44.0 2 0.0 0 27.0 2 2.0 2 1.0 1 13.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 362.0
Mean: 7.24
Genome size: 163
Size: 164
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5701.439117999998
Median total errors in population: 436.0
Error averages by case: (238.44230510000014 5.602 247.4450104999998 5.039 182.60021609999995 3.714 245.92260109999987 5.234 232.51872039999986 5.642 191.97970400000003 4.232 212.38297249999997 4.184 256.5087410999998 5.524 183.3575645 3.732 176.33888369999985 4.193 206.6818154 5.518 224.7451197999998 5.276 240.76858439999987 5.142 225.39198669999996 4.682 231.4918266000001 4.362 212.36216090000008 4.504 250.7610631000001 4.79 253.33775780000013 5.278 154.77526740000002 4.51 271.21047409999994 6.361 213.30330410000025 5.474 200.03315900000018 5.594 225.63911750000003 11.503 243.9411663000001 5.022 243.1145958999999 11.273)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 10.1504 1 0.0 0 0.0 0 2.0 1 0.0 0 1.0 1 1.2512 1 0.0 0 0.0 0 1.705 1 0.0 0 0.4693 1 0.0 0 0.0 0 0.7672 1 6.5991 1 0.4551 1 0.0 0 0.4361 1 0.0 0 0.1759 1)
Average genome size in population (length): 164.818
Average program size in population (points): 165.818
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 155.6767128928361
Average age in population: 153.6143160741404
Median age in population: 153.7870921795893
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.466
Error (vector) diversity:			 0.723
Behavioral diversity:				 0.725
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 261047425
--- Timings ---
Current time: 1529615368716 milliseconds
Total Time:         543.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.0 seconds, 31.7%
Fitness Testing:    291.0 seconds, 53.6%
Report:              80.0 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 62247.6881
Test mean error for best: 31.12384
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 100.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_yank} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction integer_swap} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_dec} {:instruction print_integer} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_14} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_yank float_mult float_dec print_integer float_dec float_yank float_dec float_dec float_mult float_dec float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot float_dec integer_dup_items integer_rot float_dec integer_mod float_mult float_dec integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec float_sub float_dec float_dec integer_rot float_dec tag_integer_916 float_dec integer_swap float_dec float_frominteger integer_swap tag_integer_961 float_dup_times tag_integer_1035 integer_pop float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec float_add integer_swap integer_add float_dup_times float_dec print_integer float_add float_dec float_dec integer_swap integer_rot float_dec float_dec float_mult float_dec integer_rot float_dec float_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap tagged_14 float_dec integer_shove float_dec tag_integer_1035 float_dec float_max float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 5.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 358.0
Mean: 7.16
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 6090.9106399
Median total errors in population: 435.0
Error averages by case: (248.9762582000001 5.735 260.5909630999999 5.117 208.48694389999997 4.039 259.8259973999998 5.266 247.40050229999994 5.749 206.12989430000002 4.288 229.25669140000005 4.394 268.9920056999997 5.536 206.46769730000005 3.946 201.13313019999995 4.325 220.36935310000007 5.599 241.89796889999985 5.518 253.32433289999986 5.23 242.6259460999999 4.933 242.96798550000014 4.495 230.25497700000014 4.959 265.44068350000003 5.274 263.7095266000002 5.415 172.6613781000001 4.78 281.2979589999999 6.424 225.6798454000002 5.568 216.17103959999994 5.694 241.83673710000025 11.554 257.4467400000001 5.057 257.82208329999986 11.249)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.2181 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 3.1083 1 0.0 0 5.5307 1 0.0 0 0.0 0 0.7672 1 1.6978 2 0.0 0 0.0 0 0.5796 1 0.0 0 0.1502 1)
Average genome size in population (length): 166.534
Average program size in population (points): 167.534
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 157.0216155301021
Average age in population: 154.8599960752926
Median age in population: 155.185809631103
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.448
Error (vector) diversity:			 0.73
Behavioral diversity:				 0.732
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 265213060
--- Timings ---
Current time: 1529615375525 milliseconds
Total Time:         550.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.7 seconds, 31.6%
Fitness Testing:    295.1 seconds, 53.6%
Report:              81.2 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 62247.6881
Test mean error for best: 31.12384
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 100.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_yank} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction integer_swap} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_dec} {:instruction print_integer} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_14} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_yank float_mult float_dec print_integer float_dec float_yank float_dec float_dec float_mult float_dec float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot float_dec integer_dup_items integer_rot float_dec integer_mod float_mult float_dec integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec float_sub float_dec float_dec integer_rot float_dec tag_integer_916 float_dec integer_swap float_dec float_frominteger integer_swap tag_integer_961 float_dup_times tag_integer_1035 integer_pop float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec float_add integer_swap integer_add float_dup_times float_dec print_integer float_add float_dec float_dec integer_swap integer_rot float_dec float_dec float_mult float_dec integer_rot float_dec float_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap tagged_14 float_dec integer_shove float_dec tag_integer_1035 float_dec float_max float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 5.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 358.0
Mean: 7.16
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5957.968698300004
Median total errors in population: 419.5
Error averages by case: (250.72786490000016 5.656 258.53300129999985 5.007 187.08591040000002 3.828 259.0374295999999 5.218 243.2698785999999 5.758 187.580323 4.014 219.91891720000007 4.253 266.7715024999998 5.52 186.41917879999997 3.685 183.0703342 3.982 219.58831590000014 5.603 241.9820504999998 5.414 257.9864888999997 5.212 232.0255853 4.71 228.25666020000014 4.234 218.77695480000008 4.716 272.3763051000001 5.315 268.6872191000002 5.394 157.6049183 4.534 286.4800774999999 6.451 226.04908080000013 5.546 212.5025742000001 5.668 242.47086349999995 11.454 256.46153590000006 5.028 256.76272779999994 11.343)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 15.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.2785 1 0.0 0 0.0 0 1.7384 1 0.0 0 0.6121 1 0.0 0 0.0 0 0.0363 1 2.5991 1 0.0 0 0.0 0 0.0 0 0.0 0 0.1707 1)
Average genome size in population (length): 167.627
Average program size in population (points): 168.627
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 158.2512834262921
Average age in population: 156.0485894391207
Median age in population: 156.5734659543135
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.447
Error (vector) diversity:			 0.737
Behavioral diversity:				 0.738
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 269405804
--- Timings ---
Current time: 1529615382352 milliseconds
Total Time:         556.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.2 seconds, 31.5%
Fitness Testing:    299.5 seconds, 53.8%
Report:              82.2 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 62247.6881
Test mean error for best: 31.12384
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 100.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_yank} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction integer_swap} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_dec} {:instruction print_integer} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_14} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_yank float_mult float_dec print_integer float_dec float_yank float_dec float_dec float_mult float_dec float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot float_dec integer_dup_items integer_rot float_dec integer_mod float_mult float_dec integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec float_sub float_dec float_dec integer_rot float_dec tag_integer_916 float_dec integer_swap float_dec float_frominteger integer_swap tag_integer_961 float_dup_times tag_integer_1035 integer_pop float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec float_add integer_swap integer_add float_dup_times float_dec print_integer float_add float_dec float_dec integer_swap integer_rot float_dec float_dec float_mult float_dec integer_rot float_dec float_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap tagged_14 float_dec integer_shove float_dec tag_integer_1035 float_dec float_max float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 5.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 358.0
Mean: 7.16
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 6071.7753269
Median total errors in population: 874.6046000000001
Error averages by case: (246.00627820000017 5.688 257.96943269999986 5.036 191.56737380000004 4.078 254.90532189999982 5.186 250.01130799999973 5.77 196.2628098 4.265 235.2884645000001 4.387 266.11505779999976 5.533 189.92299730000005 3.839 181.7574474999999 4.062 228.11760070000008 5.643 243.05835269999974 5.485 260.13205729999993 5.19 240.34670219999995 4.798 253.82384390000016 4.506 228.03476910000003 4.875 288.89250050000004 5.643 272.1197182000003 5.392 151.47699110000005 4.724 288.8161715999999 6.42 234.58533620000034 5.567 219.4410928 5.695 244.19355139999996 11.403 253.10154760000015 5.028 256.44960009999977 11.166)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.97 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.2785 1 0.0 0 0.0 0 6.5895 1 0.0 0 1.7954 1 0.0 0 0.0 0 0.5068 1 3.5991 2 0.2768 1 0.0 0 0.2727 1 0.0 0 0.0 0)
Average genome size in population (length): 168.666
Average program size in population (points): 169.666
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 159.7514019680152
Average age in population: 157.1565063070551
Median age in population: 157.8154230770298
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.493
Error (vector) diversity:			 0.747
Behavioral diversity:				 0.749
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 273624999
--- Timings ---
Current time: 1529615389464 milliseconds
Total Time:         563.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.8 seconds, 31.4%
Fitness Testing:    303.7 seconds, 53.9%
Report:              83.2 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 62612.1559
Test mean error for best: 31.30608
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 100.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_yank} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_dec} {:instruction print_integer} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_14} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot float_yank float_mult float_dec print_integer float_dec float_yank float_dec float_dec float_mult float_dec float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot float_dec integer_dup_items integer_rot float_dec integer_mod float_mult float_dec integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec float_sub float_dec float_dec integer_rot float_dec tag_integer_916 float_dec integer_swap float_dec float_frominteger integer_swap tag_integer_961 float_dup_times tag_integer_1035 integer_pop float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec integer_swap integer_swap integer_add float_dup_times float_dec print_integer float_add float_dec float_dec integer_swap integer_rot float_dec float_dec float_mult float_dec integer_rot float_dec float_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_yank float_dec float_mult float_dec float_dec float_dec float_dec integer_swap tagged_14 float_dec integer_shove float_dec tag_integer_1035 float_dec float_max float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove float_mult float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 5.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 358.0
Mean: 7.16
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5998.101831500003
Median total errors in population: 868.5564
Error averages by case: (245.91623800000022 5.908 253.1398072999997 5.362 195.45379840000004 4.217 252.2470366999998 5.467 252.63520659999975 5.957 191.78627550000002 4.221 233.53209839999997 4.5 261.4458972999996 5.856 192.9279013 3.922 187.69982779999995 4.147 222.14058600000033 5.868 243.44350359999976 5.566 251.57793999999973 5.414 235.5543248999999 4.794 248.93426990000006 4.437 223.3006459000001 4.91 261.8213155000001 5.482 263.25335800000033 5.664 158.58135230000002 4.755 278.70691549999975 6.688 228.5601773000004 5.821 223.58835859999982 5.865 245.99317400000004 11.584 249.60009520000006 5.262 253.4137274999997 11.181)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 11.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.7215 1 0.0 0 0.0 0 0.1087 1 0.0 0 2.2477 1 0.0 0 0.0 0 0.7672 1 0.4009 1 0.0041 1 0.0 0 0.0959 1 0.0 0 0.5491 1)
Average genome size in population (length): 170.099
Average program size in population (points): 171.099
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 161.0013798293762
Average age in population: 158.9307620945467
Median age in population: 159.1325890724782
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.478
Error (vector) diversity:			 0.728
Behavioral diversity:				 0.729
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 277880109
--- Timings ---
Current time: 1529615396206 milliseconds
Total Time:         570.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.5 seconds, 31.3%
Fitness Testing:    307.7 seconds, 53.9%
Report:              84.4 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 58166.33900000001
Test mean error for best: 29.08317
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 100.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_dec} {:instruction in1} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_mult} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction integer_yank} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_shove} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (integer_div integer_dec in1 integer_div float_dup_times integer_swap integer_rot float_mult float_mult float_mult float_dec print_integer float_dec float_yank float_dec float_dec float_mult float_dec float_dec float_mult integer_yank in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_961 float_dup_times integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_frominteger float_shove integer_add float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_min float_dec float_mult integer_min float_dec float_mult float_dec tag_integer_1035 float_dec float_dup_items integer_rot float_dec float_dup_times float_dec float_add float_dec float_shove float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec integer_yank tag_integer_1035 float_dec float_dec tag_integer_1035 float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 5.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 358.0
Mean: 7.16
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5305.873487900002
Median total errors in population: 440.4579
Error averages by case: (199.51945030000016 5.405 212.94329889999977 4.881 180.57350329999994 4.132 211.3663919999998 5.013 218.14783729999976 5.507 190.77413849999996 4.163 215.33992420000004 4.267 220.66049209999974 5.374 179.63046940000004 3.866 171.73317329999998 4.043 194.56941030000007 5.422 202.38071059999993 5.188 212.73669329999984 4.917 222.51681029999995 4.715 234.12654740000013 4.284 209.8825041000002 4.77 262.6987105000003 5.575 226.02779770000018 5.117 150.2784447 4.663 241.7947604999999 6.211 200.35033850000025 5.404 187.0520740999999 5.367 205.91189650000004 11.473 208.3125876000001 4.806 210.82752249999993 11.155)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 7.8496 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.2785 1 0.0 0 0.0 0 8.6463 1 0.0 0 16.4693 1 0.0 0 0.0 0 0.7672 1 3.5991 2 0.0681 1 0.0 0 0.1621 1 0.0 0 0.1505 1)
Average genome size in population (length): 170.39
Average program size in population (points): 171.39
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 162.1734879281609
Average age in population: 159.9747941591487
Median age in population: 160.3175730734699
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.478
Error (vector) diversity:			 0.737
Behavioral diversity:				 0.738
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 282142934
--- Timings ---
Current time: 1529615403502 milliseconds
Total Time:         577.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.3 seconds, 31.2%
Fitness Testing:    312.0 seconds, 54.0%
Report:              85.5 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 58166.33900000001
Test mean error for best: 29.08317
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 100.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_dec} {:instruction in1} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_mult} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction integer_yank} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_shove} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (integer_div integer_dec in1 integer_div float_dup_times integer_swap integer_rot float_mult float_mult float_mult float_dec print_integer float_dec float_yank float_dec float_dec float_mult float_dec float_dec float_mult integer_yank in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_961 float_dup_times integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_frominteger float_shove integer_add float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_min float_dec float_mult integer_min float_dec float_mult float_dec tag_integer_1035 float_dec float_dup_items integer_rot float_dec float_dup_times float_dec float_add float_dec float_shove float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec integer_yank tag_integer_1035 float_dec float_dec tag_integer_1035 float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 5.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 358.0
Mean: 7.16
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5703.188048600001
Median total errors in population: 771.713
Error averages by case: (221.05239480000026 5.5 229.21259859999967 5.007 199.5517204 4.211 227.06140599999983 5.094 237.34683729999986 5.624 192.8784272 4.038 222.71256320000003 4.35 236.74567049999968 5.434 198.4956185 4.013 191.2115622 4.22 212.42099160000012 5.529 224.33643369999987 5.32 231.49289019999978 4.988 237.98358339999993 4.876 232.5704071000001 4.158 224.90269410000013 4.974 270.7388866 5.526 241.88902770000033 5.19 167.6578046 4.754 257.5651255999997 6.285 217.90928420000034 5.424 205.95047789999998 5.513 227.7170552000001 11.44 223.4406699000001 4.848 232.76491809999982 11.263)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 16.1504 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.7668 1 0.0 0 0.2983 1 0.0 0 0.0 0 4.7672 1 4.5991 1 0.5393 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 171.227
Average program size in population (points): 172.227
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 163.5509363812222
Average age in population: 160.6094819776842
Median age in population: 161.6037970984487
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.473
Error (vector) diversity:			 0.717
Behavioral diversity:				 0.718
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 286426744
--- Timings ---
Current time: 1529615410402 milliseconds
Total Time:         585.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.9 seconds, 31.1%
Fitness Testing:    316.3 seconds, 54.1%
Report:              86.7 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 58166.33900000001
Test mean error for best: 29.08317
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 100.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_dec} {:instruction in1} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_mult} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction integer_yank} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_shove} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (integer_div integer_dec in1 integer_div float_dup_times integer_swap integer_rot float_mult float_mult float_mult float_dec print_integer float_dec float_yank float_dec float_dec float_mult float_dec float_dec float_mult integer_yank in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_961 float_dup_times integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_frominteger float_shove integer_add float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_min float_dec float_mult integer_min float_dec float_mult float_dec tag_integer_1035 float_dec float_dup_items integer_rot float_dec float_dup_times float_dec float_add float_dec float_shove float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec integer_yank tag_integer_1035 float_dec float_dec tag_integer_1035 float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 5.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 358.0
Mean: 7.16
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5712.4075803000005
Median total errors in population: 598.7329500000001
Error averages by case: (222.84169720000008 5.287 231.38065879999994 4.766 193.47200249999992 4.147 231.09493219999987 4.928 237.17286119999994 5.49 202.4964626999999 4.231 225.83889120000006 4.411 239.8964803999999 5.27 192.76630410000004 3.957 183.98871990000004 4.118 216.72087219999995 5.382 219.03293989999995 5.173 232.66701389999992 4.842 230.27554169999993 4.755 242.90302740000007 4.334 217.26075820000008 4.843 278.2701125000001 5.65 242.26739880000008 5.054 163.26396689999999 4.769 260.90173629999987 6.16 222.3711698000002 5.329 209.01704839999985 5.416 222.93427500000004 11.408 228.0673515000001 4.76 229.57635759999997 11.449)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 15.1504 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 4.2924 1 0.0 0 3.7335 1 0.0 0 0.0 0 0.7672 1 0.4009 1 0.1751 1 0.0 0 0.1252 1 0.0 0 0.0278 1)
Average genome size in population (length): 170.602
Average program size in population (points): 171.602
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 164.7475115210107
Average age in population: 161.5300378188455
Median age in population: 162.8737718628156
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.466
Error (vector) diversity:			 0.709
Behavioral diversity:				 0.711
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 290695079
--- Timings ---
Current time: 1529615417058 milliseconds
Total Time:         591.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.4 seconds, 31.0%
Fitness Testing:    320.4 seconds, 54.2%
Report:              87.7 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 58166.33900000001
Test mean error for best: 29.08317
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 100.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction integer_dec} {:instruction in1} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mult} {:instruction float_mult} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction integer_yank} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_shove} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction integer_min} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (integer_div integer_dec in1 integer_div float_dup_times integer_swap integer_rot float_mult float_mult float_mult float_dec print_integer float_dec float_yank float_dec float_dec float_mult float_dec float_dec float_mult integer_yank in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_961 float_dup_times integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_frominteger float_shove integer_add float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_min float_dec float_mult integer_min float_dec float_mult float_dec tag_integer_1035 float_dec float_dup_items integer_rot float_dec float_dup_times float_dec float_add float_dec float_shove float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec integer_yank tag_integer_1035 float_dec float_dec tag_integer_1035 float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 5.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 358.0
Mean: 7.16
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5978.7073893000015
Median total errors in population: 764.77895
Error averages by case: (234.67089470000022 5.613 246.76917879999982 5.023 195.45958179999997 4.311 244.64009629999984 5.213 253.98434209999988 5.708 197.81940950000003 4.216 237.6125135000001 4.604 255.14871659999974 5.546 191.61742889999996 4.085 185.79060449999994 4.229 230.25552690000012 5.605 239.35552959999976 5.41 247.81177979999978 5.091 231.57717799999995 4.86 245.35175350000014 4.353 218.95836720000014 4.955 284.9460098000001 5.724 258.6426350000002 5.305 172.23162610000006 4.853 276.1856098999999 6.381 235.96460740000023 5.544 224.73164159999982 5.609 244.39677420000018 11.54 241.07132150000015 4.974 243.61526209999988 11.347)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.1504 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 6.1088 1 0.0 0 0.0352 1 0.0 0 0.0 0 0.7672 1 5.5991 2 0.7824 1 0.0 0 0.4184 1 0.0 0 0.0 0)
Average genome size in population (length): 171.211
Average program size in population (points): 172.211
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 165.8924260858407
Average age in population: 162.0557362084924
Median age in population: 164.1437827432983
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.482
Error (vector) diversity:			 0.676
Behavioral diversity:				 0.678
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 294979439
--- Timings ---
Current time: 1529615423859 milliseconds
Total Time:         598.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.1 seconds, 30.9%
Fitness Testing:    324.6 seconds, 54.2%
Report:              88.7 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 58173.91529999999
Test mean error for best: 29.08696
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 100.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_max} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction tagged_793} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction integer_swap} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_dec} {:instruction print_integer} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_14} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float})
Best program: (print_integer float_dup_times integer_max integer_div integer_max in1 float_dup_items print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_yank float_dec float_dec float_mult float_dec float_dec float_mult float_dec in2 integer_rot float_dec float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot float_dec integer_dup_items integer_rot float_dec integer_mod float_mult float_dec integer_div integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec float_sub float_dec float_dec integer_rot float_dec tag_integer_916 float_dec integer_swap float_dec float_frominteger integer_swap tagged_793 float_dup_times tag_integer_1035 integer_pop float_shove integer_swap integer_rot float_dec tag_integer_916 float_dec float_add integer_swap integer_add float_dup_times float_dec print_integer float_add float_dec float_dec integer_swap float_div float_dec float_dec float_mult float_dec integer_rot float_dec float_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap tagged_14 float_dec integer_shove float_dec tag_integer_1035 float_dec float_max float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float)
Errors: [7.0 2 2.0 1 5.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 358.0
Mean: 7.16
Genome size: 164
Size: 165
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5647.958574199999
Median total errors in population: 777.0246
Error averages by case: (229.65847450000018 5.576 235.9433000999998 4.964 179.63476429999997 4.236 234.9031188999998 5.088 238.38012039999958 5.65 187.31550690000003 3.979 221.28006750000006 4.409 245.06602429999975 5.464 177.4280023 4.016 171.09299679999998 4.067 218.43785010000028 5.524 222.9588551999997 5.311 235.93789659999973 5.094 218.09114249999988 4.771 226.6999176000002 4.143 205.45255830000016 4.862 266.9640756000002 5.666 246.0316743000003 5.275 156.44321260000007 4.767 262.2202279999998 6.368 223.18875170000038 5.481 209.9878005999999 5.544 227.4630059 11.463 232.68457670000006 4.882 236.9686524999998 11.126)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.2226 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 2.1171 1 0.0 0 2.1106 1 0.0 0 0.0 0 0.6985 1 5.5991 1 0.1751 1 0.0 0 0.0 0 0.0 0 1.0 1)
Average genome size in population (length): 173.017
Average program size in population (points): 174.017
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 167.5469164527054
Average age in population: 164.8146584304928
Median age in population: 165.3237772989706
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.466
Error (vector) diversity:			 0.669
Behavioral diversity:				 0.675
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 299309464
--- Timings ---
Current time: 1529615430588 milliseconds
Total Time:         605.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.7 seconds, 30.8%
Fitness Testing:    328.8 seconds, 54.3%
Report:              89.6 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 51325.824400000005
Test mean error for best: 25.66291
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_mult} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_pop} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times integer_mod float_mult float_dec integer_div float_dec integer_sub float_dup_times integer_pop float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec integer_dup_times float_dec float_dec integer_dup_times integer_mod float_dec float_swap integer_swap float_dup_times float_dec integer_rot float_dec float_sub float_dec float_dec integer_rot float_dec tag_integer_916 integer_swap integer_rot float_mod integer_rot integer_min float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer print_integer float_dec float_dec integer_pop integer_swap float_dec float_dec float_dec float_dec integer_yankdup integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5758.2131415
Median total errors in population: 827.0201
Error averages by case: (224.22835410000022 5.591 234.09989219999974 4.984 199.7194718 4.419 232.7161617999998 5.135 237.14799179999997 5.6 191.84467750000002 3.864 230.8994968 4.463 242.7103284999998 5.457 196.7689617 4.216 188.0271665999999 4.171 211.34872140000004 5.514 224.97034929999975 5.239 233.67508619999987 5.044 238.73174769999991 4.945 238.09145220000013 4.087 225.91453310000014 5.047 277.5234635 5.557 245.01674890000018 5.284 169.99892170000007 4.85 260.92737669999985 6.314 217.3736975000002 5.467 206.66584499999982 5.5 228.19704890000025 11.563 230.06689930000005 4.901 233.1877472999998 11.149)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 6.9697 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0531 1 0.0 0 3.8405 1 0.0 0 0.0 0 0.7672 1 0.4009 1 0.2768 1 0.0 0 0.0 0 0.0 0 0.2096 1)
Average genome size in population (length): 172.456
Average program size in population (points): 173.456
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 168.6664974220248
Average age in population: 164.8807182460196
Median age in population: 166.5417552191368
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.469
Error (vector) diversity:			 0.664
Behavioral diversity:				 0.669
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 303625434
--- Timings ---
Current time: 1529615437648 milliseconds
Total Time:         612.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       188.3 seconds, 30.8%
Fitness Testing:    333.0 seconds, 54.4%
Report:              90.6 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 47756.7245
Test mean error for best: 23.87836
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_shove} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_sub} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 integer_shove float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub integer_div float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_mult float_inc float_inc float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec float_dec tag_integer_916 float_dec float_add float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_shove integer_sub float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec print_integer float_dec integer_shove float_dec integer_dup_items float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 167
Size: 168
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5721.136448200003
Median total errors in population: 910.26235
Error averages by case: (223.3273007000001 5.666 236.62843869999978 5.177 194.3454844 4.323 234.1748724999997 5.28 239.98312499999963 5.894 188.88146469999995 3.97 222.5763635 4.486 244.62157409999975 5.66 191.64788520000008 4.135 181.3256674 4.022 210.22862950000004 5.755 226.69797099999988 5.559 234.2724110999999 5.229 229.45381939999993 4.777 237.70299700000012 4.172 217.08937260000016 4.904 276.27859160000025 5.697 248.6138579000002 5.474 159.64729450000002 4.688 263.98810079999976 6.546 215.9288172000003 5.645 209.77367849999996 5.761 230.07435730000012 11.37 231.25993140000003 5.046 232.1334421999998 11.245)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 10.2701 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.1644 1 0.0 0 0.0 0 0.7121 1 0.0 0 8.6411 1 0.0 0 0.0 0 0.7672 1 7.5991 1 1.0 1 0.0 0 0.0 0 0.0 0 0.0323 1)
Average genome size in population (length): 173.786
Average program size in population (points): 174.786
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 170.1142876724798
Average age in population: 166.0726637588342
Median age in population: 167.7637255789951
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.488
Error (vector) diversity:			 0.695
Behavioral diversity:				 0.702
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 307974959
--- Timings ---
Current time: 1529615444577 milliseconds
Total Time:         619.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.0 seconds, 30.7%
Fitness Testing:    337.2 seconds, 54.5%
Report:              91.8 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 51709.5081
Test mean error for best: 25.85475
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 104.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction float_stackdepth} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_div} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_div} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 float_dup_items print_integer float_inc float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_mod float_add float_dup_times tagged_554 float_stackdepth float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times float_dec float_swap float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec integer_dup_times integer_flush float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times float_stackdepth integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_rot integer_div float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec integer_dup_items integer_rot float_dec float_dup_times integer_swap integer_rot integer_swap integer_rot float_dec integer_mod integer_dup_times tag_integer_1035 float_dec integer_mult float_dup_times float_dec float_dup_times integer_swap integer_rot float_dec float_dec integer_max float_div float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap float_frominteger float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove)
Errors: [7.0 2 2.0 1 9.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 2.0 2 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 355.0
Mean: 7.1
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5795.040321899999
Median total errors in population: 656.5761500000001
Error averages by case: (224.70031230000015 5.486 233.25677089999976 5.009 201.8624914 4.41 232.24290819999982 5.153 243.42280659999994 5.724 206.71136349999992 3.983 232.3135665 4.534 242.5256502999997 5.492 201.90912890000013 4.253 193.70397889999995 4.139 214.77818470000014 5.532 221.36797589999983 5.43 231.79415099999977 5.114 235.69853989999996 4.837 245.93689860000012 4.216 223.6209343000002 4.945 277.0706655000001 5.741 242.83946820000023 5.271 164.73364819999992 4.786 260.9413453999997 6.323 221.93194000000025 5.512 214.01858580000004 5.632 228.03346590000004 11.45 229.67131390000006 4.916 231.17622709999983 10.89)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.2055 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.3654 1 0.0 0 0.0 0 9.117 1 0.0 0 3.682 1 0.0 0 0.0 0 0.468 1 4.7945 2 0.0 0 0.0 0 0.3406 1 0.0 0 0.1559 1)
Average genome size in population (length): 173.432
Average program size in population (points): 174.432
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 171.1223592556841
Average age in population: 165.9833052550868
Median age in population: 169.0613448128786
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.498
Error (vector) diversity:			 0.71
Behavioral diversity:				 0.714
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 312315619
--- Timings ---
Current time: 1529615451912 milliseconds
Total Time:         626.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       191.7 seconds, 30.6%
Fitness Testing:    341.5 seconds, 54.5%
Report:              92.8 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 51709.5081
Test mean error for best: 25.85475
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 104.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction float_stackdepth} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_div} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_div} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 float_dup_items print_integer float_inc float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_mod float_add float_dup_times tagged_554 float_stackdepth float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times float_dec float_swap float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec integer_dup_times integer_flush float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times float_stackdepth integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_rot integer_div float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec integer_dup_items integer_rot float_dec float_dup_times integer_swap integer_rot integer_swap integer_rot float_dec integer_mod integer_dup_times tag_integer_1035 float_dec integer_mult float_dup_times float_dec float_dup_times integer_swap integer_rot float_dec float_dec integer_max float_div float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap float_frominteger float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove)
Errors: [7.0 2 2.0 1 9.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 2.0 2 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 355.0
Mean: 7.1
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5754.122634600002
Median total errors in population: 449.0
Error averages by case: (220.2468842000001 5.411 228.21228189999988 4.8 207.22099790000001 4.526 225.35073689999982 4.974 229.40571669999994 5.563 216.0348041 4.097 236.07512330000003 4.662 236.6743419999998 5.354 204.23314460000012 4.366 201.40332019999994 4.29 205.95759379999996 5.44 218.54610229999983 5.219 228.21554789999985 4.935 241.36914159999992 5.001 240.31408940000009 4.222 229.08780550000014 5.12 276.1495221 5.649 242.03510230000018 5.141 186.74616500000013 4.948 256.18722479999985 6.171 211.43924980000014 5.347 202.0302736999999 5.506 222.48096110000017 11.467 223.8052849000001 4.733 227.05321859999984 10.906)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.0313 1 0.0 0 0.0 0 0.1864 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.8654 1 0.0 0 0.5561 1 0.0 0 0.0 0 0.7672 1 5.5991 1 0.787 1 0.0 0 0.4282 1 0.0 0 0.0243 1)
Average genome size in population (length): 174.098
Average program size in population (points): 175.098
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 172.5444138564788
Average age in population: 167.6390750729196
Median age in population: 170.385892330697
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.446
Error (vector) diversity:			 0.654
Behavioral diversity:				 0.658
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 316673604
--- Timings ---
Current time: 1529615458945 milliseconds
Total Time:         633.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.4 seconds, 30.5%
Fitness Testing:    345.8 seconds, 54.6%
Report:              94.2 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 51709.5081
Test mean error for best: 25.85475
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 104.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction float_stackdepth} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_div} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_div} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 float_dup_items print_integer float_inc float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_mod float_add float_dup_times tagged_554 float_stackdepth float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times float_dec float_swap float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec integer_dup_times integer_flush float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times float_stackdepth integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_rot integer_div float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec integer_dup_items integer_rot float_dec float_dup_times integer_swap integer_rot integer_swap integer_rot float_dec integer_mod integer_dup_times tag_integer_1035 float_dec integer_mult float_dup_times float_dec float_dup_times integer_swap integer_rot float_dec float_dec integer_max float_div float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap float_frominteger float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove)
Errors: [7.0 2 2.0 1 9.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 2.0 2 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 355.0
Mean: 7.1
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5499.500749200002
Median total errors in population: 481.5
Error averages by case: (214.17402730000006 5.53 223.81367389999977 4.771 186.12696260000004 4.178 222.75004939999985 4.908 230.80880439999993 5.392 185.37984469999995 3.797 206.26615490000006 4.231 232.9052023999997 5.262 185.4535272 4.009 179.14760550000003 3.958 205.88267160000012 5.346 217.87958079999981 5.037 226.00148999999985 4.835 221.45259579999995 4.562 229.5827943000002 3.959 208.40997120000011 4.716 259.6849807000002 5.426 236.8705514000001 5.007 155.4136812 4.567 254.04935759999995 6.082 214.11517300000025 5.279 202.69417640000006 5.299 223.07837479999995 11.594 219.50669960000005 4.615 224.95179849999985 10.741)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 11.4211 1 0.0 0 0.0 0 0.8136 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.8847 1 0.0 0 1.1744 1 0.0 0 0.0 0 2.5983 1 4.5991 1 0.0701 1 0.1824 1 0.2285 1 0.0 0 0.0 0)
Average genome size in population (length): 175.933
Average program size in population (points): 176.933
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 173.6557062093435
Average age in population: 170.8242504140835
Median age in population: 171.7253739686835
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.459
Error (vector) diversity:			 0.663
Behavioral diversity:				 0.666
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 321077814
--- Timings ---
Current time: 1529615466741 milliseconds
Total Time:         640.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       195.1 seconds, 30.4%
Fitness Testing:    350.4 seconds, 54.7%
Report:              95.3 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 51709.5081
Test mean error for best: 25.85475
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 104.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction float_stackdepth} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_div} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_div} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 float_dup_items print_integer float_inc float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_mod float_add float_dup_times tagged_554 float_stackdepth float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times float_dec float_swap float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec integer_dup_times integer_flush float_dec float_dec integer_swap print_integer float_dec integer_shove float_dup_times float_stackdepth integer_rot float_dec integer_rot float_mult float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_rot integer_div float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec integer_dup_items integer_rot float_dec float_dup_times integer_swap integer_rot integer_swap integer_rot float_dec integer_mod integer_dup_times tag_integer_1035 float_dec integer_mult float_dup_times float_dec float_dup_times integer_swap integer_rot float_dec float_dec integer_max float_div float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap float_frominteger float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc print_float integer_shove)
Errors: [7.0 2 2.0 1 9.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 2.0 2 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 355.0
Mean: 7.1
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5872.3173207
Median total errors in population: 759.5501
Error averages by case: (220.94366320000015 5.544 232.21931519999978 4.81 210.4990841999999 4.618 228.42851329999974 4.955 241.37005779999987 5.522 213.00906339999995 4.251 238.85077240000004 4.743 241.23572939999974 5.302 208.7133940000001 4.502 201.42354749999996 4.379 220.17379630000016 5.399 222.73496669999975 5.108 231.9293115999999 4.923 245.27697129999993 5.052 249.67840390000018 4.458 232.80671050000012 5.179 286.6584517 5.954 240.86779780000015 5.129 180.08075379999997 4.945 258.26293899999985 6.176 228.11152720000015 5.378 213.2806714999998 5.434 229.48173680000014 11.502 226.8010607000001 4.732 230.54608149999976 10.938)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 5.007 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 2.7599 1 0.0 0 0.5809 1 0.0 0 0.0 0 0.8504 1 0.5991 1 0.2138 1 0.0 0 0.4072 1 0.0 0 0.3185 1)
Average genome size in population (length): 174.387
Average program size in population (points): 175.387
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 175.1089183855848
Average age in population: 170.2336639046257
Median age in population: 173.0336879185461
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.456
Error (vector) diversity:			 0.668
Behavioral diversity:				 0.675
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 325444179
--- Timings ---
Current time: 1529615474025 milliseconds
Total Time:         648.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.7 seconds, 30.3%
Fitness Testing:    355.0 seconds, 54.7%
Report:              96.7 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 47756.7245
Test mean error for best: 23.87836
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_shove} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_sub} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 integer_shove float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub integer_div float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_mult float_inc float_inc float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec float_dec tag_integer_916 float_dec float_add float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_shove integer_sub float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec print_integer float_dec integer_shove float_dec integer_dup_items float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap integer_inc float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 167
Size: 168
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5344.691989900002
Median total errors in population: 784.37635
Error averages by case: (202.80091520000013 5.324 211.72528429999986 4.777 187.83023599999993 4.405 210.7173546999998 4.978 218.3693576 5.474 190.5246278 4.062 217.59851080000007 4.469 220.28288579999975 5.305 184.68431570000004 4.23 176.3513511999999 4.187 199.09029080000005 5.371 201.92786609999993 5.129 213.73050309999982 4.816 221.9783015999999 4.773 226.90554370000018 4.125 209.91542890000017 4.915 277.1790191000001 5.865 223.07662210000018 5.023 152.83817309999998 4.79 240.7436045 6.162 203.75388310000025 5.312 191.19123789999995 5.386 205.99537790000016 11.494 208.19617340000008 4.703 210.92712549999987 11.283)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 10.2309 1 0.0 0 0.0 0 0.8136 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 3.9993 1 0.0 0 6.1564 1 0.0 0 0.0 0 1.8871 1 3.2309 1 0.1939 1 0.0 0 0.0 0 0.0 0 0.6472 1)
Average genome size in population (length): 174.451
Average program size in population (points): 175.451
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 176.1276961794864
Average age in population: 171.1127864633723
Median age in population: 174.2757718902595
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.479
Error (vector) diversity:			 0.647
Behavioral diversity:				 0.656
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 329811589
--- Timings ---
Current time: 1529615481395 milliseconds
Total Time:         655.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.4 seconds, 30.3%
Fitness Testing:    359.4 seconds, 54.8%
Report:              97.8 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 47756.7245
Test mean error for best: 23.87836
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_shove} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_sub} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 integer_shove float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot integer_sub integer_div float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_mult float_inc float_inc float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec float_dec tag_integer_916 float_dec float_add float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_shove integer_sub float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec print_integer float_dec integer_shove float_dec integer_dup_items float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap integer_inc float_inc integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 167
Size: 168
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5599.803322300001
Median total errors in population: 435.5
Error averages by case: (220.58075130000012 5.343 225.9640156999998 4.689 200.0487908 4.55 226.28696559999977 4.902 223.7210900999998 5.315 205.14701330000005 4.16 221.38069220000006 4.479 234.8665970999997 5.246 197.37586670000002 4.377 183.76831359999986 4.259 193.41018890000026 5.237 217.03483649999984 4.959 222.14259699999974 4.758 234.5859459999998 4.874 245.10873930000014 4.27 221.06604840000008 5.032 270.61235039999997 5.717 235.36810760000037 4.904 168.58162740000006 4.841 252.93015379999983 6.078 200.34722730000036 5.19 192.41338259999986 5.292 218.61647230000025 11.553 223.4757848000001 4.634 228.9597635999999 11.351)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 16.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 3.4323 1 0.0 0 11.9814 1 0.0 0 0.0 0 0.7672 1 4.4009 2 0.3821 1 0.0 0 0.0 0 0.0 0 0.2348 1)
Average genome size in population (length): 173.903
Average program size in population (points): 174.903
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 177.2700145265909
Average age in population: 172.8412979622546
Median age in population: 175.5118241162221
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.443
Error (vector) diversity:			 0.658
Behavioral diversity:				 0.664
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 334163954
--- Timings ---
Current time: 1529615488425 milliseconds
Total Time:         662.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       200.0 seconds, 30.2%
Fitness Testing:    363.7 seconds, 54.9%
Report:              99.0 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 47078.941199999994
Test mean error for best: 23.53947
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_shove} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_max} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction integer_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_add} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 integer_shove float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_max integer_div float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_mult float_inc float_inc float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_swap integer_swap float_dup_times float_max float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_yankdup float_dec tag_integer_960 float_dec float_shove integer_dec float_dec print_integer integer_min float_dec integer_rot float_dec integer_dup_times integer_dup_times float_dec float_dec 65 float_dec tag_integer_916 integer_add float_dec float_shove print_integer float_dec print_integer float_dec integer_dup_times float_dec float_dec integer_rot float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec integer_dup_items float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_mod float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec tag_integer_1035 float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_add float_dec integer_swap integer_rot float_dec integer_rot float_add float_dec tag_integer_1035 float_dec float_mult float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_mult float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc print_float)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5652.8225021
Median total errors in population: 687.68175
Error averages by case: (231.9888778000001 5.584 240.32202429999975 4.954 182.65352510000002 4.34 239.52205319999985 5.101 238.1891416 5.686 185.02954810000003 3.862 209.87348840000007 4.174 248.9769215999998 5.489 179.48217850000006 4.159 169.49745620000002 4.095 216.87910630000002 5.55 225.3661207999999 5.312 235.57868619999974 5.075 216.73557629999993 4.676 227.2411684000001 3.942 204.70753750000011 4.825 263.3997156000001 5.487 248.92892540000025 5.254 149.30559430000005 4.705 265.2439456999998 6.349 221.0480433000002 5.517 209.0797061000001 5.577 230.1875785000001 11.473 236.87071020000013 4.877 239.4718726999999 11.18)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 14.1504 1 0.0 0 0.0 0 0.3395 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 2.2731 1 0.0 0 1.2432 1 0.0 0 0.0 0 0.7672 1 4.5991 1 0.1751 1 0.0 0 0.0909 1 0.0 0 0.7652 1)
Average genome size in population (length): 175.271
Average program size in population (points): 176.271
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 178.7956030099504
Average age in population: 176.1263627421387
Median age in population: 176.8601702045757
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.466
Error (vector) diversity:			 0.667
Behavioral diversity:				 0.671
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 338551614
--- Timings ---
Current time: 1529615495495 milliseconds
Total Time:         670.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.7 seconds, 30.1%
Fitness Testing:    368.0 seconds, 54.9%
Report:             100.2 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 47078.941199999994
Test mean error for best: 23.53947
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_shove} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction float_max} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction integer_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_add} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_mult} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 integer_shove float_mult float_dec float_dec float_mult float_dec print_integer float_dec float_mult float_dec in2 integer_rot float_max integer_div float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_mult float_inc float_inc float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_swap integer_swap float_dup_times float_max float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_yankdup float_dec tag_integer_960 float_dec float_shove integer_dec float_dec print_integer integer_min float_dec integer_rot float_dec integer_dup_times integer_dup_times float_dec float_dec 65 float_dec tag_integer_916 integer_add float_dec float_shove print_integer float_dec print_integer float_dec integer_dup_times float_dec float_dec integer_rot float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec integer_dup_items float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_mod float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec tag_integer_1035 float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_add float_dec integer_swap integer_rot float_dec integer_rot float_add float_dec tag_integer_1035 float_dec float_mult float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_mult float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc print_float)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5627.240150700003
Median total errors in population: 850.48495
Error averages by case: (229.35498900000016 5.522 235.73001019999967 4.961 178.80553830000002 4.126 236.81767979999978 5.107 233.8822875999998 5.543 183.7760323 4.093 221.1473755 4.417 244.1840012999997 5.469 176.28871369999996 3.989 167.15126759999995 3.985 209.19432570000006 5.528 224.21401569999975 5.21 234.10450979999973 4.998 217.52690079999994 4.575 236.10722980000014 4.145 204.60142990000008 4.731 284.7126835000001 5.628 246.32175900000027 5.218 145.92815109999998 4.541 263.02996949999977 6.299 214.41956110000027 5.425 204.01941419999983 5.496 227.65355120000015 11.551 233.33914920000007 4.858 238.30860489999984 11.206)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8348 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.7215 1 0.0 0 0.0 0 3.117 1 0.0 0 1.6345 1 0.0 0 0.0 0 0.7672 1 2.5991 1 0.1677 1 0.0 0 0.1278 1 0.0 0 0.2135 1)
Average genome size in population (length): 175.189
Average program size in population (points): 176.189
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 180.2169698576915
Average age in population: 176.6784368752487
Median age in population: 178.127928921341
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.488
Error (vector) diversity:			 0.682
Behavioral diversity:				 0.686
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 342937569
--- Timings ---
Current time: 1529615503027 milliseconds
Total Time:         677.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       203.4 seconds, 30.0%
Fitness Testing:    372.5 seconds, 55.0%
Report:             101.3 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 57890.3703
Test mean error for best: 28.94519
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_971} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_sub} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items integer_div float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_mult float_inc float_inc float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec float_dec tag_integer_971 float_dec float_add float_dec float_dec float_sub float_dec float_dec integer_swap float_dec float_dec integer_shove integer_sub float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec print_integer float_dec integer_shove float_dec integer_dup_items float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5876.357955599999
Median total errors in population: 611.3206
Error averages by case: (236.11216480000007 5.397 243.46759589999976 4.844 200.96631129999997 4.423 242.91003899999995 4.991 247.40363779999976 5.563 196.2924755 3.929 222.93432480000004 4.432 252.14892789999985 5.349 196.31989370000008 4.252 186.01970520000003 4.24 222.40195150000005 5.442 231.96463899999986 5.142 241.17279869999984 4.928 235.04112239999992 4.879 235.7570890000001 4.081 222.26596700000013 5.023 273.2523194000001 5.597 252.83616780000008 5.16 163.58941890000008 4.807 269.7302016999997 6.226 228.01687570000027 5.391 218.59532089999993 5.464 237.71320350000008 11.545 239.71056020000006 4.744 242.62724399999982 11.259)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 16.1804 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.2785 1 0.0 0 0.0 0 0.7368 1 0.0 0 5.4693 1 0.0 0 0.0 0 1.1085 1 3.5991 1 0.1428 1 0.0 0 0.5639 1 0.0 0 0.8323 1)
Average genome size in population (length): 175.641
Average program size in population (points): 176.641
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 181.4120258078674
Average age in population: 178.4868259115948
Median age in population: 179.4176027331912
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.46
Error (vector) diversity:			 0.654
Behavioral diversity:				 0.655
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 347335785
--- Timings ---
Current time: 1529615510175 milliseconds
Total Time:         684.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.0 seconds, 29.9%
Fitness Testing:    376.8 seconds, 55.0%
Report:             102.6 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 57890.3703
Test mean error for best: 28.94519
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_971} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_sub} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_float} {:instruction in1} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 print_integer float_dec float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items integer_div float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_mult float_inc float_inc float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec float_dec tag_integer_971 float_dec float_add float_dec float_dec float_sub float_dec float_dec integer_swap float_dec float_dec integer_shove integer_sub float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec print_integer float_dec integer_shove float_dec integer_dup_items float_dec float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times float_dec float_mult float_dec float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc float_inc integer_swap print_integer float_inc print_float in1 integer_inc)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 169
Size: 170
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5354.659335000001
Median total errors in population: 772.9971
Error averages by case: (210.0080044000001 5.328 218.81600519999984 4.715 179.3921139 4.263 216.95758439999983 4.924 218.9559739999998 5.386 177.31402670000006 3.832 220.05322460000002 4.402 227.91065069999982 5.231 174.62943850000005 4.014 167.71784719999994 3.975 197.08693230000014 5.349 204.02336779999985 5.053 219.04831389999987 4.856 217.82932919999993 4.647 231.05529930000017 4.034 205.58741340000012 4.802 276.87984910000006 5.641 229.99725080000013 5.024 147.65402620000003 4.598 247.06273829999992 6.159 203.97878690000024 5.272 188.44591419999995 5.329 208.81636790000022 11.505 215.17455200000012 4.603 216.3903241 10.932)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 17.1504 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 4.2391 1 0.0 0 4.5878 1 0.0 0 0.0 0 0.1035 1 0.5991 1 0.0 0 0.0 0 0.3188 1 0.0 0 0.0 0)
Average genome size in population (length): 175.463
Average program size in population (points): 176.463
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 182.9816702829453
Average age in population: 179.8755109815696
Median age in population: 180.7915044965329
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.47
Error (vector) diversity:			 0.647
Behavioral diversity:				 0.654
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 351728917
--- Timings ---
Current time: 1529615517700 milliseconds
Total Time:         692.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.7 seconds, 29.9%
Fitness Testing:    381.4 seconds, 55.1%
Report:             103.9 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 49969.024699999994
Test mean error for best: 24.98451
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_div} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_max} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 float_mult integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items integer_shove tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub integer_rot integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_frominteger float_dec integer_swap integer_rot float_dec integer_shove integer_rot integer_swap integer_rot float_dec integer_yankdup float_dec float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_mult integer_div float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec integer_dup_items integer_dup_items float_dec float_dup_times integer_swap integer_max float_dec float_swap integer_swap float_dec float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer integer_swap print_integer integer_dup_times float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5280.360727600002
Median total errors in population: 459.0
Error averages by case: (214.76109700000018 5.408 223.70702709999972 4.757 170.64216279999994 4.292 224.1388921999997 4.912 219.4893407999998 5.522 177.67379090000003 3.722 192.1376885000001 4.164 232.40176379999966 5.267 170.6785349 4.059 164.11390130000007 3.965 196.82338399999998 5.44 209.63186739999975 5.138 217.0737447999997 4.884 209.94371999999987 4.622 210.95957190000024 3.909 197.61309920000022 4.808 240.59268580000005 5.338 229.36420040000024 5.106 151.40637830000003 4.56 245.82175459999988 6.133 201.83361510000026 5.335 189.51870329999997 5.41 210.52618300000003 11.498 220.85473220000003 4.613 225.03588829999978 10.755)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.8496 1 0.0 0 0.0 0 2.1864 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 3.6776 1 0.0 0 10.2028 1 0.0 0 0.0 0 0.2328 1 4.5991 1 1.9299 1 0.0 0 0.1001 1 0.0 0 0.0 0)
Average genome size in population (length): 175.379
Average program size in population (points): 176.379
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 184.4712694194798
Average age in population: 180.4011210771291
Median age in population: 182.0674988374312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.452
Error (vector) diversity:			 0.65
Behavioral diversity:				 0.652
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 356118117
--- Timings ---
Current time: 1529615524855 milliseconds
Total Time:         699.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.3 seconds, 29.8%
Fitness Testing:    385.6 seconds, 55.2%
Report:             105.0 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 49969.024699999994
Test mean error for best: 24.98451
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_div} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_max} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 float_mult integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items integer_shove tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub integer_rot integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_frominteger float_dec integer_swap integer_rot float_dec integer_shove integer_rot integer_swap integer_rot float_dec integer_yankdup float_dec float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_mult integer_div float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec integer_dup_items integer_dup_items float_dec float_dup_times integer_swap integer_max float_dec float_swap integer_swap float_dec float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer integer_swap print_integer integer_dup_times float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5349.388053000002
Median total errors in population: 626.18795
Error averages by case: (205.2215108000002 5.439 218.45547809999982 4.819 170.43317530000002 4.223 216.54910479999995 4.957 226.42254569999997 5.503 183.95121500000002 3.667 210.63818980000005 4.155 227.01412999999988 5.304 167.83106479999998 3.922 162.48955849999993 3.824 201.5831878000002 5.409 213.4513574999999 5.18 219.07653779999976 4.837 213.8079000999999 4.497 230.5600265000001 3.884 200.8658238000001 4.66 263.7725810000002 5.426 233.29578250000023 5.043 150.1360962000001 4.421 248.34883219999983 6.088 207.58476180000034 5.277 196.5566416 5.377 216.91125740000012 11.496 214.11372150000014 4.671 217.38757249999998 10.851)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 12.3291 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.33 1 0.0 0 0.0 0 3.391 1 0.0 0 0.7017 1 0.0 0 0.0 0 1.7672 1 5.5991 1 0.5948 1 0.0394 1 0.3536 1 0.0 0 0.0 0)
Average genome size in population (length): 175.436
Average program size in population (points): 176.436
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 185.4712694194798
Average age in population: 181.9983642183486
Median age in population: 183.3020017052773
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.474
Error (vector) diversity:			 0.665
Behavioral diversity:				 0.668
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 360509237
--- Timings ---
Current time: 1529615531703 milliseconds
Total Time:         706.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       210.0 seconds, 29.7%
Fitness Testing:    389.7 seconds, 55.2%
Report:             106.4 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 49969.024699999994
Test mean error for best: 24.98451
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_div} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_max} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 float_mult integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items integer_shove tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub integer_rot integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_frominteger float_dec integer_swap integer_rot float_dec integer_shove integer_rot integer_swap integer_rot float_dec integer_yankdup float_dec float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_mult integer_div float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec integer_dup_items integer_dup_items float_dec float_dup_times integer_swap integer_max float_dec float_swap integer_swap float_dec float_inc integer_swap print_integer float_inc float_inc integer_swap integer_dec integer_swap print_integer integer_dup_times float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5710.094908100002
Median total errors in population: 741.2294499999999
Error averages by case: (219.39077810000012 5.498 229.49987029999974 4.869 193.3416804 4.434 228.38858739999986 5.033 239.88822219999983 5.58 195.70110240000005 3.827 226.87061559999998 4.269 238.18659439999968 5.351 190.3208042 4.082 180.88094529999998 3.992 217.57852110000022 5.468 226.12249439999985 5.188 233.63084209999974 5.023 228.4095461999999 4.594 244.28755350000003 3.987 215.38601510000007 4.761 276.7610759000001 5.403 244.71557800000016 5.223 163.55042960000006 4.554 260.89924879999984 6.224 224.06196500000024 5.421 212.97069200000004 5.488 229.5342741999999 11.493 225.6933879 4.79 228.61608399999992 10.856)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.2494 1 0.0 0 0.0 0 2.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 9.117 1 0.0 0 9.9746 1 0.0 0 0.0 0 0.7672 1 8.4009 1 0.28 1 0.0 0 0.4361 1 0.0 0 1.0 1)
Average genome size in population (length): 175.822
Average program size in population (points): 176.822
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 186.7821327915767
Average age in population: 183.2279277363298
Median age in population: 184.5289290413806
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.475
Error (vector) diversity:			 0.696
Behavioral diversity:				 0.699
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 364909442
--- Timings ---
Current time: 1529615538757 milliseconds
Total Time:         713.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       211.7 seconds, 29.7%
Fitness Testing:    394.0 seconds, 55.2%
Report:             107.4 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 44314.27420000001
Test mean error for best: 22.15714
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1084} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_div} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mod} {:instruction integer_dup_items} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 float_mult integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items integer_shove tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_dup float_dec integer_sub integer_rot integer_rot float_dec float_dec float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec float_dec float_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec float_dec integer_sub float_dec float_dec float_dec integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec float_shove float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec integer_yank tag_integer_1035 float_dec float_dec tag_integer_1035 float_dec tag_integer_1035 float_mult float_dec integer_stackdepth float_inc float_mult float_dec float_dec tag_integer_1084 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_div float_shove integer_rot float_dup_times tag_integer_1035 float_mod integer_dup_items float_frominteger float_dec float_dup_times integer_swap float_frominteger float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 179
Size: 180
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5703.552619900001
Median total errors in population: 772.85735
Error averages by case: (220.9478286000002 5.579 226.68692429999976 4.922 202.2433934999999 4.808 225.40913009999983 5.143 229.61035049999984 5.649 204.9682359 3.98 232.92640099999994 4.594 235.45472389999964 5.421 198.90900030000006 4.408 194.88337699999994 4.154 201.6450894000001 5.5 220.6822593999997 5.34 227.4844935999998 5.05 238.1672382999999 4.907 245.21419140000006 4.29 225.4829397000001 5.064 273.27123940000007 5.697 240.95174350000028 5.223 183.40840269999998 4.713 257.1152546999999 6.23 206.66443600000017 5.414 199.43744310000005 5.581 221.96926529999996 11.46 222.9787451000001 4.798 228.44251319999984 10.673)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.7824 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.2785 1 0.0 0 0.0 0 1.1085 1 0.0 0 1.8998 1 0.0 0 0.0 0 0.7672 1 10.0 1 0.0701 1 0.0 0 0.5088 1 0.0 0 0.0 0)
Average genome size in population (length): 176.034
Average program size in population (points): 177.034
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 188.1084804718084
Average age in population: 183.4125719508463
Median age in population: 185.8373594827468
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.481
Error (vector) diversity:			 0.688
Behavioral diversity:				 0.692
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 369314467
--- Timings ---
Current time: 1529615546211 milliseconds
Total Time:         720.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       213.3 seconds, 29.6%
Fitness Testing:    398.6 seconds, 55.3%
Report:             108.5 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 48500.50289999999
Test mean error for best: 24.25025
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_swap} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 float_dup_items print_integer float_inc float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub integer_rot integer_rot integer_rot float_dec integer_max float_dup_times integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush integer_dup_times float_dec integer_swap print_integer float_dec integer_shove float_dup_times float_stackdepth integer_rot float_dec integer_rot integer_yankdup float_dec tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_dec integer_swap float_div float_dec integer_shove float_dec integer_yankdup float_dec float_dec tag_integer_1035 float_dec float_dec tag_integer_1035 integer_swap float_shove float_dec float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_rot float_dec float_mult tag_integer_1035 float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 7.0 3 6.0 2 37.0 2 0.0 0 1.0 1 21.0 2 5.0 3 0.0 0 14.0 2 7.0 2 4.0 2 39.0 2 0.0 0 22.0 2 2.0 2 5.0 1 8.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 356.0
Mean: 7.12
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5677.101603200002
Median total errors in population: 740.62905
Error averages by case: (229.79821190000013 5.714 235.81305949999978 5.061 186.6844819 4.76 234.16517669999988 5.152 232.0762549999997 5.689 198.6486805 4.067 221.92415850000003 4.441 244.29224099999973 5.52 182.95792320000007 4.301 176.74233990000005 4.056 206.58573010000012 5.634 222.09159299999988 5.467 228.48813439999975 5.121 227.72467479999992 4.78 243.95873760000023 4.282 215.5768177000002 4.95 277.1349925000002 5.64 241.7175312000002 5.34 167.70563990000008 4.701 256.16943659999987 6.328 211.53844420000036 5.561 202.09309859999993 5.631 225.79396460000007 11.504 231.98194650000002 4.916 236.15933339999984 10.663)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 4.1125 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.7593 1 0.0 0 0.0 0 7.117 1 0.0 0 4.6338 1 0.0 0 0.0 0 0.7672 1 9.5991 1 0.1925 1 0.0 0 0.5639 1 0.0 0 1.0278 1)
Average genome size in population (length): 176.205
Average program size in population (points): 177.205
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 188.8654124107952
Average age in population: 185.1564730874275
Median age in population: 187.0251283967028
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.451
Error (vector) diversity:			 0.686
Behavioral diversity:				 0.689
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 373723536
--- Timings ---
Current time: 1529615553195 milliseconds
Total Time:         727.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.0 seconds, 29.5%
Fitness Testing:    402.9 seconds, 55.4%
Report:             109.8 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 53275.0563
Test mean error for best: 26.63753
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction tagged_56} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction tag_integer_716} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_930} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap tagged_56 integer_mod float_dec float_dec float_mult in2 integer_rot in2 float_dec integer_swap integer_dup_items float_dec float_sub in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub integer_rot integer_rot integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec integer_dup_times tag_integer_716 float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_yankdup float_dec tag_integer_1035 float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec float_mult float_dec tag_integer_930 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec float_mult float_dec float_dup_times tag_integer_1035 float_mod integer_dup_items integer_rot float_dec float_dup_times integer_swap float_frominteger float_dec float_swap integer_swap integer_shove float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [11.0 2 2.0 1 4.0 1 6.0 2 37.0 2 0.0 0 1.0 1 21.0 2 3.0 1 2.0 1 14.0 2 7.0 2 4.0 2 41.0 2 0.0 0 24.0 2 0.0 0 5.0 1 10.0 1 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 351.0
Mean: 7.02
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5880.396500600001
Median total errors in population: 757.27505
Error averages by case: (237.42514570000014 5.627 243.53859799999987 4.912 197.02298559999997 4.999 242.49314209999983 5.024 242.4656034999998 5.624 207.64777840000002 4.213 231.6286586 4.684 252.41113069999966 5.406 194.26528370000003 4.482 188.88360889999998 4.25 211.28981400000012 5.527 233.34400549999984 5.307 239.2950493999998 5.037 232.37761689999994 4.888 251.41538040000012 4.455 219.44778680000013 5.051 270.7236663 5.669 251.1716759000001 5.262 172.2720950000001 4.71 267.98724039999996 6.231 218.30560310000024 5.433 213.4533382999999 5.517 236.46523170000006 11.491 240.07511040000009 4.803 245.77195129999978 10.617)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 10.7342 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.8951 1 0.0 0 0.0 0 1.883 1 0.0 0 1.2697 1 0.0 0 0.0 0 0.7672 1 10.5991 1 0.0 0 0.0 0 0.3518 1 0.0 0 0.1425 1)
Average genome size in population (length): 176.999
Average program size in population (points): 177.999
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 190.5150564648012
Average age in population: 186.2450775588743
Median age in population: 188.3022386570291
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.458
Error (vector) diversity:			 0.674
Behavioral diversity:				 0.677
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 378153461
--- Timings ---
Current time: 1529615560127 milliseconds
Total Time:         734.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.8 seconds, 29.5%
Fitness Testing:    407.0 seconds, 55.4%
Report:             110.8 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 44811.6061
Test mean error for best: 22.40580
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 104.8032792622
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_max} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec integer_dup float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items integer_yank float_dec integer_rot float_dec integer_max float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec float_max float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec integer_shove integer_min float_dec integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_dec float_dec integer_swap integer_rot float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_yankdup float_dec tag_integer_1035 float_dec float_dec integer_swap integer_rot integer_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec tag_integer_1035 float_dec float_rot float_dec float_dec tag_integer_1035 float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_add float_dec tag_integer_1035 float_dec float_mult float_dec float_dec tag_integer_1035 float_dec integer_dup_items integer_rot float_dec float_dup_times integer_mod integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [11.0 2 2.0 1 9.0 3 6.0 2 37.0 2 0.0 0 1.0 1 21.0 2 7.0 3 2.0 1 14.0 2 7.0 2 4.0 2 37.0 2 0.0 0 20.0 1 2.0 2 5.0 1 6.0 1 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 355.0
Mean: 7.1
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5863.380537700002
Median total errors in population: 879.966
Error averages by case: (231.41054050000008 5.701 241.4378480999997 4.988 204.38498610000002 4.958 236.3681084999999 5.174 233.4949425999999 5.57 205.21207259999994 4.072 229.94768540000004 4.469 250.6773835999998 5.452 200.38084980000005 4.458 185.1999207 4.079 210.90867800000007 5.475 224.10838049999987 5.359 238.64705269999985 5.097 236.05967979999994 4.788 259.5467745000001 4.282 223.49636780000003 5.011 292.5294142000001 5.702 252.12436630000013 5.271 174.99739570000003 4.632 268.8726139 6.277 218.39138930000024 5.423 206.25788870000002 5.508 226.65098430000012 11.606 234.25591909999994 4.925 239.00629499999985 10.736)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 7.3308 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 6.0209 1 0.0 0 8.5307 1 0.0 0 0.0 0 0.5619 1 4.4009 1 0.1751 1 0.0 0 0.74 1 0.0 0 0.0 0)
Average genome size in population (length): 177.259
Average program size in population (points): 178.259
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 191.5887523964742
Average age in population: 187.8617983080482
Median age in population: 189.5836302747701
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.483
Error (vector) diversity:			 0.706
Behavioral diversity:				 0.708
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 382589306
--- Timings ---
Current time: 1529615567287 milliseconds
Total Time:         741.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       218.5 seconds, 29.4%
Fitness Testing:    411.4 seconds, 55.5%
Report:             111.9 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 52957.7346
Test mean error for best: 26.47887
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_div} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_shove} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_add} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction tag_integer_1062} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_rot} {:instruction integer_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 float_mult integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items integer_div tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_dup float_dec integer_sub integer_rot integer_rot float_dec float_dec float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec float_dec float_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec float_dec integer_sub float_dec float_dec float_dec integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec print_integer float_dec float_dec float_dec float_dup_items integer_yankdup integer_swap float_dec float_dec float_dec integer_swap float_dec integer_swap print_integer float_dec float_mult float_dec float_dec float_dec float_stackdepth integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_dec float_dec float_dec integer_mult float_dec float_shove tag_integer_1035 float_dec integer_add float_dup_times integer_swap integer_rot float_dec integer_add float_add float_dec tag_integer_1035 float_dec float_mult float_dec float_dup_times tag_integer_1062 float_mod integer_dup_items integer_rot integer_max float_dup_times integer_swap float_frominteger float_dec float_swap integer_swap print_integer float_rot integer_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 181
Size: 182
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5237.217322900001
Median total errors in population: 461.0
Error averages by case: (213.0618751000001 5.558 216.88112199999978 4.746 171.4855783 4.76 214.49902979999987 4.941 219.64829999999986 5.319 172.3725201 3.666 198.67978160000007 4.219 225.75730439999987 5.221 169.708831 4.334 160.10624590000003 3.98 194.37050960000005 5.249 207.70267829999983 5.115 218.17080279999985 4.856 209.5115794999999 4.672 210.72823700000012 3.927 196.1544143000001 4.88 241.4265236000001 5.301 231.4895464000001 5.042 148.89391000000006 4.506 247.01925159999993 6.079 202.43929720000025 5.268 189.70872619999986 5.246 210.57663070000012 11.503 212.7589741 4.706 220.28865339999984 10.683)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.4404 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 3.2982 1 0.0 0 1.7335 1 0.0 0 0.0 0 0.2765 1 6.6593 2 0.6179 1 0.0 0 0.4237 1 0.0 0 0.0 0)
Average genome size in population (length): 177.803
Average program size in population (points): 178.803
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 192.6854353164511
Average age in population: 189.7427926729964
Median age in population: 190.9521699449944
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.465
Error (vector) diversity:			 0.692
Behavioral diversity:				 0.695
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 387038001
--- Timings ---
Current time: 1529615574530 milliseconds
Total Time:         748.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       220.0 seconds, 29.4%
Fitness Testing:    415.8 seconds, 55.5%
Report:             112.9 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 56059.5239
Test mean error for best: 28.02976
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 102.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 101.6123363982
Correct output: 46.7196465918  | Program output: 46.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -50.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -48.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 18.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_div} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_max} {:instruction print_integer} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_shove} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_add} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction tag_integer_1062} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_rot} {:instruction integer_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 float_mult integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items integer_div tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_dup float_dec integer_sub integer_rot integer_rot float_dec float_dec float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec float_dec float_dup_times float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec float_dec integer_sub float_dec float_dec float_dec integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec print_integer float_dec float_dec float_dec float_dup_items integer_yankdup integer_swap float_dec float_dec float_dec integer_swap float_dec float_max print_integer float_dec float_mult float_dec float_dec float_dec float_stackdepth integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_shove float_dec float_dec float_dec float_dec integer_mult float_dec float_shove tag_integer_1035 float_dec integer_add float_dup_times integer_swap integer_rot float_dec integer_add float_add float_dec tag_integer_1035 float_dec float_mult float_dec float_dup_times tag_integer_1062 float_mod integer_dup_items integer_rot integer_max float_dup_times integer_swap float_frominteger float_dec float_swap integer_swap print_integer float_rot integer_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 7.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 5.0 3 0.0 0 18.0 2 3.0 1 0.0 0 39.0 2 0.0 0 22.0 2 2.0 2 1.0 1 8.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 356.0
Mean: 7.12
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5412.902157000001
Median total errors in population: 430.0
Error averages by case: (223.55453590000013 5.487 230.17294329999976 4.764 179.10307489999994 4.745 228.59373839999995 4.912 220.43333460000005 5.38 179.2723034 3.787 211.82230110000003 4.365 239.8736440999998 5.258 177.15977 4.246 167.27298860000005 3.947 196.54784410000005 5.292 215.36705149999983 5.119 222.7889762999998 4.897 211.21734159999997 4.584 218.28558100000018 3.986 200.12442250000007 4.809 244.32046160000013 5.362 236.1745465000001 5.068 153.71162770000004 4.444 253.3817942 6.087 204.3018422000002 5.213 190.28518150000008 5.344 218.14159119999997 11.506 225.5543516000001 4.64 231.51090919999993 10.688)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 8.1504 1 0.0 0 0.0 0 0.0 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.3677 1 0.0 0 4.4573 1 0.0 0 0.0 0 0.7672 1 3.5991 2 0.0 0 0.0 0 0.4361 1 0.0 0 0.0 0)
Average genome size in population (length): 177.427
Average program size in population (points): 178.427
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 194.4841169368201
Average age in population: 189.9054580985904
Median age in population: 192.2395804440763
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.447
Error (vector) diversity:			 0.694
Behavioral diversity:				 0.696
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 391477046
--- Timings ---
Current time: 1529615581420 milliseconds
Total Time:         756.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       221.6 seconds, 29.3%
Fitness Testing:    420.0 seconds, 55.6%
Report:             114.2 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 54417.17299999999
Test mean error for best: 27.20859
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_min} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction tag_integer_716} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_div} {:instruction float_mult} {:instruction tagged_474} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_stackdepth} {:instruction tag_integer_1035} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_swap} {:instruction integer_mult} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_yankdup integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_min float_add float_dup_times tagged_554 integer_rot float_dec integer_mod float_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec float_dup_items float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min integer_dup_times integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec integer_dup_times tag_integer_716 float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_shove print_integer float_dec float_dec float_dec float_dec float_dec integer_dup_times float_dec float_stackdepth integer_swap float_dec tag_integer_916 integer_dup_times integer_flush float_dec float_dec integer_swap print_integer float_dec integer_rot float_dec float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_shove integer_div float_mult tagged_474 float_dec float_max float_dec tag_integer_1035 float_dec float_rot float_dec float_dec float_mult float_dec float_stackdepth tag_integer_1035 float_mod integer_dup_items integer_rot float_dec float_dup_times integer_swap float_frominteger float_dec float_swap integer_mult print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [11.0 2 2.0 1 4.0 1 6.0 2 37.0 2 0.0 0 1.0 1 21.0 2 3.0 1 2.0 1 14.0 2 7.0 2 4.0 2 41.0 2 0.0 0 24.0 2 0.0 0 5.0 1 10.0 1 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 351.0
Mean: 7.02
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6120.122162400002
Median total errors in population: 907.1622500000001
Error averages by case: (256.09348650000015 5.991 263.91636609999983 5.17 200.77188960000004 5.015 262.2737429999998 5.298 252.4315750999998 5.879 205.1243163 3.985 218.45894880000006 4.315 272.9429285999998 5.629 198.99412260000005 4.647 190.38280639999994 4.3 223.11330740000005 5.664 248.66012839999982 5.542 253.82760289999982 5.252 235.25840239999994 4.803 241.53078650000006 4.157 222.00972340000015 5.05 275.65459330000016 5.617 270.51760110000026 5.467 175.4835806000001 4.794 285.3236493999998 6.443 230.68846660000017 5.581 222.47357850000003 5.762 250.67641910000032 11.529 261.0096948 5.078 260.8114449999998 10.725)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 6.0965 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 4.7974 1 0.0 0 2.4356 1 0.0 0 0.0 0 0.7672 1 0.4009 1 0.0815 1 0.0 0 0.5639 1 0.0 0 0.0 0)
Average genome size in population (length): 177.713
Average program size in population (points): 178.713
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 195.5885848952736
Average age in population: 191.1012782474079
Median age in population: 193.6490843445282
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.49
Error (vector) diversity:			 0.712
Behavioral diversity:				 0.715
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 395923561
--- Timings ---
Current time: 1529615588555 milliseconds
Total Time:         763.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.4 seconds, 29.3%
Fitness Testing:    424.3 seconds, 55.6%
Report:             115.3 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 58501.717099999994
Test mean error for best: 29.25086
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 104.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction integer_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction tag_integer_1012} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_961} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_shove} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction tagged_823} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_shove} {:instruction float_dec} {:instruction float_mult} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_swap} {:instruction float_shove} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 float_dup_items print_integer float_inc integer_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_dup_times integer_dup_items tag_integer_1012 float_dup_times integer_dup_items integer_rot integer_sub float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot integer_shove float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_961 float_dup_times integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_frominteger float_shove integer_add float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap float_dec integer_mult float_dec float_dec float_dec float_dec integer_swap integer_shove float_dec integer_swap integer_rot float_dec integer_shove tagged_823 integer_dup_items float_dec float_dec integer_add float_min float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_yankdup float_dec tag_integer_1035 float_dec integer_dup_times float_mult float_dec tag_integer_1035 float_shove float_dec float_mult integer_swap integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec integer_shove float_dec integer_yankdup float_dec float_dec tag_integer_1035 float_dec float_dec tag_integer_1035 integer_swap float_shove float_min float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec float_shove integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_rot float_dec float_mult tag_integer_1035 print_integer float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 9.0 3 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 2.0 2 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 355.0
Mean: 7.1
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6184.2252278000005
Median total errors in population: 822.7624
Error averages by case: (244.95780950000014 5.893 249.10728429999975 5.013 222.99555470000004 5.299 247.61090809999985 5.144 248.60159369999997 5.661 206.36883730000002 4.205 250.67279660000005 4.874 258.2099763999998 5.46 220.40769310000007 4.86 206.98074159999996 4.374 220.9630273999999 5.428 244.0366210999999 5.388 252.30704009999982 5.105 254.22930909999994 5.089 260.6090596000002 4.529 242.1836656000001 5.269 281.16402450000015 5.774 267.18177830000025 5.377 181.73349580000004 4.872 284.5283675999998 6.312 229.23466710000017 5.434 220.97762669999992 5.554 246.9627912000001 11.54 244.92956230000013 4.984 255.11699609999994 10.716)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.2067 1 0.0 0 0.0 0 2.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 3.8639 1 0.0 0 3.0 1 0.0 0 0.0 0 0.2328 1 10.5991 1 0.0701 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 178.156
Average program size in population (points): 179.156
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 196.8281555223443
Average age in population: 191.7956324355536
Median age in population: 194.9151100360516
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.479
Error (vector) diversity:			 0.723
Behavioral diversity:				 0.726
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 400381466
--- Timings ---
Current time: 1529615595627 milliseconds
Total Time:         770.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.0 seconds, 29.2%
Fitness Testing:    428.7 seconds, 55.7%
Report:             116.3 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 44041.3706
Test mean error for best: 22.02069
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 105.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 104.6123363982
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_yankdup} {:instruction integer_rot} {:instruction tag_integer_413} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1063} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_min} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_yankdup integer_rot tag_integer_413 float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1063 float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec integer_div float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min float_dup_times integer_swap float_dec float_dec integer_swap integer_rot float_dec integer_inc float_dec integer_swap integer_rot float_dec integer_shove float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec integer_yankdup float_dec float_dec tag_integer_1035 float_dec float_dec tag_integer_1035 float_min float_shove float_dec float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec integer_dup_items integer_rot float_dec float_dup_times integer_swap integer_rot float_dec integer_add integer_rot float_dec float_mult tag_integer_1035 float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 10.0 2 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 8.0 3 3.0 1 18.0 2 3.0 1 0.0 0 36.0 2 0.0 0 19.0 2 2.0 2 1.0 1 5.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 355.0
Mean: 7.1
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5945.979481300002
Median total errors in population: 785.1456000000001
Error averages by case: (239.25031470000013 5.6 246.46392459999987 5.0 207.7608605 5.101 246.4282196999999 5.168 242.27024709999986 5.778 201.59796899999992 4.078 223.78972110000007 4.546 254.32841309999986 5.499 206.74050110000005 4.656 195.1819522 4.276 210.97399270000008 5.541 238.39373579999977 5.561 244.85636339999976 5.128 239.45047989999995 4.83 237.47397980000017 4.145 227.19811330000007 5.043 275.3154203000002 5.681 258.4305338000002 5.353 177.3654082000001 4.66 277.3865866999999 6.324 214.4334400000004 5.473 209.03491939999995 5.664 238.75648409999994 11.384 243.7287495 4.95 248.83915129999988 11.091)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.2466 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 5.8366 1 0.0 0 0.3625 1 0.0 0 0.0 0 0.7672 1 3.7534 1 0.1751 1 0.0 0 0.1252 1 0.0 0 1.0 1)
Average genome size in population (length): 176.362
Average program size in population (points): 177.362
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 198.6223282751913
Average age in population: 191.8306512786385
Median age in population: 196.1632263556665
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.47
Error (vector) diversity:			 0.681
Behavioral diversity:				 0.687
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 404794016
--- Timings ---
Current time: 1529615602475 milliseconds
Total Time:         777.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       226.6 seconds, 29.2%
Fitness Testing:    432.9 seconds, 55.7%
Report:             117.4 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 48030.8529
Test mean error for best: 24.01543
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction tagged_57} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_shove} {:instruction float_dec} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction tag_integer_716} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction tagged_633} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1154} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_yank} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mult float_dec float_dec float_mult in2 integer_rot in2 float_dec integer_swap integer_dup_items float_dec float_sub in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_yankdup float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec float_rot integer_rot integer_rot float_dec float_swap integer_swap tagged_57 float_dec integer_rot float_dec float_max float_dec float_dec float_rot float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot float_shove float_dec integer_dup integer_dup_items integer_mult float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec integer_dup_times tag_integer_716 float_dec float_dec 65 float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_dec float_dec float_dup_times float_dec float_add tagged_633 float_shove float_dec float_dec float_rot integer_rot float_dec integer_shove float_dec integer_yank tag_integer_1035 float_dec float_dec tag_integer_1154 float_dec tag_integer_1035 integer_yank tag_integer_1035 float_dec float_mult float_dec tag_integer_1035 float_mult float_dec float_dec float_mod float_dec integer_dup_items integer_rot float_dec float_dup_times integer_mod integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 3.0 1 2.0 1 18.0 2 3.0 1 0.0 0 41.0 2 0.0 0 24.0 2 2.0 2 1.0 1 10.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 355.0
Mean: 7.1
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5755.1665273
Median total errors in population: 449.93755
Error averages by case: (223.33540940000017 5.469 228.0667384999998 4.745 214.7295794 4.993 226.65527219999987 4.895 234.159006 5.46 205.30661630000003 3.97 233.66485910000003 4.419 235.80077419999986 5.222 211.81154440000012 4.614 204.78413319999999 4.152 207.57428560000002 5.332 222.79593289999985 5.128 226.3084372999998 4.815 242.53428999999994 4.645 239.87644920000008 4.042 230.29997440000002 4.892 272.3326008999999 5.388 238.89567940000006 5.085 166.3628559 4.604 256.3574999 6.097 212.1225726000002 5.253 202.29725280000008 5.342 228.13481080000014 11.511 223.58449800000008 4.7 231.54745489999988 11.055)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 9.4327 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.9027 1 0.0 0 11.3405 1 0.0 0 0.0 0 0.7672 1 8.5991 1 0.9727 1 0.0 0 0.2851 1 0.0 0 1.0 1)
Average genome size in population (length): 177.178
Average program size in population (points): 178.178
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 199.4264459136538
Average age in population: 193.2585713508456
Median age in population: 197.4267251054806
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.462
Error (vector) diversity:			 0.682
Behavioral diversity:				 0.687
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 409227415
--- Timings ---
Current time: 1529615609376 milliseconds
Total Time:         783.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.2 seconds, 29.1%
Fitness Testing:    437.2 seconds, 55.8%
Report:             118.4 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 44044.3706
Test mean error for best: 22.02219
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 105.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 104.6123363982
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_inc} {:instruction float_mult} {:instruction float_dec} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_rot} {:instruction tag_integer_413} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1063} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_min} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dup_items print_integer float_inc float_mult float_dec in2 integer_rot integer_sub float_dec float_dec float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec integer_sub float_dup_times integer_rot tag_integer_413 float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1063 float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec integer_div float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min float_dup_times integer_swap float_dec float_dec integer_swap integer_rot float_dec integer_inc float_dec integer_swap integer_rot float_dec integer_shove float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec integer_yankdup float_dec float_dec tag_integer_1035 float_dec float_dec tag_integer_1035 float_min float_shove float_dec float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec integer_dup_items integer_rot float_dec float_dup_times integer_swap integer_rot float_dec float_swap integer_rot float_dec float_mult tag_integer_1035 float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 10.0 2 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 8.0 3 3.0 1 18.0 2 3.0 1 0.0 0 36.0 2 0.0 0 19.0 2 2.0 2 1.0 1 5.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 355.0
Mean: 7.1
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5560.995232200003
Median total errors in population: 849.3042
Error averages by case: (218.76467260000013 5.324 225.75258129999978 4.836 200.53498079999997 5.11 225.5373904999998 5.017 226.3918119999998 5.534 181.64439779999995 4.099 216.63326950000004 4.446 233.88953959999975 5.324 199.0063771 4.709 188.82518810000008 4.296 199.01541830000002 5.421 214.54878779999996 5.228 221.31354409999983 4.899 234.615598 4.818 232.8480692 4.186 222.1509186000001 5.064 270.5738590000002 5.747 234.07404810000023 5.115 158.41205760000005 4.69 252.48615139999987 6.208 203.7059943000003 5.287 194.64149429999992 5.338 218.35838590000006 11.45 220.96046700000008 4.808 228.03422929999994 11.322)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 7.3062 1 0.0 0 0.0 0 0.2224 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.3342 1 0.0 0 1.2768 1 0.0 0 0.0 0 0.469 1 9.5991 1 0.8186 1 0.0 0 0.4361 1 0.0 0 0.0 0)
Average genome size in population (length): 176.912
Average program size in population (points): 177.912
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 200.7903125154147
Average age in population: 194.4543098848617
Median age in population: 198.6127213799095
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.49
Error (vector) diversity:			 0.7
Behavioral diversity:				 0.704
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 413654485
--- Timings ---
Current time: 1529615616236 milliseconds
Total Time:         790.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       229.7 seconds, 29.0%
Fitness Testing:    441.5 seconds, 55.8%
Report:             119.5 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 44028.3706
Test mean error for best: 22.01419
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 105.8032792622
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 104.6123363982
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction tag_integer_413} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1063} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_sub} {:instruction tag_integer_1035} {:instruction float_min} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction float_mult} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec float_dec float_yankdup integer_rot tag_integer_413 float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1063 float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec integer_div float_dec float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_dup_items integer_swap float_dec float_dec integer_swap integer_rot float_dec integer_inc float_dec integer_swap integer_rot float_dec integer_shove float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec integer_yankdup float_dec float_dec tag_integer_1035 float_dec integer_sub tag_integer_1035 float_min float_shove float_dec float_dec float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec integer_dup_items integer_rot float_dec float_dup_times integer_swap integer_rot float_dec integer_add integer_rot float_dec float_mult tag_integer_1035 float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 10.0 2 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 8.0 3 3.0 1 18.0 2 3.0 1 0.0 0 36.0 2 0.0 0 19.0 2 2.0 2 1.0 1 5.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 355.0
Mean: 7.1
Genome size: 185
Size: 186
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5375.644979400001
Median total errors in population: 455.0
Error averages by case: (213.54116960000007 5.307 222.73755309999984 4.672 188.8058704 4.855 220.97791209999977 4.87 216.59245879999995 5.386 182.31832769999997 3.83 208.55583500000003 4.187 232.08118869999979 5.148 188.05532010000013 4.484 178.1928336999999 3.995 190.58518820000006 5.253 207.1052912999999 5.112 216.93072039999996 4.732 219.7288125999999 4.501 224.90259020000016 3.895 207.8286998000001 4.747 259.89614140000015 5.457 230.7035304000002 4.906 155.0354419 4.435 248.9766812999998 6.001 195.92105800000013 5.19 183.4641008999999 5.227 209.48595480000014 11.457 218.3362701000001 4.568 221.79902889999997 10.872)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.1504 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 6.1172 1 0.0 0 3.7708 1 0.0 0 0.0 0 3.0 1 10.5991 1 0.1437 1 0.0 0 0.5639 1 0.0 0 0.0 0)
Average genome size in population (length): 178.21
Average program size in population (points): 179.21
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 201.7807911747883
Average age in population: 197.8197580456043
Median age in population: 199.8552688175575
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.468
Error (vector) diversity:			 0.71
Behavioral diversity:				 0.712
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 418115070
--- Timings ---
Current time: 1529615623027 milliseconds
Total Time:         797.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.2 seconds, 29.0%
Fitness Testing:    445.7 seconds, 55.9%
Report:             120.5 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 50323.32829999999
Test mean error for best: 25.16166
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction tagged_57} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_shove} {:instruction float_dec} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction tag_integer_716} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction tagged_633} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_863} {:instruction float_mult} {:instruction tagged_501} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction tagged_988} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 integer_rot integer_mult float_dec float_dec float_mult in2 integer_rot in2 float_dec integer_swap integer_dup_items float_dec float_sub in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_yankdup float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec float_rot integer_rot integer_rot float_dec float_swap integer_swap tagged_57 float_dec integer_rot float_dec float_max float_dec float_dec float_rot float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot float_shove float_dec integer_dup integer_dup_items integer_mult float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec integer_dup_times tag_integer_716 float_dec float_dec 65 float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_dec float_dec float_dup_times float_dec float_add tagged_633 float_shove float_dec float_dec integer_dup_times float_dec float_stackdepth integer_swap float_dec tag_integer_916 integer_dup_times integer_flush float_dec float_dec integer_swap integer_min float_dec integer_rot float_dec float_dec tag_integer_1035 float_mult float_dec float_dec float_dec tag_integer_863 float_mult tagged_501 float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec integer_rot float_dec float_dup_times integer_swap integer_sub float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap tagged_988 float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 4.0 1 6.0 2 37.0 2 0.0 0 1.0 1 21.0 2 3.0 1 2.0 1 14.0 2 7.0 2 4.0 2 41.0 2 0.0 0 24.0 2 2.0 2 5.0 1 10.0 1 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 355.0
Mean: 7.1
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5244.647097600003
Median total errors in population: 451.5
Error averages by case: (200.75485180000015 5.309 209.61736249999987 4.654 184.65444359999995 4.96 209.18246539999976 4.851 216.79100499999993 5.367 179.33659800000004 3.789 207.2527862 4.254 218.63571559999974 5.173 181.8926784 4.615 172.0091427 4.055 193.25126380000003 5.28 202.59550129999982 5.024 210.31008859999992 4.729 216.78050959999993 4.596 218.26654790000012 3.915 204.84391160000007 4.816 265.29110670000006 5.561 222.6985076000001 4.924 147.9525461 4.459 240.47248829999992 5.992 202.3207623000002 5.237 187.9088633 5.257 204.44829790000009 11.467 205.5419537000001 4.66 207.91569969999992 10.978)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.188 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.6396 1 0.0 0 6.469 1 0.0 0 0.0 0 0.7672 1 2.5991 1 0.9299 1 0.0 0 0.0 0 0.0 0 0.8441 1)
Average genome size in population (length): 177.246
Average program size in population (points): 178.246
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 203.0135422408334
Average age in population: 196.4670257433122
Median age in population: 201.1316774100859
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.464
Error (vector) diversity:			 0.704
Behavioral diversity:				 0.706
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 422552730
--- Timings ---
Current time: 1529615629797 milliseconds
Total Time:         804.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       232.8 seconds, 28.9%
Fitness Testing:    449.8 seconds, 55.9%
Report:             121.6 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 52680.5858
Test mean error for best: 26.34029
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 5.2182085795  
Correct output: 44.8179022307  | Program output: 44.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 16.0949473456 
Correct output: -64.1503753092 | Program output: -25.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 43.8135887966 
Correct output: 96.6123363982  | Program output: 100.6123363982
Correct output: 46.7196465918  | Program output: 45.7196465918 
Correct output: -59.2785304711 | Program output: -43.2785304711
Correct output: -6.9174150193  | Program output: -11.9174150193
Correct output: -68.4374020443 | Program output: -70.4374020443
Correct output: -11.1169636129 | Program output: -51.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -49.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -127.5033370034
Correct output: 26.2328206209  | Program output: 17.2328206209 
Correct output: -129.5990711743 | Program output: -97.5990711743
Correct output: -17.8249368738 | Program output: -47.8249368738
Correct output: -16.8176198654 | Program output: -28.8176198654
Correct output: 5.5639147954   | Program output: -15.4360852046
Correct output: 15.7960197363  | Program output: 17.7960197363 
Correct output: -15.2347943829 | Program output: 1.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_inc} {:instruction float_add} {:instruction in2} {:instruction integer_rot} {:instruction in2} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_add} {:instruction tag_integer_716} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_div} {:instruction float_mult} {:instruction tagged_474} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_yank} {:instruction tag_integer_1035} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_swap} {:instruction float_shove} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_1031 integer_sub integer_yankdup float_dec integer_inc float_add in2 integer_rot in2 integer_swap integer_dup_items float_dec float_sub in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot integer_mod float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove float_dec float_dup_items float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min integer_dup_times integer_swap integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_dec integer_min integer_dup_times integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec float_add tag_integer_716 float_dec float_dec 65 float_dec float_dec integer_dup_times float_dec float_stackdepth integer_swap float_dec tag_integer_916 integer_dup_times integer_flush float_dec float_dec integer_swap print_integer integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec tag_integer_1035 float_mod float_dec float_dec float_dec float_shove integer_div float_mult tagged_474 float_dec float_max float_dec tag_integer_1035 float_dec float_rot float_dec float_dec float_mult float_dec integer_yank tag_integer_1035 float_mod integer_dup_items integer_rot float_dec float_dup_times integer_swap float_frominteger float_dec float_swap float_shove print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [9.0 2 0.0 0 4.0 1 8.0 2 39.0 2 0.0 0 1.0 1 19.0 2 4.0 3 1.0 1 16.0 2 5.0 2 2.0 2 40.0 1 0.0 0 23.0 2 0.0 0 3.0 1 9.0 2 32.0 3 30.0 1 12.0 2 21.0 11 2.0 1 17.0 12]
Total: 353.0
Mean: 7.06
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5527.512665800002
Median total errors in population: 691.3789999999999
Error averages by case: (215.64931570000007 5.57 224.82254249999983 4.889 195.5286758 5.035 221.87746219999988 5.038 229.38108760000003 5.536 187.153494 3.834 212.3881947 4.315 233.20390739999988 5.339 195.32177219999997 4.687 187.39925459999992 4.184 200.72431039999995 5.447 216.15229289999985 5.387 219.36914579999987 4.997 229.08048459999992 4.76 225.22027630000017 3.936 216.37176440000007 4.968 264.70809230000026 5.662 234.3321124000001 5.171 162.85925330000003 4.536 251.17682519999988 6.196 205.23677180000016 5.374 198.25082259999996 5.494 220.7830447000001 11.328 219.5714796000001 4.808 223.55128279999988 10.908)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 12.4813 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.8448 1 0.0 0 0.0 0 5.7466 1 0.0 0 3.8514 1 0.0 0 0.0 0 0.7672 1 5.5991 1 0.44 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 178.899
Average program size in population (points): 179.899
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 204.4668072554996
Average age in population: 199.5412411595061
Median age in population: 202.3996583073099
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.489
Error (vector) diversity:			 0.717
Behavioral diversity:				 0.718
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 427035160
--- Timings ---
Current time: 1529615636778 milliseconds
Total Time:         811.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.4 seconds, 28.9%
Fitness Testing:    454.1 seconds, 56.0%
Report:             122.7 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 43837.290100000006
Test mean error for best: 21.91865
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 100.6123363982
Correct output: 46.7196465918  | Program output: 45.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -51.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -49.5306664135
Correct output: -40.4578849398 | Program output: -43.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 17.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction in2} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_mult} {:instruction float_dec} {:instruction -80} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_819} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction tag_integer_348} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_rot} {:instruction integer_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 integer_rot in2 integer_swap integer_dup_items float_dec float_sub in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot integer_mod float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_mult float_dec -80 integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap print_integer float_dec print_integer float_dec integer_max float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_dec tag_integer_819 float_dec integer_dup_items float_dec float_dec integer_add integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec float_sub float_dec tag_integer_348 float_dup_times integer_swap integer_rot integer_rot float_dec float_dup_times float_add float_dec tag_integer_1035 float_dec float_dec float_mult tag_integer_1035 integer_rot float_dec float_swap integer_swap float_rot integer_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 4.0 3 1.0 1 18.0 2 3.0 1 0.0 0 40.0 1 0.0 0 23.0 2 3.0 1 1.0 1 9.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 354.0
Mean: 7.08
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5925.7363154
Median total errors in population: 839.51895
Error averages by case: (227.3242604000001 5.617 235.27606389999997 4.914 216.78653599999998 5.123 234.39201319999995 5.09 242.0653218 5.612 210.38508250000007 3.969 232.15342200000003 4.46 243.5446781999999 5.401 213.82527680000004 4.842 203.60906299999996 4.328 220.69934310000002 5.478 226.0933277 5.314 238.22942109999988 5.083 247.59050049999993 4.912 239.97482690000015 4.055 235.1052134000001 5.106 280.1886165000001 5.649 248.60223620000016 5.272 184.89797550000003 4.676 266.74547059999986 6.268 224.86736790000018 5.423 215.00561249999984 5.514 230.85547930000013 11.491 231.62767900000003 4.877 236.57252739999998 10.845)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 15.0751 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 2.6293 1 0.0 0 10.3715 1 0.0 0 0.0 0 0.4628 1 11.5991 1 0.5948 1 0.0 0 0.2285 1 0.0 0 1.0621 1)
Average genome size in population (length): 177.785
Average program size in population (points): 178.785
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 205.7229414013254
Average age in population: 199.0662556951837
Median age in population: 203.7973168497022
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.491
Error (vector) diversity:			 0.724
Behavioral diversity:				 0.728
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 431492455
--- Timings ---
Current time: 1529615643442 milliseconds
Total Time:         818.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       236.0 seconds, 28.8%
Fitness Testing:    458.2 seconds, 56.0%
Report:             123.7 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 43837.290100000006
Test mean error for best: 21.91865
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 100.6123363982
Correct output: 46.7196465918  | Program output: 45.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -51.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -49.5306664135
Correct output: -40.4578849398 | Program output: -43.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 17.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction in2} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_mult} {:instruction float_dec} {:instruction -80} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction 65} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_819} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction tag_integer_348} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_rot} {:instruction integer_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 integer_rot in2 integer_swap integer_dup_items float_dec float_sub in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot integer_mod float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times integer_rot float_dec float_swap float_mult float_dup_times float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer float_mult float_dec -80 integer_dup_items float_dec float_dec integer_add float_dec float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec integer_swap print_integer float_dec print_integer float_dec integer_max float_dec float_dec integer_swap float_dec float_dec float_dec integer_swap integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer 65 float_dec in2 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_dec tag_integer_819 float_dec integer_dup_items float_dec float_dec integer_add integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec float_sub float_dec tag_integer_348 float_dup_times integer_swap integer_rot integer_rot float_dec float_dup_times float_add float_dec tag_integer_1035 float_dec float_dec float_mult tag_integer_1035 integer_rot float_dec float_swap integer_swap float_rot integer_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 4.0 3 1.0 1 18.0 2 3.0 1 0.0 0 40.0 1 0.0 0 23.0 2 3.0 1 1.0 1 9.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 354.0
Mean: 7.08
Genome size: 177
Size: 178
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5510.0166986
Median total errors in population: 794.2145
Error averages by case: (214.75594540000012 5.454 223.49806789999985 4.808 192.63860519999997 4.646 222.21297629999984 4.999 227.27353389999985 5.508 184.15146900000002 3.741 220.17284750000005 4.154 232.12935049999982 5.28 186.83225960000001 4.429 177.5872603999999 3.832 202.42792200000005 5.398 215.09413239999998 5.249 225.13489779999983 4.875 221.30753259999992 4.364 223.7418209000001 3.76 208.13246750000008 4.605 286.8128404000001 5.672 236.58526940000024 5.037 156.5120397 4.23 254.6631101999999 6.092 208.23113150000012 5.292 198.3747391 5.393 218.27223690000005 11.47 219.33111620000008 4.734 220.08912629999983 11.032)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.1504 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 6.117 1 0.0 0 6.7513 1 0.0 0 0.0 0 0.0 0 4.4009 1 0.1751 1 0.0 0 0.2285 1 0.0 0 0.0 0)
Average genome size in population (length): 178.358
Average program size in population (points): 179.358
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 207.1446295817484
Average age in population: 200.5888965706339
Median age in population: 205.0105232070001
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.486
Error (vector) diversity:			 0.747
Behavioral diversity:				 0.751
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 435964840
--- Timings ---
Current time: 1529615650690 milliseconds
Total Time:         825.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.7 seconds, 28.8%
Fitness Testing:    462.8 seconds, 56.1%
Report:             124.7 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 59050.9305
Test mean error for best: 29.52547
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 100.6123363982
Correct output: 46.7196465918  | Program output: 45.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -51.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -49.5306664135
Correct output: -40.4578849398 | Program output: -42.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 17.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_inc} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction in2} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_add} {:instruction tag_integer_716} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_div} {:instruction float_mult} {:instruction tagged_474} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_1111} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_yank} {:instruction tag_integer_1035} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_mult} {:instruction integer_inc})
Best program: (integer_yank integer_yank in1 tag_integer_1031 integer_sub integer_yankdup float_dec integer_inc float_mult in2 integer_rot in2 integer_swap integer_dup_items float_dec float_sub in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot integer_mod float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times integer_rot float_dec float_swap float_dec float_dec float_dup_times integer_rot float_dec float_swap float_mult integer_max float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove float_dec float_dup_items float_dup_times float_dec integer_rot integer_mult float_max float_dec float_dec integer_dup_times float_dec float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min integer_dup_times integer_swap integer_rot float_mod integer_rot integer_mod float_dec float_dec integer_dup_items float_dec float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec float_add tag_integer_716 float_dec float_dec 65 float_dec float_dec integer_dup_times float_dec float_stackdepth integer_swap float_dec tag_integer_916 integer_dup_times integer_flush float_dec float_dec integer_swap print_integer integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec float_dec tag_integer_1035 float_mult float_dec float_dec float_dec float_shove integer_div float_mult tagged_474 float_dec float_max float_dec tag_integer_1111 float_dec float_rot float_dec float_dec float_mult float_dec integer_yank tag_integer_1035 float_mod integer_dup_items integer_rot float_dec float_dup_times integer_swap float_frominteger float_dec tag_integer_1035 float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_mult integer_inc)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 4.0 3 1.0 1 18.0 2 3.0 1 0.0 0 40.0 1 0.0 0 23.0 2 2.0 1 1.0 1 9.0 2 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 353.0
Mean: 7.06
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5346.699112700002
Median total errors in population: 769.41185
Error averages by case: (211.9065978000002 5.609 217.08946259999973 4.903 176.77640959999997 4.672 217.01789159999979 5.037 226.73025589999986 5.52 179.2014611000001 3.663 197.10819390000006 4.042 225.5770156999998 5.341 176.97006680000004 4.618 168.2589538000001 3.921 200.25750340000008 5.486 213.5204140999998 5.263 218.12176739999973 5.002 208.39571009999995 4.448 215.78309270000017 3.744 195.6878032000001 4.668 279.2849252 5.647 229.7045444000002 5.186 147.84273620000002 4.315 246.75777229999986 6.194 207.31710880000034 5.412 198.6576410999999 5.44 217.75263120000002 11.392 214.16416750000005 4.775 221.67498629999983 10.842)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 5.0226 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.1917 1 0.0 0 0.0 0 1.2789 1 0.0 0 6.5545 1 0.0 0 0.0 0 0.0 0 8.5991 1 0.1007 1 0.0 0 0.0 0 0.0 0 0.1559 1)
Average genome size in population (length): 180.118
Average program size in population (points): 181.118
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 208.4959014444172
Average age in population: 202.7259077995019
Median age in population: 206.2108018948377
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.481
Error (vector) diversity:			 0.739
Behavioral diversity:				 0.742
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 440483350
--- Timings ---
Current time: 1529615658241 milliseconds
Total Time:         832.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       239.2 seconds, 28.7%
Fitness Testing:    467.4 seconds, 56.1%
Report:             125.7 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 50323.32829999999
Test mean error for best: 25.16166
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 99.6123363982 
Correct output: 46.7196465918  | Program output: 44.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -52.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -50.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 16.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction tagged_57} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_960} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_rot} {:instruction float_shove} {:instruction float_dec} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction tag_integer_716} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_add} {:instruction tagged_633} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction float_dec} {:instruction tag_integer_916} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_min} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_863} {:instruction float_mult} {:instruction tagged_501} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction tagged_988} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 integer_rot integer_mult float_dec float_dec float_mult in2 integer_rot in2 float_dec integer_swap integer_dup_items float_dec float_sub in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_yankdup float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_pop float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec float_rot integer_rot integer_rot float_dec float_swap integer_swap tagged_57 float_dec integer_rot float_dec float_max float_dec float_dec float_rot float_dec float_dec tag_integer_960 float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_swap integer_rot float_mod integer_rot float_shove float_dec integer_dup integer_dup_items integer_mult float_dec integer_dup_times float_dec float_dup_items integer_rot float_dec integer_dup_times tag_integer_716 float_dec float_dec 65 float_shove print_integer float_dec print_integer float_dec float_dec float_dec float_dec float_dec float_dec 65 float_dec tag_integer_916 float_dec float_mod float_dec float_dec integer_dup_items float_dec float_dec integer_add float_min float_dec float_dec float_dec float_dup_times float_dec float_add tagged_633 float_shove float_dec float_dec integer_dup_times float_dec float_stackdepth integer_swap float_dec tag_integer_916 integer_dup_times integer_flush float_dec float_dec integer_swap integer_min float_dec integer_rot float_dec float_dec tag_integer_1035 float_mult float_dec float_dec float_dec tag_integer_863 float_mult tagged_501 float_dec float_dec float_mult float_dec float_dec tag_integer_1035 float_dec integer_rot float_dec float_dup_times integer_swap integer_sub float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap tagged_988 float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 4.0 1 6.0 2 37.0 2 0.0 0 1.0 1 21.0 2 3.0 1 2.0 1 14.0 2 7.0 2 4.0 2 41.0 2 0.0 0 24.0 2 2.0 2 5.0 1 10.0 1 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 355.0
Mean: 7.1
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5536.564934500001
Median total errors in population: 897.99055
Error averages by case: (217.14172280000008 5.688 224.4860218999999 5.034 188.8560589 4.917 223.9434419999998 5.174 231.9765674 5.769 182.6124473 3.697 212.11185440000006 4.279 232.91585189999992 5.503 189.31492900000006 4.868 179.08633439999988 3.957 211.38778510000003 5.59 216.89135359999997 5.456 224.46782329999968 5.141 220.49177389999997 4.598 217.09687940000018 3.862 207.77763440000004 4.803 280.1711160000001 5.794 236.16248670000033 5.417 159.31873810000005 4.421 253.5020426999998 6.364 214.9592059000004 5.547 204.7293100999999 5.676 222.35152789999998 11.423 220.2656432000001 5.016 225.6393841999999 10.913)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 12.3935 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.9727 1 0.0 0 0.0 0 7.8946 1 0.0 0 1.5697 1 0.0 0 0.0 0 0.0 0 9.5991 1 0.1751 1 0.0 0 0.0 0 0.0 0 0.6492 1)
Average genome size in population (length): 177.665
Average program size in population (points): 178.665
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 209.6185470191529
Average age in population: 201.6867615406949
Median age in population: 207.494629892003
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.503
Error (vector) diversity:			 0.738
Behavioral diversity:				 0.744
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 444940070
--- Timings ---
Current time: 1529615665553 milliseconds
Total Time:         839.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       240.8 seconds, 28.7%
Fitness Testing:    471.7 seconds, 56.2%
Report:             127.1 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 45763.56219999999
Test mean error for best: 22.88178
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 100.6123363982
Correct output: 46.7196465918  | Program output: 45.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -51.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -49.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 17.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_916} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_916 float_dup_times integer_swap integer_rot integer_mod float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_sub float_add float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times integer_rot float_dec integer_rot float_dec integer_sub integer_rot float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec print_integer float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec integer_rot float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 4.0 1 6.0 2 37.0 2 0.0 0 1.0 1 21.0 2 4.0 3 1.0 1 14.0 2 7.0 2 4.0 2 40.0 1 0.0 0 23.0 2 1.0 1 5.0 1 9.0 2 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 352.0
Mean: 7.04
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5428.979609500001
Median total errors in population: 567.58675
Error averages by case: (216.61156400000004 5.537 222.19091219999987 4.849 171.625473 4.571 221.8683750999999 4.96 235.4915694 5.5 174.062954 3.728 209.494502 4.175 230.7619624999998 5.331 171.14597629999997 4.539 163.63076509999996 3.812 215.74732999999992 5.509 215.55598139999992 5.138 226.10020629999983 5.025 209.26305529999996 4.35 224.38609370000012 3.797 195.9639058000001 4.579 259.7860142000001 5.382 236.0510020000002 5.259 147.66214370000006 4.273 254.5394113999998 6.276 219.69865240000024 5.465 206.9990755999999 5.396 222.14591139999996 11.468 219.6728112000001 4.791 223.84496149999995 10.969)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 13.7342 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.2025 1 0.0 0 2.4693 1 0.0 0 0.0 0 0.0 0 9.5991 1 0.8247 1 0.0 0 0.0 0 0.0 0 0.7023 1)
Average genome size in population (length): 178.398
Average program size in population (points): 179.398
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 211.028401514791
Average age in population: 203.2484162756097
Median age in population: 208.7765307096602
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.473
Error (vector) diversity:			 0.728
Behavioral diversity:				 0.733
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 449412475
--- Timings ---
Current time: 1529615673226 milliseconds
Total Time:         847.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       242.5 seconds, 28.6%
Fitness Testing:    476.3 seconds, 56.2%
Report:             128.5 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 44534.17589999999
Test mean error for best: 22.26709
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 8.2182085795  
Correct output: 44.8179022307  | Program output: 47.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 19.0949473456 
Correct output: -64.1503753092 | Program output: -22.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 46.8135887966 
Correct output: 96.6123363982  | Program output: 104.6123363982
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -40.2785304711
Correct output: -6.9174150193  | Program output: -8.9174150193 
Correct output: -68.4374020443 | Program output: -67.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -124.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -94.5990711743
Correct output: -17.8249368738 | Program output: -44.8249368738
Correct output: -16.8176198654 | Program output: -25.8176198654
Correct output: 5.5639147954   | Program output: -12.4360852046
Correct output: 15.7960197363  | Program output: 20.7960197363 
Correct output: -15.2347943829 | Program output: 4.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec print_integer float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec integer_rot float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [6.0 2 3.0 1 4.0 1 11.0 2 42.0 2 0.0 0 1.0 1 16.0 2 8.0 3 3.0 1 19.0 2 2.0 1 1.0 1 36.0 2 0.0 0 19.0 2 1.0 1 0.0 0 5.0 1 35.0 3 27.0 2 9.0 2 18.0 12 5.0 2 20.0 13]
Total: 350.0
Mean: 7.0
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5453.7601692
Median total errors in population: 729.33375
Error averages by case: (211.94878830000025 5.528 221.74817349999984 4.966 174.3127793 4.633 219.07996869999988 5.073 236.66899389999998 5.627 187.32886640000004 3.934 208.2942978 4.247 229.99436349999985 5.387 170.71705149999997 4.593 162.0008656 3.803 217.0754602 5.514 217.4132072999998 5.331 229.29633069999974 4.973 202.65785099999994 4.202 227.49458080000008 4.006 189.54538420000011 4.417 274.36331980000006 5.498 239.5639856000001 5.231 149.7998875 4.283 256.87942349999986 6.214 222.2961172000003 5.462 208.07987860000006 5.503 222.51274500000005 11.436 216.75790680000011 4.827 222.28994249999985 10.952)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.7142 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.692 1 0.0 0 0.0 0 1.1288 1 0.0 0 1.869 1 0.0 0 0.0 0 0.0 0 2.5991 1 0.8133 1 0.0 0 0.4378 1 0.0 0 0.0 0)
Average genome size in population (length): 178.183
Average program size in population (points): 179.183
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 212.3288774701554
Average age in population: 203.2040774196715
Median age in population: 210.1347446764794
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.499
Error (vector) diversity:			 0.74
Behavioral diversity:				 0.744
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 453879640
--- Timings ---
Current time: 1529615680505 milliseconds
Total Time:         854.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.2 seconds, 28.6%
Fitness Testing:    480.6 seconds, 56.2%
Report:             129.9 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 45119.09069999999
Test mean error for best: 22.55955
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction print_integer} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_yank} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_819} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction tag_integer_348} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 print_integer integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_sub float_add float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times float_dec integer_max float_dup_times integer_rot float_dec integer_inc float_mult float_dup_times float_dec integer_dup_times float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_max float_dec integer_add float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_yank print_integer float_dec print_integer float_sub integer_sub float_dec float_dec float_dec integer_swap float_div float_dec float_dec print_integer integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec integer_add float_min float_dec float_dec tag_integer_819 float_dec integer_dup_items float_dec float_dec integer_add integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec integer_inc float_dec float_dec float_sub float_dec tag_integer_348 float_dup_times integer_swap integer_rot integer_rot float_dec float_dup_times float_add float_dec tag_integer_1035 float_dec float_dec float_mult tag_integer_1035 integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_pop print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 2.0 2 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 348.0
Mean: 6.96
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5679.957410600001
Median total errors in population: 880.7294499999999
Error averages by case: (217.37043020000007 5.692 227.76880699999987 5.101 195.92306749999995 5.029 225.24177500000002 5.176 242.49343950000008 5.803 191.52940060000003 3.946 217.75359580000003 4.456 235.8198142999999 5.553 194.9037439 5.106 184.25757380000002 4.257 219.63848430000002 5.692 224.21474569999984 5.487 231.3462123999997 5.141 225.98065719999994 4.758 227.9342099 3.982 214.04998640000005 4.918 277.9152379000001 5.632 244.44569080000025 5.425 165.16648280000004 4.658 260.48026899999985 6.4 222.45790240000025 5.584 214.5367711 5.676 229.16510150000008 11.449 222.59210400000003 4.994 226.01690759999994 11.04)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 5.8496 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.117 1 0.0 0 3.1444 1 0.0 0 0.0 0 0.0 0 7.5991 1 0.6519 1 0.0 0 0.0158 1 0.0 0 0.9541 1)
Average genome size in population (length): 177.956
Average program size in population (points): 178.956
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 213.8408516779892
Average age in population: 204.1593591369411
Median age in population: 211.4546949822265
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.488
Error (vector) diversity:			 0.736
Behavioral diversity:				 0.738
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 458341040
--- Timings ---
Current time: 1529615688249 milliseconds
Total Time:         862.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.0 seconds, 28.5%
Fitness Testing:    485.3 seconds, 56.3%
Report:             131.1 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 45108.09069999999
Test mean error for best: 22.55405
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction print_integer} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_yank} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_819} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction tag_integer_348} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 print_integer integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_sub float_add float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times float_dec integer_max float_dup_times integer_rot float_dec integer_inc float_mult float_dup_times float_dec integer_dup_times float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_max float_dec integer_add float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_yank print_integer float_dec print_integer float_sub integer_sub float_dec float_dec float_dec integer_swap float_div float_dec float_dec print_integer integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec integer_add float_min float_dec float_dec tag_integer_819 float_dec integer_dup_items float_dec float_dec integer_add integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec integer_inc float_dec float_dec float_sub float_dec tag_integer_348 float_dup_times integer_swap integer_rot integer_rot float_dec float_dup_times float_add float_dec tag_integer_1035 float_dec float_dec in2 tag_integer_1035 integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_pop print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 2.0 2 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 348.0
Mean: 6.96
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5425.678423700001
Median total errors in population: 890.0
Error averages by case: (200.71944290000008 5.585 210.89020669999985 4.912 201.36659389999997 5.056 208.52902309999988 5.093 222.51371999999995 5.636 197.15846220000006 4.136 229.50754020000005 4.607 219.61789219999972 5.412 195.78510040000012 5.069 189.72588140000005 4.248 195.47667070000017 5.454 206.55441589999992 5.206 209.12098079999976 4.952 222.91659479999993 4.763 232.54340160000015 4.192 210.59983770000008 4.93 282.216241 5.887 221.6873233000002 5.192 166.88022770000015 4.632 239.24142499999994 6.198 199.4299444000003 5.397 193.37956659999983 5.522 211.58871320000017 11.446 205.83892340000008 4.843 213.12029459999997 10.902)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.1504 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.5623 1 0.0 0 2.4693 1 0.0 0 0.0 0 0.0 0 8.5991 1 0.0 0 0.0 0 0.0909 1 0.0 0 0.2348 1)
Average genome size in population (length): 176.528
Average program size in population (points): 177.528
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 214.7581296319138
Average age in population: 203.8569578070059
Median age in population: 212.7178878051806
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.498
Error (vector) diversity:			 0.753
Behavioral diversity:				 0.758
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 462764260
--- Timings ---
Current time: 1529615695400 milliseconds
Total Time:         869.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       247.6 seconds, 28.5%
Fitness Testing:    489.5 seconds, 56.3%
Report:             132.5 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 45108.09069999999
Test mean error for best: 22.55405
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction print_integer} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_yank} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_819} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction tag_integer_348} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 print_integer integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_sub float_add float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times float_dec integer_max float_dup_times integer_rot float_dec integer_inc float_mult float_dup_times float_dec integer_dup_times float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_max float_dec integer_add float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_yank print_integer float_dec print_integer float_sub integer_sub float_dec float_dec float_dec integer_swap float_div float_dec float_dec print_integer integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec integer_add float_min float_dec float_dec tag_integer_819 float_dec integer_dup_items float_dec float_dec integer_add integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec integer_inc float_dec float_dec float_sub float_dec tag_integer_348 float_dup_times integer_swap integer_rot integer_rot float_dec float_dup_times float_add float_dec tag_integer_1035 float_dec float_dec in2 tag_integer_1035 integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_pop print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 2.0 2 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 348.0
Mean: 6.96
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5103.875336200001
Median total errors in population: 614.42745
Error averages by case: (187.5473286000001 5.137 200.86105429999984 4.589 185.8842775 4.728 200.28050129999977 4.789 213.60340160000007 5.27 167.5268877 3.702 203.69000349999993 4.151 209.25055529999992 5.076 183.28335760000002 4.824 169.4403995 3.942 187.24930300000005 5.134 195.16815869999994 4.885 201.21029659999982 4.641 214.25829569999996 4.539 214.10371080000007 3.736 201.74822380000018 4.639 267.8738724000001 5.685 213.36359930000012 4.882 149.21375870000003 4.292 231.97187430000002 5.937 191.6648667000002 5.081 183.08336570000012 5.161 201.8321114 11.486 196.52582800000008 4.567 201.3203042 11.047)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.232 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.6619 1 0.0 0 0.0 0 5.9734 1 0.0 0 4.7146 1 0.0 0 0.0 0 0.7672 1 5.738 1 0.6037 1 0.0 0 0.8344 1 0.0 0 0.0 0)
Average genome size in population (length): 178.215
Average program size in population (points): 179.215
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 216.2912953193577
Average age in population: 208.1621316676165
Median age in population: 214.0236251441596
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.489
Error (vector) diversity:			 0.744
Behavioral diversity:				 0.747
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 467229835
--- Timings ---
Current time: 1529615702668 milliseconds
Total Time:         877.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       249.4 seconds, 28.4%
Fitness Testing:    493.9 seconds, 56.3%
Report:             133.8 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 45253.089799999994
Test mean error for best: 22.62654
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 8.2182085795  
Correct output: 44.8179022307  | Program output: 47.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 19.0949473456 
Correct output: -64.1503753092 | Program output: -22.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 46.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -40.2785304711
Correct output: -6.9174150193  | Program output: -8.9174150193 
Correct output: -68.4374020443 | Program output: -67.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -38.4578849398
Correct output: -124.5033370034 | Program output: -124.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -94.5990711743
Correct output: -17.8249368738 | Program output: -44.8249368738
Correct output: -16.8176198654 | Program output: -25.8176198654
Correct output: 5.5639147954   | Program output: -12.4360852046
Correct output: 15.7960197363  | Program output: 20.7960197363 
Correct output: -15.2347943829 | Program output: 4.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction float_yank} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction integer_div} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_yank} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_819} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction tag_integer_348} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 float_yank integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_sub float_add float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times float_dec integer_max float_dup_times integer_rot float_dec integer_inc float_mult float_dup_times float_dec integer_dup_times float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_max float_dec integer_add float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec integer_div integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dup_times float_yank print_integer float_dec print_integer float_sub integer_sub float_dec float_dec float_dec integer_swap float_div float_dec float_dec print_integer integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec integer_add float_min float_dec float_dec tag_integer_819 float_dec integer_dup_items float_dec float_dec integer_add integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec integer_inc float_dec float_dec float_sub float_dec tag_integer_348 float_dup_times integer_swap integer_rot integer_rot float_dec float_dup_times float_add float_dec tag_integer_1035 float_dec float_dec in2 tag_integer_1035 integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_pop print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [6.0 2 3.0 1 4.0 1 11.0 2 42.0 2 0.0 0 1.0 1 16.0 2 7.0 3 2.0 1 19.0 2 2.0 1 1.0 1 37.0 2 0.0 0 20.0 1 2.0 2 0.0 0 6.0 1 35.0 3 27.0 2 9.0 2 18.0 12 5.0 2 20.0 13]
Total: 352.0
Mean: 7.04
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5715.738342399999
Median total errors in population: 793.2851
Error averages by case: (221.31233790000013 5.469 233.78566249999992 4.955 199.9870335 4.919 230.5643853999999 5.062 245.0103653000001 5.636 182.0695385 3.841 215.9980454 4.262 241.38320679999993 5.414 195.21502069999997 5.023 184.72500170000006 4.103 227.36599950000007 5.576 223.61663030000003 5.288 237.2981880999998 5.062 225.4206117999999 4.753 223.06535870000016 3.842 213.00431420000007 4.825 259.95783040000015 5.637 248.16630340000015 5.323 166.8703924000001 4.526 266.52377339999987 6.32 231.2170047000003 5.539 216.99057730000007 5.519 229.79166579999995 11.46 227.9125493 4.885 230.28154539999989 10.966)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 9.3089 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.9132 1 0.0 0 0.0 0 1.1589 1 0.0 0 4.1255 1 0.0 0 0.0 0 0.0 0 9.5991 1 0.5692 1 0.0 0 0.0 0 0.0 0 0.5358 1)
Average genome size in population (length): 179.518
Average program size in population (points): 180.518
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 217.4904481585586
Average age in population: 210.4663870496523
Median age in population: 215.4118655801315
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.489
Error (vector) diversity:			 0.715
Behavioral diversity:				 0.721
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 471728880
--- Timings ---
Current time: 1529615710053 milliseconds
Total Time:         884.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       251.0 seconds, 28.4%
Fitness Testing:    498.7 seconds, 56.4%
Report:             134.9 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 44887.111099999995
Test mean error for best: 22.44356
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 5.2182085795  
Correct output: 44.8179022307  | Program output: 44.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 16.0949473456 
Correct output: -64.1503753092 | Program output: -25.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 43.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -43.2785304711
Correct output: -6.9174150193  | Program output: -11.9174150193
Correct output: -68.4374020443 | Program output: -70.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -127.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -97.5990711743
Correct output: -17.8249368738 | Program output: -47.8249368738
Correct output: -16.8176198654 | Program output: -28.8176198654
Correct output: 5.5639147954   | Program output: -15.4360852046
Correct output: 15.7960197363  | Program output: 17.7960197363 
Correct output: -15.2347943829 | Program output: 1.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction integer_div} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_yank} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_819} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction tag_integer_348} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 integer_sub float_dec float_dec float_mult in2 integer_rot float_dec float_dec float_dec float_mult integer_dup_times integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_sub float_add float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times float_dec integer_max float_dup_times integer_rot float_dec integer_inc float_mult float_dup_times float_dec integer_dup_times float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_max float_dec integer_add float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec integer_div integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dup_times float_yank print_integer float_dec print_integer float_sub integer_sub float_dec float_dec float_dec integer_swap float_div float_dec float_dec print_integer integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec integer_add float_min float_dec float_dec tag_integer_819 float_dec integer_dup_items float_dec float_dec integer_add integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec integer_inc float_dec float_dec float_sub float_dec tag_integer_348 float_dup_times integer_swap integer_rot integer_rot float_dec float_dup_times float_add float_dec tag_integer_1035 float_dec float_dec in2 tag_integer_1035 integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_pop print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [9.0 2 0.0 0 4.0 1 8.0 2 39.0 2 0.0 0 1.0 1 19.0 2 7.0 3 2.0 1 16.0 2 5.0 2 2.0 2 37.0 2 0.0 0 20.0 1 1.0 1 3.0 1 6.0 1 32.0 3 30.0 1 12.0 2 21.0 11 2.0 1 17.0 12]
Total: 349.0
Mean: 6.98
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5334.6271697
Median total errors in population: 748.3447000000001
Error averages by case: (203.60513940000013 5.277 215.31109919999992 4.763 182.71026489999988 4.591 214.31529639999985 4.938 231.15841859999995 5.45 177.31788690000005 3.652 199.20431890000006 3.928 222.90548889999977 5.267 179.48341010000004 4.721 168.9290796000001 3.767 205.31992240000005 5.337 209.08483299999992 5.1 220.7689546999998 4.815 210.20386109999993 4.399 212.13924460000015 3.624 199.10040830000005 4.461 264.49595750000015 5.487 230.7419749000002 5.028 157.11423440000007 4.104 248.58992329999995 6.083 209.69632130000022 5.301 199.46219199999987 5.341 215.9922381 11.387 211.79729300000008 4.719 212.62140819999985 11.018)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 9.1504 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0348 1 0.0 0 4.3819 1 0.0 0 0.0 0 0.0 0 4.5991 1 0.0 1 0.0 0 0.0 0 0.0 0 1.2348 1)
Average genome size in population (length): 179.225
Average program size in population (points): 180.225
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 218.8024515799587
Average age in population: 210.4687510706315
Median age in population: 216.7656055565162
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.489
Error (vector) diversity:			 0.738
Behavioral diversity:				 0.741
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 476220216
--- Timings ---
Current time: 1529615717461 milliseconds
Total Time:         891.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       252.6 seconds, 28.3%
Fitness Testing:    503.1 seconds, 56.4%
Report:             135.9 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 44887.111099999995
Test mean error for best: 22.44356
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 5.2182085795  
Correct output: 44.8179022307  | Program output: 44.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 16.0949473456 
Correct output: -64.1503753092 | Program output: -25.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 43.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -43.2785304711
Correct output: -6.9174150193  | Program output: -11.9174150193
Correct output: -68.4374020443 | Program output: -70.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -127.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -97.5990711743
Correct output: -17.8249368738 | Program output: -47.8249368738
Correct output: -16.8176198654 | Program output: -28.8176198654
Correct output: 5.5639147954   | Program output: -15.4360852046
Correct output: 15.7960197363  | Program output: 17.7960197363 
Correct output: -15.2347943829 | Program output: 1.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_div} {:instruction integer_mult} {:instruction in1} {:instruction tag_integer_916} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction integer_div} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_yank} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_819} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_sub} {:instruction float_dec} {:instruction tag_integer_348} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_add} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_pop} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (float_stackdepth float_dup_times integer_max integer_div integer_mult in1 tag_integer_916 integer_sub float_dec float_dec float_mult in2 integer_rot float_dec float_dec float_dec float_mult integer_dup_times integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_sub float_add float_dec integer_mod integer_rot integer_dup_items float_dec float_dec float_dup_times float_dec integer_max float_dup_times integer_rot float_dec integer_inc float_mult float_dup_times float_dec integer_dup_times float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_max float_dec integer_add float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec integer_div integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dup_times float_yank print_integer float_dec print_integer float_sub integer_sub float_dec float_dec float_dec integer_swap float_div float_dec float_dec print_integer integer_rot float_dec integer_shove float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec integer_add float_min float_dec float_dec tag_integer_819 float_dec integer_dup_items float_dec float_dec integer_add integer_rot float_dec integer_shove float_dec tag_integer_1035 float_dec integer_inc float_dec float_dec float_sub float_dec tag_integer_348 float_dup_times integer_min integer_rot integer_rot float_dec float_dup_times float_add float_dec tag_integer_1035 float_dec float_dec in2 tag_integer_1035 integer_rot float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_pop print_integer float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [9.0 2 0.0 0 4.0 1 8.0 2 39.0 2 0.0 0 1.0 1 19.0 2 7.0 3 2.0 1 16.0 2 5.0 2 2.0 2 37.0 2 0.0 0 20.0 1 1.0 1 3.0 1 6.0 1 32.0 3 30.0 1 12.0 2 21.0 11 2.0 1 17.0 12]
Total: 349.0
Mean: 6.98
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5312.002874600001
Median total errors in population: 875.3382999999999
Error averages by case: (197.03319640000012 5.568 208.13878339999977 5.066 189.86072220000003 5.012 205.17801939999984 5.172 225.5899195 5.795 171.40678799999998 3.881 201.9549850000001 4.335 215.02978579999981 5.514 188.08263650000006 5.217 175.89120760000014 4.296 208.24067690000004 5.611 201.67164079999986 5.349 215.50816159999974 5.049 222.0381614999999 4.85 212.3832566000002 3.892 209.33971010000016 4.863 270.9299920000001 5.849 227.02827260000032 5.311 161.0498385000001 4.672 242.7886584999997 6.329 210.73436370000022 5.587 196.42361459999995 5.64 208.45648269999992 11.455 201.35828350000008 4.934 205.60371719999986 11.035)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 7.1915 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 4.117 1 0.0 0 2.156 1 0.0 0 0.0 0 0.0 0 9.5991 1 0.228 1 0.0 0 0.5639 1 0.0 0 0.1033 1)
Average genome size in population (length): 178.351
Average program size in population (points): 179.351
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 219.9528205656098
Average age in population: 209.462994748049
Median age in population: 218.0714527029958
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.509
Error (vector) diversity:			 0.743
Behavioral diversity:				 0.749
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 480690581
--- Timings ---
Current time: 1529615725384 milliseconds
Total Time:         899.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       254.3 seconds, 28.3%
Fitness Testing:    508.0 seconds, 56.5%
Report:             137.3 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 45174.469800000006
Test mean error for best: 22.58723
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_mod float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec float_shove float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec integer_rot float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove float_add)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 1.0 1 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 346.0
Mean: 6.92
Genome size: 179
Size: 180
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5537.382351300003
Median total errors in population: 772.6963000000001
Error averages by case: (213.1840886000001 5.719 224.22873479999993 5.191 193.85057659999995 4.848 221.49026249999994 5.287 236.94272819999998 5.842 177.40303439999997 3.82 203.37079509999995 4.186 231.6793169999999 5.587 191.1356024000001 4.992 180.73771619999994 4.102 215.1200158999999 5.759 218.10998569999973 5.454 232.04053549999975 5.264 223.75865079999997 4.703 214.33884680000017 3.77 210.67765560000012 4.685 246.6482448000002 5.587 243.01994230000037 5.54 164.3984731 4.386 259.87720869999976 6.548 220.9918216000004 5.708 208.88478890000002 5.761 223.94929740000006 11.429 218.55857310000005 5.09 222.5564553 11.171)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.4285 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 8.117 1 0.0 0 8.4965 1 0.0 0 0.0 0 0.0 0 0.4009 2 0.0348 1 0.0 0 0.1174 1 0.0 0 1.0 1)
Average genome size in population (length): 178.236
Average program size in population (points): 179.236
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 221.0822999414287
Average age in population: 210.7951592063723
Median age in population: 219.3633962107111
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.479
Error (vector) diversity:			 0.722
Behavioral diversity:				 0.727
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 485156496
--- Timings ---
Current time: 1529615732143 milliseconds
Total Time:         906.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       255.7 seconds, 28.2%
Fitness Testing:    512.3 seconds, 56.5%
Report:             138.6 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 45168.1371
Test mean error for best: 22.58407
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_mod float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_shove float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec float_shove float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min float_dec integer_swap float_dec float_swap float_dec tag_integer_1035 integer_inc float_dec integer_swap integer_rot float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec integer_rot float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove float_add)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 1.0 1 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 346.0
Mean: 6.92
Genome size: 179
Size: 180
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5257.265190600001
Median total errors in population: 580.38285
Error averages by case: (205.8246196000001 5.621 217.62075009999984 4.957 185.0626437 5.035 215.76109469999986 5.134 228.89268120000014 5.646 167.06261809999992 3.899 184.17813180000002 4.1 226.3714525999999 5.455 180.3560463000001 5.216 168.27166770000002 4.182 209.02976530000004 5.529 208.45872389999982 5.308 215.71214839999985 5.056 206.37208789999994 4.72 198.62689160000008 3.822 193.97121050000007 4.709 232.6701902000001 5.534 226.71069180000018 5.279 148.71217839999994 4.55 243.37334829999986 6.303 212.73892250000023 5.491 201.30187160000006 5.57 214.22924630000014 11.492 212.1496454000001 4.914 215.16856269999988 11.116)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 13.8202 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.7588 1 0.0 0 2.1641 1 0.0 0 0.0 0 0.0 0 0.5991 1 0.1751 1 0.0 0 0.0113 1 0.0 0 0.2078 1)
Average genome size in population (length): 177.85
Average program size in population (points): 178.85
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 222.4088353881192
Average age in population: 211.1210136032992
Median age in population: 220.5795383917599
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.494
Error (vector) diversity:			 0.751
Behavioral diversity:				 0.755
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 489608787
--- Timings ---
Current time: 1529615739609 milliseconds
Total Time:         913.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       257.3 seconds, 28.2%
Fitness Testing:    516.8 seconds, 56.6%
Report:             139.6 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 44131.9754
Test mean error for best: 22.06599
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 104.6123363982
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -44.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction integer_rot} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_mod} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction 65} {:instruction float_dec} {:instruction tag_integer_916} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_min} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction print_integer} {:instruction float_rot} {:instruction float_frominteger} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction float_flush})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec float_sub integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc integer_rot float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_max float_inc float_dup_times float_dec float_dec float_add integer_rot float_dup_items float_dec integer_mod float_rot integer_dup_items float_dec integer_dup_items float_dec float_dec integer_rot float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec print_integer float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec integer_swap integer_swap float_dec print_integer 65 float_dec tag_integer_916 float_dec integer_min float_dec float_dec float_dec print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap float_inc float_dec float_dec integer_add float_min integer_rot float_dec integer_shove float_dec float_dec float_dec integer_swap float_div float_dec integer_shove float_dec integer_yankdup float_dec integer_rot float_dec float_dec float_dec integer_swap float_min float_dec integer_rot float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc print_integer float_rot float_frominteger integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap float_yankdup float_inc float_inc float_inc print_float integer_shove float_flush)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 8.0 3 3.0 1 18.0 2 3.0 1 0.0 0 36.0 2 0.0 0 19.0 2 4.0 1 1.0 1 5.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 349.0
Mean: 6.98
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5659.2092207000005
Median total errors in population: 553.8820499999999
Error averages by case: (216.72596770000015 5.409 231.24203779999988 4.89 199.4787795 4.992 226.02758909999991 5.067 246.52573469999982 5.659 182.0428743000001 3.912 206.92654870000004 4.285 239.88947109999984 5.39 196.76278590000007 5.276 186.70682069999995 4.15 228.54441690000013 5.5 223.5904985999999 5.272 233.8468002999999 5.005 222.5523426999999 4.786 208.37093810000016 3.837 210.0050368000001 4.734 256.5434840000002 5.604 242.54131070000028 5.195 172.31883960000005 4.522 258.54265409999994 6.238 232.10820190000027 5.429 220.08965100000006 5.545 230.66078310000017 11.436 223.6015789000001 4.866 225.23807449999984 11.327)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 10.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 2.1233 1 0.0 0 1.6158 1 0.0 0 0.0 0 0.7672 1 0.4009 1 0.2757 1 0.0 0 0.0 0 0.0 0 0.0 1)
Average genome size in population (length): 178.867
Average program size in population (points): 179.867
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 223.9623267000897
Average age in population: 213.0812415071971
Median age in population: 221.8379469280685
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.48
Error (vector) diversity:			 0.738
Behavioral diversity:				 0.744
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 494085827
--- Timings ---
Current time: 1529615746739 milliseconds
Total Time:         921.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       258.9 seconds, 28.1%
Fitness Testing:    521.1 seconds, 56.6%
Report:             141.0 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 43891.486500000006
Test mean error for best: 21.94574
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 104.6123363982
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction integer_rot} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_mod} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec float_sub integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc integer_rot float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_max float_inc float_dup_times float_dec float_dec float_add integer_rot float_dup_items float_dec integer_mod float_rot integer_dup_items float_dec integer_dup_items float_dec float_dec integer_rot float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec print_integer float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap float_yankdup print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_inc float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec integer_swap float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 8.0 3 3.0 1 18.0 2 3.0 1 0.0 0 36.0 2 0.0 0 19.0 2 1.0 1 1.0 1 5.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 346.0
Mean: 6.92
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5512.453688600001
Median total errors in population: 713.54775
Error averages by case: (213.5445681000002 5.592 225.21446089999978 5.112 188.66396549999996 4.882 222.6450481999998 5.204 237.36231599999996 5.823 177.33853040000002 4.028 204.1901807 4.276 232.31022599999972 5.575 186.5201489 5.273 176.62620260000017 4.192 217.5849203999999 5.703 218.62272949999993 5.491 226.23522649999964 5.208 219.39911689999988 4.769 211.15962860000022 3.971 206.27284640000016 4.709 252.47569109999995 5.883 237.1962495000003 5.427 169.9641016 4.672 252.95889639999987 6.449 219.99717860000038 5.658 208.2357469000001 5.75 224.1504158000001 11.449 219.98592860000005 5.016 222.41236449999988 11.275)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.1504 1 0.0 0 0.0 0 0.1864 1 0.0 0 0.0 0 0.2785 1 0.0 0 0.0 0 0.9013 1 0.0 0 5.3729 1 0.0 0 0.0 0 0.0316 1 6.5991 1 0.592 1 0.0 0 0.4264 1 0.0 0 1.4323 1)
Average genome size in population (length): 177.315
Average program size in population (points): 178.315
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 224.8446807864959
Average age in population: 211.9441968422201
Median age in population: 223.071364917299
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.506
Error (vector) diversity:			 0.749
Behavioral diversity:				 0.756
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 498522901
--- Timings ---
Current time: 1529615753654 milliseconds
Total Time:         928.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       260.7 seconds, 28.1%
Fitness Testing:    525.3 seconds, 56.6%
Report:             142.1 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 43891.486500000006
Test mean error for best: 21.94574
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 104.6123363982
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction integer_rot} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_mod} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec float_sub integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc integer_rot float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_max float_inc float_dup_times float_dec float_dec float_add integer_rot float_dup_items float_dec integer_mod float_rot integer_dup_items float_dec integer_dup_items float_dec float_dec integer_rot float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec print_integer float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap float_yankdup print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_inc float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec integer_swap float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 8.0 3 3.0 1 18.0 2 3.0 1 0.0 0 36.0 2 0.0 0 19.0 2 1.0 1 1.0 1 5.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 346.0
Mean: 6.92
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5189.674899600002
Median total errors in population: 572.7767
Error averages by case: (199.73995440000016 5.225 208.74733399999974 4.757 181.31609179999998 4.634 208.1508870999997 4.94 227.73889419999992 5.474 165.29314650000003 4.132 187.3666464 4.228 216.86899669999983 5.247 177.7773864 5.054 166.20552450000005 3.995 207.67470299999997 5.366 202.77219949999989 5.021 210.88308569999984 4.804 206.04467239999994 4.548 198.56656840000014 3.905 194.0782104000001 4.516 250.2201610000001 5.774 219.74481860000023 5.025 151.17474190000004 4.328 238.16043909999985 6.151 211.65324220000025 5.308 199.32548230000006 5.377 210.3399831 11.474 204.9059120000001 4.784 209.35381799999985 11.505)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.2785 1 0.0 0 0.0 0 1.1006 1 0.0 0 0.8876 1 0.0 0 0.0 0 0.2328 1 6.2799 1 0.1751 1 0.0 0 0.4237 1 0.0 0 0.4637 1)
Average genome size in population (length): 179.256
Average program size in population (points): 180.256
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 226.4507858048135
Average age in population: 215.9412474151834
Median age in population: 224.367813759048
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.504
Error (vector) diversity:			 0.765
Behavioral diversity:				 0.77
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 503007016
--- Timings ---
Current time: 1529615760736 milliseconds
Total Time:         935.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       262.3 seconds, 28.0%
Fitness Testing:    529.7 seconds, 56.6%
Report:             143.2 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 45721.51109999999
Test mean error for best: 22.86076
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 103.6123363982
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -41.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction float_yank} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction integer_div} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_yank} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1233} {:instruction float_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 float_yank integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_div float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_div float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_sub float_add float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_yankdup float_dec integer_max float_dup_times integer_rot float_dec integer_inc float_mult float_dup_times float_dec integer_dup_times float_dec float_max float_frominteger float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_max float_dec integer_add float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec integer_div integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dup_times float_yank print_integer float_dec print_integer float_sub integer_sub float_dec float_dec float_dec integer_swap float_div float_dec float_dec float_mod float_dec float_dec integer_add float_dec float_dec integer_add float_dec print_integer float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_inc float_dec integer_swap integer_rot float_dec integer_shove float_dec float_dec float_dec integer_swap float_div float_dec float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1233 float_dec float_inc float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec integer_swap float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 7.0 3 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 0.0 0 20.0 1 1.0 1 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 346.0
Mean: 6.92
Genome size: 179
Size: 180
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5579.429307700001
Median total errors in population: 563.9644499999999
Error averages by case: (226.9845676000001 5.476 237.85110829999968 5.107 181.14205230000005 4.578 235.8177441999998 5.264 249.0732999 5.744 168.23955500000005 3.792 186.11860500000006 4.035 244.91667089999976 5.564 179.04617679999998 5.01 168.14289790000004 3.903 229.39601580000007 5.66 227.49942749999988 5.417 239.1020453999998 5.15 208.16534979999992 4.504 194.9667350000002 3.638 195.18784940000012 4.485 240.44528700000026 5.771 248.36623390000022 5.392 159.5475448 4.354 265.2957297999999 6.436 232.20893690000028 5.615 220.23557240000002 5.666 233.76864030000007 11.45 233.70109360000012 5.046 235.78416819999987 11.369)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.6273 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.2142 1 0.0 0 10.0 1 0.0 0 0.0 0 0.0 0 3.5991 2 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 178.593
Average program size in population (points): 179.593
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 227.9465270895065
Average age in population: 217.3938660052252
Median age in population: 225.6127756258547
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.503
Error (vector) diversity:			 0.764
Behavioral diversity:				 0.77
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 507474376
--- Timings ---
Current time: 1529615767567 milliseconds
Total Time:         942.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       264.0 seconds, 28.0%
Fitness Testing:    533.8 seconds, 56.7%
Report:             144.2 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 44872.688500000004
Test mean error for best: 22.43634
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 8.2182085795  
Correct output: 44.8179022307  | Program output: 47.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 19.0949473456 
Correct output: -64.1503753092 | Program output: -22.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 46.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -40.2785304711
Correct output: -6.9174150193  | Program output: -8.9174150193 
Correct output: -68.4374020443 | Program output: -67.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -124.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -94.5990711743
Correct output: -17.8249368738 | Program output: -44.8249368738
Correct output: -16.8176198654 | Program output: -25.8176198654
Correct output: 5.5639147954   | Program output: -12.4360852046
Correct output: 15.7960197363  | Program output: 20.7960197363 
Correct output: -15.2347943829 | Program output: 4.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_inc tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc tagged_930 float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec float_shove float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap integer_yank print_integer integer_flush float_dec float_dec integer_swap tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove float_add)
Errors: [6.0 2 3.0 1 3.0 1 11.0 2 42.0 2 1.0 1 0.0 0 16.0 2 5.0 1 3.0 1 19.0 2 2.0 1 1.0 1 36.0 2 1.0 1 19.0 2 0.0 0 0.0 0 5.0 1 35.0 3 27.0 2 9.0 2 18.0 12 5.0 2 20.0 13]
Total: 344.0
Mean: 6.88
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5830.3710475000025
Median total errors in population: 644.74145
Error averages by case: (232.28067470000022 5.514 241.0929034999997 5.154 198.46198669999995 4.771 239.9089811999998 5.317 255.7105395999999 5.966 184.2899507 4.073 200.73909110000005 4.209 248.70005949999967 5.618 192.61664670000008 5.168 181.7268587999999 4.09 237.53736620000004 5.81 235.12827119999992 5.493 243.78069589999978 5.267 221.9338438999999 4.756 212.23814020000012 3.893 209.56848750000012 4.729 264.6779266000003 5.941 252.45458310000026 5.49 179.66290919999997 4.599 270.61023849999975 6.52 238.9645838000003 5.682 227.02152279999996 5.911 241.10283550000017 11.387 236.9537037000001 5.167 241.04524689999997 11.638)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.4589 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.4702 1 0.0 0 0.0 0 0.3306 1 0.0 0 1.9013 1 0.0 0 0.0 0 1.0 1 3.5991 1 0.1953 1 0.0 0 0.0 0 0.0 0 0.8224 1)
Average genome size in population (length): 176.57
Average program size in population (points): 177.57
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 229.2382259846435
Average age in population: 213.3025893431593
Median age in population: 226.8640062907837
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.484
Error (vector) diversity:			 0.771
Behavioral diversity:				 0.776
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 511890931
--- Timings ---
Current time: 1529615774748 milliseconds
Total Time:         949.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       265.7 seconds, 28.0%
Fitness Testing:    538.2 seconds, 56.7%
Report:             145.2 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 43885.487100000006
Test mean error for best: 21.94274
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 104.6123363982
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_sub} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_add} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_mod} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction -38} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction print_integer} {:instruction float_dec} {:instruction float_swap} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_sub float_dec integer_mod float_dec in2 float_dec integer_swap integer_dup_items float_dec float_sub integer_swap in1 integer_rot float_inc integer_rot float_inc float_dup_times float_inc float_inc integer_rot float_inc float_inc float_inc float_inc float_inc float_inc integer_div float_inc integer_div float_inc integer_div float_inc integer_rot integer_rot float_inc float_inc integer_max float_inc float_dup_times float_dec float_dec float_add integer_mod float_dup_items float_dec integer_mod float_rot integer_dup_items float_dec integer_dup_items float_dec float_dec integer_rot float_dec float_swap float_mult float_yankdup float_dec -38 float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec print_integer float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap float_yankdup print_integer integer_flush float_dec float_dec integer_swap print_integer float_dec float_swap integer_flush float_dec float_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_inc float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec integer_swap float_frominteger float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 8.0 3 3.0 1 18.0 2 3.0 1 0.0 0 36.0 2 0.0 0 19.0 2 0.0 0 1.0 1 5.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 344.0
Mean: 6.88
Genome size: 182
Size: 183
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5433.484821000003
Median total errors in population: 768.9956500000001
Error averages by case: (214.12859510000013 5.531 222.51271469999975 5.035 190.5138694 4.609 221.50587279999982 5.195 232.75143409999984 5.661 168.81341389999997 4.035 188.95801160000002 4.181 230.38595939999985 5.546 187.23286020000003 5.085 175.44334609999993 4.078 211.73494880000007 5.656 215.31876669999974 5.325 223.67942889999966 5.131 216.10122559999994 4.707 198.9162272000001 3.86 203.11911420000007 4.686 259.9084842000002 5.987 235.91603410000013 5.339 164.84533440000007 4.568 251.96051329999977 6.372 215.34095000000036 5.568 203.70470499999996 5.658 220.23960210000004 11.51 218.77115550000008 5.019 221.9092536999998 11.431)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.509 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 2.117 1 0.0 0 6.8998 1 0.0 0 0.0 0 0.0 0 0.248 1 0.1751 1 0.0 0 0.4361 1 0.0 0 0.1173 1)
Average genome size in population (length): 177.428
Average program size in population (points): 178.428
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 230.0815228256818
Average age in population: 216.5808219287126
Median age in population: 228.1696614228823
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.508
Error (vector) diversity:			 0.791
Behavioral diversity:				 0.795
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 516328196
--- Timings ---
Current time: 1529615782071 milliseconds
Total Time:         956.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       267.2 seconds, 27.9%
Fitness Testing:    542.8 seconds, 56.8%
Report:             146.2 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 45195.168099999995
Test mean error for best: 22.59758
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 48.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -48.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -46.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 20.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times integer_yank integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_inc tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc tagged_930 float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_yankdup float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec float_shove float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap integer_yank print_integer integer_flush float_dec float_dec integer_swap tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 2.0 1 18.0 2 3.0 1 0.0 0 37.0 2 1.0 1 20.0 1 0.0 0 1.0 1 6.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 341.0
Mean: 6.82
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5943.307305000001
Median total errors in population: 808.43425
Error averages by case: (241.38484760000009 5.802 247.93399669999974 5.327 194.91106249999996 4.836 247.82253879999982 5.482 264.8240719999999 6.034 180.3188757 4.263 198.26558600000016 4.304 255.74503169999977 5.832 189.6056435 5.283 180.24207259999994 4.451 243.92121330000012 5.94 246.09554029999978 5.577 254.7708007999998 5.502 223.06801029999994 4.89 211.69150220000017 4.092 210.80812310000016 4.909 254.32593280000012 5.916 264.77791790000026 5.726 172.88286910000008 4.908 281.6110017 6.742 246.88449840000035 5.888 235.82458879999993 6.016 253.5348901 11.516 245.020943 5.347 250.8357460999999 11.617)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.8135 1 0.0 0 0.0 0 0.8136 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.4825 1 0.0 0 0.0341 1 0.0 0 0.0 0 0.0 0 6.4009 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 178.248
Average program size in population (points): 179.248
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 231.616589355266
Average age in population: 219.1801249766961
Median age in population: 229.5272557888281
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.52
Error (vector) diversity:			 0.788
Behavioral diversity:				 0.792
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 520786196
--- Timings ---
Current time: 1529615789243 milliseconds
Total Time:         963.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       268.8 seconds, 27.9%
Fitness Testing:    547.0 seconds, 56.8%
Report:             147.5 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 44851.327999999994
Test mean error for best: 22.42566
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 49.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -47.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -45.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 21.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_inc} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_min} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction tag_integer_917} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_inc tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc tagged_930 float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_yankdup float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer integer_min print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec float_shove float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap integer_yank print_integer integer_flush float_dec float_dec integer_swap tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec integer_pop float_dec float_dec integer_swap float_dec tag_integer_917 float_dec integer_dup_items float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 3.0 1 18.0 2 3.0 1 0.0 0 36.0 2 1.0 1 19.0 2 0.0 0 1.0 1 5.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 340.0
Mean: 6.8
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5004.116488200001
Median total errors in population: 738.7732000000001
Error averages by case: (196.29421320000014 5.496 205.25361229999982 5.023 182.42497409999993 4.609 204.56051569999983 5.176 219.29903940000005 5.675 153.00293310000004 3.997 170.06523410000005 3.903 212.8028924999997 5.497 173.1852754 5.057 159.0952475 4.131 194.74634880000002 5.576 199.3600497999998 5.442 207.40564369999976 5.116 194.1912042999999 4.598 180.39569910000017 3.735 181.3398308000002 4.568 235.4147458000002 5.889 219.05354849999998 5.361 142.99326520000005 4.527 236.2981104000001 6.36 198.36427320000033 5.509 188.48493050000005 5.654 204.9982507 11.345 201.6635317 4.936 204.8951183999999 11.348)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 8.5091 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.2785 1 0.0 0 0.0 0 4.4729 1 0.0 0 2.5308 1 0.0 0 0.0 0 0.0 0 6.4393 1 0.0 0 0.0 0 0.0811 1 0.0 0 0.0053 1)
Average genome size in population (length): 178.35
Average program size in population (points): 179.35
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 232.738410815097
Average age in population: 222.2341162289262
Median age in population: 230.7892704373562
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.558
Error (vector) diversity:			 0.835
Behavioral diversity:				 0.841
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 525245861
--- Timings ---
Current time: 1529615796643 milliseconds
Total Time:         971.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       270.4 seconds, 27.8%
Fitness Testing:    551.8 seconds, 56.8%
Report:             148.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 52785.56119999999
Test mean error for best: 26.39278
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 50.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -46.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -44.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 22.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction tagged_573} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items print_integer float_dec float_max float_dec float_mult float_yankdup float_dec tagged_573 tagged_930 float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec float_max float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap float_dec float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_shove float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 4.0 2 18.0 2 3.0 1 0.0 0 35.0 2 1.0 1 18.0 2 0.0 0 1.0 1 4.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 339.0
Mean: 6.78
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5625.167001400003
Median total errors in population: 777.5991000000001
Error averages by case: (226.87635980000022 5.525 236.33167529999977 5.115 181.6906052 4.575 233.94000119999978 5.254 251.99194289999988 5.856 166.13417120000014 4.307 188.49864390000005 4.179 241.3946933999997 5.572 182.4870539 5.08 172.84306700000008 4.24 232.8106576000001 5.673 229.8419402999998 5.439 239.01195269999977 5.209 217.2653671999999 4.679 197.63400190000016 3.933 204.13002500000013 4.69 244.10580100000004 5.905 248.34710820000032 5.43 164.90005660000006 4.591 265.93804069999965 6.48 233.31768920000036 5.664 221.43144709999996 5.732 234.8218991000001 11.387 231.8705390000001 5.058 236.33626199999986 11.643)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 10.4237 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.3654 1 0.0 0 0.0 0 1.883 1 0.0 0 2.7434 1 0.0 0 0.0 0 0.0 0 3.4237 1 0.1375 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.948
Average program size in population (points): 178.948
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 233.9448959391306
Average age in population: 223.728773444561
Median age in population: 232.0615226329265
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.55
Error (vector) diversity:			 0.808
Behavioral diversity:				 0.815
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 529695601
--- Timings ---
Current time: 1529615803804 milliseconds
Total Time:         978.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       271.9 seconds, 27.8%
Fitness Testing:    556.3 seconds, 56.9%
Report:             149.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 52785.56119999999
Test mean error for best: 26.39278
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 50.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -46.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -44.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 22.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction tagged_573} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items print_integer float_dec float_max float_dec float_mult float_yankdup float_dec tagged_573 tagged_930 float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec float_max float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap float_dec float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 4.0 2 18.0 2 3.0 1 0.0 0 35.0 2 1.0 1 18.0 2 0.0 0 1.0 1 4.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 339.0
Mean: 6.78
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5456.9208858
Median total errors in population: 822.7265
Error averages by case: (219.39964050000017 5.505 228.63902229999977 4.993 186.29443799999993 4.579 227.8245597999998 5.149 245.29746389999985 5.756 164.31812440000016 4.293 181.67319769999992 4.151 236.02315889999977 5.446 181.04020239999994 4.957 168.2448726 4.21 222.89676770000005 5.553 224.02178489999983 5.443 229.4583357999997 5.077 203.85893609999994 4.738 186.6893155000001 4.035 192.06734540000016 4.72 249.30930470000013 6.388 239.6701609000003 5.308 151.94328440000007 4.517 258.07871109999985 6.355 224.20523310000027 5.506 214.15423800000002 5.657 229.84833590000014 11.355 224.90290860000016 4.994 226.7495431999998 11.627)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 12.7343 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.3515 1 0.0 0 3.0161 1 0.0 0 0.0 0 0.0 0 5.5991 2 0.6305 1 0.0 0 0.0 0 0.0 0 0.2348 1)
Average genome size in population (length): 177.514
Average program size in population (points): 178.514
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 235.4653238226321
Average age in population: 224.8362262542898
Median age in population: 233.3603267423367
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.578
Error (vector) diversity:			 0.834
Behavioral diversity:				 0.837
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 534135066
--- Timings ---
Current time: 1529615810800 milliseconds
Total Time:         985.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       273.6 seconds, 27.8%
Fitness Testing:    560.7 seconds, 56.9%
Report:             151.0 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 52785.56119999999
Test mean error for best: 26.39278
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 50.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -46.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -44.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 22.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction tagged_573} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_min float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items print_integer float_dec float_max float_dec float_mult float_yankdup float_dec tagged_573 tagged_930 float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec float_max float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap float_dec float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 4.0 2 18.0 2 3.0 1 0.0 0 35.0 2 1.0 1 18.0 2 0.0 0 1.0 1 4.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 339.0
Mean: 6.78
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5530.988699300003
Median total errors in population: 811.2568
Error averages by case: (216.82838890000005 5.424 224.66608269999966 4.972 192.0806303 4.383 225.5415465999998 5.165 244.1925783999997 5.676 168.27359070000006 4.138 188.99251190000004 3.801 232.23523149999968 5.476 188.6834613000001 4.846 175.59560209999998 4.134 226.17412420000022 5.615 221.71523409999975 5.266 229.72519579999977 5.044 210.71877019999982 4.652 198.62153710000013 3.969 196.98151830000015 4.613 263.5336134000002 6.121 237.8969332000003 5.263 170.08475780000006 4.362 255.64934319999983 6.351 230.71865110000024 5.535 217.1290335999998 5.616 228.47887780000016 11.505 221.33766610000015 4.98 226.8138189999998 11.413)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 9.3345 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.2785 1 0.0 0 0.0 0 3.8684 1 0.0 0 5.3815 1 0.0 0 0.0 0 0.0 0 2.4009 2 1.128 1 0.0 0 0.612 1 0.0 0 0.1502 1)
Average genome size in population (length): 179.853
Average program size in population (points): 180.853
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 236.8869258596895
Average age in population: 228.075899651351
Median age in population: 234.6614134219913
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.548
Error (vector) diversity:			 0.797
Behavioral diversity:				 0.802
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 538633005
--- Timings ---
Current time: 1529615818294 milliseconds
Total Time:         992.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       275.1 seconds, 27.7%
Fitness Testing:    565.2 seconds, 57.0%
Report:             152.0 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 44780.662500000006
Test mean error for best: 22.39033
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 91.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 27.1310761693 
Correct output: -34.4699592842 | Program output: -35.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 90.6123363982 
Correct output: 46.7196465918  | Program output: 50.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -46.1169636129
Correct output: -76.8272599297 | Program output: -76.8272599297
Correct output: -26.5306664135 | Program output: -44.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 22.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_div} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction integer_div} {:instruction tag_integer_387} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_mult} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_177} {:instruction print_float} {:instruction integer_shove} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_rot integer_mult float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_shove float_dec float_max float_dec float_dec integer_dup_times integer_inc float_dec tag_integer_1035 float_dec float_dec print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec float_shove float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min float_dec integer_swap float_dec float_swap float_dec tag_integer_1035 integer_div integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot integer_div tag_integer_387 tag_integer_1035 float_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_mult float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_yank print_integer float_inc float_inc tagged_177 print_float integer_shove float_add)
Errors: [7.0 2 2.0 1 4.0 1 10.0 1 41.0 2 0.0 0 1.0 1 17.0 2 6.0 1 4.0 2 18.0 2 3.0 1 0.0 0 35.0 2 0.0 0 18.0 2 0.0 0 1.0 1 4.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 339.0
Mean: 6.78
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5764.200011000002
Median total errors in population: 916.8175000000001
Error averages by case: (228.4047967000002 5.901 233.63512579999957 5.274 205.040984 4.621 232.2937514999998 5.368 242.78693459999977 5.949 182.81188950000006 4.597 206.2199150000001 4.307 241.6174315999997 5.709 200.09229689999987 5.107 188.18805670000006 4.455 221.99404660000022 5.768 229.21613099999976 5.508 233.61487619999966 5.285 222.84176179999992 5.028 212.71274360000015 4.421 210.28680390000017 4.996 308.18839560000004 7.063 246.52812420000026 5.562 173.98119809999994 4.716 262.27444709999975 6.576 225.8896163000003 5.713 212.53507970000004 5.844 233.56487600000023 11.413 229.80179270000014 5.203 234.09793589999975 11.197)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.9387 1 0.0 0 0.0 0 2.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.1001 1 0.0 0 1.9755 1 0.0 0 0.0 0 0.0 0 6.5991 1 0.4959 1 0.0 0 0.4138 1 0.0 0 0.2938 1)
Average genome size in population (length): 178.503
Average program size in population (points): 179.503
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 237.9726922636335
Average age in population: 227.310590582233
Median age in population: 236.0130677491797
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.6
Error (vector) diversity:			 0.823
Behavioral diversity:				 0.828
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 543096685
--- Timings ---
Current time: 1529615825547 milliseconds
Total Time:         999.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       276.7 seconds, 27.7%
Fitness Testing:    569.6 seconds, 57.0%
Report:             153.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 52785.56119999999
Test mean error for best: 26.39278
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 50.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -46.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -44.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 22.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction tagged_601} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items print_integer float_dec float_max float_dec float_mult float_yankdup float_dec tagged_601 tagged_930 float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec float_max float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap float_dec float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 4.0 2 18.0 2 3.0 1 0.0 0 35.0 2 1.0 1 18.0 2 0.0 0 1.0 1 4.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 339.0
Mean: 6.78
Genome size: 184
Size: 185
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4886.0261009
Median total errors in population: 789.48295
Error averages by case: (187.8466673000002 5.362 198.9552774999998 4.834 170.9051632 4.262 196.2923634999998 4.945 217.9816600999998 5.594 147.38808879999996 4.133 160.76241130000005 3.75 206.40491989999967 5.326 165.93289349999986 4.768 153.8332646 4.121 201.25585630000012 5.43 192.68031889999978 5.282 202.6835305999998 4.874 186.00894609999995 4.552 170.73146300000016 3.931 173.07727220000018 4.486 248.92417830000002 6.13 211.04582140000028 5.102 140.3511285 4.4 228.44625069999984 6.129 204.67550200000022 5.34 190.7083214 5.475 200.1759833000001 11.407 193.32141810000007 4.777 199.9324003999999 11.295)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 3.4656 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 2.0 1 0.0 0 0.0 0 0.7014 1 0.0 0 4.0141 1 0.0 0 0.0 0 0.0 0 3.5344 1 0.6058 1 0.0 0 0.0 0 0.0 0 0.1741 1)
Average genome size in population (length): 177.385
Average program size in population (points): 178.385
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 239.2983153653009
Average age in population: 228.0886755270251
Median age in population: 237.308616320534
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.582
Error (vector) diversity:			 0.832
Behavioral diversity:				 0.838
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 547533159
--- Timings ---
Current time: 1529615832815 milliseconds
Total Time:        1007.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       278.3 seconds, 27.6%
Fitness Testing:    573.9 seconds, 57.0%
Report:             154.8 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 34239.400700000006
Test mean error for best: 17.11970
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 51.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -45.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -43.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 23.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_mult} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_rot integer_mult float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_div float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_shove float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec float_max float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap float_dec float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [11.0 2 2.0 1 3.0 1 6.0 2 37.0 2 1.0 1 0.0 0 21.0 2 5.0 1 5.0 2 14.0 2 7.0 2 4.0 2 34.0 2 1.0 1 17.0 2 0.0 0 5.0 1 3.0 1 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 337.0
Mean: 6.74
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4824.379068
Median total errors in population: 562.6537500000001
Error averages by case: (186.36616500000017 5.149 192.5907447999998 4.508 172.36987979999998 4.264 193.95072599999986 4.684 211.10366529999982 5.171 150.86501429999998 3.944 165.08053890000008 3.622 200.07860879999973 5.032 166.95567039999992 4.764 156.97757910000004 4.01 188.9295983 5.031 189.58307939999986 4.805 195.73091399999996 4.509 189.48183229999987 4.54 171.9424512000001 3.663 176.60079660000017 4.427 254.25053320000018 6.115 204.1485214000001 4.712 146.665692 4.201 222.29337429999998 5.816 193.43128300000032 5.006 180.9759683 5.094 197.2109751 11.546 190.5065756000001 4.439 196.18588089999983 11.051)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.2308 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 6.125 1 0.0 0 6.5307 1 0.0 0 0.0 0 0.0 0 1.5991 1 0.1751 1 0.0 0 0.0 0 0.0 0 0.1741 1)
Average genome size in population (length): 178.46
Average program size in population (points): 179.46
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 240.7171667755024
Average age in population: 231.7033992649482
Median age in population: 238.6209268134765
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.568
Error (vector) diversity:			 0.829
Behavioral diversity:				 0.831
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 551996405
--- Timings ---
Current time: 1529615840101 milliseconds
Total Time:        1014.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       279.8 seconds, 27.6%
Fitness Testing:    578.2 seconds, 57.0%
Report:             156.1 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 41496.226
Test mean error for best: 20.74811
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 51.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -45.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -43.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 23.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_stackdepth} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_max float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_yankdup float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items integer_mult float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_shove float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_dec float_shove integer_add integer_yankdup integer_add float_dec float_shove print_integer float_dec print_integer float_sub float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_dup_items float_max float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec float_min float_dec float_dec float_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_stackdepth tag_integer_357 float_dec integer_shove float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_inc float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min integer_swap float_min float_dec integer_swap float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_max float_dup float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 5.0 2 18.0 2 3.0 1 0.0 0 34.0 2 1.0 1 17.0 2 0.0 0 1.0 1 3.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 337.0
Mean: 6.74
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4384.970620800001
Median total errors in population: 716.41705
Error averages by case: (171.89870610000017 5.172 177.83986639999978 4.605 157.863567 4.017 176.84634979999973 4.797 192.59175809999988 5.242 129.50408370000008 3.946 146.50718789999996 3.65 186.42445749999976 5.123 148.30536739999985 4.39 136.55680980000005 4.004 173.66152230000017 5.197 168.13282429999975 4.934 176.53636969999968 4.606 173.03949059999994 4.382 157.52762470000022 3.712 160.1519846000001 4.349 236.2541372000001 6.082 185.39781480000013 4.785 122.83195830000004 4.158 204.17109939999978 5.933 178.02313100000023 5.121 163.80051140000006 5.188 176.34173099999998 11.424 173.79544120000008 4.578 180.27082659999976 11.301)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 4.2766 1 0.0 0 0.0 0 0.1864 1 0.0 0 0.0 0 0.5953 1 0.0 0 0.0 0 0.102 1 0.0 0 1.4437 1 0.0 0 0.0 0 0.0 0 4.0 1 0.3905 1 0.0 0 0.0 0 0.0 0 0.3309 1)
Average genome size in population (length): 179.159
Average program size in population (points): 180.159
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 242.1641664724895
Average age in population: 234.5977206056717
Median age in population: 239.897567945913
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.586
Error (vector) diversity:			 0.814
Behavioral diversity:				 0.819
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 556476665
--- Timings ---
Current time: 1529615847292 milliseconds
Total Time:        1021.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       281.4 seconds, 27.5%
Fitness Testing:    582.6 seconds, 57.0%
Report:             157.5 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 41496.226
Test mean error for best: 20.74811
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 51.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -45.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -43.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 23.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_swap} {:instruction float_dec} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_stackdepth} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_max float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_yankdup float_inc integer_dec float_inc float_inc integer_div integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items integer_mult float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_shove float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_dec float_shove integer_add integer_yankdup integer_add float_dec float_shove print_integer float_dec print_integer float_sub float_dec float_dec float_dec float_dec integer_swap float_dec float_dec integer_dup_items float_max float_dec float_dec integer_dup_items float_dec float_dec integer_add float_swap float_dec float_min float_dec float_dec float_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_stackdepth tag_integer_357 float_dec integer_shove float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_inc float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min integer_swap float_min float_dec integer_swap float_dec float_dec float_swap integer_swap print_integer float_inc integer_swap print_integer float_inc float_inc integer_max float_dup float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 5.0 2 18.0 2 3.0 1 0.0 0 34.0 2 1.0 1 17.0 2 0.0 0 1.0 1 3.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 337.0
Mean: 6.74
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4889.0055052000025
Median total errors in population: 717.8483
Error averages by case: (194.7121888000002 5.565 200.73113769999978 5.04 160.58492239999995 4.118 200.37898509999982 5.146 222.83679579999975 5.727 141.53975949999997 4.06 154.76508330000004 3.646 208.86891249999974 5.492 157.42302549999994 4.586 144.70066109999996 4.031 199.85266250000006 5.565 198.78067189999976 5.388 206.25043569999968 5.089 181.00853619999998 4.602 165.9829943000001 3.889 168.3158772000001 4.529 251.38977840000013 6.229 217.7044053000002 5.334 135.83731469999995 4.19 234.3055625999998 6.342 205.14345180000012 5.572 192.49023259999987 5.672 205.26507410000008 11.421 198.19540340000017 4.949 204.52363279999983 11.236)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.9219 1 0.0 0 0.0 0 0.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0087 1 0.0 0 1.4233 1 0.0 0 0.0 0 0.0 0 0.5991 1 0.1867 1 0.0 0 0.1174 1 0.0 0 0.3638 1)
Average genome size in population (length): 178.189
Average program size in population (points): 179.189
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 243.2817986192076
Average age in population: 232.4843498832104
Median age in population: 241.1466217081908
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.584
Error (vector) diversity:			 0.828
Behavioral diversity:				 0.832
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 560932956
--- Timings ---
Current time: 1529615854530 milliseconds
Total Time:        1028.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       283.0 seconds, 27.5%
Fitness Testing:    586.9 seconds, 57.0%
Report:             158.8 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 37802.872800000005
Test mean error for best: 18.90144
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 51.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -45.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -43.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 23.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction tagged_573} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_240} {:instruction integer_swap} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_inc} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items print_integer float_dec float_max float_dec float_mult float_yankdup float_dec tagged_573 tagged_930 float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_div float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec float_shove float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap float_dec print_integer integer_flush float_dec float_dec integer_swap tagged_240 integer_swap integer_yank print_integer integer_flush float_dec float_dec float_dec tag_integer_1035 integer_inc float_dec tag_integer_1035 float_dec integer_stackdepth float_dec float_dec float_rot float_dec float_dec float_dec float_mod float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 5.0 2 18.0 2 3.0 1 0.0 0 34.0 2 1.0 1 17.0 2 0.0 0 1.0 1 3.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 337.0
Mean: 6.74
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5317.919933600003
Median total errors in population: 893.69965
Error averages by case: (200.62538230000018 5.598 209.84999639999972 5.185 191.8817493 4.53 207.5210276999998 5.27 233.5498626999999 5.894 170.185294 4.443 188.97038230000007 3.988 217.22353569999956 5.651 188.02203200000008 4.823 172.3540686999999 4.426 214.94041840000025 5.797 206.9349480999998 5.471 214.74327819999968 5.215 209.78424809999987 4.808 191.4543899000002 4.193 196.87124730000005 4.799 284.65776520000003 6.605 224.04302870000026 5.443 159.26325789999996 4.494 239.92410429999987 6.479 219.5655652000003 5.701 205.612562 5.783 213.11840990000016 11.473 204.2653991000001 5.046 210.03598019999976 11.407)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 10.1504 1 0.0 0 0.0 0 0.0 1 0.0 0 0.0 0 0.1915 1 0.0 0 0.0 0 4.1455 1 0.0 0 0.4098 1 0.0 0 0.0 0 0.0 0 7.5991 1 0.0 0 0.0 0 0.1252 1 0.0 0 0.2124 1)
Average genome size in population (length): 179.436
Average program size in population (points): 180.436
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 244.3922787483577
Average age in population: 235.2080803832832
Median age in population: 242.5260106368855
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.598
Error (vector) diversity:			 0.83
Behavioral diversity:				 0.836
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 565420396
--- Timings ---
Current time: 1529615861622 milliseconds
Total Time:        1036.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       284.5 seconds, 27.5%
Fitness Testing:    591.3 seconds, 57.1%
Report:             160.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 42730.3718
Test mean error for best: 21.36519
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 8.2182085795  
Correct output: 44.8179022307  | Program output: 47.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 19.0949473456 
Correct output: -64.1503753092 | Program output: -22.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 46.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 53.7196465918 
Correct output: -59.2785304711 | Program output: -40.2785304711
Correct output: -6.9174150193  | Program output: -8.9174150193 
Correct output: -68.4374020443 | Program output: -67.4374020443
Correct output: -11.1169636129 | Program output: -43.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -41.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -124.5033370034
Correct output: 26.2328206209  | Program output: 25.2328206209 
Correct output: -129.5990711743 | Program output: -94.5990711743
Correct output: -17.8249368738 | Program output: -44.8249368738
Correct output: -16.8176198654 | Program output: -25.8176198654
Correct output: 5.5639147954   | Program output: -12.4360852046
Correct output: 15.7960197363  | Program output: 20.7960197363 
Correct output: -15.2347943829 | Program output: 4.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction integer_pop} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_max float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_yankdup float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_shove float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove integer_pop float_dec float_dec integer_rot float_dec float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap float_dec float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [6.0 2 3.0 1 3.0 1 11.0 2 42.0 2 1.0 1 0.0 0 16.0 2 5.0 1 7.0 2 19.0 2 2.0 1 1.0 1 32.0 2 1.0 1 15.0 2 0.0 0 0.0 0 1.0 1 35.0 3 27.0 2 9.0 2 18.0 12 5.0 2 20.0 13]
Total: 337.0
Mean: 6.74
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5144.7885864
Median total errors in population: 869.5878
Error averages by case: (200.91856430000024 5.602 207.80054509999974 5.031 176.3904095999999 4.347 206.66184209999975 5.16 221.8150631999998 5.763 165.6557249 4.379 179.3764543 3.867 215.64312689999974 5.529 173.71123049999997 4.646 164.9073807 4.34 199.9302100000002 5.619 201.6676148999998 5.437 207.76535409999968 5.07 198.66322539999985 4.879 189.7848274000002 4.315 185.30388650000015 4.894 279.9797220000001 6.629 218.0784137000002 5.247 156.01604830000005 4.44 234.37250339999983 6.308 204.05551450000016 5.529 194.82089989999983 5.637 207.41059470000025 11.491 203.6664727000002 4.944 210.1039572999998 11.186)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0663 1 0.0 0 0.0 0 3.117 1 0.0 0 1.3144 1 0.0 0 0.0 0 0.0 0 4.5991 1 0.1751 1 0.0 0 0.4361 1 0.0 0 0.8256 1)
Average genome size in population (length): 179.083
Average program size in population (points): 180.083
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 245.9746609861766
Average age in population: 235.9671882915345
Median age in population: 243.7903567364013
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.604
Error (vector) diversity:			 0.817
Behavioral diversity:				 0.821
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 569898641
--- Timings ---
Current time: 1529615868704 milliseconds
Total Time:        1043.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       286.0 seconds, 27.4%
Fitness Testing:    595.8 seconds, 57.1%
Report:             161.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 37528.12959999999
Test mean error for best: 18.76406
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_add} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction integer_div} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_sub} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction integer_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_pop} {:instruction integer_shove} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_fromfloat})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_yankdup float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc integer_div integer_rot float_inc float_inc integer_div float_inc float_dup_times integer_sub float_add float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_rot integer_dup_items float_dec float_dec integer_rot float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_dec float_min float_dec float_dec float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec integer_div integer_min float_dec float_dec float_dec integer_swap float_div float_dec float_dec float_mod float_dec float_dec integer_add float_dec float_dec integer_add float_dec print_integer float_dec float_dec float_dec float_dec integer_swap integer_rot float_inc integer_inc float_dec integer_swap integer_rot float_dec integer_shove float_dec float_dec float_dec integer_swap float_div float_dec float_dec tag_integer_1035 float_dec float_dec float_dec tag_integer_357 float_dec integer_shove float_sub tag_integer_1035 float_dec float_rot float_dec integer_div integer_div tag_integer_1035 integer_dec integer_shove float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer integer_pop integer_shove float_inc float_inc float_inc print_float integer_shove integer_fromfloat)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 189
Size: 190
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4682.814472200002
Median total errors in population: 808.67975
Error averages by case: (181.0712387000001 5.081 187.35525499999977 4.689 155.33523119999995 4.087 186.8286152999997 4.851 201.75103559999977 5.42 139.91420769999996 4.29 168.1136851 3.643 194.8481890999997 5.174 152.7553737999999 4.506 145.29081360000004 4.217 179.86915430000022 5.196 180.08472529999977 5.025 190.35444239999973 4.619 187.8925177999999 4.65 175.28373160000027 4.107 175.4831713000001 4.652 276.2812380999999 6.33 199.85634890000023 4.836 133.20960660000006 4.27 217.83989349999985 5.923 186.73853590000036 5.15 173.15571320000004 5.259 186.09205450000005 11.399 183.83331360000005 4.586 190.24138009999982 11.375)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 2.3377 1 0.0 0 4.3735 1 0.0 0 0.0 0 0.0 0 0.6977 1 0.1751 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 180.132
Average program size in population (points): 181.132
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 247.1283195244478
Average age in population: 238.639193774653
Median age in population: 245.001117333141
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.593
Error (vector) diversity:			 0.826
Behavioral diversity:				 0.831
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 574402925
--- Timings ---
Current time: 1529615876071 milliseconds
Total Time:        1050.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       287.5 seconds, 27.4%
Fitness Testing:    600.3 seconds, 57.2%
Report:             162.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 40751.875199999995
Test mean error for best: 20.37594
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 50.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -46.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -44.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 22.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction integer_inc} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction float_min} {:instruction integer_swap} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction integer_flush} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_dec float_dec float_dec float_dec float_dec integer_swap integer_rot float_dec integer_min float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_shove print_integer float_dec print_integer integer_min float_dec integer_inc float_shove float_dec integer_yankdup integer_add float_dec float_shove print_integer float_dec float_shove float_sub float_dec float_dec float_dec float_dec integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec integer_mult float_min integer_swap integer_yank print_integer integer_flush float_dec float_dec integer_swap tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_rot tag_integer_357 float_dec integer_shove float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_inc float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min integer_swap float_min float_dec integer_mod float_dec float_dec float_swap integer_swap print_integer float_inc integer_flush print_integer float_inc float_inc integer_max float_dup float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 4.0 2 18.0 2 3.0 1 0.0 0 35.0 2 1.0 1 18.0 2 0.0 0 1.0 1 4.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 339.0
Mean: 6.78
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5300.628701300001
Median total errors in population: 869.3341
Error averages by case: (199.58455320000016 5.451 211.1159459999997 4.999 193.19058160000003 4.507 208.1869904999997 5.125 225.26562709999965 5.724 173.9363583 4.5 190.18909980000004 3.91 218.45626439999972 5.495 187.39987500000012 4.844 176.61534999999984 4.416 207.64764750000043 5.598 203.21464159999968 5.325 208.47614879999972 4.995 210.63632029999988 4.908 202.20271160000019 4.439 198.0390899000001 4.938 292.1756710999998 6.551 217.40836280000036 5.162 168.69053730000005 4.567 234.28487039999982 6.232 211.8351181000003 5.53 198.33978919999967 5.662 208.95773400000036 11.404 205.23702200000005 4.924 208.78439079999976 11.552)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.1504 1 0.0 0 0.0 0 1.0 1 1.0 1 0.0 0 1.0 1 0.0 0 0.0 0 3.5069 1 0.0 0 4.2515 1 0.0 0 0.0 0 0.0 0 5.5991 1 0.0041 1 0.0 0 0.1016 1 0.0 0 1.1505 1)
Average genome size in population (length): 179.423
Average program size in population (points): 180.423
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 248.6883257945804
Average age in population: 238.4289783307882
Median age in population: 246.3037089188481
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.584
Error (vector) diversity:			 0.823
Behavioral diversity:				 0.829
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 578889255
--- Timings ---
Current time: 1529615883170 milliseconds
Total Time:        1057.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       289.1 seconds, 27.3%
Fitness Testing:    604.6 seconds, 57.2%
Report:             163.7 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 42720.272600000004
Test mean error for best: 21.36014
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 3.2182085795  
Correct output: 44.8179022307  | Program output: 42.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 14.0949473456 
Correct output: -64.1503753092 | Program output: -27.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 41.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 50.7196465918 
Correct output: -59.2785304711 | Program output: -45.2785304711
Correct output: -6.9174150193  | Program output: -13.9174150193
Correct output: -68.4374020443 | Program output: -72.4374020443
Correct output: -11.1169636129 | Program output: -46.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -44.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -129.5033370034
Correct output: 26.2328206209  | Program output: 22.2328206209 
Correct output: -129.5990711743 | Program output: -99.5990711743
Correct output: -17.8249368738 | Program output: -49.8249368738
Correct output: -16.8176198654 | Program output: -30.8176198654
Correct output: 5.5639147954   | Program output: -17.4360852046
Correct output: 15.7960197363  | Program output: 15.7960197363 
Correct output: -15.2347943829 | Program output: -0.2347943829 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_rot} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc tagged_930 float_max float_dec float_dec float_dec integer_sub float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_shove float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec integer_flush float_dec float_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_dec tag_integer_1035 float_dec integer_shove float_dup_times integer_swap integer_rot float_dec integer_rot float_add float_dec float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_inc float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min integer_swap float_min float_dec integer_swap float_dec float_dec float_swap float_yankdup print_integer float_inc integer_swap print_integer float_inc float_inc integer_max float_dup float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [11.0 2 2.0 1 3.0 1 6.0 2 37.0 2 1.0 1 0.0 0 21.0 2 5.0 1 4.0 2 14.0 2 7.0 2 4.0 2 35.0 2 1.0 1 18.0 2 0.0 0 5.0 1 4.0 1 30.0 2 32.0 2 14.0 2 23.0 12 0.0 0 15.0 2]
Total: 339.0
Mean: 6.78
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4661.3308569
Median total errors in population: 745.34735
Error averages by case: (184.7229623000001 5.195 193.13500309999984 4.745 152.8524791 4.043 192.9886686999998 4.911 207.90101139999996 5.439 134.1390141 4.073 158.62176580000008 3.531 200.75843349999974 5.205 150.99157799999992 4.369 141.3422769000001 4.099 187.31230910000008 5.303 184.31575679999983 5.187 189.78391229999986 4.792 177.6921789999999 4.549 157.26646250000016 3.959 163.84287100000006 4.535 252.36576109999996 6.262 199.36224240000013 4.982 137.1745765 4.183 218.03930819999985 6.043 189.86550980000024 5.228 177.78820360000003 5.335 190.6017215000001 11.315 190.24200690000006 4.705 194.8828433 11.354)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.6497 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.2785 1 0.0 0 0.0 0 1.845 1 0.0 0 11.0 1 0.0 0 0.0 0 0.0 0 2.4009 1 0.6553 1 0.0 0 0.0811 1 0.0 0 0.6464 1)
Average genome size in population (length): 180.673
Average program size in population (points): 181.673
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 249.7921690075556
Average age in population: 240.9316295026896
Median age in population: 247.6036698016535
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.589
Error (vector) diversity:			 0.815
Behavioral diversity:				 0.82
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 583407134
--- Timings ---
Current time: 1529615890309 milliseconds
Total Time:        1064.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       290.8 seconds, 27.3%
Fitness Testing:    609.0 seconds, 57.2%
Report:             164.8 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 55151.669799999996
Test mean error for best: 27.57583
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 50.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -46.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -44.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 22.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction float_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_inc} {:instruction integer_add} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_dec float_dec integer_inc float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_swap float_dec float_min float_dec float_dec float_dec float_dec integer_swap integer_rot float_mod float_dec integer_swap integer_yank print_integer integer_flush float_dec float_dec float_dec tag_integer_1035 integer_inc integer_add tag_integer_1035 float_dec integer_stackdepth float_dec float_dec float_rot float_dec float_dec float_dec float_mod float_dec float_dec float_dec float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec integer_dup float_dup_times float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 4.0 2 18.0 2 3.0 1 0.0 0 35.0 2 1.0 1 18.0 2 0.0 0 1.0 1 4.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 339.0
Mean: 6.78
Genome size: 173
Size: 174
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5298.804926400002
Median total errors in population: 875.48805
Error averages by case: (205.79560470000024 5.48 214.09850899999972 4.983 189.0932006 4.254 211.87630269999977 5.108 227.2918764999998 5.64 167.30073230000002 4.359 186.93599250000003 3.911 221.25733079999975 5.494 184.9555484 4.538 170.7008728 4.313 203.8420798000003 5.572 205.31013679999967 5.306 210.7808526999998 4.953 205.70310329999987 4.797 198.40780000000004 4.322 191.45148220000007 4.823 303.08555369999976 6.854 221.25765640000017 5.212 163.33304950000004 4.281 237.38174279999996 6.3 207.77547030000028 5.462 197.29963439999986 5.581 209.3760209000001 11.429 209.0307795000001 4.882 216.11759379999978 11.492)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 6.1604 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.2785 1 0.0 0 0.0 0 0.117 1 0.0 0 0.4693 1 0.0 0 0.0 0 0.0 0 1.4009 2 0.44 1 0.0 0 0.3188 1 0.0 0 0.9105 1)
Average genome size in population (length): 180.709
Average program size in population (points): 181.709
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 251.1327284334524
Average age in population: 241.1852138999246
Median age in population: 248.9222981515466
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.58
Error (vector) diversity:			 0.822
Behavioral diversity:				 0.827
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 587925539
--- Timings ---
Current time: 1529615897691 milliseconds
Total Time:        1072.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       292.5 seconds, 27.3%
Fitness Testing:    613.7 seconds, 57.2%
Report:             165.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 43066.6721
Test mean error for best: 21.53334
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_max} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_inc} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_max} {:instruction float_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_shove} {:instruction integer_inc})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc integer_max integer_yank float_inc integer_rot float_inc integer_rot float_inc integer_dec integer_yank float_inc integer_div integer_rot integer_swap float_inc float_inc integer_yankdup float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_shove float_dec float_max float_dec float_dec integer_dup_times float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_yankdup float_dec float_dec float_dec float_shove float_dec float_dec integer_swap float_div float_dec float_dec float_mod float_dec float_dec integer_add float_dec float_dec integer_add float_dec print_integer float_dec float_dec float_dec integer_sub integer_swap integer_rot float_dec integer_inc float_dec integer_swap integer_rot float_dec integer_shove float_dec float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec float_dec integer_rot float_add float_dec float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_inc float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min integer_swap float_min float_dec integer_swap float_dec float_dec float_swap float_yankdup print_integer float_inc integer_swap print_integer float_inc float_inc integer_max float_dup float_inc float_inc float_inc print_float integer_shove integer_inc)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5417.334472300003
Median total errors in population: 862.4183
Error averages by case: (213.56072360000024 5.499 220.52947989999964 5.138 186.63523069999997 4.216 219.9662607999998 5.231 237.91940089999966 5.757 166.06985129999987 4.395 186.54314400000007 3.872 228.0816977999996 5.611 178.62245219999997 4.486 169.3233641 4.281 217.23533540000022 5.699 215.84610759999978 5.421 220.8456530999998 5.105 205.13496439999992 4.7 197.6149018 4.304 193.05220000000014 4.746 290.20261689999984 6.457 230.15829290000013 5.374 161.69407170000005 4.288 247.09744620000004 6.425 220.79580120000026 5.596 209.32474240000005 5.67 221.76673809999994 11.436 216.97428820000016 5.054 221.92070709999973 11.658)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.2785 1 0.0 0 0.0 0 0.2343 1 0.0 0 10.0 1 0.0 0 0.0 0 0.0 0 0.5991 1 0.1924 1 0.0 0 0.0 0 0.0 0 0.1475 1)
Average genome size in population (length): 179.629
Average program size in population (points): 180.629
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 252.1848133510845
Average age in population: 241.0109819920379
Median age in population: 250.2559168691036
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.573
Error (vector) diversity:			 0.814
Behavioral diversity:				 0.818
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 592417056
--- Timings ---
Current time: 1529615904694 milliseconds
Total Time:        1079.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       294.1 seconds, 27.3%
Fitness Testing:    618.1 seconds, 57.3%
Report:             166.9 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 51374.84199999999
Test mean error for best: 25.68742
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 53.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -43.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -41.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 25.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1025} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_yank} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction print_integer} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_pop} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_yank integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1025 print_integer float_dec integer_rot float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec float_dec integer_dup_items float_dec float_dec tag_integer_1035 float_yank float_shove print_integer float_dec float_max float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap integer_swap float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove print_integer tag_integer_1035 float_dec float_rot float_dec integer_pop tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 7.0 2 18.0 2 3.0 1 0.0 0 32.0 2 1.0 1 15.0 2 0.0 0 1.0 1 1.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 333.0
Mean: 6.66
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5333.250753800001
Median total errors in population: 902.6272
Error averages by case: (203.84540760000016 5.382 207.52600459999965 4.881 201.23255029999996 4.502 208.2961868999998 5.033 222.7703735999998 5.659 180.8534517 4.646 189.00970320000008 4.02 215.25340039999958 5.402 189.68062920000003 4.666 181.8388510999999 4.56 202.89095280000018 5.491 204.22249159999976 5.242 209.97460319999976 4.914 213.71873339999996 4.908 198.75034650000015 4.397 202.4904536000002 4.898 305.35341719999985 6.829 217.8860375000002 5.155 172.29799490000005 4.581 235.6016952999998 6.227 208.92979820000033 5.407 194.99201309999987 5.559 209.09160640000002 11.455 205.98952640000013 4.848 210.53252509999984 11.56)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.6793 1 0.0 0 0.0 0 6.7962 1 0.0 0 7.082 1 0.0 0 0.0 0 0.0 0 6.5991 1 0.211 1 0.0 0 0.3281 1 0.0 0 0.7446 1)
Average genome size in population (length): 179.431
Average program size in population (points): 180.431
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 253.9383467664836
Average age in population: 241.2456369394474
Median age in population: 251.5660592861121
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.621
Error (vector) diversity:			 0.821
Behavioral diversity:				 0.825
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 596903931
--- Timings ---
Current time: 1529615911462 milliseconds
Total Time:        1086.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       295.6 seconds, 27.2%
Fitness Testing:    622.3 seconds, 57.3%
Report:             168.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 42504.8523
Test mean error for best: 21.25243
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 53.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -43.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -41.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 25.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1025} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_yank} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction tagged_456} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction print_integer} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_pop} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_yank integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mod integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1025 print_integer float_dec integer_rot float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec float_dec integer_dup_items float_dec float_dec tag_integer_1035 float_yank float_shove print_integer float_dec float_dec float_dec float_shove float_dec integer_yankdup tagged_456 print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap integer_swap float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove print_integer tag_integer_1035 float_dec float_rot float_dec integer_pop tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 7.0 2 18.0 2 3.0 1 0.0 0 32.0 2 1.0 1 15.0 2 0.0 0 1.0 1 1.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 333.0
Mean: 6.66
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4844.168472400002
Median total errors in population: 861.7083
Error averages by case: (181.5988028000002 5.494 189.7510325999997 5.069 178.07655569999994 4.411 187.35478669999964 5.123 208.43629019999977 5.746 161.44347140000002 4.608 178.3068753 4.11 197.11581249999963 5.521 175.5265248 4.703 159.0001319000001 4.562 191.3771271000002 5.555 180.14405619999965 5.343 186.90464159999956 4.937 191.78082039999993 4.903 180.4839089000002 4.576 178.93377890000008 4.934 276.90069640000024 6.329 197.3723576000002 5.251 152.35653960000002 4.542 213.6421848999998 6.289 193.32223380000042 5.489 180.95150269999988 5.651 187.88268930000018 11.383 184.35884350000012 4.975 190.06680759999975 11.576)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.8888 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.117 1 0.0 0 0.37 1 0.0 0 0.0 0 0.0 0 0.0993 1 0.2023 1 0.0 0 0.0649 1 0.0 0 0.8498 1)
Average genome size in population (length): 177.825
Average program size in population (points): 178.825
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 254.8615862181015
Average age in population: 238.3738900895221
Median age in population: 252.782406098438
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.56
Error (vector) diversity:			 0.798
Behavioral diversity:				 0.806
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 601350343
--- Timings ---
Current time: 1529615918500 milliseconds
Total Time:        1093.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       297.1 seconds, 27.2%
Fitness Testing:    626.7 seconds, 57.3%
Report:             169.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 47186.605899999995
Test mean error for best: 23.59330
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 51.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -45.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -43.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 23.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction tagged_573} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction integer_rot} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction tagged_881} {:instruction float_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_swap} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction integer_inc} {:instruction integer_swap} {:instruction float_dec} {:instruction print_integer} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1006} {:instruction float_yank} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_yankdup float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mult integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_mult float_yankdup float_dec tagged_573 tagged_930 float_max float_dec float_dec float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_div float_dec integer_rot print_integer float_dec print_integer integer_min float_dec float_dec float_shove integer_add integer_yankdup integer_add float_dec float_shove print_integer float_dec print_integer float_sub float_dec float_dec float_dec float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 integer_swap float_div float_dec float_dec integer_swap integer_rot float_dec tagged_881 float_min float_dec integer_swap float_dec float_swap float_dec tag_integer_1035 integer_inc integer_swap float_dec print_integer float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1006 float_yank float_rot float_dec integer_div tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 5.0 2 18.0 2 3.0 1 0.0 0 34.0 2 1.0 1 17.0 2 0.0 0 1.0 1 3.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 337.0
Mean: 6.74
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5365.0688775000035
Median total errors in population: 913.6274000000001
Error averages by case: (202.22007990000017 5.523 209.60440409999967 5.002 197.3575598 4.527 209.3998639999997 5.074 225.8567557999998 5.682 180.73345700000002 4.619 197.60581889999997 4.151 217.1026225999996 5.479 193.19239330000008 4.727 182.73064339999993 4.601 204.1683192000002 5.561 202.09876699999978 5.4 207.4781688999997 4.976 217.97373599999992 5.008 210.12631840000026 4.64 205.71929320000012 5.041 305.1912034999999 6.644 217.46197460000022 5.231 171.65577830000007 4.594 234.3654398999999 6.295 207.69513550000048 5.516 196.31791129999988 5.595 208.99260190000024 11.446 206.36118770000016 4.861 211.98044329999982 11.486)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 4.0189 1 0.0 0 2.5692 1 0.0 0 0.0 0 0.0 0 1.4009 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0286 1)
Average genome size in population (length): 177.71
Average program size in population (points): 178.71
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 256.340650946063
Average age in population: 240.1050696543634
Median age in population: 254.03723131085
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.593
Error (vector) diversity:			 0.804
Behavioral diversity:				 0.812
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 605794726
--- Timings ---
Current time: 1529615925512 milliseconds
Total Time:        1100.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       298.8 seconds, 27.2%
Fitness Testing:    630.9 seconds, 57.4%
Report:             170.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 42979.042
Test mean error for best: 21.48952
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction integer_dec} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mult integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult integer_dec float_dec float_inc float_dec float_max integer_min float_dec float_dec float_dec float_shove print_integer float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec float_max float_shove integer_rot float_dec float_max integer_dup_items float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer integer_shove print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec integer_flush float_dec integer_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_dec integer_dec float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dup_items float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_frominteger float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5283.5065265
Median total errors in population: 879.58365
Error averages by case: (209.0463435000002 5.546 217.70347099999978 5.168 177.69510739999993 4.344 215.76217799999972 5.258 229.6987601999997 5.83 172.37620500000006 4.529 176.8881757 3.886 224.72414729999971 5.646 174.17577049999994 4.557 164.31859629999994 4.54 207.89935760000037 5.731 209.0166332999998 5.494 215.8768097999998 5.149 195.02316409999992 4.875 192.90198890000025 4.389 183.0725679000001 4.894 289.87753969999983 6.718 227.4827194000002 5.459 155.14106020000006 4.43 244.4097774 6.461 211.6305124000004 5.685 201.44901330000005 5.748 211.7227954000001 11.396 212.82210010000014 5.118 220.38373209999975 11.557)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.8278 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.2785 1 0.0 0 0.0 0 0.117 1 0.0 0 1.4694 1 0.0 0 0.0 0 0.0 0 5.5991 1 0.0 0 0.0 0 0.1174 1 0.0 0 1.4803 1)
Average genome size in population (length): 179.201
Average program size in population (points): 180.201
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 257.3637169754753
Average age in population: 243.3655473874889
Median age in population: 255.3027242040492
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.607
Error (vector) diversity:			 0.825
Behavioral diversity:				 0.832
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 610276180
--- Timings ---
Current time: 1529615932940 milliseconds
Total Time:        1107.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       300.6 seconds, 27.1%
Fitness Testing:    635.5 seconds, 57.4%
Report:             171.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 42979.042
Test mean error for best: 21.48952
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction integer_dec} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot float_dec integer_mult integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult integer_dec float_dec float_inc float_dec float_max integer_min float_dec float_dec float_dec float_shove print_integer float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec float_max float_shove integer_rot float_dec float_max integer_dup_items float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer integer_shove print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec integer_flush float_dec integer_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_dec integer_dec float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dup_items float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_frominteger float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5454.267879300002
Median total errors in population: 863.0
Error averages by case: (214.55058890000026 5.615 222.17411189999973 5.226 187.97777640000004 4.533 221.1684288999997 5.288 244.3687077999997 5.932 175.6376472 4.7 183.1938984 3.998 228.9204430999997 5.706 177.86488470000003 4.843 165.93563929999996 4.681 227.51000380000022 5.77 218.3433381999998 5.634 224.56233689999965 5.212 204.89883429999995 5.079 193.24136340000027 4.572 192.17292260000016 5.102 270.9513254 6.705 233.2255450000002 5.519 160.3258827000001 4.761 250.93174999999988 6.511 227.28215410000038 5.747 216.0917511999999 5.877 223.68981600000018 11.403 218.6299927000001 5.169 225.3037363999998 11.732)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 8.7062 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.3255 1 0.0 0 1.6521 1 0.0 0 0.0 0 0.0 0 5.5991 2 0.0 0 0.0 0 1.0 1 0.0 0 0.7435 1)
Average genome size in population (length): 178.571
Average program size in population (points): 179.571
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 258.6641057451384
Average age in population: 244.4460997916412
Median age in population: 256.6183702092061
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.585
Error (vector) diversity:			 0.8
Behavioral diversity:				 0.804
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 614742245
--- Timings ---
Current time: 1529615940045 milliseconds
Total Time:        1114.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       302.1 seconds, 27.1%
Fitness Testing:    640.0 seconds, 57.4%
Report:             172.3 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 42873.042
Test mean error for best: 21.43652
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 6.2182085795  
Correct output: 44.8179022307  | Program output: 45.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 17.0949473456 
Correct output: -64.1503753092 | Program output: -24.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 44.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -42.2785304711
Correct output: -6.9174150193  | Program output: -10.9174150193
Correct output: -68.4374020443 | Program output: -69.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -126.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -96.5990711743
Correct output: -17.8249368738 | Program output: -46.8249368738
Correct output: -16.8176198654 | Program output: -27.8176198654
Correct output: 5.5639147954   | Program output: -14.4360852046
Correct output: 15.7960197363  | Program output: 18.7960197363 
Correct output: -15.2347943829 | Program output: 2.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_div} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction integer_dec} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add integer_div tagged_554 integer_rot float_dec integer_mult integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult integer_dec float_dec float_inc float_dec float_max integer_min float_dec float_dec float_dec float_shove print_integer float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec float_max float_dec integer_rot float_dec float_max integer_dup_items float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer integer_shove print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec integer_flush float_dec integer_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_dec integer_dec float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dup_items float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_frominteger float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth)
Errors: [8.0 2 1.0 1 3.0 1 9.0 2 40.0 1 1.0 1 0.0 0 18.0 2 5.0 1 6.0 2 17.0 2 4.0 2 1.0 1 33.0 2 1.0 1 16.0 2 0.0 0 2.0 1 2.0 1 33.0 3 29.0 2 11.0 2 20.0 12 3.0 1 18.0 13]
Total: 339.0
Mean: 6.78
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5504.105653900001
Median total errors in population: 891.4892499999999
Error averages by case: (213.29785320000025 5.631 220.4332071999997 5.192 199.26370369999998 4.515 219.43313989999987 5.294 234.11934799999977 5.922 183.63259620000002 4.73 201.17935870000002 4.147 226.84245329999976 5.662 191.58234619999993 4.756 181.28792300000003 4.652 216.8164929000002 5.799 212.8363207999998 5.618 219.20762059999979 5.204 213.651534 5.049 208.72358790000007 4.63 201.6493107000001 5.029 291.16101539999994 6.548 229.32409660000008 5.462 168.39492340000004 4.566 246.00257639999987 6.478 219.60637810000034 5.734 206.51305909999996 5.815 216.9583816000001 11.389 216.55996270000014 5.176 221.03046429999984 11.6)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 4.6172 1 0.0 0 4.2569 1 0.0 0 0.0 0 0.0 0 1.5991 1 0.0 0 0.0 0 0.1252 1 0.0 0 0.2441 1)
Average genome size in population (length): 179.768
Average program size in population (points): 180.768
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 259.8310441809317
Average age in population: 248.2282814673067
Median age in population: 257.8931172185824
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.573
Error (vector) diversity:			 0.808
Behavioral diversity:				 0.816
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 619237689
--- Timings ---
Current time: 1529615947091 milliseconds
Total Time:        1121.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       303.7 seconds, 27.1%
Fitness Testing:    644.4 seconds, 57.5%
Report:             173.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 43129.376
Test mean error for best: 21.56469
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_div} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_max} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction integer_dec} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction integer_dup} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add integer_div tagged_554 integer_rot float_max integer_mult integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult integer_dec float_dec float_inc float_dec integer_dup integer_min float_dec float_dec float_dec float_shove print_integer float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec float_max float_dec integer_rot float_dec float_max integer_dup_items float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer integer_shove print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec integer_flush float_dec integer_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_dec integer_dec float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dup_items float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_frominteger float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5036.846537000002
Median total errors in population: 852.5181
Error averages by case: (195.36621580000025 5.543 201.14960199999973 5.104 178.33419859999995 4.327 200.87170109999974 5.138 217.2746662999998 5.745 162.16080680000002 4.417 175.4302761000001 3.747 207.99216939999968 5.525 170.38392789999997 4.566 157.44606299999995 4.413 197.78872010000018 5.599 196.9890808999999 5.518 203.73781169999978 5.014 192.5605277999999 4.755 188.88615820000027 4.352 179.9599765000002 4.771 279.6459228 6.209 215.51955490000017 5.27 151.44514280000007 4.444 231.5145175999999 6.278 200.75034010000041 5.5 187.5666342999999 5.638 202.17023650000013 11.369 197.72333460000013 4.941 204.5169511999998 11.479)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 4.117 1 0.0 0 6.3644 1 0.0 0 0.0 0 0.0 0 7.5991 1 2.0E-4 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 177.954
Average program size in population (points): 178.954
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 261.3694407901979
Average age in population: 244.9561370073783
Median age in population: 259.0648270593718
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.581
Error (vector) diversity:			 0.821
Behavioral diversity:				 0.825
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 623687474
--- Timings ---
Current time: 1529615954082 milliseconds
Total Time:        1128.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       305.2 seconds, 27.0%
Fitness Testing:    648.8 seconds, 57.5%
Report:             174.5 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 43129.376
Test mean error for best: 21.56469
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_div} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_max} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction integer_dec} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction integer_dup} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add integer_div tagged_554 integer_rot float_max integer_mult integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult integer_dec float_dec float_inc float_dec integer_dup integer_min float_dec float_dec float_dec float_shove print_integer float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec float_max float_dec integer_rot float_dec float_max integer_dup_items float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer integer_shove print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec integer_flush float_dec integer_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_dec integer_dec float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dup_items float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_frominteger float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5433.246253600001
Median total errors in population: 876.09485
Error averages by case: (202.46602320000008 5.65 211.1881597999996 5.177 200.0557383 4.28 210.45589059999978 5.314 232.15658299999996 5.785 182.75033720000008 4.644 202.77914449999997 4.033 219.30601679999967 5.657 183.58441029999983 4.358 180.31897839999982 4.239 214.99504100000001 5.768 209.96020189999982 5.434 217.32718099999965 5.223 218.96409239999988 4.71 214.7703367000002 4.543 206.63956850000008 4.699 290.8721209999999 6.655 228.1956949000003 5.511 166.37406570000005 4.227 243.89403159999972 6.504 216.67944710000037 5.729 204.23472710000004 5.739 214.81423420000024 11.501 206.92101630000013 5.146 211.50921209999987 11.508)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 7.117 1 0.0 0 4.2408 1 0.0 0 0.0 0 0.0 0 8.5991 1 0.7003 1 0.0 0 0.3039 1 0.0 0 0.0 1)
Average genome size in population (length): 177.643
Average program size in population (points): 178.643
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 262.5366316068187
Average age in population: 246.1542721070329
Median age in population: 260.3754705622425
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.602
Error (vector) diversity:			 0.813
Behavioral diversity:				 0.816
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 628129409
--- Timings ---
Current time: 1529615961141 milliseconds
Total Time:        1135.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       306.7 seconds, 27.0%
Fitness Testing:    653.3 seconds, 57.5%
Report:             175.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 43129.376
Test mean error for best: 21.56469
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_div} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_max} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction integer_dec} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction integer_dup} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add integer_div tagged_554 integer_rot float_max integer_mult integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult integer_dec float_dec float_inc float_dec integer_dup integer_min float_dec float_dec float_dec float_shove print_integer float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec float_max float_dec integer_rot float_dec float_max integer_dup_items float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer integer_shove print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec integer_flush float_dec integer_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_dec integer_dec float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dup_items float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_frominteger float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5480.196894800002
Median total errors in population: 886.7467999999999
Error averages by case: (207.08362140000025 5.676 216.49801489999962 5.216 190.45775380000003 4.608 214.36931739999972 5.339 236.611581 5.951 180.65439129999993 4.697 197.46897370000005 4.14 224.06644069999956 5.688 192.88022949999998 4.943 181.91429050000002 4.887 216.443995 5.828 213.3324979999998 5.602 221.7020598999997 5.173 220.01229679999992 5.241 207.40295230000018 4.544 207.97639570000018 5.215 279.0565520000001 6.47 232.01173660000038 5.45 173.51812539999997 4.824 249.0084252999997 6.453 218.85714270000048 5.705 206.92110249999993 5.814 217.7097348000003 11.404 211.75535810000014 5.2 216.82990549999985 11.586)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 8.9927 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 2.883 1 0.0 0 3.2928 1 0.0 0 0.0 0 0.0 0 6.5991 1 0.0 0 0.0 0 0.5639 1 0.0 0 0.0 0)
Average genome size in population (length): 177.796
Average program size in population (points): 178.796
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 263.5204910433265
Average age in population: 246.8239427051741
Median age in population: 261.6367553008731
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.585
Error (vector) diversity:			 0.803
Behavioral diversity:				 0.807
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 632575032
--- Timings ---
Current time: 1529615968494 milliseconds
Total Time:        1142.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       308.2 seconds, 27.0%
Fitness Testing:    657.8 seconds, 57.6%
Report:             176.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 42902.0302
Test mean error for best: 21.45102
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_div} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_mult} {:instruction integer_dec} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1011} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_items} {:instruction float_dec} {:instruction print_integer} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add integer_div tagged_554 integer_rot float_dec integer_mult integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dup_items float_swap float_mult integer_dec float_dec float_inc float_dec float_max integer_min float_dec float_dec float_dec float_shove print_integer float_dec float_dec tag_integer_1011 float_dec float_shove print_integer float_dec float_max float_dec integer_rot float_dec float_max integer_dup_items float_dec print_integer print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer integer_shove print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec integer_flush float_dec integer_dec float_dec integer_swap integer_rot float_mod float_dec float_dec float_dec float_dec integer_dec float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dup_items float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_frominteger float_dup_times tag_integer_1035 float_mult integer_rot float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_swap float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5273.7331374
Median total errors in population: 943.63525
Error averages by case: (198.9717791000002 5.581 210.33549909999968 5.153 187.37619420000004 4.559 208.84202589999967 5.227 228.38132869999984 5.944 175.3290506999999 4.747 188.56680820000003 4.033 217.27314579999953 5.575 179.89280240000002 4.666 168.5654346999999 4.655 208.11102700000004 5.815 205.3954770999998 5.768 210.9986518999996 5.191 207.10892859999984 4.969 197.05837410000026 4.554 194.47238920000015 4.967 286.2615261999999 6.802 222.89281230000032 5.477 158.74513239999996 4.649 238.33483689999983 6.476 209.53741930000038 5.656 200.59969969999995 5.816 210.66940740000007 11.257 206.0624462000001 5.053 209.8949402999998 11.466)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.883 1 0.0 0 5.4693 1 0.0 0 0.0 0 0.0 0 8.5991 2 0.3447 1 0.0 0 0.0 0 0.0 0 1.0 1)
Average genome size in population (length): 177.161
Average program size in population (points): 178.161
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 265.1124637953345
Average age in population: 246.3030898612461
Median age in population: 262.852465312855
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.612
Error (vector) diversity:			 0.827
Behavioral diversity:				 0.833
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 637005366
--- Timings ---
Current time: 1529615975550 milliseconds
Total Time:        1150.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       309.8 seconds, 26.9%
Fitness Testing:    662.1 seconds, 57.6%
Report:             178.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 38277.92930000001
Test mean error for best: 19.13896
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_sub} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1025} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction print_integer} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_pop} {:instruction tag_integer_1035} {:instruction integer_yankdup} {:instruction float_swap} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_inc float_dec integer_dup_times float_dec in2 float_sub float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot integer_yank integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_dup_times integer_dup_items float_add float_dup_times float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1025 print_integer float_dec integer_rot float_dec integer_sub tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_frominteger float_dec float_dec float_shove print_integer float_dec print_integer integer_yankdup float_dec float_dec float_dec float_shove float_dec print_integer integer_swap float_div float_dec float_dec float_div float_dec integer_shove float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap integer_swap float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_pop tag_integer_1035 integer_yankdup float_swap float_dup_times tag_integer_1035 float_mult float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5815.214647500001
Median total errors in population: 939.5325499999999
Error averages by case: (217.0912150000002 5.858 227.61287269999974 5.409 211.96345840000006 4.652 225.78128139999976 5.429 245.32202569999973 6.098 197.98686539999994 4.837 215.7918355 4.26 234.08898829999958 5.874 206.71558009999987 4.824 199.4075688999999 4.826 225.31797020000027 5.999 223.1715025999998 5.83 232.2466484999997 5.423 229.41993869999988 5.13 223.30614950000026 4.767 217.42565870000018 5.127 320.75013380000007 6.881 242.93181590000034 5.728 187.45246719999992 4.699 259.03176079999986 6.697 228.03631440000058 5.915 218.2445284999999 5.978 228.52422550000026 11.418 222.13530240000017 5.303 227.08853939999986 11.408)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 1.8653 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 3.883 1 0.0 0 1.8244 1 0.0 0 0.0 0 0.0 0 5.5991 2 0.1953 1 0.0 0 1.0 1 0.0 0 0.1741 1)
Average genome size in population (length): 177.52
Average program size in population (points): 178.52
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 266.2226040976398
Average age in population: 248.1656716616889
Median age in population: 264.1069633136461
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.593
Error (vector) diversity:			 0.788
Behavioral diversity:				 0.795
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 641444123
--- Timings ---
Current time: 1529615982765 milliseconds
Total Time:        1157.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       311.6 seconds, 26.9%
Fitness Testing:    666.5 seconds, 57.6%
Report:             179.1 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 38277.92930000001
Test mean error for best: 19.13896
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_sub} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1025} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction print_integer} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_pop} {:instruction tag_integer_1035} {:instruction integer_yankdup} {:instruction float_swap} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_inc float_dec integer_dup_times float_dec in2 float_sub float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot integer_yank integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_dup_times integer_dup_items float_add float_dup_times float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1025 print_integer float_dec integer_rot float_dec integer_sub tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_frominteger float_dec float_dec float_shove print_integer float_dec print_integer integer_yankdup float_dec float_dec float_dec float_shove float_dec print_integer integer_swap float_div float_dec float_dec float_div float_dec integer_shove float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap integer_swap float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_pop tag_integer_1035 integer_yankdup float_swap float_dup_times tag_integer_1035 float_mult float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5348.404315000002
Median total errors in population: 885.8704
Error averages by case: (198.79809050000023 5.762 205.36578549999967 5.193 194.15703089999997 4.478 204.3939544999997 5.275 233.1636557999999 5.925 182.30003230000003 4.837 192.7301864000001 4.089 212.9275603999996 5.678 188.49238549999998 4.622 176.93747269999994 4.724 213.12300870000024 5.805 204.6615482999999 5.632 211.85215209999973 5.303 210.50386109999988 5.003 209.7145011000002 4.692 198.95459910000022 5.003 293.10659309999994 6.815 222.07052040000028 5.534 168.80227110000007 4.694 237.8915025 6.531 216.51481820000043 5.743 205.20517779999986 5.832 214.22614190000007 11.408 201.5255804000002 5.112 206.05888469999996 11.237)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.2785 1 0.0 0 0.0 0 2.6287 1 0.0 0 8.2142 1 0.0 0 0.0 0 0.2328 1 1.4009 1 0.0 0 0.0 0 0.2947 1 0.0 0 0.0 0)
Average genome size in population (length): 175.558
Average program size in population (points): 176.558
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 267.5896510282634
Average age in population: 244.8774209203656
Median age in population: 265.3160777582999
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.59
Error (vector) diversity:			 0.795
Behavioral diversity:				 0.801
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 645833872
--- Timings ---
Current time: 1529615990409 milliseconds
Total Time:        1164.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       313.1 seconds, 26.9%
Fitness Testing:    671.1 seconds, 57.6%
Report:             180.2 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 43044.37230000001
Test mean error for best: 21.52219
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction tagged_554} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_930} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction print_integer} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction 55.88035634864025})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc float_inc float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_swap integer_swap float_inc float_dup_times integer_dup_items float_add float_dup_times tagged_554 integer_rot integer_yankdup integer_mod integer_rot integer_dup_items print_integer float_dec float_max float_dec float_mult float_yankdup float_dec float_frominteger tagged_930 float_max float_dec float_dec float_inc float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max float_dec float_dec integer_swap float_dec integer_yankdup float_dec print_integer float_sub float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max integer_add float_dec integer_dec float_dec float_dec float_div integer_min float_dec integer_swap float_dec integer_swap float_dec float_frominteger integer_rot integer_rot float_dec integer_flush float_dec float_dec float_dec integer_swap float_dec float_frominteger integer_rot integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult integer_yankdup float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth 55.88035634864025)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5169.3243364
Median total errors in population: 885.48895
Error averages by case: (196.09169730000028 5.659 205.90542739999975 5.191 191.24449989999997 4.502 203.80911419999973 5.253 222.24024909999977 5.832 165.43531000000002 4.76 183.88607079999997 4.033 213.18528789999968 5.604 179.55111279999997 4.687 168.35333849999998 4.634 202.87122110000024 5.721 199.52503489999978 5.601 210.6940329999998 5.225 202.7423492999999 4.942 188.96455450000016 4.511 190.37151050000014 4.922 272.97128580000015 6.52 221.37744530000026 5.434 153.95640420000004 4.604 238.38342949999986 6.388 208.2079881000003 5.61 194.10324189999994 5.74 204.98499260000025 11.352 201.17567350000016 5.076 206.29606429999987 11.196)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.1504 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.4394 1 0.0 0 0.2046 1 0.0 0 0.0 0 0.0 0 3.5991 1 0.0041 1 0.0 0 0.0 0 0.0 0 0.2676 1)
Average genome size in population (length): 177.291
Average program size in population (points): 178.291
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 268.585838134259
Average age in population: 250.8146942768379
Median age in population: 266.4876705192213
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.605
Error (vector) diversity:			 0.832
Behavioral diversity:				 0.839
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 650266601
--- Timings ---
Current time: 1529615997766 milliseconds
Total Time:        1171.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       314.7 seconds, 26.9%
Fitness Testing:    675.5 seconds, 57.6%
Report:             181.6 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 38277.92930000001
Test mean error for best: 19.13896
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 52.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -44.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -42.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 24.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_sub} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_dup_times} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1025} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_sub} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction print_integer} {:instruction integer_swap} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_min} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_swap} {:instruction float_frominteger} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_pop} {:instruction tag_integer_1035} {:instruction integer_yankdup} {:instruction float_swap} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_add})
Best program: (integer_yank in1 tag_integer_1031 integer_sub float_dec float_dec float_mult in2 integer_inc float_dec integer_dup_times float_dec in2 float_sub float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot integer_yank integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc float_inc integer_div float_inc integer_rot integer_swap float_inc float_dup_times integer_dup_items float_add float_dup_times float_max float_dec float_dec float_swap float_mult float_yankdup float_dec float_inc float_dec float_max float_dec float_dec float_dec float_dec tag_integer_1025 print_integer float_dec integer_rot float_dec integer_sub tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_frominteger float_dec float_dec float_shove print_integer float_dec print_integer integer_yankdup float_dec float_dec float_dec float_shove float_dec print_integer integer_swap float_div float_dec float_dec float_div float_dec integer_shove float_dec float_dec tag_integer_1035 float_dec float_shove print_integer float_dec print_integer integer_dup_times float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max float_dec float_dec integer_min float_shove float_frominteger float_dec float_div integer_min float_dec integer_swap float_dec integer_swap integer_swap float_frominteger integer_swap integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_pop tag_integer_1035 integer_yankdup float_swap float_dup_times tag_integer_1035 float_mult float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_swap print_integer float_inc float_inc float_inc print_float integer_stackdepth float_add)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 6.0 2 18.0 2 3.0 1 0.0 0 33.0 2 1.0 1 16.0 2 0.0 0 1.0 1 2.0 1 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 335.0
Mean: 6.7
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5872.772358100002
Median total errors in population: 942.99865
Error averages by case: (223.83627580000032 5.896 239.3584320999996 5.486 204.3948821999999 4.566 236.11526539999974 5.537 256.3331537999998 6.118 180.49612750000017 4.887 198.1709122 4.233 246.68428919999957 5.901 201.25728080000005 4.772 188.23038299999996 4.792 241.8508251000001 6.051 233.49235509999977 5.941 243.3404424999997 5.534 222.67142249999986 5.094 208.19528880000024 4.763 210.48930360000028 5.102 308.54897959999994 6.787 252.9660413000004 5.821 178.9741186000001 4.665 269.2678705999998 6.78 244.00226020000042 5.992 230.13987299999994 6.014 238.84324080000016 11.36 233.53639730000017 5.39 232.72793709999985 11.367)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 2.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 6.6525 1 0.0 0 4.0857 1 0.0 0 0.0 0 0.0 0 3.4009 2 0.8249 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.315
Average program size in population (points): 177.315
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 270.0278096209447
Average age in population: 249.6643575052543
Median age in population: 267.7134141794364
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.599
Error (vector) diversity:			 0.807
Behavioral diversity:				 0.813
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 654674916
--- Timings ---
Current time: 1529616005021 milliseconds
Total Time:        1179.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       316.2 seconds, 26.8%
Fitness Testing:    679.8 seconds, 57.7%
Report:             183.0 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 51235.297699999996
Test mean error for best: 25.61765
;;------------------------------
Outputs of best individual on training cases:
Correct output: 14.2182085795  | Program output: 7.2182085795  
Correct output: 44.8179022307  | Program output: 46.8179022307 
Correct output: 95.8032792622  | Program output: 92.8032792622 
Correct output: 8.0949473456   | Program output: 18.0949473456 
Correct output: -64.1503753092 | Program output: -23.1503753092
Correct output: 27.1310761693  | Program output: 28.1310761693 
Correct output: -34.4699592842 | Program output: -34.4699592842
Correct output: 62.8135887966  | Program output: 45.8135887966 
Correct output: 96.6123363982  | Program output: 91.6123363982 
Correct output: 46.7196465918  | Program output: 54.7196465918 
Correct output: -59.2785304711 | Program output: -41.2785304711
Correct output: -6.9174150193  | Program output: -9.9174150193 
Correct output: -68.4374020443 | Program output: -68.4374020443
Correct output: -11.1169636129 | Program output: -42.1169636129
Correct output: -76.8272599297 | Program output: -75.8272599297
Correct output: -26.5306664135 | Program output: -40.5306664135
Correct output: -40.4578849398 | Program output: -40.4578849398
Correct output: -124.5033370034 | Program output: -125.5033370034
Correct output: 26.2328206209  | Program output: 26.2328206209 
Correct output: -129.5990711743 | Program output: -95.5990711743
Correct output: -17.8249368738 | Program output: -45.8249368738
Correct output: -16.8176198654 | Program output: -26.8176198654
Correct output: 5.5639147954   | Program output: -13.4360852046
Correct output: 15.7960197363  | Program output: 19.7960197363 
Correct output: -15.2347943829 | Program output: 3.7652056171  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_swap} {:instruction in1} {:instruction tag_integer_1031} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_swap} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dec} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_div} {:instruction tagged_554} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction float_mult} {:instruction integer_dec} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction print_integer} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_max} {:instruction integer_dup_items} {:instruction float_dec} {:instruction float_shove} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_sub} {:instruction float_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_max} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_div} {:instruction integer_min} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_240} {:instruction float_dec} {:instruction float_swap} {:instruction float_dup_times} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction tag_integer_357} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_div} {:instruction tag_integer_1035} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction tag_integer_1035} {:instruction float_mult} {:instruction float_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_min} {:instruction float_dec} {:instruction float_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_swap} {:instruction integer_add} {:instruction float_inc} {:instruction integer_swap} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yankdup} {:instruction print_integer} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_stackdepth} {:instruction 55.88035634864025})
Best program: (integer_swap in1 tag_integer_1031 integer_sub float_dec float_dec integer_sub float_dec float_dec float_mult in2 integer_rot integer_inc float_dec integer_dup_times float_dec in2 float_dec float_dec integer_dup_items float_dec integer_swap in1 integer_rot float_inc float_inc integer_rot float_inc float_dup_times float_inc integer_rot float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_inc float_inc integer_rot float_inc integer_dec float_inc integer_rot float_inc float_inc integer_rot float_inc integer_rot float_inc integer_rot float_inc integer_dec float_inc integer_swap float_inc float_inc integer_div float_inc float_dup_times integer_dup_items float_add integer_div tagged_554 integer_rot float_dec integer_mult integer_pop integer_dup_items float_dec float_dec float_max float_dec float_dec float_swap float_mult integer_dec float_dec float_shove print_integer float_dec float_dec tag_integer_1035 print_integer float_dec integer_rot float_dec float_max float_dec integer_rot float_dec float_max integer_dup_items float_dec float_shove print_integer float_dec print_integer integer_min float_dec float_dec float_shove float_dec integer_yankdup float_dec float_sub float_sub float_dec float_dec float_dec float_dec integer_add float_dec integer_dec float_dec float_max integer_add float_dec integer_dec float_dec float_dec float_div integer_min float_dec integer_swap float_dec integer_swap float_dec float_frominteger integer_rot integer_rot float_dec integer_flush float_dec float_dec float_dec integer_swap float_dec float_frominteger integer_rot integer_rot float_dec integer_flush float_dec float_dec tagged_240 float_dec float_swap float_dup_times float_div float_dec float_dec float_dec float_dec float_dec integer_swap tag_integer_357 float_dec integer_shove float_dec tag_integer_1035 float_dec float_rot float_dec integer_div tag_integer_1035 float_dec float_dup_items float_dup_times tag_integer_1035 float_mult float_shove float_dec float_dec float_dec integer_swap float_min float_dec float_div float_dec float_dec float_swap integer_add float_inc integer_swap print_integer float_inc float_inc integer_yankdup print_integer float_inc float_inc float_inc print_float integer_stackdepth 55.88035634864025)
Errors: [7.0 2 2.0 1 3.0 1 10.0 1 41.0 2 1.0 1 0.0 0 17.0 2 5.0 1 8.0 2 18.0 2 3.0 1 0.0 0 31.0 2 1.0 1 14.0 2 0.0 0 1.0 1 0.0 0 34.0 3 28.0 2 10.0 1 19.0 12 4.0 1 19.0 13]
Total: 330.0
Mean: 6.6
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5446.723901700001
Median total errors in population: 781.0974
Error averages by case: (205.40019120000017 5.823 213.09376959999975 5.12 201.70444540000008 4.726 211.66818899999973 5.207 235.9802426 5.758 179.60814599999998 4.873 194.57097260000003 4.173 221.00045809999972 5.559 191.35849340000004 4.777 181.6616996 4.706 217.0201519000001 5.663 211.29279469999997 5.56 217.4238655999997 5.13 218.86951939999994 5.051 205.3144861000001 4.658 206.87323520000012 5.052 271.47089679999993 6.649 225.85943470000018 5.363 174.82458939999998 4.675 242.01894099999987 6.365 222.2645811000003 5.58 211.55579530000006 5.68 218.82743510000003 11.387 208.9670422000001 5.036 214.57752569999985 10.946)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.8496 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.7215 1 0.0 0 0.0 0 0.5678 1 0.0 0 0.5023 1 0.0 0 0.0 0 0.0 0 0.5991 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 176.219
Average program size in population (points): 177.219
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 271.2239491114764
Average age in population: 250.0568692958205
Median age in population: 269.0532269347335
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.587
Error (vector) diversity:			 0.809
Behavioral diversity:				 0.817
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 659081066
--- Timings ---
Current time: 1529616012459 milliseconds
Total Time:        1187.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       317.9 seconds, 26.8%
Fitness Testing:    684.6 seconds, 57.7%
Report:             184.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
